{"version":3,"sources":["../static/js/17.chunk.js","../node_modules/devextreme/ui/dialog.js"],"names":["webpackJsonp","710","module","exports","__webpack_require__","$","window","getWindow","eventsEngine","Component","isFunction","Action","domUtils","each","viewPortUtils","extend","isPlainObject","devices","themes","errors","messageLocalization","Popup","config","Deferred","DEFAULT_BUTTON","text","onClick","FakeDialogComponent","inherit","ctor","element","options","this","callBase","_defaultOptionsRules","themeName","current","concat","device","platform","width","lWidth","pWidth","_device","phone","isWin8","_device2","position","my","at","of","offset","title","custom","show","popupInstance","deferred","promise","hide","value","resolve","done","$element","remove","defaultOptions","option","addClass","appendTo","$message","DX_DIALOG_CLASSNAME","html","String","message","popupToolbarItems","toolbarItemsOption","toolbarItems","log","buttons","action","context","push","toolbar","location","android","widget","execute","arguments","showTitle","height","isPortrait","key","widthOption","hasOwnProperty","showCloseButton","focusStateEnabled","onContentReady","args","component","$content","append","onShowing","e","bottomToolbar","find","resetActiveElement","onShown","$firstButton","first","trigger","onHiding","reject","animation","type","duration","to","opacity","scale","from","rtlEnabled","boundaryOffset","h","v","_wrapper","alert","confirm","format"],"mappings":"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","file":"static/js/17.chunk.js","sourcesContent":["webpackJsonp([17],{\n\n/***/ 710:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/dialog.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    window = __webpack_require__(9).getWindow(),\r\n    eventsEngine = __webpack_require__(7),\r\n    Component = __webpack_require__(351),\r\n    isFunction = __webpack_require__(4).isFunction,\r\n    Action = __webpack_require__(106),\r\n    domUtils = __webpack_require__(13),\r\n    each = __webpack_require__(5).each,\r\n    viewPortUtils = __webpack_require__(62),\r\n    extend = __webpack_require__(3).extend,\r\n    isPlainObject = __webpack_require__(4).isPlainObject,\r\n    devices = __webpack_require__(14),\r\n    themes = __webpack_require__(22),\r\n    errors = __webpack_require__(35),\r\n    messageLocalization = __webpack_require__(24),\r\n    Popup = __webpack_require__(139),\r\n    config = __webpack_require__(23),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar DEFAULT_BUTTON = {\r\n    text: \"OK\",\r\n    onClick: function() {\r\n        return true\r\n    }\r\n};\r\nvar DX_DIALOG_CLASSNAME = \"dx-dialog\",\r\n    DX_DIALOG_WRAPPER_CLASSNAME = DX_DIALOG_CLASSNAME + \"-wrapper\",\r\n    DX_DIALOG_ROOT_CLASSNAME = DX_DIALOG_CLASSNAME + \"-root\",\r\n    DX_DIALOG_CONTENT_CLASSNAME = DX_DIALOG_CLASSNAME + \"-content\",\r\n    DX_DIALOG_MESSAGE_CLASSNAME = DX_DIALOG_CLASSNAME + \"-message\",\r\n    DX_DIALOG_BUTTONS_CLASSNAME = DX_DIALOG_CLASSNAME + \"-buttons\",\r\n    DX_DIALOG_BUTTON_CLASSNAME = DX_DIALOG_CLASSNAME + \"-button\";\r\nvar FakeDialogComponent = Component.inherit({\r\n    ctor: function(element, options) {\r\n        this.callBase(options)\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = themes.current();\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                width: 276\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                lWidth: \"60%\",\r\n                pWidth: \"80%\"\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return !_device.phone && themes.isWin8(themeName)\r\n            },\r\n            options: {\r\n                width: function() {\r\n                    return $(window).width()\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device2) {\r\n                return _device2.phone && themes.isWin8(themeName)\r\n            },\r\n            options: {\r\n                position: {\r\n                    my: \"top center\",\r\n                    at: \"top center\",\r\n                    of: window,\r\n                    offset: \"0 0\"\r\n                }\r\n            }\r\n        }])\r\n    }\r\n});\r\nexports.FakeDialogComponent = FakeDialogComponent;\r\nexports.title = \"\";\r\nexports.custom = function(options) {\r\n    var deferred = new Deferred;\r\n    var defaultOptions = (new FakeDialogComponent).option();\r\n    options = extend(defaultOptions, options);\r\n    var $element = $(\"<div>\").addClass(DX_DIALOG_CLASSNAME).appendTo(viewPortUtils.value());\r\n    var $message = $(\"<div>\").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(String(options.message));\r\n    var popupToolbarItems = [];\r\n    var toolbarItemsOption = options.toolbarItems;\r\n    if (toolbarItemsOption) {\r\n        errors.log(\"W0001\", \"DevExpress.ui.dialog\", \"toolbarItems\", \"16.2\", \"Use the 'buttons' option instead\")\r\n    } else {\r\n        toolbarItemsOption = options.buttons\r\n    }\r\n    each(toolbarItemsOption || [DEFAULT_BUTTON], function() {\r\n        var action = new Action(this.onClick, {\r\n            context: popupInstance\r\n        });\r\n        popupToolbarItems.push({\r\n            toolbar: \"bottom\",\r\n            location: devices.current().android ? \"after\" : \"center\",\r\n            widget: \"dxButton\",\r\n            options: extend({}, this, {\r\n                onClick: function() {\r\n                    var result = action.execute(arguments);\r\n                    hide(result)\r\n                }\r\n            })\r\n        })\r\n    });\r\n    var popupInstance = new Popup($element, {\r\n        title: options.title || exports.title,\r\n        showTitle: function() {\r\n            var isTitle = void 0 === options.showTitle ? true : options.showTitle;\r\n            return isTitle\r\n        }(),\r\n        height: \"auto\",\r\n        width: function() {\r\n            var isPortrait = $(window).height() > $(window).width(),\r\n                key = (isPortrait ? \"p\" : \"l\") + \"Width\",\r\n                widthOption = options.hasOwnProperty(key) ? options[key] : options.width;\r\n            return isFunction(widthOption) ? widthOption() : widthOption\r\n        },\r\n        showCloseButton: options.showCloseButton || false,\r\n        focusStateEnabled: false,\r\n        onContentReady: function(args) {\r\n            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)\r\n        },\r\n        onShowing: function(e) {\r\n            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(\".dx-button\").addClass(DX_DIALOG_BUTTON_CLASSNAME);\r\n            domUtils.resetActiveElement()\r\n        },\r\n        onShown: function(e) {\r\n            var $firstButton = e.component.bottomToolbar().find(\".dx-button\").first();\r\n            eventsEngine.trigger($firstButton, \"focus\")\r\n        },\r\n        onHiding: function() {\r\n            deferred.reject()\r\n        },\r\n        toolbarItems: popupToolbarItems,\r\n        animation: {\r\n            show: {\r\n                type: \"pop\",\r\n                duration: 400\r\n            },\r\n            hide: {\r\n                type: \"pop\",\r\n                duration: 400,\r\n                to: {\r\n                    opacity: 0,\r\n                    scale: 0\r\n                },\r\n                from: {\r\n                    opacity: 1,\r\n                    scale: 1\r\n                }\r\n            }\r\n        },\r\n        rtlEnabled: config().rtlEnabled,\r\n        boundaryOffset: {\r\n            h: 10,\r\n            v: 0\r\n        }\r\n    });\r\n    popupInstance._wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);\r\n    if (options.position) {\r\n        popupInstance.option(\"position\", options.position)\r\n    }\r\n    popupInstance._wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);\r\n\r\n    function show() {\r\n        popupInstance.show();\r\n        return deferred.promise()\r\n    }\r\n\r\n    function hide(value) {\r\n        deferred.resolve(value);\r\n        popupInstance.hide().done(function() {\r\n            popupInstance.$element().remove()\r\n        })\r\n    }\r\n    return {\r\n        show: show,\r\n        hide: hide\r\n    }\r\n};\r\nexports.alert = function(message, title, showTitle) {\r\n    var options = isPlainObject(message) ? message : {\r\n        title: title,\r\n        message: message,\r\n        showTitle: showTitle\r\n    };\r\n    return exports.custom(options).show()\r\n};\r\nexports.confirm = function(message, title, showTitle) {\r\n    var options = isPlainObject(message) ? message : {\r\n        title: title,\r\n        message: message,\r\n        showTitle: showTitle,\r\n        buttons: [{\r\n            text: messageLocalization.format(\"Yes\"),\r\n            onClick: function() {\r\n                return true\r\n            }\r\n        }, {\r\n            text: messageLocalization.format(\"No\"),\r\n            onClick: function() {\r\n                return false\r\n            }\r\n        }]\r\n    };\r\n    return exports.custom(options).show()\r\n};\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/17.chunk.js","/**\r\n * DevExtreme (ui/dialog.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    window = require(\"../core/utils/window\").getWindow(),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    Component = require(\"../core/component\"),\r\n    isFunction = require(\"../core/utils/type\").isFunction,\r\n    Action = require(\"../core/action\"),\r\n    domUtils = require(\"../core/utils/dom\"),\r\n    each = require(\"../core/utils/iterator\").each,\r\n    viewPortUtils = require(\"../core/utils/view_port\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    isPlainObject = require(\"../core/utils/type\").isPlainObject,\r\n    devices = require(\"../core/devices\"),\r\n    themes = require(\"./themes\"),\r\n    errors = require(\"./widget/ui.errors\"),\r\n    messageLocalization = require(\"../localization/message\"),\r\n    Popup = require(\"./popup\"),\r\n    config = require(\"../core/config\"),\r\n    Deferred = require(\"../core/utils/deferred\").Deferred;\r\nvar DEFAULT_BUTTON = {\r\n    text: \"OK\",\r\n    onClick: function() {\r\n        return true\r\n    }\r\n};\r\nvar DX_DIALOG_CLASSNAME = \"dx-dialog\",\r\n    DX_DIALOG_WRAPPER_CLASSNAME = DX_DIALOG_CLASSNAME + \"-wrapper\",\r\n    DX_DIALOG_ROOT_CLASSNAME = DX_DIALOG_CLASSNAME + \"-root\",\r\n    DX_DIALOG_CONTENT_CLASSNAME = DX_DIALOG_CLASSNAME + \"-content\",\r\n    DX_DIALOG_MESSAGE_CLASSNAME = DX_DIALOG_CLASSNAME + \"-message\",\r\n    DX_DIALOG_BUTTONS_CLASSNAME = DX_DIALOG_CLASSNAME + \"-buttons\",\r\n    DX_DIALOG_BUTTON_CLASSNAME = DX_DIALOG_CLASSNAME + \"-button\";\r\nvar FakeDialogComponent = Component.inherit({\r\n    ctor: function(element, options) {\r\n        this.callBase(options)\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = themes.current();\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                width: 276\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                lWidth: \"60%\",\r\n                pWidth: \"80%\"\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return !_device.phone && themes.isWin8(themeName)\r\n            },\r\n            options: {\r\n                width: function() {\r\n                    return $(window).width()\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device2) {\r\n                return _device2.phone && themes.isWin8(themeName)\r\n            },\r\n            options: {\r\n                position: {\r\n                    my: \"top center\",\r\n                    at: \"top center\",\r\n                    of: window,\r\n                    offset: \"0 0\"\r\n                }\r\n            }\r\n        }])\r\n    }\r\n});\r\nexports.FakeDialogComponent = FakeDialogComponent;\r\nexports.title = \"\";\r\nexports.custom = function(options) {\r\n    var deferred = new Deferred;\r\n    var defaultOptions = (new FakeDialogComponent).option();\r\n    options = extend(defaultOptions, options);\r\n    var $element = $(\"<div>\").addClass(DX_DIALOG_CLASSNAME).appendTo(viewPortUtils.value());\r\n    var $message = $(\"<div>\").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(String(options.message));\r\n    var popupToolbarItems = [];\r\n    var toolbarItemsOption = options.toolbarItems;\r\n    if (toolbarItemsOption) {\r\n        errors.log(\"W0001\", \"DevExpress.ui.dialog\", \"toolbarItems\", \"16.2\", \"Use the 'buttons' option instead\")\r\n    } else {\r\n        toolbarItemsOption = options.buttons\r\n    }\r\n    each(toolbarItemsOption || [DEFAULT_BUTTON], function() {\r\n        var action = new Action(this.onClick, {\r\n            context: popupInstance\r\n        });\r\n        popupToolbarItems.push({\r\n            toolbar: \"bottom\",\r\n            location: devices.current().android ? \"after\" : \"center\",\r\n            widget: \"dxButton\",\r\n            options: extend({}, this, {\r\n                onClick: function() {\r\n                    var result = action.execute(arguments);\r\n                    hide(result)\r\n                }\r\n            })\r\n        })\r\n    });\r\n    var popupInstance = new Popup($element, {\r\n        title: options.title || exports.title,\r\n        showTitle: function() {\r\n            var isTitle = void 0 === options.showTitle ? true : options.showTitle;\r\n            return isTitle\r\n        }(),\r\n        height: \"auto\",\r\n        width: function() {\r\n            var isPortrait = $(window).height() > $(window).width(),\r\n                key = (isPortrait ? \"p\" : \"l\") + \"Width\",\r\n                widthOption = options.hasOwnProperty(key) ? options[key] : options.width;\r\n            return isFunction(widthOption) ? widthOption() : widthOption\r\n        },\r\n        showCloseButton: options.showCloseButton || false,\r\n        focusStateEnabled: false,\r\n        onContentReady: function(args) {\r\n            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)\r\n        },\r\n        onShowing: function(e) {\r\n            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(\".dx-button\").addClass(DX_DIALOG_BUTTON_CLASSNAME);\r\n            domUtils.resetActiveElement()\r\n        },\r\n        onShown: function(e) {\r\n            var $firstButton = e.component.bottomToolbar().find(\".dx-button\").first();\r\n            eventsEngine.trigger($firstButton, \"focus\")\r\n        },\r\n        onHiding: function() {\r\n            deferred.reject()\r\n        },\r\n        toolbarItems: popupToolbarItems,\r\n        animation: {\r\n            show: {\r\n                type: \"pop\",\r\n                duration: 400\r\n            },\r\n            hide: {\r\n                type: \"pop\",\r\n                duration: 400,\r\n                to: {\r\n                    opacity: 0,\r\n                    scale: 0\r\n                },\r\n                from: {\r\n                    opacity: 1,\r\n                    scale: 1\r\n                }\r\n            }\r\n        },\r\n        rtlEnabled: config().rtlEnabled,\r\n        boundaryOffset: {\r\n            h: 10,\r\n            v: 0\r\n        }\r\n    });\r\n    popupInstance._wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);\r\n    if (options.position) {\r\n        popupInstance.option(\"position\", options.position)\r\n    }\r\n    popupInstance._wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);\r\n\r\n    function show() {\r\n        popupInstance.show();\r\n        return deferred.promise()\r\n    }\r\n\r\n    function hide(value) {\r\n        deferred.resolve(value);\r\n        popupInstance.hide().done(function() {\r\n            popupInstance.$element().remove()\r\n        })\r\n    }\r\n    return {\r\n        show: show,\r\n        hide: hide\r\n    }\r\n};\r\nexports.alert = function(message, title, showTitle) {\r\n    var options = isPlainObject(message) ? message : {\r\n        title: title,\r\n        message: message,\r\n        showTitle: showTitle\r\n    };\r\n    return exports.custom(options).show()\r\n};\r\nexports.confirm = function(message, title, showTitle) {\r\n    var options = isPlainObject(message) ? message : {\r\n        title: title,\r\n        message: message,\r\n        showTitle: showTitle,\r\n        buttons: [{\r\n            text: messageLocalization.format(\"Yes\"),\r\n            onClick: function() {\r\n                return true\r\n            }\r\n        }, {\r\n            text: messageLocalization.format(\"No\"),\r\n            onClick: function() {\r\n                return false\r\n            }\r\n        }]\r\n    };\r\n    return exports.custom(options).show()\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/dialog.js\n// module id = 710\n// module chunks = 1 17"],"sourceRoot":""}