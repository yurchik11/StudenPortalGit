{"version":3,"sources":["../static/js/3.chunk.js","../additional_modules/app-player-react/dist/widgets/form-widget.js","../node_modules/devextreme/localization/date.js","../node_modules/devextreme/ui/date_box/ui.date_utils.js","../node_modules/devextreme/core/utils/date.js","../node_modules/devextreme/core/utils/date_serialization.js","../node_modules/devextreme/ui/drop_down_editor/ui.drop_down_editor.js","../node_modules/devextreme/ui/date_box/ui.date_box.strategy.js","../node_modules/devextreme/ui/number_box.js","../node_modules/devextreme/ui/shared/async_template_mixin.js","../node_modules/devextreme/ui/editor/ui.data_expression.js","../node_modules/devextreme/ui/box.js","../node_modules/devextreme/ui/number_box/number_box.js","../node_modules/devextreme/ui/number_box/number_box.mask.js","../node_modules/devextreme/ui/number_box/number_box.caret.js","../node_modules/devextreme/ui/number_box/number_box.base.js","../node_modules/devextreme/ui/number_box/number_box.spin.js","../node_modules/devextreme/localization/ldml/date.format.js","../node_modules/devextreme/ui/select_box.js","../node_modules/devextreme/ui/drop_down_editor/ui.drop_down_list.js","../node_modules/devextreme/localization/ldml/date.parser.js","../node_modules/devextreme/localization/ldml/date.formatter.js","../node_modules/devextreme/localization/default_date_names.js","../node_modules/devextreme/ui/date_box/ui.date_box.strategy.calendar.js","../node_modules/devextreme/ui/validator.js","../node_modules/devextreme/ui/date_box.js","../node_modules/devextreme/ui/date_box/ui.date_box.js","../node_modules/devextreme/ui/date_box/ui.date_box.mask.js","../node_modules/devextreme/ui/date_box/ui.date_box.mask.parts.js","../node_modules/devextreme/ui/date_box/ui.date_box.base.js","../node_modules/devextreme/ui/calendar.js","../node_modules/devextreme/ui/calendar/ui.calendar.js","../node_modules/devextreme/ui/calendar/ui.calendar.navigator.js","../node_modules/devextreme/ui/calendar/ui.calendar.views.js","../node_modules/devextreme/ui/calendar/ui.calendar.base_view.js","../node_modules/devextreme/ui/date_box/ui.date_box.strategy.date_view.js","../node_modules/devextreme/ui/date_box/ui.date_view.js","../node_modules/devextreme/ui/date_box/ui.date_view_roller.js","../node_modules/devextreme/ui/date_box/ui.date_box.strategy.native.js","../node_modules/devextreme/ui/date_box/ui.date_box.strategy.calendar_with_time.js","../node_modules/devextreme/ui/date_box/ui.time_view.js","../node_modules/devextreme/ui/date_box/ui.date_box.strategy.list.js","../node_modules/devextreme/ui/validation_summary.js","../node_modules/devextreme/ui/form.js","../node_modules/devextreme/ui/form/ui.form.js","../node_modules/devextreme/ui/form/ui.form.layout_manager.js","../node_modules/devextreme/ui/validation/default_adapter.js","../node_modules/devextreme/ui/responsive_box.js","../node_modules/devextreme/ui/tab_panel.js","../node_modules/devextreme/ui/multi_view.js","../node_modules/devextreme/ui/tabs.js","../node_modules/devextreme/ui/tabs/item.js","../node_modules/devextreme/ui/validation_group.js","../node_modules/devextreme-react/form.js","../node_modules/devextreme-react/ui/form.js"],"names":["webpackJsonp","715","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","d","ReactForm","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1_devextreme_react_core_template__","__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_form__","n","__WEBPACK_IMPORTED_MODULE_3_react__","__WEBPACK_IMPORTED_MODULE_4__utils_device__","__WEBPACK_IMPORTED_MODULE_5__app_player_component__","__WEBPACK_IMPORTED_MODULE_6__with_style__","__WEBPACK_IMPORTED_MODULE_7__theme_scope__","__WEBPACK_IMPORTED_MODULE_8_reselect__","defaultLabelLocations","desktop","tablet","phone","WithStyle","main","flexDirection","_super","_this","apply","this","arguments","itemsSelector","args","items","deviceType","originalItems","mapItems","colCountSelector","colCount","labelLocationSelector","labelLocation","prototype","render","form","props","Provider","className","_a","name","component","componentTemplate","originalItemsMap","map","item","itemType","tabs","originalItemKey","keys","length","label","text","title","template","editorOptions","visible","defaultProps","732","exports","dependencyInjector","isString","iteratorUtils","inArray","getLDMLDateFormatter","getFormatter","getLDMLDateFormat","getFormat","getLDMLDateParser","getParser","defaultDateNames","numberLocalization","errors","FORMATS_TO_PATTERN_MAP","shortdate","shorttime","longdate","longtime","monthandday","monthandyear","quarterandyear","day","year","shortdateshorttime","mediumdatemediumtime","longdatelongtime","month","shortyear","dayofweek","quarter","hour","minute","second","millisecond","datetime-local","possiblePartPatterns","hours","minutes","seconds","milliseconds","dateLocalization","_getPatternByFormat","format","toLowerCase","_expandPattern","pattern","formatUsesMonthName","indexOf","formatUsesDayName","getFormatParts","result","each","split","_","formatPart","partName","possiblePatterns","push","getMonthNames","getDayNames","getQuarterNames","getPeriodNames","getTimeSeparator","is24HourFormat","amTime","Date","pmTime","amTimeFormatted","pmTimeFormatted","i","isNaN","parseInt","date","_format","formatter","type","convertDigits","parse","ldmlFormat","that","parser","e","log","getTime","firstDayOfWeekIndex","734","_typeof","Symbol","iterator","obj","constructor","$","dateSerialization","isDate","dateComponents","getStringFormat","formatType","dateUtils","SUPPORTED_FORMATS","DATE_COMPONENT_TEXT_FORMATTER","$container","addClass","appendTo","ONE_MINUTE","ONE_DAY","ONE_YEAR","MIN_DATEVIEW_DEFAULT_DATE","MAX_DATEVIEW_DEFAULT_DATE","newDate","getFullYear","getMonth","getDate","FORMATS_INFO","getStandardPattern","components","time","datetime","standardPattern","$input","attr","val","concat","FORMATS_MAP","SUBMIT_FORMATS_MAP","toStandardDateFormat","serializeDate","fromStandardDateFormat","dateParser","getMaxMonthDay","mergeDates","oldValue","newValue","now","valueOf","formatInfo","componentInfo","DATE_COMPONENTS_INFO","setter","getter","getLongestCaptionIndex","captionArray","longestIndex","longestCaptionLength","getLongestDate","monthNames","dayNames","stringFormat","longestDate","getDay","setDate","normalizeTime","setSeconds","setMilliseconds","showNames","formatDate","setFullYear","startValue","endValue","monthName","737","getDateFormatByTickInterval","tickInterval","tickIntervalToFormatMap","getDateUnitInterval","addDateInterval","interval","dir","intervalObject","getDateIntervalByString","years","quarters","setMonth","months","weeks","days","setTime","typeUtils","adjust","camelize","isObject","isDefined","dateUnitIntervals","toMilliseconds","getDatesInterval","startDate","endDate","intervalUnit","delta","millisecondCount","Math","floor","getNextDateUnit","unit","withWeeks","convertMillisecondsToDateUnits","dateUnitCount","dateUnitInterval","convertDateUnitToMilliseconds","dateToMilliseconds","key","substr","dateUnit","count","maxInterval","week","getQuarter","getFirstQuarterMonth","correctDateWithUnitBeginning","dateInterval","withCorrection","firstDayOfWeek","firstQuarterMonth","oldDate","setHours","getFirstWeekDate","fixTimezoneGap","trimTime","getDatesDifferences","date1","date2","differences","counter","getHours","getMinutes","getSeconds","getMilliseconds","getTimezonesDifference","addInterval","isNegative","getSequenceByInterval","min","max","cur","intervals","getViewFirstCellDate","viewType","getFirstYearInDecade","getFirstDecadeInCentury","getViewLastCellDate","getLastMonthDay","getViewMinBoundaryDate","resultDate","getViewMaxBoundaryDate","sameView","view","getViewUp","typeView","getViewDown","getDifferenceInMonth","difference","getDifferenceInMonthForCells","intervalString","sameDate","sameMonthAndYear","sameYear","sameDecade","startDecadeDate1","startDecadeDate2","sameCentury","startCenturyDate1","startCenturyDate2","getShortDateFormat","getFirstMonthDate","getLastMonthDate","normalizeDateByWeek","currentDate","differenceInDays","dateInRange","normalizeDate","normalizedDate","sign","trial","diff","roundToHour","setMinutes","getTimezoneOffset","makeDate","getDatesOfInterval","step","sameMonth","738","config","getLDMLFormatter","isNumber","isNumeric","ISO8601_PATTERN","ISO8601_TIME_PATTERN","ISO8601_PATTERN_PARTS","skipISO8601Parsing","parsedValue","parseISO8601String","parts","match","timePart","part","timeZoneHour","timeZoneMinute","pow","UTC","getIso8601Format","useUtc","deserializeDate","forceIsoDateParsing","serializationFormat","getDateSerializationFormat","742","AsyncTemplateMixin","eventsEngine","Guid","registerComponent","commonUtils","domUtils","focused","extend","getPublicElement","positionUtils","getDefaultAlignment","messageLocalization","Button","eventUtils","TextBox","clickEvent","FunctionTemplate","Popup","DropDownEditor","inherit","_supportedKeys","homeEndHandler","option","preventDefault","callBase","tab","close","$focusableElement","shiftKey","_getLastPopupElement","_getFirstPopupElement","trigger","escape","upArrow","stopPropagation","altKey","downArrow","_validatedOpening","enter","_valueChangeEventHandler","home","end","_getDefaultOptions","onOpened","onClosed","opened","acceptCustomValue","applyValueMode","deferRendering","activeStateEnabled","dropDownButtonTemplate","fieldTemplate","contentTemplate","openOnFieldClick","showDropDownButton","popupPosition","_getDefaultPopupPosition","onPopupInitialized","applyButtonText","cancelButtonText","buttonsLocation","showPopupTitle","position","offset","h","v","my","at","collision","_defaultOptionsRules","device","_device","isGeneric","platform","isWin10","version","options","_inputWrapper","$element","find","_init","_initVisibilityActions","_initPopupInitializedAction","_openAction","_createActionByOption","excludeValidators","_closeAction","_popupInitializedAction","_initMarkup","setAria","_render","_renderOpenHandler","_renderOpenedState","_renderContentImpl","_createPopup","_renderInput","wrapInner","_$container","children","eq","haspopup","autocomplete","_readOnlyPropValue","_cleanFocusState","off","_input","_renderField","_getTemplateByOption","_renderTemplatedField","_fieldRenderData","data","isFocused","_resetFocus","empty","_$dropDownButton","_$clearButton","model","container","onRendered","Error","_refreshEvents","_refreshValueChangeEvent","_renderFocusState","_renderInputAddons","_renderDropDownButton","remove","toggleClass","_createDropDownButton","_attachDropDownButtonClickHandler","dxButton","_openHandler","bind","_initTemplates","_defaultTemplates","dropDownButton","$icon","append","$button","prependTo","_buttonsContainer","_createComponent","focusStateEnabled","hoverStateEnabled","disabled","useInkRipple","removeClass","on","$inputWrapper","eventName","addNamespace","NAME","_getInputClickHandler","_openOnFieldClickAction","_createAction","_executeOpenAction","_focusInput","_toggleOpenState","event","_keyboardEventBindingTarget","isVisible","_setPopupOption","expanded","owns","_popupContentId","_$popup","_renderPopup","_renderPopupContent","_popup","_popupConfig","showing","_popupShowingHandler","shown","_popupShownHandler","hiding","_popupHidingHandler","hidden","_popupHiddenHandler","_contentReadyHandler","$content","noop","onInitialized","_popupInitializedHandler","of","showTitle","width","height","shading","closeOnTargetScroll","closeOnOutsideClick","_closeOutsideDropDownHandler","animation","show","duration","from","to","hide","showCloseButton","toolbarItems","_getPopupToolbarItems","onPositioned","_popupPositionedHandler","fullScreen","popup","overlayContent","flip","_$validationMessage","dxOverlay","_getValidationMessagePosition","positionRequest","myTop","setup","top","popupTop","$popupContent","templateData","$target","target","isInputClicked","closest","isDropDownButtonClicked","_clean","optionName","_setWidgetOption","_popupToolbarItemsConfig","_wrapper","_popupElementTabHandler","currentTarget","is","_popupElementEscHandler","_popupButtonInitializedHandler","registerKeyHandler","buttonsConfig","shortcut","onClick","_applyButtonHandler","_cancelButtonHandler","_applyButtonsLocation","resultConfig","splitPair","element","toolbar","location","focus","_toggleReadOnlyState","_optionChanged","_invalidate","open","field","content","include","default","743","Class","abstract","DateBoxStrategy","ctor","dateBox","widgetOption","_widget","_renderWidget","_createWidget","_getWidgetContainer","widgetName","_getWidgetName","widgetOptions","_getWidgetOptions","getDefaultOptions","mode","getDisplayFormat","supportedKeys","attachKeyboardEvents","keyboardProcessor","_widgetKeyboardProcessor","attachChildProcessor","getParsedText","renderInputMinMax","renderOpenedState","_updateValue","popupConfig","renderPopupContent","_getPopup","parent","_preventFocusOnPopup","getFirstPopupElement","getLastPopupElement","popupShowingHandler","popupHiddenHandler","dateBoxValue","_valueChangedHandler","useCurrentDateByDefault","textChangedHandler","renderValue","getValue","isAdaptivityChanged","dispose","dateValue","dateOption","745","748","_waitAsyncTemplates","callback","_options","templatesRenderAsynchronously","_asyncTemplatesTimers","timer","setTimeout","call","clearTimeout","_cleanAsyncTemplatesTimer","timers","749","variableWrapper","dataCoreUtils","DataHelperMixin","DataSourceModule","ArrayStore","Deferred","DataExpressionMixin","_dataExpressionDefaultOptions","dataSource","itemTemplate","valueExpr","displayExpr","_initDataExpressions","_compileValueGetter","_compileDisplayGetter","_initDynamicTemplates","_initDataSource","_itemsToDataSource","_dataSource","DataSource","store","pageSize","_displayGetter","compileGetter","_displayGetterExpr","_valueGetter","_valueGetterExpr","_loadValue","deferred","_unwrappedValue","_loadSingle","done","_isValueEquals","resolve","reject","fail","promise","_getCurrentValue","_getItemKey","unwrap","Array","isArray","value1","value2","dataSourceKey","_compareValues","_compareByCompositeKey","_compareByKey","ensureDefined","unwrapObservable","valueKey1","valueKey2","toComparable","_originalItemTemplate","html","_setCollectionWidgetItemTemplate","_setCollectionWidgetOption","_dataExpressionOptionChanged","750","windowUtils","inflector","styleUtils","browser","CollectionWidgetItem","devices","CollectionWidget","MINSIZE_MAP","row","col","MAXSIZE_MAP","FLEX_JUSTIFY_CONTENT_MAP","start","center","space-between","space-around","FLEX_ALIGN_ITEMS_MAP","stretch","FLEX_DIRECTION_MAP","BoxItem","_renderVisible","fireItemStateChangedAction","state","oldState","setFlexProp","prop","normalizeStyleProp","style","styleProp","hasWindow","cssName","dasherize","styleExpr","attributes","setAttribute","FlexLayoutStrategy","_$element","_option","renderBox","css","display","stylePropPrefix","get","renderAlign","justifyContent","_normalizedAlign","align","renderCrossAlign","alignItems","_normalizedCrossAlign","crossAlign","renderItems","$items","flexPropPrefix","direction","$item","maxSize","minSize","baseSize","ratio","shrink","itemContent","flexBasis","initSize","update","FALLBACK_WRAP_MAP","FALLBACK_MAIN_SIZE_MAP","FALLBACK_CROSS_SIZE_MAP","FALLBACK_PRE_MARGIN_MAP","FALLBACK_POST_MARGIN_MAP","FALLBACK_CROSS_PRE_MARGIN_MAP","FALLBACK_CROSS_POST_MARGIN_MAP","MARGINS_RTL_FLIP_MAP","marginLeft","marginRight","FallbackLayoutStrategy","fontSize","whiteSpace","verticalAlign","_$items","shift","totalItemSize","boxSize","freeSpace","_setItemsMargins","first","_chooseMarginSide","last","size","itemSize","totalRatio","totalWeightedShrink","totalBaseSize","itemData","_baseSize","freeSpaceSize","_boxSize","factor","totalFactor","round","_contentSize","_parseSize","String","parseFloat","_boxSizeValue","_totalBaseSize","detach","triggerHandler","Box","onItemStateChanged","_layoutStrategy","_queue","real","isOldAndroid","isOldIos","msie","_itemClass","_itemDataKey","_itemElements","_itemContainer","_itemSelector","BOX_CLASS","_initLayout","_initBoxQueue","_layout","_queueIsNotEmpty","_pushItemToQueue","_shiftItemFromQueue","_renderAlign","_renderActions","_onItemStateChanged","_renderItems","itemHoldTimeout","onItemHold","onItemClick","onItemContextMenu","onItemRendered","_updateTimer","_isUpdated","_renderItemContent","$itemNode","node","_renderItemContentByNode","_postprocessRenderItem","boxConfig","box","_createItemByTemplate","source","_visibilityChanged","_dimensionChanged","_dispose","_itemOptionChanged","property","_itemOptions","repaint","ItemClass","753","NumberBoxMask","754","fitIntoRange","inRange","escapeRegExp","number","maskCaret","getLDMLFormat","NumberBoxBase","defaultValue","useMaskBehavior","_isDeleteKey","_useMaskBehavior","minus","_revertSign","del","_removeHandler","backspace","leftArrow","_arrowHandler","rightArrow","_moveCaretToBoundary","_updateFormattedValue","_focusInHandler","caret","_caret","_ieCaretTimeout","_focusOutHandler","_focusOutOccurs","_parsedValue","_tryParse","_getInputVal","_adjustParsedValue","_setTextByParsedValue","_isValueDirty","_isDirty","_getFormatPattern","nextCaret","getCaretWithOffset","isCaretInBoundaries","getCaretInBoundaries","boundaries","getCaretBoundaries","newCaret","_shouldMoveCaret","decimalSeparator","getDecimalSeparator","isDecimalSeparatorNext","charAt","isZeroNext","moveToFloat","_lastKey","zeroToZeroReplace","_keyboardHandler","originalEvent","_shouldHandleKey","enteredChar","_moveCaret","_keyPressHandler","char","slice","_isStub","decimalSeparatorIndex","_isNonStubAfter","_replaceSelectedText","search","_isValueInRange","valueAfterRemoving","_isPercentFormat","replace","_parse","formatOption","isFunction","_getFormatForSign","signParts","getSign","_removeStubs","excludeComma","thousandsSeparator","getThousandsSeparator","stubs","regExp","RegExp","_truncateToPrecision","maxPrecision","strValue","toString","selection","editedText","isTextSelected","parsed","_getPrecisionLimits","isValueChanged","isDecimalPointRestricted","isUselessCharRestricted","_isValueIncomplete","point","pointIndex","isCaretOnFloat","textParts","floatLength","precision","isPrecisionInRange","endsWithZero","_setInputText","getCaretAfterFormat","_formattedValue","_toggleEmptinessEventHandler","_renderInputType","isNumberType","_setInputType","_isChar","str","adjustedCaret","isSpecialChar","ctrlKey","isMinusKey","_renderFormatter","_clearCache","_detachFormatterEvents","_attachFormatterEvents","_formatValue","_forceRefreshInputValue","index","escapedDecimalSeparator","regExpString","test","_parseValue","currentFormat","floatPart","_applyRevertedSign","preserveSelectedText","previousText","currentText","getCaretOffset","caretInBoundaries","_removeMinusFromText","formatted","textWithoutMinus","wasMinusRemoved","_renderDisplayText","_renderValue","clearedText","_saveValueChangeEvent","_optionValuesEqual","755","clearedFormat","exec","_getDigitCountBeforeIndex","_reverseText","reverse","join","_getDigitPositionByIndex","digitIndex","pointPosition","newPointPosition","formattedParts","relativeIndex","digitsBefore","newPosition","positionFromEnd","digitsFromEnd","newPositionFromEnd","newPositionFromBegin","newText","previousBoundaries","756","domAdapter","mathUtils","TextEditor","pointerEvents","wheelEvent","SpinButton","math","FIREFOX_CONTROL_KEYS","_spinUpChangeHandler","_spinDownChangeHandler","showSpinButtons","useLargeSpinButtons","invalidValueMessage","generic","isSimulator","_renderSubmitElement","_validateValue","_renderMouseWheelHandler","_$submitElement","_setSubmitValue","applyServerDecimalSeparator","_getSubmitElement","fromCharCode","which","metaKey","_keyPressed","mouseWheelAction","_mouseWheelHandler","dxEvent","_spinValueChange","inputValue","Number","_forceValueRender","_renderValueEventName","_toggleDisabledState","_$spinUp","getInstance","_$spinDown","formattedValue","_applyValueFormat","_renderProps","valuemin","valuemax","_renderSpinButtons","spinButtonsVisible","_toggleTouchFriendlyClass","_$spinContainer","_createSpinButtons","down","pointerDownAction","_spinButtonsPointerDownHandler","$spinContainer","onChange","getActiveElement","_normalizeInputValue","_correctRounding","regex","isFloatValue","isFloatStep","valueAccuracy","stepAccuracy","accuracy","_round","multiplier","_renderValueChangeEvent","_normalizeText","valueHasDigits","_isValueValid","_applyValueBoundaries","validationRequest","fire","editor","isValueIncomplete","isValueCorrect","_replaceCommaWithPoint","_inputIsInvalid","isNumberMode","validityState","validity","badInput","_isNumber","isValueValid","isValid","validationError","editorSpecific","message","trim","reset","_resumeValueChangeAction","757","Widget","feedbackEvents","holdEvent","POINTERUP_EVENT_NAME","up","POINTERCANCEL_EVENT_NAME","cancel","SPIN_CLASS","_spinIcon","_spinDownHandler","_spinChangeHandler","_clearTimer","_feedBackDeferred","lock","_holdTimer","setInterval","document","getDocument","clearInterval","758","FORMAT_SEPARATORS","checkDigit","code","charCodeAt","ARABIC_ZERO_CODE","checkPatternContinue","isDigit","prevChar","nextChar","getPatternStartIndex","defaultPattern","getDifference","patterns","processedIndexes","patternsFilter","filter","unshift","replaceCharsCore","indexes","patternPositions","baseCharIndex","patternIndex","forEach","replaceChars","letterCount","pop","formatValue","ESCAPE_CHARS_REGEXP","escapeChars","escapeIndexes","isCurrentCharEscaped","isPrevCharEscaped","isNextCharEscaped","replacedPatterns","datePatterns","759","isPromise","deferredUtils","inkRipple","dataQuery","DropDownList","themes","SelectBox","clearSelectBox","_isEditable","_valueSubstituted","_preventFiltering","_preventSubstitution","searchIfNeeded","_searchHandler","_cleanInputSelection","_wasSearch","_clearFilter","_setNextValue","_cancelEditing","selectedItem","space","isOpened","isSearchEnabled","placeholder","valueChangeEvent","onCustomItemCreating","customItem","showSelectionControls","autocompletionEnabled","allowClearing","tooltipEnabled","displayCustomValue","_isAdaptablePopupPosition","themeName","current","isWin8","isAndroid5","_initCustomItemCreatingAction","_renderTooltip","_renderInkRipple","_inkRipple","_toggleActiveState","showWave","hideWave","_popupWrapperClass","_list","_focusListElement","_updateField","_scrollToSelectedItem","_focusSelectedElement","_searchValue","$listItems","focusedElement","_isCustomItemSelected","_renderFocusedElement","not","_preventInputValueRender","scrollToItem","_listContentReadyHandler","paginate","_needPopupRepaint","_renderInputValue","submitValue","always","_renderInputValueAsync","_renderInputValueImpl","_refreshSelected","_fitIntoRange","isLoaded","load","_calcNextItem","_setValue","_items","_getSelectedIndex","_getPlainItems","toArray","_setSelectedItem","isUnknownItem","_isCustomValueAllowed","_displayValue","_listConfig","pageLoadMode","onSelectionChanged","_getSelectionChangeHandler","onFocusedItemChanged","_listFocusedItemChangeHandler","selectionByClick","list","focusedItem","_getItemData","_selectionChangeHandler","addedItems","addedItem","_getActualSearchValue","searchValue","_restoreInputText","_searchTimer","_filterDataSource","_setListOption","_renderDimensions","_loadItemDeferred","_clearTextValue","oldSelectedItem","newSelectedItem","$listFocused","_isSelectedValue","_shouldCloseOnItemClick","_listItemClickHandler","previousValue","itemElement","_shouldClearFilter","_completeSelection","_loadItem","cache","_loadInputValue","selectedItemText","_customItemAddedHandler","_customItemCreatingAction","_createCustomItem","params","actionResult","fromPromise","_setCustomItem","_disposed","_createClearButton","$clearButton","_wasSearchValue","_needPassDataSourceToList","_dataSourceFiltered","_renderInputSubstitution","input","isAllSelected","selectionStart","selectionEnd","inputHasSelection","_shouldSubstitutionBeRendered","valueLength","inputElement","displayValue","endPosition","760","window","getWindow","List","ChildDefaultTemplate","SEARCH_MODES","$focusedItem","_setSelectedElement","searchEnabled","searchMode","searchTimeout","minSearchLength","searchExpr","noDataText","showDataBeforeSearch","grouped","groupTemplate","popupWidthExtension","_setOptionsByReference","_optionsByReference","_initActions","_setListDataSource","_validateSearchMode","_clearSelectedItem","_initItems","_initContentReadyAction","_initSelectionChangedAction","_initItemClickAction","_contentReadyAction","_selectionChangedAction","_itemClickAction","_saveFocusOnWidget","initialOption","plainItems","itemByValue","grep","_listItemElements","$itemElement","itemValue","selectItem","unselectItem","_setFocusPolicy","normalizedSearchMode","_processDataSourceChanging","_$list","onShowing","onHidden","maxHeight","_getMaxHeight","_renderList","_attachChildKeyboardEvents","_childKeyboardProcessor","_keyboardProcessor","_fireContentReadyAction","_setAriaTargetForList","_getAriaTarget","_listId","_value","$list","_refreshList","_renderPreventBlur","activedescendant","getFocusedItemId","_shouldRefreshDataSource","_isDesktopDevice","_getListKeyExpr","selectionMode","_templates","templateProvider","onContentReady","indicateLoading","keyExpr","tabIndex","_listItemClickAction","_getDataSource","_dataSourceOptions","_dataSourceFromUrlLoadMode","dxList","_isMinSearchLengthExceeded","_getSearchEvent","_getSetFocusPolicyEvent","_renderEvents","_shouldRenderSearchEvent","_searchCanceled","_clearSearchTimer","_searchDataSource","searchOperation","_refreshPopupVisibility","_hasItemsToShow","_dataSourceChangedHandler","newItems","pageIndex","resultItems","resultAmount","_updatePopupDimensions","_updatePopupWidth","_updatePopupHeight","outerWidth","currentPageIndex","needRepaint","_pageIndex","updateDimensions","windowHeight","outerHeight","764","FORMAT_TYPES","3","4","5","monthRegExpGenerator","dateParts","PATTERN_REGEXPS","y","M","L","Q","E","a","H","m","s","S","parseNumber","caseInsensitiveIndexOf","array","monthPatternParser","reduce","b","PATTERN_PARSERS","periodNames","ORDERED_PATTERNS","PATTERN_SETTERS","getSameCharCount","createPattern","getRegExpInfo","isEscaping","regexpText","isEscapeChar","regexpPart","regexp","getPatternSetters","setPatternPart","patternChar","partSetter","partParser","setPatternPartFromNow","setterName","getterName","getShortPatterns","fullPatterns","getMaxOrderedPatternIndex","getOrderedFormatPatterns","formatPatterns","otherPatterns","regExpInfo","regExpResult","maxPatternIndex","765","leftPad","LDML_FORMATTERS","period","x","timezoneOffset","signPart","timezoneOffsetAbs","abs","hoursPart","minutesPart","X","Z","charIndex","isCurrentCharEqualsNext","charCount","766","MONTHS","DAYS","PERIODS","QUARTERS","cutCaptions","captions","lengthByFormat","abbreviated","short","narrow","caption","767","Calendar","CalendarStrategy","contouredDate","_view","displayFormat","disabledDates","dateSerializationFormat","onValueChanged","onCellClick","_cellClickHandler","_injectComponent","onContouredChanged","_refreshActiveDescendant","hasFocus","func","actionValue","widget","_toTodayView","prevValue","778","dataUtils","Callbacks","DOMComponent","ValidationMixin","ValidationEngine","DefaultAdapter","Validator","validationRules","_initGroupRegistration","_initAdapter","group","_findGroup","_groupWasInit","removeRegisteredValidator","_validationGroup","registerValidatorInGroup","validationGroup","dxStandardEditor","adapter","validationRequestsCallbacks","add","validate","callbacks","_resetValidationRules","_getValidationRules","_validationRules","rule","validator","bypass","currentError","getCurrentValidationError","rules","brokenRule","_applyValidationResult","validatedAction","applyValidationResults","779","790","DateBoxMask","791","_interopRequireDefault","__esModule","_utils","_utils2","_type","_dom","_extend","_math","_events_engine","_events_engine2","_wheel","_wheel2","_uiDate_boxMask","_date","_date2","_date3","_uiDate_box","_uiDate_box2","_revertPart","_selectFirstPart","_selectLastPart","_revertChanges","_fireChangeEvent","_selectNextPart","_partIncrease","advanceCaret","_isSingleCharKey","ctrl","alt","_setNewDateIfEmpty","_searchString","_searchNumber","_strategy","_maskValue","_renderDateParts","limits","_getActivePartLimits","_getActivePartProp","_setActivePartValue","startString","endLimit","_clearSearchValue","actual","_getActivePartValue","_renderMask","_detachMaskEvents","_clearState","_activePartIndex","_attachMaskEvents","_loadMaskValue","_getDisplayedText","_dateParts","renderDateParts","_maskClickHandler","_maskPasteHandler","isStub","_saveMaskValue","getDatePartIndexByPosition","clipboardText","792","_common","PATTERN_GETTERS","dayLimits","getLimits","newDay","currentYear","getPatternGetter","unsupportedCharGetter","sections","getAmPm","caretInGroup","793","compareVersions","compare","support","uiDateUtils","PICKER_TYPE","calendar","rollers","native","TYPE","STRATEGY_NAME","dateView","calendarWithTime","STRATEGY_CLASSES","DateView","Native","CalendarWithTime","isRealWidthSet","explicitWidth","calculateWidth","$longestValueElement","fontStyle","fontVariant","fontWeight","fontFamily","letterSpacing","border","visibility","float","elementWidth","getComputedStyle","rightPadding","paddingRight","leftPadding","paddingLeft","DateBox","_setDeprecatedOptions","_deprecatedOptions","maxZoomLevel","since","alias","minZoomLevel","showAnalogClock","pickerType","invalidDateMessage","dateOutOfRangeMessage","adaptivityEnabled","calendarOptions","realDevice","_device2","currentDevice","isPhone","_initOptions","_userOptions","_updatePickerOptions","_pickerType","_initStrategy","_toLowerCaseFirstLetter","string","strategyName","_getStrategyName","_getFormatType","strategy","currentType","isTime","_refreshFormatClass","_refreshPickerTypeClass","_updateSize","DATEBOX_CLASS","widthOption","isWidthSet","_isSizeUpdatable","shouldCalculateWidth","longestValue","_renderPopupWrapper","_getPopupTitle","dragEnabled","classPostfixes","DATEBOX_WRAPPER_CLASS","_clearValueHandler","_clearButtonVisibility","_isNativeType","submitFormat","displayedText","_getFormatByMode","inputType","parsedDate","_getParsedDate","_getDateByDefault","parsedText","hasText","isDateInRange","validationMessage","_isValueChanged","_isTextChanged","_refreshStrategy","_renderPlaceholder","_refresh","_suppressDeprecatedWarnings","_resumeDeprecatedWarnings","_getSerializationFormat","794","795","Editor","Swipeable","Navigator","Views","translator","fx","LEVEL_COMPARE_MAP","decade","century","_activeStateUnit","zoomLevel","showTodayButton","cellTemplate","hasClass","_waitRenderView","_moveCurrentDate","_getRtlCorrection","_navigateUp","isAnimating","_navigateDown","_dateOption","_moveToClosestAvailableDate","pageUp","pageDown","_isMaxZoomLevel","_updateTimeComponent","_dateValue","_convertToDate","optionValue","baseDate","maxDate","minDate","isAvailableDateFound","offsetCorrection","isDateDisabled","_correctZoomLevel","_initCurrentDate","_getNormalizedDate","_getMinDate","_getMaxDate","_cellClickAction","_onContouredChanged","cell","_updateCurrentDate","_$viewsWrapper","stop","_getViewsOffset","_isOtherViewCellClicked","_suppressNavigation","_navigate","_renderNavigator","_setViewContoured","_updateAriaId","_focusTarget","_getMonthsOffset","zoomCorrection","_alreadyViewRender","_getDateByOffset","currentDay","lastDay","_renderBody","$body","_renderViews","_navigator","_renderSwipeable","_renderFooter","role","_updateAriaSelected","CALENDAR_VIEW_CLASS","_renderSpecificView","_viewKeyboardProcessor","beforeDate","_beforeView","_isViewAvailable","afterDate","_afterView","_translateViews","specificView","_viewConfig","rtl","designMode","allowValueSelection","move","left","_getViewPosition","coefficient","nextView","isMaxZoomLevel","currentValue","newCurrentDate","_animateShowView","_navigatorConfig","getNavigatorCaption","_updateButtonsVisibility","_navigatorClickHandler","onCaptionClick","rtlEnabled","_updateNavigatorCaption","_isMinZoomLevel","toggleButton","_getRequiredView","_swipeable","onStart","_swipeStartHandler","onUpdated","_swipeUpdateHandler","onEnd","_swipeEndHandler","itemSizeFunc","_viewWidth","maxLeftOffset","maxRightOffset","isRtl","targetOffset","moveOffset","_animateWrapper","_isDateInInvalidRange","_viewWidthValue","isBoundary","$todayButton","integrationOptions","_$footer","_popAnimationView","animate","scale","opacity","newView","rtlCorrection","offsetSign","_preventViewChangeAnimation","_wrapperAnimationEndHandler","today","_rearrangeViews","_resetLocation","viewOffset","viewToCreateKey","viewToRemoveKey","destinationDate","dateByOffset","_clearViewWidthCache","_disposeViews","_refreshViews","_updateViewsValue","$prevSelectedCell","_getCellByDate","$selectedCell","ariaId","$newCell","_suppressingNavigation","796","_clickAction","_captionClickAction","_renderButtons","_renderCaption","_prevButton","icon","$prevButton","_nextButton","$nextButton","_caption","$caption","buttonPrefix","buttonName","button","797","BaseView","_getViewName","rowCount","_renderImpl","_renderHeader","_$table","_renderFocusTarget","getCellAriaLabel","$header","prepend","$headerRow","appendCell","_iterateCells","$cell","_getDayCaption","_getFirstDayOfWeek","_isTodayCell","cellDate","_isDateOutOfRange","_isOtherView","_getCellText","daysInWeek","_getFirstCellData","firstDay","firstMonthDayOffset","_getNextCellData","_getDefaultDisabledDatesHandler","some","foundDate","firstYearInDecade","_isValueOnCurrentView","minDecade","maxDecade","firstDecadeInCentury","798","CALENDAR_OTHER_VIEW_CLASS","CALENDAR_CELL_CLASS","CALENDAR_EMPTY_CELL_CLASS","CALENDAR_TODAY_CLASS","CALENDAR_DXCLICK_EVENT_NAME","CALENDAR_DATE_VALUE_KEY","_createDisabledDatesHandler","_renderContouredDate","renderCell","cellIndex","prevCellDate","createElement","appendChild","innerHTML","insertBefore","firstChild","indexRow","len","delegate","_createCellClickAction","_disabledDatesHandler","$oldContouredCell","$newContouredCell","_changeValue","selectedCell","_selectedCell","_getFirstAvailableDate","getFirstDateView","799","DateViewStrategy","defaultOptionsRules","_device3","_device4","maxWidth","_device5","onDisposing","800","DateViewRoller","ROLLER_TYPE","_valueOption","_getDefaultDate","applyCompactClass","_toggleFormatClasses","_toggleCompactClass","previousFormat","DATEVIEW_CLASS","_$wrapper","_renderRollers","_$rollersContainer","_createRollerConfigs","_rollers","_rollerConfigs","$roller","DATEVIEW_ROLLER_CLASS","displayItems","selectedIndex","showScrollbar","roller","_toggleActive","_setActiveRoller","_setRollerState","onSelectedIndexChanged","_createRollerConfig","componentName","valueRange","_calculateRollerConfigValueRange","curDate","_getCurrentDate","setValue","valueItems","getIndex","currentRoller","activeRoller","toggleActiveState","_updateRollersPosition","correctIndex","rollerValue","_refreshRollers","_refreshRoller","rollerType","rollerConfig","minYear","minMonth","maxYear","maxMonth","minHour","maxHour","_deferredRenderDayTimeout","_deferredRenderMonthTimeout","801","Scrollable","useNative","bounceEnabled","showOnClick","scrollByContent","_renderSelectedItemFrame","_renderContainerClick","_renderSelectedValue","_renderItemsClick","_wrapAction","_endActionHandler","_renderSelectedIndexChanged","_selectedIndexChanged","clickAction","actionName","originalAction","_$content","_fitIndex","_moveTo","_getItemPosition","_renderActiveStateItem","itemCount","_itemHeight","itemSelector","_getItemSelector","_itemClickHandler","_itemElementIndex","targetLocation","_normalizeLocation","_location","_isVisible","_prepareDirections","_animation","complete","resetPosition","handleMove","_validate","currentSelectedIndex","newSelectedIndex","getBoundingClientRect","_fireSelectedIndexChanged","_refreshSelectedIndex","fitIndex","802","NativeStrategy","_getDateBoxType","803","TimeView","CalendarWithTimeStrategy","_is24HourFormat","_timeView","_showClock","_isShrinkView","use24HourFormat","stylingMode","_isSmallScreen","_repaintTimer","isAdaptiveMode","_currentAdaptiveMode","preventDefaultValue","_getBoxItems","_box","_attachTabHandler","calendarPopupConfig","clockMinWidth","_hourBox","handler","_hasFocusClass","_removeMinWidthTimer","804","NumberBox","rotateArrow","$arrow","angle","cssRotate","_arrowOffset","_getValue","_renderBox","_updateTime","$box","_renderClock","__","_$hourArrow","_$minuteArrow","_updateClock","hourArrowAngle","minuteArrowAngle","is12HourFormat","_minuteBox","_format12","_createHourBox","_createMinuteBox","_createFormat12Box","newHours","_normalizeHours","_denormalizeHours","_getNumberBoxConfig","newMinutes","_refreshFormat12","isPM","_valueChangeActionSuppressed","valueFormat","moveForward","805","BOUNDARY_VALUES","ListStrategy","_getPopupWidth","_refreshItems","_timeListItemTemplate","_widgetItems","_getTimeListItems","_setSelectedItemsByValue","_asyncScrollTimeout","dateIndex","_getDateIndex","_areDatesEqual","_getBoundaryDate","_getRangeItems","rangeDuration","rangeItems","boundary","boundaryValue","child","popupHeight","_timeList","806","ValidationSummary","groupConfig","addGroup","_unsubscribeGroup","groupSubscription","_groupValidationHandler","getGroupConfig","_getOrderedItems","validators","orderedItems","firstItem","brokenRules","_validationSummary","_itemValidationHandler","disposingHandler","itemValidationResult","elementIndex","replacementFound","newMessage","splice","VALIDATION_SUMMARY_CLASS","818","832","utils","stringUtils","TabPanel","Form","_cachedColCountOptions","_groupsColCount","screenByWidth","defaultScreenFactorFunc","formID","formData","colCountByScreen","readOnly","onFieldDataChanged","customizeItem","onEditorEnterKey","minColWidth","alignItemLabels","alignItemLabelsInAllGroups","showColonAfterLabel","showRequiredMark","showOptionalMark","requiredMark","optionalMark","requiredMessage","showValidationSummary","scrollingEnabled","isMaterial","_getColCount","$cols","isColsExist","_createHiddenElement","rootLayoutManager","_$hiddenElement","$hiddenLabel","_renderLabel","_hiddenLabelText","_removeHiddenElement","_getLabelWidthByText","offsetWidth","_getLabelsSelectorByCol","inOneColumn","excludeTabbed","_getLabelText","labelText","isEmpty","innerText","_applyLabelsWidthByCol","labelWidth","$labelTexts","$labelTextsLength","_applyLabelsWidth","applyLabelsOptions","_getGroupElementsInColumn","columnIndex","cssColCountSelector","groupSelector","_applyLabelsWidthWithGroups","_applyLabelsWidthWithNestedGroups","$groups","colIndex","groupsColIndex","groupColIndex","$groupsByCol","groupColCount","_alignLabelsInColumn","layoutManager","_checkGrouping","_prepareFormData","_clearCachedInstances","_renderScrollable","_renderLayout","_renderValidationSummary","_attachSyncSubscriptions","_cachedScreenFactor","_getCurrentScreenFactor","getCurrentScreenFactor","_editorInstancesByField","_cachedLayoutManagers","_alignLabels","useNativeScrolling","_scrollable","useSimulatedScrollbar","useKeyboard","_getContent","$validationSummary","dxValidationSummary","_getValidationGroup","_prepareItems","isTabbed","clonedItem","extendedItems","_prepareGroupItem","_prepareTabbedItem","_prepareItemTemplate","cssItemClass","groupContentTemplate","_getTemplate","_itemGroupTemplate","_itemTabbedTemplate","_rootLayoutManager","_renderLayoutManager","onLayoutChanged","isSingleColumnMode","$tabPanel","tabPanelOptions","triggerShownEvent","$groupContent","$group","$rootElement","instance","_getLayoutManagerConfig","baseColCountByScreen","lg","md","sm","xs","baseConfig","layoutData","_isDataUpdating","_triggerOnFieldDataChanged","validationBoundary","_updateEditorInstancesFromLayoutManager","instancesByDataFields","_extendConfig","optionFullName","fullName","_triggerOnFieldDataChangedByDataSet","rootNameOfComplexOption","_getRootLevelOfExpectedComplexOption","_customHandlerOfComplexOption","isEmptyObject","_resetValues","fullOptionName","expectedRootNames","splitFullName","rootOptionName","nameParts","itemPath","_getItemPath","getEditor","dataField","_changeItemOption","_generateItemsFromData","_updateFieldValue","_getItemByField","resultItem","fieldParts","_getFieldParts","fieldName","fieldPath","path","_getItemByFieldPath","subItemsField","_getSubItemField","_isExpectedItem","separatorIndex","resultPath","isItemWithSubItems","pathNode","isGroupWithName","nameWithoutSpaces","_getTextWithoutSpaces","_searchItemInEverySubItem","groupItem","currentScreenFactor","_isColCountChanged","oldScreenSize","newScreenSize","isChanged","validationGroupConfig","_updateData","isComplexData","_data","fieldValue","resetValues","updateData","resolveWith","itemOption","id","argsCount","validateGroup","getItemID","833","isWrapped","isWritableWrapped","removeEvent","normalizeIndexes","ResponsiveBox","DATA_OPTIONS","EDITORS_WITH_ARRAY_VALUE","LayoutManager","_itemWatchers","_initDataAndItems","_cleanItemWatchers","initialData","_syncDataWithItems","_updateItems","userItems","_getDataByField","processedItems","isUserItemsExist","_generateItemsByData","_isAcceptableItem","_processItem","_updateItemWatchers","_sortItems","watch","_getWatch","skipImmediate","itemField","editorType","_getEditorTypeByDataType","dataType","_sortIndexes","sort","itemA","itemB","indexA","visibleIndex","indexB","_clearEditorInstances","_renderResponsiveBox","_hasBrowserFlex","templatesInfo","layoutItems","_prepareItemsWithMerging","_generateLayoutItems","_extendItemsWithDefaultTemplateOptions","_responsiveBox","_getResponsiveBoxConfig","_renderTemplates","targetItems","sourceItems","merged","_itemStateChangedHandler","_renderTemplate","_renderEmptyItem","_renderButtonItem","_renderFieldItem","info","formItem","xsColCount","itemRenderedCountInPreviousRows","$fieldItem","cssClass","colspan","cols","_generateRatio","rows","_getRowsCount","singleColumnScreen","_cashedColCount","_getMaxColCount","itemsCount","maxColCount","isCachedColCountObsolete","itemsMergedByCol","j","colSpan","_getColByIndex","generatedItem","rowSpan","rowspan","_getButtonHorizontalAlignment","horizontalAlignment","alignment","_getButtonVerticalAlignment","verticalAlignment","defaultOptions","buttonOptions","_addItemClasses","column","$label","_getName","isRequired","_hasRequiredRuleInSet","labelOptions","_getLabelOptions","$editor","helpID","helpText","_isLabelNeedBaselineAlign","_appendEditorToField","_renderEditor","_getTemplateByFieldItem","$validationTarget","_renderValidator","_renderHelpText","_attachClickHandler","hasRequiredRule","largeEditors","showColon","captionize","labelClasses","FIELD_ITEM_LABEL_CLASS","$labelContent","_renderLabelMark","$mark","requiredMarksConfig","_getRequiredMarksConfig","isRequiredMark","isOptionalMark","markClass","markText","_cashedRequiredConfig","dataValue","defaultEditorOptions","formInstance","inputAttr","_replaceDataOptions","renderOptions","_createEditor","originalOptions","resultOptions","_getFieldLabelName","_prepareValidationRules","isItemHaveCustomLabel","itemName","userValidationRules","isItemRequired","_addWrapperInvalidClass","editorInstance","toggleInvalidClass","parents","_addItemContentClasses","_getComponentOwner","_registerEditorInstance","_bindDataField","componentOwner","_createWatcher","linkEditorToDataField","deep","_watch","$itemContent","locationSpecificClass","_getItemContentLocationSpecificClass","right","readOnlyState","fieldItem","_addInnerItemAlignmentClass","isSimpleItem","$editorWrapper","wrap","isBooleanEditors","isAutoSize","ceil","valueGetter","_resetColCount","isDataUpdating","fullFieldName","_managedUpdateEditorOption","isObjectValue","isSameObjectValue","_managedUpdateFieldValue","_isValueChangedCalled","_isFieldValueChanged","fireEvent","responsiveBox","834","835","_initLayoutChangedAction","_layoutChangedAction","_updateRootBox","_$root","_setScreenSize","_screenItems","_itemsByScreen","_prepareGrid","_spreadItems","_layoutItems","_linkNodeToItem","_findItemElementByItem","_refreshItem","_clearItemNodeTemplates","_update","currentScreen","_getCurrentScreen","_removeScreenSizeClass","RESPONSIVE_BOX_CLASS","grid","_grid","_prepareRowsAndCols","_rows","_cols","_createEmptyCell","_isSingleColumnScreen","_prepareSingleColumnScreenItems","_defaultSizeConfig","_sizesByScreen","_screenRegExp","item1","item2","sizeConfigs","_filterByScreen","sizeConfig","defaultSizeConfig","screenRegExp","screen","_screenWidth","itemInfo","itemCol","itemRow","itemCell","_occupyCells","locations","isPlainObject","_isItemCellOccupied","_markSpanningCell","_loopOverSpanning","rowEnd","colEnd","boundRowEnd","boundColEnd","rowIndex","spanningCell","itemNode","rowsCount","colsCount","_layoutBlock","rootBox","_prepareBoxConfig","_rootBoxConfig","rootItems","_needApplyAutoBaseSize","_isSingleItem","_itemByCell","_layoutDirection","firstCellLocation","isItemRowSpanned","isItemColSpanned","block","crossDirection","_crossDirection","_nextBlock","_isBlockIndivisible","prevBlockOptions","_blockSize","startIndex","endIndex","crossStartIndex","crossSpan","crossIndex","lineCrossSpan","_cellByDirection","lineCrossEndIndex","crossEndIndex","$existingRoot","_saveAssistantRoot","$root","_assistantRoots","_cleanUnusedRoots","_toggleVisibility","_attachClickEvent","836","MultiView","Tabs","iconUtils","BindableTemplate","itemTitleTemplate","showNavButtons","onTitleClick","onTitleHold","onTitleRendered","touch","swipeEnabled","animationEnabled","_createTitleActions","$iconElement","getImageContainer","_createTitleClickAction","_createTitleHoldAction","_createTitleRenderedAction","_titleClickAction","_titleHoldAction","_titleRenderedAction","_renderContent","_resizeEventTimer","_updateLayout","_tabs","_$tabContainer","$tabs","_tabConfig","tabsHeight","marginTop","paddingTop","tabItems","itemElements","$activeTab","selectOnFocus","repaintChangesOnly","itemTemplateProperty","loopItemFocus","selectionRequired","onOptionChanged","$value","$newItem","onFocusIn","onFocusOut","_updateFocusState","_toggleFocusClass","_setTabsOption","newItem","837","toNumber","locate","moveTo","completeAction","loop","_itemAttributes","_$itemContainer","_itemWidth","_itemWidthValue","_clearItemWidthCache","_itemsCount","_normalizeIndex","_getRTLSignCorrection","_initSwipeable","_deferredItems","renderContentDeferred","selectedItemIndices","_getSelectedItemIndices","_updateItemsPosition","_updateItemsVisibility","_renderSelection","addedSelection","newIndex","$itemElements","positionSign","_animationDirection","$selectedItem","itemIndex","isHidden","_renderSpecificItem","hasItemContent","_itemContentClass","triggerResizeEvent","_setAriaSelected","_updateSelection","removedSelection","prevIndex","animationDirection","_animateItemContainer","completeCallback","containerPosition","indexDifference","_getItemFocusLoopSignCorrection","isSwipePresent","directionSignVariable","elastic","lastIndex","_swipeDirection","swipeDirection","$selectedElement","_itemFocusLooped","_moveFocus","_prevItem","$result","_nextItem","838","TabsItem","badgeExpr","badge","_renderWrapper","_renderMultiple","_feedbackHideTimeout","_prepareDefaultItemTemplate","_selectedItemClass","_renderScrolling","_allowScrolling","_renderNavButtons","_updateNavButtonsVisibility","scrollTo","scrollWidth","clientWidth","_scrollToItem","_cleanScrolling","_cleanNavButtons","_leftButton","_rightButton","$itemContainer","onScroll","_editStrategy","getItemElement","scrollToElement","_getSummaryItemsWidth","_getAvailableItems","_createNavButton","$leftButton","$rightButton","scrollLeft","_updateScrollPosition","scrollBy","holdAction","_holdInterval","holdEventName","pointerUpEventName","pointerOutEventName","out","navButton","$navButton","timeout","_clearInterval","_itemSelectHandler","isItemSelected","getTabsExpandedClass","839","_renderWatchers","_startWatcher","_renderBadge","$badge","840","ValidationGroup","validatorContainer","summaryContainer","resetGroup","removeGroup","863","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","create","form_1","prop_types_1","component_1","nested_option_1","_WidgetClass","_defaults","defaultFormData","_instance","enumerable","configurable","Component","propTypes","accessKey","PropTypes","bool","oneOfType","oneOf","object","elementAttr","hint","ButtonItem","OptionName","IsCollectionItem","PredefinedProps","ButtonOptions","TemplateProps","tmplOption","ColCountByScreen","CompareRule","CustomRule","EmailRule","EmptyItem","GroupItem","Item","Label","NumericRule","PatternRule","RangeRule","RequiredRule","SimpleItem","StringLengthRule","Tab","TabbedItem","TabPanelOptions","DefaultsProps","defaultItems","defaultSelectedIndex","defaultSelectedItem","defaultSelectedItemKeys","defaultSelectedItems","ValidationRule","969"],"mappings":"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","file":"static/js/3.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 715:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactForm\", function() { return ReactForm; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_core_template__ = __webpack_require__(150);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_core_template___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_devextreme_react_core_template__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_form__ = __webpack_require__(969);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_form___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_form__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_device__ = __webpack_require__(346);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_player_component__ = __webpack_require__(105);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__with_style__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__theme_scope__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_reselect__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_reselect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_reselect__);\n/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\n\n\n\n\n\n\n\n\n\n//#endregion\nvar defaultLabelLocations = { desktop: \"left\", tablet: \"left\", phone: \"top\" }, WithStyle = Object(__WEBPACK_IMPORTED_MODULE_6__with_style__[\"a\" /* createWithStyleComponent */])({\n    main: {\n        flexDirection: \"column\"\n    }\n});\nvar ReactForm = /** @class */ (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](ReactForm, _super);\n    function ReactForm() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.itemsSelector = Object(__WEBPACK_IMPORTED_MODULE_8_reselect__[\"createSelector\"])([\n            function () { return Object(__WEBPACK_IMPORTED_MODULE_4__utils_device__[\"a\" /* default */])(); },\n            function (args) { return args.items; }\n        ], function (deviceType, items) {\n            var originalItems = {}, formItems = ReactForm.mapItems(items, deviceType, originalItems);\n            return {\n                originalItems: originalItems,\n                items: formItems\n            };\n        });\n        _this.colCountSelector = Object(__WEBPACK_IMPORTED_MODULE_8_reselect__[\"createSelector\"])([\n            function (args) { return args.colCount; }\n        ], function (colCount) { return Object(__WEBPACK_IMPORTED_MODULE_4__utils_device__[\"b\" /* getDeviceValue */])(colCount); });\n        _this.labelLocationSelector = Object(__WEBPACK_IMPORTED_MODULE_8_reselect__[\"createSelector\"])([\n            function () { return Object(__WEBPACK_IMPORTED_MODULE_4__utils_device__[\"a\" /* default */])(); },\n            function (args) { return args.labelLocation; }\n        ], function (deviceType, labelLocation) { return Object(__WEBPACK_IMPORTED_MODULE_4__utils_device__[\"b\" /* getDeviceValue */])(labelLocation) || defaultLabelLocations[deviceType]; });\n        return _this;\n    }\n    ReactForm.prototype.render = function () {\n        var form = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, this.props, this.itemsSelector(this.props), { labelLocation: this.labelLocationSelector(this.props), colCount: this.colCountSelector(this.props) });\n        return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_7__theme_scope__[\"a\" /* ThemeScope */].Provider, { value: \"form\" },\n            __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](WithStyle, { className: form.className }, function (_a) {\n                var main = _a.main;\n                return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_form__[\"Form\"], __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, form, { className: main }),\n                    __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_1_devextreme_react_core_template__[\"Template\"], { name: \"item\", component: ReactForm.componentTemplate(form.originalItems) })));\n            })));\n    };\n    ReactForm.mapItems = function (items, deviceType, originalItemsMap) {\n        var result = items.map(function (item) {\n            if ((item.itemType === \"group\") || (item[\"items\"]) && !item[\"type\"]) {\n                return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { items: ReactForm.mapItems(item.items, deviceType, originalItemsMap) });\n            }\n            else if ((item.itemType === \"tabbed\") && item.tabs) {\n                return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { tabs: ReactForm.mapItems(item.tabs, deviceType, originalItemsMap) });\n            }\n            else {\n                var originalItemKey = Object.keys(originalItemsMap).length;\n                originalItemsMap[originalItemKey] = item;\n                return {\n                    label: {\n                        text: item.title,\n                    },\n                    template: \"item\",\n                    editorOptions: __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { originalItemKey: originalItemKey }),\n                    visible: item.visible\n                };\n            }\n        });\n        return result;\n    };\n    ReactForm.defaultProps = { items: [] };\n    ReactForm.componentTemplate = function (originalItemsMap) { return function (item) {\n        return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_5__app_player_component__[\"b\" /* default */], __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, originalItemsMap[item.editorOptions.originalItemKey])));\n    }; };\n    return ReactForm;\n}(__WEBPACK_IMPORTED_MODULE_3_react__[\"Component\"]));\n\n\n\n/***/ }),\n\n/***/ 732:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (localization/date.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar dependencyInjector = __webpack_require__(41),\r\n    isString = __webpack_require__(4).isString,\r\n    iteratorUtils = __webpack_require__(5),\r\n    inArray = __webpack_require__(15).inArray,\r\n    getLDMLDateFormatter = __webpack_require__(765).getFormatter,\r\n    getLDMLDateFormat = __webpack_require__(758).getFormat,\r\n    getLDMLDateParser = __webpack_require__(764).getParser,\r\n    defaultDateNames = __webpack_require__(766),\r\n    numberLocalization = __webpack_require__(336),\r\n    errors = __webpack_require__(17);\r\n__webpack_require__(207);\r\nvar FORMATS_TO_PATTERN_MAP = {\r\n    shortdate: \"M/d/y\",\r\n    shorttime: \"h:mm a\",\r\n    longdate: \"EEEE, MMMM d, y\",\r\n    longtime: \"h:mm:ss a\",\r\n    monthandday: \"MMMM d\",\r\n    monthandyear: \"MMMM y\",\r\n    quarterandyear: \"QQQ y\",\r\n    day: \"d\",\r\n    year: \"y\",\r\n    shortdateshorttime: \"M/d/y, h:mm a\",\r\n    mediumdatemediumtime: \"MMMM d, h:mm a\",\r\n    longdatelongtime: \"EEEE, MMMM d, y, h:mm:ss a\",\r\n    month: \"LLLL\",\r\n    shortyear: \"yy\",\r\n    dayofweek: \"EEEE\",\r\n    quarter: \"QQQ\",\r\n    hour: \"HH\",\r\n    minute: \"mm\",\r\n    second: \"ss\",\r\n    millisecond: \"SSS\",\r\n    \"datetime-local\": \"yyyy-MM-ddTHH':'mm':'ss\"\r\n};\r\nvar possiblePartPatterns = {\r\n    year: [\"y\", \"yy\", \"yyyy\"],\r\n    day: [\"d\", \"dd\"],\r\n    month: [\"M\", \"MM\", \"MMM\", \"MMMM\"],\r\n    hours: [\"H\", \"HH\", \"h\", \"hh\", \"ah\"],\r\n    minutes: [\"m\", \"mm\"],\r\n    seconds: [\"s\", \"ss\"],\r\n    milliseconds: [\"S\", \"SS\", \"SSS\"]\r\n};\r\nvar dateLocalization = dependencyInjector({\r\n    _getPatternByFormat: function(format) {\r\n        return FORMATS_TO_PATTERN_MAP[format.toLowerCase()]\r\n    },\r\n    _expandPattern: function(pattern) {\r\n        return this._getPatternByFormat(pattern) || pattern\r\n    },\r\n    formatUsesMonthName: function(format) {\r\n        return this._expandPattern(format).indexOf(\"MMMM\") !== -1\r\n    },\r\n    formatUsesDayName: function(format) {\r\n        return this._expandPattern(format).indexOf(\"EEEE\") !== -1\r\n    },\r\n    getFormatParts: function(format) {\r\n        var pattern = this._getPatternByFormat(format) || format,\r\n            result = [];\r\n        iteratorUtils.each(pattern.split(/\\W+/), function(_, formatPart) {\r\n            iteratorUtils.each(possiblePartPatterns, function(partName, possiblePatterns) {\r\n                if (inArray(formatPart, possiblePatterns) > -1) {\r\n                    result.push(partName)\r\n                }\r\n            })\r\n        });\r\n        return result\r\n    },\r\n    getMonthNames: function(format) {\r\n        return defaultDateNames.getMonthNames(format)\r\n    },\r\n    getDayNames: function(format) {\r\n        return defaultDateNames.getDayNames(format)\r\n    },\r\n    getQuarterNames: function(format) {\r\n        return defaultDateNames.getQuarterNames(format)\r\n    },\r\n    getPeriodNames: function(format) {\r\n        return defaultDateNames.getPeriodNames(format)\r\n    },\r\n    getTimeSeparator: function() {\r\n        return \":\"\r\n    },\r\n    is24HourFormat: function(format) {\r\n        var amTime = new Date(2017, 0, 20, 11, 0, 0, 0),\r\n            pmTime = new Date(2017, 0, 20, 23, 0, 0, 0),\r\n            amTimeFormatted = this.format(amTime, format),\r\n            pmTimeFormatted = this.format(pmTime, format);\r\n        for (var i = 0; i < amTimeFormatted.length; i++) {\r\n            if (amTimeFormatted[i] !== pmTimeFormatted[i]) {\r\n                return !isNaN(parseInt(amTimeFormatted[i]))\r\n            }\r\n        }\r\n    },\r\n    format: function(date, _format) {\r\n        if (!date) {\r\n            return\r\n        }\r\n        if (!_format) {\r\n            return date\r\n        }\r\n        var formatter;\r\n        if (\"function\" === typeof _format) {\r\n            formatter = _format\r\n        } else {\r\n            if (_format.formatter) {\r\n                formatter = _format.formatter\r\n            } else {\r\n                _format = _format.type || _format;\r\n                if (isString(_format)) {\r\n                    _format = FORMATS_TO_PATTERN_MAP[_format.toLowerCase()] || _format;\r\n                    return numberLocalization.convertDigits(getLDMLDateFormatter(_format, this)(date))\r\n                }\r\n            }\r\n        }\r\n        if (!formatter) {\r\n            return\r\n        }\r\n        return formatter(date)\r\n    },\r\n    parse: function(text, format) {\r\n        var result, ldmlFormat, formatter, that = this;\r\n        if (!text) {\r\n            return\r\n        }\r\n        if (!format) {\r\n            return this.parse(text, \"shortdate\")\r\n        }\r\n        if (format.parser) {\r\n            return format.parser(text)\r\n        }\r\n        if (\"string\" === typeof format && !FORMATS_TO_PATTERN_MAP[format.toLowerCase()]) {\r\n            ldmlFormat = format\r\n        } else {\r\n            formatter = function(value) {\r\n                var text = that.format(value, format);\r\n                return numberLocalization.convertDigits(text, true)\r\n            };\r\n            try {\r\n                ldmlFormat = getLDMLDateFormat(formatter)\r\n            } catch (e) {}\r\n        }\r\n        if (ldmlFormat) {\r\n            text = numberLocalization.convertDigits(text, true);\r\n            return getLDMLDateParser(ldmlFormat, this)(text)\r\n        }\r\n        errors.log(\"W0012\");\r\n        result = new Date(text);\r\n        if (!result || isNaN(result.getTime())) {\r\n            return\r\n        }\r\n        return result\r\n    },\r\n    firstDayOfWeekIndex: function() {\r\n        return 0\r\n    }\r\n});\r\nmodule.exports = dateLocalization;\r\n\n\n/***/ }),\n\n/***/ 734:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_utils.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = __webpack_require__(1),\r\n    dateSerialization = __webpack_require__(738),\r\n    isDate = __webpack_require__(4).isDate,\r\n    each = __webpack_require__(5).each,\r\n    dateLocalization = __webpack_require__(732);\r\nvar dateComponents = function() {\r\n    return [\"year\", \"day\", \"month\", \"day\"]\r\n};\r\nvar ONE_MINUTE = 6e4;\r\nvar ONE_DAY = 60 * ONE_MINUTE * 24;\r\nvar ONE_YEAR = 365 * ONE_DAY;\r\nvar getStringFormat = function(format) {\r\n    var formatType = \"undefined\" === typeof format ? \"undefined\" : _typeof(format);\r\n    if (\"string\" === formatType) {\r\n        return \"format\"\r\n    }\r\n    if (\"object\" === formatType && void 0 !== format.type) {\r\n        return format.type\r\n    }\r\n    return null\r\n};\r\nvar dateUtils = {\r\n    SUPPORTED_FORMATS: [\"date\", \"time\", \"datetime\"],\r\n    DATE_COMPONENT_TEXT_FORMATTER: function(value, name) {\r\n        var $container = $(\"<div>\").addClass(\"dx-dateview-formatter-container\");\r\n        $(\"<span>\").text(value).addClass(\"dx-dateview-value-formatter\").appendTo($container);\r\n        $(\"<span>\").text(name).addClass(\"dx-dateview-name-formatter\").appendTo($container);\r\n        return $container\r\n    },\r\n    ONE_MINUTE: ONE_MINUTE,\r\n    ONE_DAY: ONE_DAY,\r\n    ONE_YEAR: ONE_YEAR,\r\n    MIN_DATEVIEW_DEFAULT_DATE: new Date(1900, 0, 1),\r\n    MAX_DATEVIEW_DEFAULT_DATE: function() {\r\n        var newDate = new Date;\r\n        return new Date(newDate.getFullYear() + 50, newDate.getMonth(), newDate.getDate(), 23, 59, 59)\r\n    }(),\r\n    FORMATS_INFO: {\r\n        date: {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-dd\"\r\n            },\r\n            components: dateComponents()\r\n        },\r\n        time: {\r\n            getStandardPattern: function() {\r\n                return \"HH:mm\"\r\n            },\r\n            components: [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"]\r\n        },\r\n        datetime: {\r\n            getStandardPattern: function() {\r\n                var standardPattern;\r\n                ! function() {\r\n                    var androidFormatPattern = \"yyyy-MM-ddTHH:mmZ\",\r\n                        testDateString = \"2000-01-01T01:01Z\";\r\n                    var $input = $(\"<input>\").attr(\"type\", \"datetime\");\r\n                    $input.val(testDateString);\r\n                    if ($input.val()) {\r\n                        standardPattern = androidFormatPattern\r\n                    }\r\n                }();\r\n                if (!standardPattern) {\r\n                    standardPattern = \"yyyy-MM-ddTHH:mm:ssZ\"\r\n                }\r\n                dateUtils.FORMATS_INFO.datetime.getStandardPattern = function() {\r\n                    return standardPattern\r\n                };\r\n                return standardPattern\r\n            },\r\n            components: dateComponents().concat([\"hours\", \"minutes\", \"seconds\", \"milliseconds\"])\r\n        },\r\n        \"datetime-local\": {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-ddTHH:mm:ss\"\r\n            },\r\n            components: dateComponents().concat([\"hours\", \"minutes\", \"seconds\"])\r\n        }\r\n    },\r\n    FORMATS_MAP: {\r\n        date: \"shortdate\",\r\n        time: \"shorttime\",\r\n        datetime: \"shortdateshorttime\"\r\n    },\r\n    SUBMIT_FORMATS_MAP: {\r\n        date: \"date\",\r\n        time: \"time\",\r\n        datetime: \"datetime-local\"\r\n    },\r\n    toStandardDateFormat: function(date, type) {\r\n        var pattern = dateUtils.FORMATS_INFO[type].getStandardPattern();\r\n        return dateSerialization.serializeDate(date, pattern)\r\n    },\r\n    fromStandardDateFormat: function(text) {\r\n        var date = dateSerialization.dateParser(text);\r\n        return isDate(date) ? date : void 0\r\n    },\r\n    getMaxMonthDay: function(year, month) {\r\n        return new Date(year, month + 1, 0).getDate()\r\n    },\r\n    mergeDates: function(oldValue, newValue, format) {\r\n        if (!newValue) {\r\n            return newValue || null\r\n        }\r\n        if (!oldValue || isNaN(oldValue.getTime())) {\r\n            var now = new Date(null);\r\n            oldValue = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n        }\r\n        var result = new Date(oldValue.valueOf());\r\n        var formatInfo = dateUtils.FORMATS_INFO[format];\r\n        each(formatInfo.components, function() {\r\n            var componentInfo = dateUtils.DATE_COMPONENTS_INFO[this];\r\n            result[componentInfo.setter](newValue[componentInfo.getter]())\r\n        });\r\n        return result\r\n    },\r\n    getLongestCaptionIndex: function(captionArray) {\r\n        var i, longestIndex = 0,\r\n            longestCaptionLength = 0;\r\n        for (i = 0; i < captionArray.length; ++i) {\r\n            if (captionArray[i].length > longestCaptionLength) {\r\n                longestIndex = i;\r\n                longestCaptionLength = captionArray[i].length\r\n            }\r\n        }\r\n        return longestIndex\r\n    },\r\n    formatUsesMonthName: function(format) {\r\n        return dateLocalization.formatUsesMonthName(format)\r\n    },\r\n    formatUsesDayName: function(format) {\r\n        return dateLocalization.formatUsesDayName(format)\r\n    },\r\n    getLongestDate: function(format, monthNames, dayNames) {\r\n        var stringFormat = getStringFormat(format),\r\n            month = 9;\r\n        if (!stringFormat || dateUtils.formatUsesMonthName(stringFormat)) {\r\n            month = dateUtils.getLongestCaptionIndex(monthNames)\r\n        }\r\n        var longestDate = new Date(1888, month, 21, 23, 59, 59, 999);\r\n        if (!stringFormat || dateUtils.formatUsesDayName(stringFormat)) {\r\n            var date = longestDate.getDate() - longestDate.getDay() + dateUtils.getLongestCaptionIndex(dayNames);\r\n            longestDate.setDate(date)\r\n        }\r\n        return longestDate\r\n    },\r\n    normalizeTime: function(date) {\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0)\r\n    }\r\n};\r\ndateUtils.DATE_COMPONENTS_INFO = {\r\n    year: {\r\n        getter: \"getFullYear\",\r\n        setter: \"setFullYear\",\r\n        formatter: function(value, showNames, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setFullYear(value);\r\n            return dateLocalization.format(formatDate, \"yyyy\")\r\n        },\r\n        startValue: void 0,\r\n        endValue: void 0\r\n    },\r\n    day: {\r\n        getter: \"getDate\",\r\n        setter: \"setDate\",\r\n        formatter: function(value, showNames, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setDate(value);\r\n            if (!showNames) {\r\n                return dateLocalization.format(formatDate, \"d\")\r\n            }\r\n            return dateUtils.DATE_COMPONENT_TEXT_FORMATTER(value, dateLocalization.getDayNames()[formatDate.getDay()])\r\n        },\r\n        startValue: 1,\r\n        endValue: void 0\r\n    },\r\n    month: {\r\n        getter: \"getMonth\",\r\n        setter: \"setMonth\",\r\n        formatter: function(value, showNames) {\r\n            var monthName = dateLocalization.getMonthNames()[value];\r\n            return showNames ? dateUtils.DATE_COMPONENT_TEXT_FORMATTER(value + 1, monthName) : monthName\r\n        },\r\n        startValue: 0,\r\n        endValue: 11\r\n    },\r\n    hours: {\r\n        getter: \"getHours\",\r\n        setter: \"setHours\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, value), \"hour\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 23\r\n    },\r\n    minutes: {\r\n        getter: \"getMinutes\",\r\n        setter: \"setMinutes\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, value), \"minute\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    seconds: {\r\n        getter: \"getSeconds\",\r\n        setter: \"setSeconds\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, 0, value), \"second\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    milliseconds: {\r\n        getter: \"getMilliseconds\",\r\n        setter: \"setMilliseconds\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, 0, 0, value), \"millisecond\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 999\r\n    }\r\n};\r\nmodule.exports = dateUtils;\r\n\n\n/***/ }),\n\n/***/ 737:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (core/utils/date.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar typeUtils = __webpack_require__(4),\r\n    adjust = __webpack_require__(60).adjust,\r\n    each = __webpack_require__(5).each,\r\n    camelize = __webpack_require__(79).camelize,\r\n    isObject = typeUtils.isObject,\r\n    isString = typeUtils.isString,\r\n    isDate = typeUtils.isDate,\r\n    isDefined = typeUtils.isDefined;\r\nvar dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"];\r\nvar toMilliseconds = function toMilliseconds(value) {\r\n    switch (value) {\r\n        case \"millisecond\":\r\n            return 1;\r\n        case \"second\":\r\n            return 1e3 * toMilliseconds(\"millisecond\");\r\n        case \"minute\":\r\n            return 60 * toMilliseconds(\"second\");\r\n        case \"hour\":\r\n            return 60 * toMilliseconds(\"minute\");\r\n        case \"day\":\r\n            return 24 * toMilliseconds(\"hour\");\r\n        case \"week\":\r\n            return 7 * toMilliseconds(\"day\");\r\n        case \"month\":\r\n            return 30 * toMilliseconds(\"day\");\r\n        case \"quarter\":\r\n            return 3 * toMilliseconds(\"month\");\r\n        case \"year\":\r\n            return 365 * toMilliseconds(\"day\");\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar getDatesInterval = function(startDate, endDate, intervalUnit) {\r\n    var delta = endDate.getTime() - startDate.getTime(),\r\n        millisecondCount = toMilliseconds(intervalUnit) || 1;\r\n    return Math.floor(delta / millisecondCount)\r\n};\r\nvar getNextDateUnit = function(unit, withWeeks) {\r\n    var interval = getDateUnitInterval(unit);\r\n    switch (interval) {\r\n        case \"millisecond\":\r\n            return \"second\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"day\":\r\n            return withWeeks ? \"week\" : \"month\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"month\":\r\n            return \"quarter\";\r\n        case \"quarter\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"year\";\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar convertMillisecondsToDateUnits = function(value) {\r\n    var i, dateUnitCount, dateUnitInterval, dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\"],\r\n        result = {};\r\n    for (i = dateUnitIntervals.length - 1; i >= 0; i--) {\r\n        dateUnitInterval = dateUnitIntervals[i];\r\n        dateUnitCount = Math.floor(value / toMilliseconds(dateUnitInterval));\r\n        if (dateUnitCount > 0) {\r\n            result[dateUnitInterval + \"s\"] = dateUnitCount;\r\n            value -= convertDateUnitToMilliseconds(dateUnitInterval, dateUnitCount)\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar dateToMilliseconds = function(tickInterval) {\r\n    var milliseconds = 0;\r\n    if (isObject(tickInterval)) {\r\n        each(tickInterval, function(key, value) {\r\n            milliseconds += convertDateUnitToMilliseconds(key.substr(0, key.length - 1), value)\r\n        })\r\n    }\r\n    if (isString(tickInterval)) {\r\n        milliseconds = convertDateUnitToMilliseconds(tickInterval, 1)\r\n    }\r\n    return milliseconds\r\n};\r\nvar convertDateUnitToMilliseconds = function(dateUnit, count) {\r\n    return toMilliseconds(dateUnit) * count\r\n};\r\nvar getDateUnitInterval = function(tickInterval) {\r\n    var i, maxInterval = -1;\r\n    if (isString(tickInterval)) {\r\n        return tickInterval\r\n    }\r\n    if (isObject(tickInterval)) {\r\n        each(tickInterval, function(key, value) {\r\n            for (i = 0; i < dateUnitIntervals.length; i++) {\r\n                if (value && (key === dateUnitIntervals[i] + \"s\" || key === dateUnitIntervals[i]) && maxInterval < i) {\r\n                    maxInterval = i\r\n                }\r\n            }\r\n        });\r\n        return dateUnitIntervals[maxInterval]\r\n    }\r\n    return \"\"\r\n};\r\nvar tickIntervalToFormatMap = {\r\n    millisecond: \"millisecond\",\r\n    second: \"longtime\",\r\n    minute: \"shorttime\",\r\n    hour: \"shorttime\",\r\n    day: \"day\",\r\n    week: \"day\",\r\n    month: \"month\",\r\n    quarter: \"quarter\",\r\n    year: \"year\"\r\n};\r\n\r\nfunction getDateFormatByTickInterval(tickInterval) {\r\n    return tickIntervalToFormatMap[getDateUnitInterval(tickInterval)] || \"\"\r\n}\r\nvar getQuarter = function(month) {\r\n    return Math.floor(month / 3)\r\n};\r\nvar getFirstQuarterMonth = function(month) {\r\n    return 3 * getQuarter(month)\r\n};\r\nvar correctDateWithUnitBeginning = function(date, dateInterval, withCorrection, firstDayOfWeek) {\r\n    date = new Date(date.getTime());\r\n    var firstQuarterMonth, month, oldDate = new Date(date.getTime()),\r\n        dateUnitInterval = getDateUnitInterval(dateInterval);\r\n    switch (dateUnitInterval) {\r\n        case \"second\":\r\n            date = new Date(1e3 * Math.floor(oldDate.getTime() / 1e3));\r\n            break;\r\n        case \"minute\":\r\n            date = new Date(6e4 * Math.floor(oldDate.getTime() / 6e4));\r\n            break;\r\n        case \"hour\":\r\n            date = new Date(36e5 * Math.floor(oldDate.getTime() / 36e5));\r\n            break;\r\n        case \"year\":\r\n            date.setMonth(0);\r\n        case \"month\":\r\n            date.setDate(1);\r\n        case \"day\":\r\n            date.setHours(0, 0, 0, 0);\r\n            break;\r\n        case \"week\":\r\n            date = getFirstWeekDate(date, firstDayOfWeek || 0);\r\n            date.setHours(0, 0, 0, 0);\r\n            break;\r\n        case \"quarter\":\r\n            firstQuarterMonth = getFirstQuarterMonth(date.getMonth());\r\n            month = date.getMonth();\r\n            date.setDate(1);\r\n            date.setHours(0, 0, 0, 0);\r\n            if (month !== firstQuarterMonth) {\r\n                date.setMonth(firstQuarterMonth)\r\n            }\r\n    }\r\n    if (withCorrection && \"hour\" !== dateUnitInterval && \"minute\" !== dateUnitInterval && \"second\" !== dateUnitInterval) {\r\n        fixTimezoneGap(oldDate, date)\r\n    }\r\n    return date\r\n};\r\nvar trimTime = function(date) {\r\n    return dateUtils.correctDateWithUnitBeginning(date, \"day\")\r\n};\r\nvar getDatesDifferences = function(date1, date2) {\r\n    var differences, counter = 0;\r\n    differences = {\r\n        year: date1.getFullYear() !== date2.getFullYear(),\r\n        month: date1.getMonth() !== date2.getMonth(),\r\n        day: date1.getDate() !== date2.getDate(),\r\n        hour: date1.getHours() !== date2.getHours(),\r\n        minute: date1.getMinutes() !== date2.getMinutes(),\r\n        second: date1.getSeconds() !== date2.getSeconds(),\r\n        millisecond: date1.getMilliseconds() !== date2.getMilliseconds()\r\n    };\r\n    each(differences, function(key, value) {\r\n        if (value) {\r\n            counter++\r\n        }\r\n    });\r\n    if (0 === counter && 0 !== getTimezonesDifference(date1, date2)) {\r\n        differences.hour = true;\r\n        counter++\r\n    }\r\n    differences.count = counter;\r\n    return differences\r\n};\r\n\r\nfunction addDateInterval(value, interval, dir) {\r\n    var result = new Date(value.getTime()),\r\n        intervalObject = isString(interval) ? getDateIntervalByString(interval.toLowerCase()) : interval;\r\n    if (intervalObject.years) {\r\n        result.setFullYear(result.getFullYear() + intervalObject.years * dir)\r\n    }\r\n    if (intervalObject.quarters) {\r\n        result.setMonth(result.getMonth() + 3 * intervalObject.quarters * dir)\r\n    }\r\n    if (intervalObject.months) {\r\n        result.setMonth(result.getMonth() + intervalObject.months * dir)\r\n    }\r\n    if (intervalObject.weeks) {\r\n        result.setDate(result.getDate() + 7 * intervalObject.weeks * dir)\r\n    }\r\n    if (intervalObject.days) {\r\n        result.setDate(result.getDate() + intervalObject.days * dir)\r\n    }\r\n    if (intervalObject.hours) {\r\n        result.setTime(result.getTime() + 36e5 * intervalObject.hours * dir)\r\n    }\r\n    if (intervalObject.minutes) {\r\n        result.setTime(result.getTime() + 6e4 * intervalObject.minutes * dir)\r\n    }\r\n    if (intervalObject.seconds) {\r\n        result.setTime(result.getTime() + 1e3 * intervalObject.seconds * dir)\r\n    }\r\n    if (intervalObject.milliseconds) {\r\n        result.setTime(result.getTime() + intervalObject.milliseconds * dir)\r\n    }\r\n    return result\r\n}\r\nvar addInterval = function(value, interval, isNegative) {\r\n    var dir = isNegative ? -1 : 1;\r\n    return isDate(value) ? addDateInterval(value, interval, dir) : adjust(value + interval * dir, interval)\r\n};\r\nvar getSequenceByInterval = function(min, max, interval) {\r\n    var cur, intervals = [];\r\n    intervals.push(isDate(min) ? new Date(min.getTime()) : min);\r\n    cur = min;\r\n    while (cur < max) {\r\n        cur = addInterval(cur, interval);\r\n        intervals.push(cur)\r\n    }\r\n    return intervals\r\n};\r\nvar getViewFirstCellDate = function(viewType, date) {\r\n    if (\"month\" === viewType) {\r\n        return new Date(date.getFullYear(), date.getMonth(), 1)\r\n    }\r\n    if (\"year\" === viewType) {\r\n        return new Date(date.getFullYear(), 0, date.getDate())\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        return new Date(getFirstYearInDecade(date), date.getMonth(), date.getDate())\r\n    }\r\n    if (\"century\" === viewType) {\r\n        return new Date(getFirstDecadeInCentury(date), date.getMonth(), date.getDate())\r\n    }\r\n};\r\nvar getViewLastCellDate = function(viewType, date) {\r\n    if (\"month\" === viewType) {\r\n        return new Date(date.getFullYear(), date.getMonth(), getLastMonthDay(date))\r\n    }\r\n    if (\"year\" === viewType) {\r\n        return new Date(date.getFullYear(), 11, date.getDate())\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        return new Date(getFirstYearInDecade(date) + 9, date.getMonth(), date.getDate())\r\n    }\r\n    if (\"century\" === viewType) {\r\n        return new Date(getFirstDecadeInCentury(date) + 90, date.getMonth(), date.getDate())\r\n    }\r\n};\r\nvar getViewMinBoundaryDate = function(viewType, date) {\r\n    var resultDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    if (\"month\" === viewType) {\r\n        return resultDate\r\n    }\r\n    resultDate.setMonth(0);\r\n    if (\"year\" === viewType) {\r\n        return resultDate\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        resultDate.setFullYear(getFirstYearInDecade(date))\r\n    }\r\n    if (\"century\" === viewType) {\r\n        resultDate.setFullYear(getFirstDecadeInCentury(date))\r\n    }\r\n    return resultDate\r\n};\r\nvar getViewMaxBoundaryDate = function(viewType, date) {\r\n    var resultDate = new Date(date);\r\n    resultDate.setDate(getLastMonthDay(date));\r\n    if (\"month\" === viewType) {\r\n        return resultDate\r\n    }\r\n    resultDate.setMonth(11);\r\n    resultDate.setDate(getLastMonthDay(resultDate));\r\n    if (\"year\" === viewType) {\r\n        return resultDate\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        resultDate.setFullYear(getFirstYearInDecade(date) + 9)\r\n    }\r\n    if (\"century\" === viewType) {\r\n        resultDate.setFullYear(getFirstDecadeInCentury(date) + 99)\r\n    }\r\n    return resultDate\r\n};\r\nvar getLastMonthDay = function(date) {\r\n    var resultDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return resultDate.getDate()\r\n};\r\nvar sameView = function(view, date1, date2) {\r\n    return dateUtils[camelize(\"same \" + view)](date1, date2)\r\n};\r\nvar getViewUp = function(typeView) {\r\n    switch (typeView) {\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"decade\";\r\n        case \"decade\":\r\n            return \"century\"\r\n    }\r\n};\r\nvar getViewDown = function(typeView) {\r\n    switch (typeView) {\r\n        case \"century\":\r\n            return \"decade\";\r\n        case \"decade\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"month\"\r\n    }\r\n};\r\nvar getDifferenceInMonth = function(typeView) {\r\n    var difference = 1;\r\n    if (\"year\" === typeView) {\r\n        difference = 12\r\n    }\r\n    if (\"decade\" === typeView) {\r\n        difference = 120\r\n    }\r\n    if (\"century\" === typeView) {\r\n        difference = 1200\r\n    }\r\n    return difference\r\n};\r\nvar getDifferenceInMonthForCells = function(typeView) {\r\n    var difference = 1;\r\n    if (\"decade\" === typeView) {\r\n        difference = 12\r\n    }\r\n    if (\"century\" === typeView) {\r\n        difference = 120\r\n    }\r\n    return difference\r\n};\r\nvar getDateIntervalByString = function(intervalString) {\r\n    var result = {};\r\n    switch (intervalString) {\r\n        case \"year\":\r\n            result.years = 1;\r\n            break;\r\n        case \"month\":\r\n            result.months = 1;\r\n            break;\r\n        case \"quarter\":\r\n            result.months = 3;\r\n            break;\r\n        case \"week\":\r\n            result.weeks = 1;\r\n            break;\r\n        case \"day\":\r\n            result.days = 1;\r\n            break;\r\n        case \"hour\":\r\n            result.hours = 1;\r\n            break;\r\n        case \"minute\":\r\n            result.minutes = 1;\r\n            break;\r\n        case \"second\":\r\n            result.seconds = 1;\r\n            break;\r\n        case \"millisecond\":\r\n            result.milliseconds = 1\r\n    }\r\n    return result\r\n};\r\nvar sameDate = function(date1, date2) {\r\n    return sameMonthAndYear(date1, date2) && date1.getDate() === date2.getDate()\r\n};\r\nvar sameMonthAndYear = function(date1, date2) {\r\n    return sameYear(date1, date2) && date1.getMonth() === date2.getMonth()\r\n};\r\nvar sameYear = function(date1, date2) {\r\n    return date1 && date2 && date1.getFullYear() === date2.getFullYear()\r\n};\r\nvar sameDecade = function(date1, date2) {\r\n    if (!isDefined(date1) || !isDefined(date2)) {\r\n        return\r\n    }\r\n    var startDecadeDate1 = date1.getFullYear() - date1.getFullYear() % 10,\r\n        startDecadeDate2 = date2.getFullYear() - date2.getFullYear() % 10;\r\n    return date1 && date2 && startDecadeDate1 === startDecadeDate2\r\n};\r\nvar sameCentury = function(date1, date2) {\r\n    if (!isDefined(date1) || !isDefined(date2)) {\r\n        return\r\n    }\r\n    var startCenturyDate1 = date1.getFullYear() - date1.getFullYear() % 100,\r\n        startCenturyDate2 = date2.getFullYear() - date2.getFullYear() % 100;\r\n    return date1 && date2 && startCenturyDate1 === startCenturyDate2\r\n};\r\nvar getFirstDecadeInCentury = function(date) {\r\n    return date && date.getFullYear() - date.getFullYear() % 100\r\n};\r\nvar getFirstYearInDecade = function(date) {\r\n    return date && date.getFullYear() - date.getFullYear() % 10\r\n};\r\nvar getShortDateFormat = function() {\r\n    return \"yyyy/MM/dd\"\r\n};\r\nvar getFirstMonthDate = function(date) {\r\n    if (!isDefined(date)) {\r\n        return\r\n    }\r\n    var newDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    return newDate\r\n};\r\nvar getLastMonthDate = function(date) {\r\n    if (!isDefined(date)) {\r\n        return\r\n    }\r\n    var newDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return newDate\r\n};\r\nvar getFirstWeekDate = function(date, firstDayOfWeek) {\r\n    var delta = (date.getDay() - firstDayOfWeek + 7) % 7;\r\n    var result = new Date(date);\r\n    result.setDate(date.getDate() - delta);\r\n    return result\r\n};\r\nvar normalizeDateByWeek = function(date, currentDate) {\r\n    var differenceInDays = dateUtils.getDatesInterval(date, currentDate, \"day\"),\r\n        resultDate = new Date(date);\r\n    if (differenceInDays >= 6) {\r\n        resultDate = new Date(resultDate.setDate(resultDate.getDate() + 7))\r\n    }\r\n    return resultDate\r\n};\r\nvar dateInRange = function(date, min, max, format) {\r\n    if (\"date\" === format) {\r\n        min = min && dateUtils.correctDateWithUnitBeginning(min, \"day\");\r\n        max = max && dateUtils.correctDateWithUnitBeginning(max, \"day\");\r\n        date = date && dateUtils.correctDateWithUnitBeginning(date, \"day\")\r\n    }\r\n    return normalizeDate(date, min, max) === date\r\n};\r\nvar normalizeDate = function(date, min, max) {\r\n    var normalizedDate = date;\r\n    if (!isDefined(date)) {\r\n        return date\r\n    }\r\n    if (isDefined(min) && date < min) {\r\n        normalizedDate = min\r\n    }\r\n    if (isDefined(max) && date > max) {\r\n        normalizedDate = max\r\n    }\r\n    return normalizedDate\r\n};\r\nvar fixTimezoneGap = function(oldDate, newDate) {\r\n    if (!isDefined(oldDate)) {\r\n        return\r\n    }\r\n    var sign, trial, diff = newDate.getHours() - oldDate.getHours();\r\n    if (0 === diff) {\r\n        return\r\n    }\r\n    sign = 1 === diff || diff === -23 ? -1 : 1;\r\n    trial = new Date(newDate.getTime() + 36e5 * sign);\r\n    if (sign > 0 || trial.getDate() === newDate.getDate()) {\r\n        newDate.setTime(trial.getTime())\r\n    }\r\n};\r\nvar roundToHour = function(date) {\r\n    date.setHours(date.getHours() + 1);\r\n    date.setMinutes(0);\r\n    return date\r\n};\r\nvar getTimezonesDifference = function(min, max) {\r\n    return 60 * (max.getTimezoneOffset() - min.getTimezoneOffset()) * 1e3\r\n};\r\nvar makeDate = function(date) {\r\n    return new Date(date)\r\n};\r\nvar getDatesOfInterval = function(startDate, endDate, step) {\r\n    var currentDate = new Date(startDate.getTime()),\r\n        result = [];\r\n    while (currentDate < endDate) {\r\n        result.push(new Date(currentDate.getTime()));\r\n        currentDate = this.addInterval(currentDate, step)\r\n    }\r\n    return result\r\n};\r\nvar dateUtils = {\r\n    dateUnitIntervals: dateUnitIntervals,\r\n    convertMillisecondsToDateUnits: convertMillisecondsToDateUnits,\r\n    dateToMilliseconds: dateToMilliseconds,\r\n    getNextDateUnit: getNextDateUnit,\r\n    convertDateUnitToMilliseconds: convertDateUnitToMilliseconds,\r\n    getDateUnitInterval: getDateUnitInterval,\r\n    getDateFormatByTickInterval: getDateFormatByTickInterval,\r\n    getDatesDifferences: getDatesDifferences,\r\n    correctDateWithUnitBeginning: correctDateWithUnitBeginning,\r\n    trimTime: trimTime,\r\n    addDateInterval: addDateInterval,\r\n    addInterval: addInterval,\r\n    getSequenceByInterval: getSequenceByInterval,\r\n    getDateIntervalByString: getDateIntervalByString,\r\n    sameDate: sameDate,\r\n    sameMonthAndYear: sameMonthAndYear,\r\n    sameMonth: sameMonthAndYear,\r\n    sameYear: sameYear,\r\n    sameDecade: sameDecade,\r\n    sameCentury: sameCentury,\r\n    sameView: sameView,\r\n    getDifferenceInMonth: getDifferenceInMonth,\r\n    getDifferenceInMonthForCells: getDifferenceInMonthForCells,\r\n    getFirstYearInDecade: getFirstYearInDecade,\r\n    getFirstDecadeInCentury: getFirstDecadeInCentury,\r\n    getShortDateFormat: getShortDateFormat,\r\n    getViewFirstCellDate: getViewFirstCellDate,\r\n    getViewLastCellDate: getViewLastCellDate,\r\n    getViewDown: getViewDown,\r\n    getViewUp: getViewUp,\r\n    getLastMonthDay: getLastMonthDay,\r\n    getLastMonthDate: getLastMonthDate,\r\n    getFirstMonthDate: getFirstMonthDate,\r\n    getFirstWeekDate: getFirstWeekDate,\r\n    normalizeDateByWeek: normalizeDateByWeek,\r\n    getQuarter: getQuarter,\r\n    getFirstQuarterMonth: getFirstQuarterMonth,\r\n    dateInRange: dateInRange,\r\n    roundToHour: roundToHour,\r\n    normalizeDate: normalizeDate,\r\n    getViewMinBoundaryDate: getViewMinBoundaryDate,\r\n    getViewMaxBoundaryDate: getViewMaxBoundaryDate,\r\n    fixTimezoneGap: fixTimezoneGap,\r\n    getTimezonesDifference: getTimezonesDifference,\r\n    makeDate: makeDate,\r\n    getDatesInterval: getDatesInterval,\r\n    getDatesOfInterval: getDatesOfInterval\r\n};\r\nmodule.exports = dateUtils;\r\n\n\n/***/ }),\n\n/***/ 738:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (core/utils/date_serialization.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar config = __webpack_require__(23),\r\n    getLDMLFormatter = __webpack_require__(765).getFormatter,\r\n    defaultDateNames = __webpack_require__(766),\r\n    typeUtils = __webpack_require__(4),\r\n    isString = typeUtils.isString,\r\n    isDate = typeUtils.isDate,\r\n    isNumber = typeUtils.isNumeric;\r\nvar NUMBER_SERIALIZATION_FORMAT = \"number\",\r\n    DATE_SERIALIZATION_FORMAT = \"yyyy/MM/dd\",\r\n    DATETIME_SERIALIZATION_FORMAT = \"yyyy/MM/dd HH:mm:ss\";\r\nvar ISO8601_PATTERN = /^(\\d{4,})(-)?(\\d{2})(-)?(\\d{2})(?:T(\\d{2})(:)?(\\d{2})?(:)?(\\d{2}(?:\\.(\\d{1,3})\\d*)?)?)?(Z|([\\+\\-])(\\d{2})(:)?(\\d{2})?)?$/;\r\nvar ISO8601_TIME_PATTERN = /^(\\d{2}):(\\d{2})(:(\\d{2}))?$/;\r\nvar ISO8601_PATTERN_PARTS = [\"\", \"yyyy\", \"\", \"MM\", \"\", \"dd\", \"THH\", \"\", \"mm\", \"\", \"ss\", \".SSS\"];\r\nvar MILLISECOND_LENGHT = 3;\r\nvar dateParser = function(text, skipISO8601Parsing) {\r\n    var result;\r\n    var parsedValue;\r\n    if (isString(text) && !skipISO8601Parsing) {\r\n        result = parseISO8601String(text)\r\n    }\r\n    if (!result) {\r\n        parsedValue = !isDate(text) && Date.parse(text);\r\n        result = isNumber(parsedValue) ? new Date(parsedValue) : text\r\n    }\r\n    return result\r\n};\r\nvar parseISO8601String = function(text) {\r\n    var parts = text.match(ISO8601_PATTERN);\r\n    var timePart = function(part) {\r\n        return +part || 0\r\n    };\r\n    if (!parts) {\r\n        parts = text.match(ISO8601_TIME_PATTERN);\r\n        if (parts) {\r\n            return new Date(0, 0, 0, timePart(parts[1]), timePart(parts[2]), timePart(parts[4]))\r\n        }\r\n        return\r\n    }\r\n    var year = parts[1],\r\n        month = --parts[3],\r\n        day = parts[5],\r\n        timeZoneHour = 0,\r\n        timeZoneMinute = 0;\r\n    timeZoneHour = timePart(parts[14]);\r\n    timeZoneMinute = timePart(parts[16]);\r\n    if (\"-\" === parts[13]) {\r\n        timeZoneHour = -timeZoneHour;\r\n        timeZoneMinute = -timeZoneMinute\r\n    }\r\n    var hour = timePart(parts[6]) - timeZoneHour,\r\n        minute = timePart(parts[8]) - timeZoneMinute,\r\n        second = timePart(parts[10]),\r\n        parseMilliseconds = function(part) {\r\n            part = part || \"\";\r\n            return timePart(part) * Math.pow(10, MILLISECOND_LENGHT - part.length)\r\n        },\r\n        millisecond = parseMilliseconds(parts[11]);\r\n    if (!!parts[12]) {\r\n        return new Date(Date.UTC(year, month, day, hour, minute, second, millisecond))\r\n    }\r\n    return new Date(year, month, day, hour, minute, second, millisecond)\r\n};\r\nvar getIso8601Format = function(text, useUtc) {\r\n    var parts = text.match(ISO8601_PATTERN),\r\n        result = \"\";\r\n    if (!parts) {\r\n        parts = text.match(ISO8601_TIME_PATTERN);\r\n        if (parts) {\r\n            return parts[3] ? \"HH:mm:ss\" : \"HH:mm\"\r\n        }\r\n        return\r\n    }\r\n    for (var i = 1; i < ISO8601_PATTERN_PARTS.length; i++) {\r\n        if (parts[i]) {\r\n            result += ISO8601_PATTERN_PARTS[i] || parts[i]\r\n        }\r\n    }\r\n    if (\"Z\" === parts[12]) {\r\n        result += \"'Z'\"\r\n    }\r\n    if (parts[14]) {\r\n        if (parts[15]) {\r\n            result += \"xxx\"\r\n        } else {\r\n            if (parts[16]) {\r\n                result += \"xx\"\r\n            } else {\r\n                result += \"x\"\r\n            }\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar deserializeDate = function(value) {\r\n    if (\"number\" === typeof value) {\r\n        return new Date(value)\r\n    }\r\n    return dateParser(value, !config().forceIsoDateParsing)\r\n};\r\nvar serializeDate = function(value, serializationFormat) {\r\n    if (!serializationFormat) {\r\n        return value\r\n    }\r\n    if (!isDate(value)) {\r\n        return null\r\n    }\r\n    if (serializationFormat === NUMBER_SERIALIZATION_FORMAT) {\r\n        return value && value.valueOf ? value.valueOf() : null\r\n    }\r\n    return getLDMLFormatter(serializationFormat, defaultDateNames)(value)\r\n};\r\nvar getDateSerializationFormat = function(value) {\r\n    if (\"number\" === typeof value) {\r\n        return NUMBER_SERIALIZATION_FORMAT\r\n    } else {\r\n        if (isString(value)) {\r\n            var format;\r\n            if (config().forceIsoDateParsing) {\r\n                format = getIso8601Format(value)\r\n            }\r\n            if (format) {\r\n                return format\r\n            } else {\r\n                if (value.indexOf(\":\") >= 0) {\r\n                    return DATETIME_SERIALIZATION_FORMAT\r\n                } else {\r\n                    return DATE_SERIALIZATION_FORMAT\r\n                }\r\n            }\r\n        } else {\r\n            if (value) {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n};\r\nmodule.exports = {\r\n    dateParser: dateParser,\r\n    deserializeDate: deserializeDate,\r\n    serializeDate: serializeDate,\r\n    getDateSerializationFormat: getDateSerializationFormat\r\n};\r\n\n\n/***/ }),\n\n/***/ 742:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_editor.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    AsyncTemplateMixin = __webpack_require__(748),\r\n    eventsEngine = __webpack_require__(7),\r\n    Guid = __webpack_require__(77),\r\n    registerComponent = __webpack_require__(16),\r\n    commonUtils = __webpack_require__(6),\r\n    domUtils = __webpack_require__(13),\r\n    focused = __webpack_require__(52).focused,\r\n    each = __webpack_require__(5).each,\r\n    isDefined = __webpack_require__(4).isDefined,\r\n    extend = __webpack_require__(3).extend,\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    errors = __webpack_require__(35),\r\n    positionUtils = __webpack_require__(138),\r\n    getDefaultAlignment = __webpack_require__(338).getDefaultAlignment,\r\n    messageLocalization = __webpack_require__(24),\r\n    Button = __webpack_require__(42),\r\n    eventUtils = __webpack_require__(8),\r\n    TextBox = __webpack_require__(337),\r\n    clickEvent = __webpack_require__(25),\r\n    FunctionTemplate = __webpack_require__(201),\r\n    Popup = __webpack_require__(139);\r\nvar DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\",\r\n    DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS = \"dx-dropdowneditor-input-wrapper\",\r\n    DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\",\r\n    DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\",\r\n    DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\",\r\n    DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\",\r\n    DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\",\r\n    DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\",\r\n    DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\r\nvar DropDownEditor = TextBox.inherit({\r\n    _supportedKeys: function() {\r\n        var homeEndHandler = function(e) {\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        return extend({}, this.callBase(), {\r\n            tab: function(e) {\r\n                if (!this.option(\"opened\")) {\r\n                    return\r\n                }\r\n                if (\"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this.close();\r\n                    return\r\n                }\r\n                var $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\r\n                $focusableElement && eventsEngine.trigger($focusableElement, \"focus\");\r\n                e.preventDefault()\r\n            },\r\n            escape: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault()\r\n                }\r\n                this.close()\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this.close();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this._validatedOpening();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            enter: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._valueChangeEventHandler(e)\r\n                }\r\n                return true\r\n            },\r\n            home: homeEndHandler,\r\n            end: homeEndHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            onOpened: null,\r\n            onClosed: null,\r\n            opened: false,\r\n            acceptCustomValue: true,\r\n            applyValueMode: \"instantly\",\r\n            deferRendering: true,\r\n            activeStateEnabled: true,\r\n            dropDownButtonTemplate: \"dropDownButton\",\r\n            fieldTemplate: null,\r\n            contentTemplate: null,\r\n            openOnFieldClick: false,\r\n            showDropDownButton: true,\r\n            popupPosition: this._getDefaultPopupPosition(),\r\n            onPopupInitialized: null,\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            cancelButtonText: messageLocalization.format(\"Cancel\"),\r\n            buttonsLocation: \"default\",\r\n            showPopupTitle: false\r\n        })\r\n    },\r\n    _getDefaultPopupPosition: function() {\r\n        var position = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        return {\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            },\r\n            my: position + \" top\",\r\n            at: position + \" bottom\",\r\n            collision: \"flip flip\"\r\n        }\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                var isGeneric = \"generic\" === _device.platform,\r\n                    isWin10 = \"win\" === _device.platform && _device.version && 10 === _device.version[0];\r\n                return isGeneric || isWin10\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element().find(\".\" + DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initVisibilityActions();\r\n        this._initPopupInitializedAction()\r\n    },\r\n    _initVisibilityActions: function() {\r\n        this._openAction = this._createActionByOption(\"onOpened\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._closeAction = this._createActionByOption(\"onClosed\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initPopupInitializedAction: function() {\r\n        this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\", \"designMode\"]\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_EDITOR_CLASS);\r\n        this.setAria(\"role\", \"combobox\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderOpenHandler();\r\n        this._renderOpenedState()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._createPopup()\r\n        }\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this.$element().wrapInner($(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS));\r\n        this._$container = this.$element().children().eq(0);\r\n        this.setAria({\r\n            haspopup: \"true\",\r\n            autocomplete: \"list\"\r\n        })\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _cleanFocusState: function() {\r\n        this.callBase();\r\n        if (this.option(\"fieldTemplate\")) {\r\n            eventsEngine.off(this._input(), \"focusin focusout beforeactivate\")\r\n        }\r\n    },\r\n    _renderField: function() {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            return\r\n        }\r\n        this._renderTemplatedField(fieldTemplate, this._fieldRenderData())\r\n    },\r\n    _renderTemplatedField: function(fieldTemplate, data) {\r\n        var _this = this;\r\n        var isFocused = focused(this._input());\r\n        this._resetFocus(isFocused);\r\n        var $container = this._$container;\r\n        $container.empty();\r\n        this._$dropDownButton = null;\r\n        this._$clearButton = null;\r\n        fieldTemplate.render({\r\n            model: data,\r\n            container: domUtils.getPublicElement($container),\r\n            onRendered: function() {\r\n                if (!_this._input().length) {\r\n                    throw errors.Error(\"E1010\")\r\n                }\r\n                _this._refreshEvents();\r\n                _this._refreshValueChangeEvent();\r\n                _this._renderFocusState();\r\n                isFocused && eventsEngine.trigger(_this._input(), \"focus\")\r\n            }\r\n        })\r\n    },\r\n    _resetFocus: function(isFocused) {\r\n        this._cleanFocusState();\r\n        isFocused && eventsEngine.trigger(this._input(), \"focusout\")\r\n    },\r\n    _fieldRenderData: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _renderInputAddons: function() {\r\n        this._renderField();\r\n        this.callBase();\r\n        this._renderDropDownButton()\r\n    },\r\n    _renderDropDownButton: function() {\r\n        if (this._$dropDownButton) {\r\n            this._$dropDownButton.remove();\r\n            this._$dropDownButton = null\r\n        }\r\n        var showDropDownButton = this.option(\"showDropDownButton\");\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, showDropDownButton);\r\n        if (!showDropDownButton) {\r\n            return\r\n        }\r\n        this._$dropDownButton = this._createDropDownButton();\r\n        this._attachDropDownButtonClickHandler()\r\n    },\r\n    _attachDropDownButtonClickHandler: function() {\r\n        if (this.option(\"showDropDownButton\") && !this.option(\"openOnFieldClick\")) {\r\n            this._$dropDownButton.dxButton(\"option\", \"onClick\", this._openHandler.bind(this))\r\n        }\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.dropDownButton = new FunctionTemplate(function(options) {\r\n            var $icon = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_ICON);\r\n            $(options.container).append($icon)\r\n        }, this)\r\n    },\r\n    _createDropDownButton: function() {\r\n        var $button = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS).prependTo(this._buttonsContainer());\r\n        this._createComponent($button, Button, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            disabled: this.option(\"readOnly\"),\r\n            useInkRipple: false,\r\n            template: this._getTemplateByOption(\"dropDownButtonTemplate\")\r\n        });\r\n        $button.removeClass(\"dx-button\");\r\n        eventsEngine.on($button, \"mousedown\", function(e) {\r\n            e.preventDefault()\r\n        });\r\n        return $button\r\n    },\r\n    _renderOpenHandler: function() {\r\n        var that = this,\r\n            $inputWrapper = that._inputWrapper(),\r\n            eventName = eventUtils.addNamespace(clickEvent.name, that.NAME),\r\n            openOnFieldClick = that.option(\"openOnFieldClick\");\r\n        eventsEngine.off($inputWrapper, eventName);\r\n        eventsEngine.on($inputWrapper, eventName, that._getInputClickHandler(openOnFieldClick));\r\n        that.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\r\n        if (openOnFieldClick) {\r\n            that._openOnFieldClickAction = that._createAction(that._openHandler.bind(that))\r\n        }\r\n    },\r\n    _getInputClickHandler: function(openOnFieldClick) {\r\n        var that = this;\r\n        return openOnFieldClick ? function(e) {\r\n            that._executeOpenAction(e)\r\n        } : function(e) {\r\n            that._focusInput()\r\n        }\r\n    },\r\n    _openHandler: function() {\r\n        this._toggleOpenState()\r\n    },\r\n    _executeOpenAction: function(e) {\r\n        this._openOnFieldClickAction({\r\n            event: e\r\n        })\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusInput: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"focusStateEnabled\") && !focused(this._input())) {\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        }\r\n        return true\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (!this._focusInput()) {\r\n            return\r\n        }\r\n        if (!this.option(\"readOnly\")) {\r\n            isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n            this.option(\"opened\", isVisible)\r\n        }\r\n    },\r\n    _renderOpenedState: function() {\r\n        var opened = this.option(\"opened\");\r\n        if (opened) {\r\n            this._createPopup()\r\n        }\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\r\n        this._setPopupOption(\"visible\", opened);\r\n        this.setAria({\r\n            expanded: opened,\r\n            owns: (opened || void 0) && this._popupContentId\r\n        })\r\n    },\r\n    _createPopup: function() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        this._$popup = $(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).addClass(this.option(\"customOverlayCssClass\")).appendTo(this.$element());\r\n        this._renderPopup();\r\n        this._renderPopupContent()\r\n    },\r\n    _renderPopup: function() {\r\n        this._popup = this._createComponent(this._$popup, Popup, this._popupConfig());\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this)\r\n        });\r\n        this._popup.option(\"onContentReady\", this._contentReadyHandler.bind(this));\r\n        this._contentReadyHandler();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, this._popup.$content())\r\n    },\r\n    _contentReadyHandler: commonUtils.noop,\r\n    _popupConfig: function() {\r\n        return {\r\n            onInitialized: this._popupInitializedHandler(),\r\n            position: extend(this.option(\"popupPosition\"), { of: this.$element()\r\n            }),\r\n            showTitle: this.option(\"showPopupTitle\"),\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            shading: false,\r\n            closeOnTargetScroll: true,\r\n            closeOnOutsideClick: this._closeOutsideDropDownHandler.bind(this),\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            deferRendering: false,\r\n            focusStateEnabled: false,\r\n            showCloseButton: false,\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            onPositioned: this._popupPositionedHandler.bind(this),\r\n            fullScreen: false\r\n        }\r\n    },\r\n    _popupInitializedHandler: function() {\r\n        if (!this.option(\"onPopupInitialized\")) {\r\n            return\r\n        }\r\n        return function(e) {\r\n            this._popupInitializedAction({\r\n                popup: e.component\r\n            })\r\n        }.bind(this)\r\n    },\r\n    _popupPositionedHandler: function(e) {\r\n        e.position && this._popup.overlayContent().toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, e.position.v.flip)\r\n    },\r\n    _popupShowingHandler: commonUtils.noop,\r\n    _popupHidingHandler: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    _popupShownHandler: function() {\r\n        this._openAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this._closeAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _getValidationMessagePosition: function() {\r\n        var positionRequest = \"below\";\r\n        if (this._popup && this._popup.option(\"visible\")) {\r\n            var myTop = positionUtils.setup(this.$element()).top,\r\n                popupTop = positionUtils.setup(this._popup.$content()).top;\r\n            positionRequest = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"below\" : \"above\"\r\n        }\r\n        return this.callBase(positionRequest)\r\n    },\r\n    _renderPopupContent: function() {\r\n        var contentTemplate = this._getTemplateByOption(\"contentTemplate\");\r\n        if (!(contentTemplate && this.option(\"contentTemplate\"))) {\r\n            return\r\n        }\r\n        var $popupContent = this._popup.$content(),\r\n            templateData = {\r\n                value: this._fieldRenderData(),\r\n                component: this\r\n            };\r\n        $popupContent.empty();\r\n        contentTemplate.render({\r\n            container: domUtils.getPublicElement($popupContent),\r\n            model: templateData\r\n        })\r\n    },\r\n    _closeOutsideDropDownHandler: function(e) {\r\n        var $target = $(e.target);\r\n        var isInputClicked = !!$target.closest(this.$element()).length;\r\n        var isDropDownButtonClicked = !!$target.closest(this._$dropDownButton).length;\r\n        var isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\r\n        return isOutsideClick\r\n    },\r\n    _clean: function() {\r\n        delete this._$dropDownButton;\r\n        delete this._openOnFieldClickAction;\r\n        if (this._$popup) {\r\n            this._$popup.remove();\r\n            delete this._$popup;\r\n            delete this._popup\r\n        }\r\n        this.callBase()\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _validatedOpening: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._toggleOpenState(true)\r\n        }\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        return \"useButtons\" === this.option(\"applyValueMode\") ? this._popupToolbarItemsConfig() : []\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-done.dx-button\")\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-cancel.dx-button\")\r\n    },\r\n    _popupElementTabHandler: function(e) {\r\n        var $element = $(e.currentTarget);\r\n        if (e.shiftKey && $element.is(this._getFirstPopupElement()) || !e.shiftKey && $element.is(this._getLastPopupElement())) {\r\n            eventsEngine.trigger(this._input(), \"focus\");\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _popupElementEscHandler: function() {\r\n        eventsEngine.trigger(this._input(), \"focus\");\r\n        this.close()\r\n    },\r\n    _popupButtonInitializedHandler: function(e) {\r\n        e.component.registerKeyHandler(\"tab\", this._popupElementTabHandler.bind(this));\r\n        e.component.registerKeyHandler(\"escape\", this._popupElementEscHandler.bind(this))\r\n    },\r\n    _popupToolbarItemsConfig: function() {\r\n        var buttonsConfig = [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }, {\r\n            shortcut: \"cancel\",\r\n            options: {\r\n                onClick: this._cancelButtonHandler.bind(this),\r\n                text: this.option(\"cancelButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }];\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    },\r\n    _applyButtonsLocation: function(buttonsConfig) {\r\n        var buttonsLocation = this.option(\"buttonsLocation\"),\r\n            resultConfig = buttonsConfig;\r\n        if (\"default\" !== buttonsLocation) {\r\n            var position = commonUtils.splitPair(buttonsLocation);\r\n            each(resultConfig, function(_, element) {\r\n                extend(element, {\r\n                    toolbar: position[0],\r\n                    location: position[1]\r\n                })\r\n            })\r\n        }\r\n        return resultConfig\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this.callBase();\r\n        this._$dropDownButton && this._$dropDownButton.dxButton(\"option\", \"disabled\", this.option(\"readOnly\"))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"opened\":\r\n                this._renderOpenedState();\r\n                break;\r\n            case \"onOpened\":\r\n            case \"onClosed\":\r\n                this._initVisibilityActions();\r\n                break;\r\n            case \"onPopupInitialized\":\r\n                this._initPopupInitializedAction();\r\n                break;\r\n            case \"fieldTemplate\":\r\n                if (isDefined(args.value)) {\r\n                    this._renderInputAddons()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"showDropDownButton\":\r\n            case \"contentTemplate\":\r\n            case \"acceptCustomValue\":\r\n            case \"openOnFieldClick\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dropDownButtonTemplate\":\r\n                this._renderDropDownButton();\r\n                break;\r\n            case \"popupPosition\":\r\n            case \"deferRendering\":\r\n                break;\r\n            case \"applyValueMode\":\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n            case \"buttonsLocation\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"showPopupTitle\":\r\n                this._setPopupOption(\"showTitle\", args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    open: function() {\r\n        this.option(\"opened\", true)\r\n    },\r\n    close: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    field: function() {\r\n        return getPublicElement(this._input())\r\n    },\r\n    content: function() {\r\n        return this._popup ? this._popup.content() : null\r\n    }\r\n}).include(AsyncTemplateMixin);\r\nregisterComponent(\"dxDropDownEditor\", DropDownEditor);\r\nmodule.exports = DropDownEditor;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 743:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    noop = __webpack_require__(6).noop,\r\n    Class = __webpack_require__(12),\r\n    dateLocalization = __webpack_require__(732);\r\nvar abstract = Class.abstract;\r\nvar DateBoxStrategy = Class.inherit({\r\n    ctor: function(dateBox) {\r\n        this.dateBox = dateBox\r\n    },\r\n    widgetOption: function() {\r\n        return this._widget && this._widget.option.apply(this._widget, arguments)\r\n    },\r\n    _renderWidget: function(element) {\r\n        element = element || $(\"<div>\");\r\n        this._widget = this._createWidget(element);\r\n        this._widget.$element().appendTo(this._getWidgetContainer())\r\n    },\r\n    _createWidget: function(element) {\r\n        var widgetName = this._getWidgetName();\r\n        var widgetOptions = this._getWidgetOptions();\r\n        return this.dateBox._createComponent(element, widgetName, widgetOptions)\r\n    },\r\n    _getWidgetOptions: abstract,\r\n    _getWidgetName: abstract,\r\n    getDefaultOptions: function() {\r\n        return {\r\n            mode: \"text\"\r\n        }\r\n    },\r\n    getDisplayFormat: abstract,\r\n    supportedKeys: noop,\r\n    attachKeyboardEvents: function(keyboardProcessor) {\r\n        this._widgetKeyboardProcessor = keyboardProcessor.attachChildProcessor()\r\n    },\r\n    getParsedText: function(text, format) {\r\n        var value = dateLocalization.parse(text, format);\r\n        return value ? value : dateLocalization.parse(text)\r\n    },\r\n    renderInputMinMax: noop,\r\n    renderOpenedState: function() {\r\n        this._updateValue()\r\n    },\r\n    popupConfig: abstract,\r\n    renderPopupContent: function() {\r\n        var popup = this._getPopup();\r\n        this._renderWidget();\r\n        var $popupContent = popup.$content().parent();\r\n        eventsEngine.off($popupContent, \"mousedown\");\r\n        eventsEngine.on($popupContent, \"mousedown\", this._preventFocusOnPopup.bind(this))\r\n    },\r\n    getFirstPopupElement: noop,\r\n    getLastPopupElement: noop,\r\n    _preventFocusOnPopup: function(e) {\r\n        e.preventDefault()\r\n    },\r\n    _getWidgetContainer: function() {\r\n        return this._getPopup().$content()\r\n    },\r\n    _getPopup: function() {\r\n        return this.dateBox._popup\r\n    },\r\n    popupShowingHandler: noop,\r\n    popupHiddenHandler: noop,\r\n    _updateValue: function() {\r\n        this._widget && this._widget.option(\"value\", this.dateBoxValue())\r\n    },\r\n    _valueChangedHandler: function(args) {\r\n        if (this.dateBox.option(\"opened\") && \"instantly\" === this.dateBox.option(\"applyValueMode\")) {\r\n            this.dateBoxValue(args.value)\r\n        }\r\n    },\r\n    useCurrentDateByDefault: noop,\r\n    textChangedHandler: noop,\r\n    renderValue: function() {\r\n        if (this.dateBox.option(\"opened\")) {\r\n            this._updateValue()\r\n        }\r\n    },\r\n    getValue: function() {\r\n        return this._widget.option(\"value\")\r\n    },\r\n    isAdaptivityChanged: function() {\r\n        return false\r\n    },\r\n    dispose: function() {\r\n        var popup = this._getPopup();\r\n        if (popup) {\r\n            popup.$content().empty()\r\n        }\r\n    },\r\n    dateBoxValue: function() {\r\n        if (arguments.length) {\r\n            return this.dateBox.dateValue.apply(this.dateBox, arguments)\r\n        } else {\r\n            return this.dateBox.dateOption.apply(this.dateBox, [\"value\"])\r\n        }\r\n    }\r\n});\r\nmodule.exports = DateBoxStrategy;\r\n\n\n/***/ }),\n\n/***/ 745:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(753);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 748:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/shared/async_template_mixin.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = {\r\n    _waitAsyncTemplates: function(callback) {\r\n        if (this._options.templatesRenderAsynchronously) {\r\n            this._asyncTemplatesTimers = this._asyncTemplatesTimers || [];\r\n            var timer = setTimeout(function() {\r\n                callback.call(this);\r\n                clearTimeout(timer)\r\n            }.bind(this));\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback.call(this)\r\n        }\r\n    },\r\n    _cleanAsyncTemplatesTimer: function() {\r\n        var timers = this._asyncTemplatesTimers || [];\r\n        for (var i = 0; i < timers.length; i++) {\r\n            clearTimeout(timers[i])\r\n        }\r\n        delete this._asyncTemplatesTimers\r\n    }\r\n};\r\n\n\n/***/ }),\n\n/***/ 749:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/editor/ui.data_expression.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = __webpack_require__(1),\r\n    variableWrapper = __webpack_require__(200),\r\n    dataCoreUtils = __webpack_require__(27),\r\n    commonUtils = __webpack_require__(6),\r\n    typeUtils = __webpack_require__(4),\r\n    extend = __webpack_require__(3).extend,\r\n    FunctionTemplate = __webpack_require__(201),\r\n    DataHelperMixin = __webpack_require__(204),\r\n    DataSourceModule = __webpack_require__(101),\r\n    ArrayStore = __webpack_require__(103),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar DataExpressionMixin = extend(DataHelperMixin, {\r\n    _dataExpressionDefaultOptions: function() {\r\n        return {\r\n            items: [],\r\n            dataSource: null,\r\n            itemTemplate: \"item\",\r\n            value: null,\r\n            valueExpr: \"this\",\r\n            displayExpr: void 0\r\n        }\r\n    },\r\n    _initDataExpressions: function() {\r\n        this._compileValueGetter();\r\n        this._compileDisplayGetter();\r\n        this._initDynamicTemplates();\r\n        this._initDataSource();\r\n        this._itemsToDataSource()\r\n    },\r\n    _itemsToDataSource: function() {\r\n        if (!this.option(\"dataSource\")) {\r\n            this._dataSource = new DataSourceModule.DataSource({\r\n                store: new ArrayStore(this.option(\"items\")),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _compileDisplayGetter: function() {\r\n        this._displayGetter = dataCoreUtils.compileGetter(this._displayGetterExpr())\r\n    },\r\n    _displayGetterExpr: function() {\r\n        return this.option(\"displayExpr\")\r\n    },\r\n    _compileValueGetter: function() {\r\n        this._valueGetter = dataCoreUtils.compileGetter(this._valueGetterExpr())\r\n    },\r\n    _valueGetterExpr: function() {\r\n        return this.option(\"valueExpr\") || \"this\"\r\n    },\r\n    _loadValue: function(value) {\r\n        var deferred = new Deferred;\r\n        value = this._unwrappedValue(value);\r\n        if (!typeUtils.isDefined(value)) {\r\n            return deferred.reject().promise()\r\n        }\r\n        this._loadSingle(this._valueGetterExpr(), value).done(function(item) {\r\n            this._isValueEquals(this._valueGetter(item), value) ? deferred.resolve(item) : deferred.reject()\r\n        }.bind(this)).fail(function() {\r\n            deferred.reject()\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    _getCurrentValue: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _unwrappedValue: function(value) {\r\n        value = typeUtils.isDefined(value) ? value : this._getCurrentValue();\r\n        if (value && this._dataSource && \"this\" === this._valueGetterExpr()) {\r\n            value = this._getItemKey(value)\r\n        }\r\n        return variableWrapper.unwrap(value)\r\n    },\r\n    _getItemKey: function(value) {\r\n        var key = this._dataSource.key();\r\n        if (Array.isArray(key)) {\r\n            var result = {};\r\n            for (var i = 0, n = key.length; i < n; i++) {\r\n                result[key[i]] = value[key[i]]\r\n            }\r\n            return result\r\n        }\r\n        if (key && \"object\" === (\"undefined\" === typeof value ? \"undefined\" : _typeof(value))) {\r\n            value = value[key]\r\n        }\r\n        return value\r\n    },\r\n    _isValueEquals: function(value1, value2) {\r\n        var dataSourceKey = this._dataSource && this._dataSource.key();\r\n        var isDefined = typeUtils.isDefined;\r\n        var result = this._compareValues(value1, value2);\r\n        if (!result && dataSourceKey && isDefined(value1) && isDefined(value2)) {\r\n            if (Array.isArray(dataSourceKey)) {\r\n                result = this._compareByCompositeKey(value1, value2, dataSourceKey)\r\n            } else {\r\n                result = this._compareByKey(value1, value2, dataSourceKey)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _compareByCompositeKey: function(value1, value2, key) {\r\n        var isObject = typeUtils.isObject;\r\n        if (!isObject(value1) || !isObject(value2)) {\r\n            return false\r\n        }\r\n        for (var i = 0, n = key.length; i < n; i++) {\r\n            if (value1[key[i]] !== value2[key[i]]) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _compareByKey: function(value1, value2, key) {\r\n        var ensureDefined = commonUtils.ensureDefined;\r\n        var unwrapObservable = variableWrapper.unwrap;\r\n        var valueKey1 = ensureDefined(unwrapObservable(value1[key]), value1);\r\n        var valueKey2 = ensureDefined(unwrapObservable(value2[key]), value2);\r\n        return this._compareValues(valueKey1, valueKey2)\r\n    },\r\n    _compareValues: function(value1, value2) {\r\n        return dataCoreUtils.toComparable(value1, true) === dataCoreUtils.toComparable(value2, true)\r\n    },\r\n    _initDynamicTemplates: function() {\r\n        if (this._displayGetterExpr()) {\r\n            this._originalItemTemplate = this._defaultTemplates.item;\r\n            this._defaultTemplates.item = new FunctionTemplate(function(options) {\r\n                return $(\"<div>\").text(this._displayGetter(options.model)).html()\r\n            }.bind(this))\r\n        } else {\r\n            if (this._originalItemTemplate) {\r\n                this._defaultTemplates.item = this._originalItemTemplate\r\n            }\r\n        }\r\n    },\r\n    _setCollectionWidgetItemTemplate: function() {\r\n        this._initDynamicTemplates();\r\n        this._setCollectionWidgetOption(\"itemTemplate\", this._getTemplateByOption(\"itemTemplate\"))\r\n    },\r\n    _dataExpressionOptionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"items\":\r\n                this._itemsToDataSource();\r\n                this._setCollectionWidgetOption(\"items\");\r\n                break;\r\n            case \"dataSource\":\r\n                this._initDataSource();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._setCollectionWidgetItemTemplate();\r\n                break;\r\n            case \"valueExpr\":\r\n                this._compileValueGetter();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setCollectionWidgetItemTemplate()\r\n        }\r\n    }\r\n});\r\nmodule.exports = DataExpressionMixin;\r\n\n\n/***/ }),\n\n/***/ 750:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    Class = __webpack_require__(12),\r\n    registerComponent = __webpack_require__(16),\r\n    extend = __webpack_require__(3).extend,\r\n    noop = __webpack_require__(6).noop,\r\n    windowUtils = __webpack_require__(9),\r\n    inflector = __webpack_require__(79),\r\n    isDefined = __webpack_require__(4).isDefined,\r\n    styleUtils = __webpack_require__(142),\r\n    each = __webpack_require__(5).each,\r\n    browser = __webpack_require__(78),\r\n    CollectionWidgetItem = __webpack_require__(205),\r\n    devices = __webpack_require__(14),\r\n    CollectionWidget = __webpack_require__(102);\r\nvar BOX_CLASS = \"dx-box\",\r\n    BOX_SELECTOR = \".dx-box\",\r\n    BOX_ITEM_CLASS = \"dx-box-item\",\r\n    BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\r\nvar MINSIZE_MAP = {\r\n    row: \"minWidth\",\r\n    col: \"minHeight\"\r\n};\r\nvar MAXSIZE_MAP = {\r\n    row: \"maxWidth\",\r\n    col: \"maxHeight\"\r\n};\r\nvar SHRINK = 1;\r\nvar FLEX_JUSTIFY_CONTENT_MAP = {\r\n    start: \"flex-start\",\r\n    end: \"flex-end\",\r\n    center: \"center\",\r\n    \"space-between\": \"space-between\",\r\n    \"space-around\": \"space-around\"\r\n};\r\nvar FLEX_ALIGN_ITEMS_MAP = {\r\n    start: \"flex-start\",\r\n    end: \"flex-end\",\r\n    center: \"center\",\r\n    stretch: \"stretch\"\r\n};\r\nvar FLEX_DIRECTION_MAP = {\r\n    row: \"row\",\r\n    col: \"column\"\r\n};\r\nvar BoxItem = CollectionWidgetItem.inherit({\r\n    _renderVisible: function(value, oldValue) {\r\n        this.callBase(value);\r\n        if (isDefined(oldValue)) {\r\n            this._options.fireItemStateChangedAction({\r\n                name: \"visible\",\r\n                state: value,\r\n                oldState: oldValue\r\n            })\r\n        }\r\n    }\r\n});\r\nvar setFlexProp = function(element, prop, value) {\r\n    value = styleUtils.normalizeStyleProp(prop, value);\r\n    element.style[styleUtils.styleProp(prop)] = value;\r\n    if (!windowUtils.hasWindow()) {\r\n        if (\"\" === value || !isDefined(value)) {\r\n            return\r\n        }\r\n        var cssName = inflector.dasherize(prop);\r\n        var styleExpr = cssName + \": \" + value + \";\";\r\n        if (!element.attributes.style) {\r\n            element.setAttribute(\"style\", styleExpr)\r\n        } else {\r\n            if (element.attributes.style.value.indexOf(styleExpr) < 0) {\r\n                element.attributes.style.value += \" \" + styleExpr\r\n            }\r\n        }\r\n    }\r\n};\r\nvar FlexLayoutStrategy = Class.inherit({\r\n    ctor: function($element, option) {\r\n        this._$element = $element;\r\n        this._option = option\r\n    },\r\n    renderBox: function() {\r\n        this._$element.css({\r\n            display: styleUtils.stylePropPrefix(\"flexDirection\") + \"flex\"\r\n        });\r\n        setFlexProp(this._$element.get(0), \"flexDirection\", FLEX_DIRECTION_MAP[this._option(\"direction\")])\r\n    },\r\n    renderAlign: function() {\r\n        this._$element.css({\r\n            justifyContent: this._normalizedAlign()\r\n        })\r\n    },\r\n    _normalizedAlign: function() {\r\n        var align = this._option(\"align\");\r\n        return align in FLEX_JUSTIFY_CONTENT_MAP ? FLEX_JUSTIFY_CONTENT_MAP[align] : align\r\n    },\r\n    renderCrossAlign: function() {\r\n        this._$element.css({\r\n            alignItems: this._normalizedCrossAlign()\r\n        })\r\n    },\r\n    _normalizedCrossAlign: function() {\r\n        var crossAlign = this._option(\"crossAlign\");\r\n        return crossAlign in FLEX_ALIGN_ITEMS_MAP ? FLEX_ALIGN_ITEMS_MAP[crossAlign] : crossAlign\r\n    },\r\n    renderItems: function($items) {\r\n        var flexPropPrefix = styleUtils.stylePropPrefix(\"flexDirection\");\r\n        var direction = this._option(\"direction\");\r\n        each($items, function() {\r\n            var $item = $(this);\r\n            var item = $item.data(BOX_ITEM_DATA_KEY);\r\n            $item.css({\r\n                display: flexPropPrefix + \"flex\"\r\n            }).css(MAXSIZE_MAP[direction], item.maxSize || \"none\").css(MINSIZE_MAP[direction], item.minSize || \"0\");\r\n            setFlexProp($item.get(0), \"flexBasis\", item.baseSize || 0);\r\n            setFlexProp($item.get(0), \"flexGrow\", item.ratio);\r\n            setFlexProp($item.get(0), \"flexShrink\", isDefined(item.shrink) ? item.shrink : SHRINK);\r\n            $item.children().each(function(_, itemContent) {\r\n                $(itemContent).css({\r\n                    width: \"auto\",\r\n                    height: \"auto\",\r\n                    display: styleUtils.stylePropPrefix(\"flexDirection\") + \"flex\",\r\n                    flexBasis: 0\r\n                });\r\n                setFlexProp(itemContent, \"flexGrow\", 1);\r\n                setFlexProp(itemContent, \"flexDirection\", $(itemContent)[0].style.flexDirection || \"column\")\r\n            })\r\n        })\r\n    },\r\n    initSize: noop,\r\n    update: noop\r\n});\r\nvar BOX_EVENTNAMESPACE = \"dxBox\",\r\n    UPDATE_EVENT = \"dxupdate.\" + BOX_EVENTNAMESPACE,\r\n    FALLBACK_BOX_ITEM = \"dx-box-fallback-item\";\r\nvar FALLBACK_WRAP_MAP = {\r\n    row: \"nowrap\",\r\n    col: \"normal\"\r\n};\r\nvar FALLBACK_MAIN_SIZE_MAP = {\r\n    row: \"width\",\r\n    col: \"height\"\r\n};\r\nvar FALLBACK_CROSS_SIZE_MAP = {\r\n    row: \"height\",\r\n    col: \"width\"\r\n};\r\nvar FALLBACK_PRE_MARGIN_MAP = {\r\n    row: \"marginLeft\",\r\n    col: \"marginTop\"\r\n};\r\nvar FALLBACK_POST_MARGIN_MAP = {\r\n    row: \"marginRight\",\r\n    col: \"marginBottom\"\r\n};\r\nvar FALLBACK_CROSS_PRE_MARGIN_MAP = {\r\n    row: \"marginTop\",\r\n    col: \"marginLeft\"\r\n};\r\nvar FALLBACK_CROSS_POST_MARGIN_MAP = {\r\n    row: \"marginBottom\",\r\n    col: \"marginRight\"\r\n};\r\nvar MARGINS_RTL_FLIP_MAP = {\r\n    marginLeft: \"marginRight\",\r\n    marginRight: \"marginLeft\"\r\n};\r\nvar FallbackLayoutStrategy = Class.inherit({\r\n    ctor: function($element, option) {\r\n        this._$element = $element;\r\n        this._option = option\r\n    },\r\n    renderBox: function() {\r\n        this._$element.css({\r\n            fontSize: 0,\r\n            whiteSpace: FALLBACK_WRAP_MAP[this._option(\"direction\")],\r\n            verticalAlign: \"top\"\r\n        });\r\n        eventsEngine.off(this._$element, UPDATE_EVENT);\r\n        eventsEngine.on(this._$element, UPDATE_EVENT, this.update.bind(this))\r\n    },\r\n    renderAlign: function() {\r\n        var $items = this._$items;\r\n        if (!$items) {\r\n            return\r\n        }\r\n        var align = this._option(\"align\"),\r\n            shift = 0,\r\n            totalItemSize = this.totalItemSize,\r\n            direction = this._option(\"direction\"),\r\n            boxSize = this._$element[FALLBACK_MAIN_SIZE_MAP[direction]](),\r\n            freeSpace = boxSize - totalItemSize;\r\n        this._setItemsMargins($items, direction, 0);\r\n        switch (align) {\r\n            case \"start\":\r\n                break;\r\n            case \"end\":\r\n                shift = freeSpace;\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift);\r\n                break;\r\n            case \"center\":\r\n                shift = .5 * freeSpace;\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift);\r\n                $items.last().css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), shift);\r\n                break;\r\n            case \"space-between\":\r\n                shift = .5 * freeSpace / ($items.length - 1);\r\n                this._setItemsMargins($items, direction, shift);\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), 0);\r\n                $items.last().css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), 0);\r\n                break;\r\n            case \"space-around\":\r\n                shift = .5 * freeSpace / $items.length;\r\n                this._setItemsMargins($items, direction, shift)\r\n        }\r\n    },\r\n    _setItemsMargins: function($items, direction, shift) {\r\n        $items.css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift).css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), shift)\r\n    },\r\n    renderCrossAlign: function() {\r\n        var $items = this._$items;\r\n        if (!$items) {\r\n            return\r\n        }\r\n        var crossAlign = this._option(\"crossAlign\"),\r\n            direction = this._option(\"direction\"),\r\n            size = this._$element[FALLBACK_CROSS_SIZE_MAP[direction]]();\r\n        var that = this;\r\n        switch (crossAlign) {\r\n            case \"start\":\r\n                break;\r\n            case \"end\":\r\n                each($items, function() {\r\n                    var $item = $(this),\r\n                        itemSize = $item[FALLBACK_CROSS_SIZE_MAP[direction]](),\r\n                        shift = size - itemSize;\r\n                    $item.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), shift)\r\n                });\r\n                break;\r\n            case \"center\":\r\n                each($items, function() {\r\n                    var $item = $(this),\r\n                        itemSize = $item[FALLBACK_CROSS_SIZE_MAP[direction]](),\r\n                        shift = .5 * (size - itemSize);\r\n                    $item.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), shift).css(that._chooseMarginSide(FALLBACK_CROSS_POST_MARGIN_MAP[direction]), shift)\r\n                });\r\n                break;\r\n            case \"stretch\":\r\n                $items.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), 0).css(that._chooseMarginSide(FALLBACK_CROSS_POST_MARGIN_MAP[direction]), 0).css(FALLBACK_CROSS_SIZE_MAP[direction], \"100%\")\r\n        }\r\n    },\r\n    _chooseMarginSide: function(value) {\r\n        if (!this._option(\"rtlEnabled\")) {\r\n            return value\r\n        }\r\n        return MARGINS_RTL_FLIP_MAP[value] || value\r\n    },\r\n    renderItems: function($items) {\r\n        this._$items = $items;\r\n        var direction = this._option(\"direction\"),\r\n            totalRatio = 0,\r\n            totalWeightedShrink = 0,\r\n            totalBaseSize = 0;\r\n        each($items, function(_, item) {\r\n            var $item = $(item);\r\n            $item.css({\r\n                display: \"inline-block\",\r\n                verticalAlign: \"top\"\r\n            });\r\n            $item[FALLBACK_MAIN_SIZE_MAP[direction]](\"auto\");\r\n            $item.removeClass(FALLBACK_BOX_ITEM);\r\n            var itemData = $item.data(BOX_ITEM_DATA_KEY),\r\n                ratio = itemData.ratio || 0,\r\n                size = this._baseSize($item),\r\n                shrink = isDefined(itemData.shrink) ? itemData.shrink : SHRINK;\r\n            totalRatio += ratio;\r\n            totalWeightedShrink += shrink * size;\r\n            totalBaseSize += size\r\n        }.bind(this));\r\n        var freeSpaceSize = this._boxSize() - totalBaseSize;\r\n        var itemSize = function($item) {\r\n            var itemData = $item.data(BOX_ITEM_DATA_KEY),\r\n                size = this._baseSize($item),\r\n                factor = freeSpaceSize >= 0 ? itemData.ratio || 0 : (isDefined(itemData.shrink) ? itemData.shrink : SHRINK) * size,\r\n                totalFactor = freeSpaceSize >= 0 ? totalRatio : totalWeightedShrink,\r\n                shift = totalFactor ? Math.round(freeSpaceSize * factor / totalFactor) : 0;\r\n            return size + shift\r\n        }.bind(this);\r\n        var totalItemSize = 0;\r\n        each($items, function(_, item) {\r\n            var $item = $(item),\r\n                itemData = $(item).data(BOX_ITEM_DATA_KEY),\r\n                size = itemSize($item);\r\n            totalItemSize += size;\r\n            $item.css(MAXSIZE_MAP[direction], itemData.maxSize || \"none\").css(MINSIZE_MAP[direction], itemData.minSize || \"0\").css(FALLBACK_MAIN_SIZE_MAP[direction], size);\r\n            $item.addClass(FALLBACK_BOX_ITEM)\r\n        });\r\n        this.totalItemSize = totalItemSize\r\n    },\r\n    _baseSize: function(item) {\r\n        var itemData = $(item).data(BOX_ITEM_DATA_KEY);\r\n        return null == itemData.baseSize ? 0 : \"auto\" === itemData.baseSize ? this._contentSize(item) : this._parseSize(itemData.baseSize)\r\n    },\r\n    _contentSize: function(item) {\r\n        return $(item)[FALLBACK_MAIN_SIZE_MAP[this._option(\"direction\")]]()\r\n    },\r\n    _parseSize: function(size) {\r\n        return String(size).match(/.+%$/) ? .01 * parseFloat(size) * this._boxSizeValue : size\r\n    },\r\n    _boxSize: function(value) {\r\n        if (!arguments.length) {\r\n            this._boxSizeValue = this._boxSizeValue || this._totalBaseSize();\r\n            return this._boxSizeValue\r\n        }\r\n        this._boxSizeValue = value\r\n    },\r\n    _totalBaseSize: function() {\r\n        var result = 0;\r\n        each(this._$items, function(_, item) {\r\n            result += this._baseSize(item)\r\n        }.bind(this));\r\n        return result\r\n    },\r\n    initSize: function() {\r\n        this._boxSize(this._$element[FALLBACK_MAIN_SIZE_MAP[this._option(\"direction\")]]())\r\n    },\r\n    update: function() {\r\n        if (!this._$items || this._$element.is(\":hidden\")) {\r\n            return\r\n        }\r\n        this._$items.detach();\r\n        this.initSize();\r\n        this._$element.append(this._$items);\r\n        this.renderItems(this._$items);\r\n        this.renderAlign();\r\n        this.renderCrossAlign();\r\n        var element = this._$element.get(0);\r\n        this._$items.find(BOX_SELECTOR).each(function() {\r\n            if (element === $(this).parent().closest(BOX_SELECTOR).get(0)) {\r\n                eventsEngine.triggerHandler(this, UPDATE_EVENT)\r\n            }\r\n        })\r\n    }\r\n});\r\nvar Box = CollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            direction: \"row\",\r\n            align: \"start\",\r\n            crossAlign: \"stretch\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            _layoutStrategy: \"flex\",\r\n            _queue: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function device() {\r\n                var device = devices.real();\r\n                var isOldAndroid = \"android\" === device.platform && (device.version[0] < 4 || 4 === device.version[0] && device.version[1] < 4),\r\n                    isOldIos = \"ios\" === device.platform && device.version[0] < 7;\r\n                return \"win\" === device.platform || browser.msie || isOldAndroid || isOldIos\r\n            },\r\n            options: {\r\n                _layoutStrategy: \"fallback\"\r\n            }\r\n        }])\r\n    },\r\n    _itemClass: function() {\r\n        return BOX_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    },\r\n    _itemElements: function() {\r\n        return this._itemContainer().children(this._itemSelector())\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(BOX_CLASS + \"-\" + this.option(\"_layoutStrategy\"));\r\n        this._initLayout();\r\n        this._initBoxQueue()\r\n    },\r\n    _initLayout: function() {\r\n        this._layout = \"fallback\" === this.option(\"_layoutStrategy\") ? new FallbackLayoutStrategy(this.$element(), this.option.bind(this)) : new FlexLayoutStrategy(this.$element(), this.option.bind(this))\r\n    },\r\n    _initBoxQueue: function() {\r\n        this._queue = this.option(\"_queue\") || []\r\n    },\r\n    _queueIsNotEmpty: function() {\r\n        return this.option(\"_queue\") ? false : !!this._queue.length\r\n    },\r\n    _pushItemToQueue: function($item, config) {\r\n        this._queue.push({\r\n            $item: $item,\r\n            config: config\r\n        })\r\n    },\r\n    _shiftItemFromQueue: function() {\r\n        return this._queue.shift()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(BOX_CLASS);\r\n        this._layout.renderBox();\r\n        this.callBase();\r\n        this._renderAlign();\r\n        this._renderActions()\r\n    },\r\n    _renderActions: function() {\r\n        this._onItemStateChanged = this._createActionByOption(\"onItemStateChanged\")\r\n    },\r\n    _renderAlign: function() {\r\n        this._layout.renderAlign();\r\n        this._layout.renderCrossAlign()\r\n    },\r\n    _renderItems: function(items) {\r\n        this._layout.initSize();\r\n        this.callBase(items);\r\n        while (this._queueIsNotEmpty()) {\r\n            var item = this._shiftItemFromQueue();\r\n            this._createComponent(item.$item, Box, extend({\r\n                _layoutStrategy: this.option(\"_layoutStrategy\"),\r\n                itemTemplate: this.option(\"itemTemplate\"),\r\n                itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n                onItemHold: this.option(\"onItemHold\"),\r\n                onItemClick: this.option(\"onItemClick\"),\r\n                onItemContextMenu: this.option(\"onItemContextMenu\"),\r\n                onItemRendered: this.option(\"onItemRendered\"),\r\n                _queue: this._queue\r\n            }, item.config))\r\n        }\r\n        this._layout.renderItems(this._itemElements());\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = setTimeout(function() {\r\n            if (!this._isUpdated) {\r\n                this._layout.update()\r\n            }\r\n            this._isUpdated = false;\r\n            this._updateTimer = null\r\n        }.bind(this))\r\n    },\r\n    _renderItemContent: function(args) {\r\n        var $itemNode = args.itemData && args.itemData.node;\r\n        if ($itemNode) {\r\n            return this._renderItemContentByNode(args, $itemNode)\r\n        }\r\n        return this.callBase(args)\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        var boxConfig = args.itemData.box;\r\n        if (!boxConfig) {\r\n            return\r\n        }\r\n        this._pushItemToQueue(args.itemContent, boxConfig)\r\n    },\r\n    _createItemByTemplate: function(itemTemplate, args) {\r\n        if (args.itemData.box) {\r\n            return itemTemplate.source ? itemTemplate.source() : $()\r\n        }\r\n        return this.callBase(itemTemplate, args)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this._updateTimer) {\r\n            return\r\n        }\r\n        this._isUpdated = true;\r\n        this._layout.update()\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _itemOptionChanged: function(item, property, value, oldValue) {\r\n        if (\"visible\" === property) {\r\n            this._onItemStateChanged({\r\n                name: property,\r\n                state: value,\r\n                oldState: false !== oldValue\r\n            })\r\n        }\r\n        this.callBase(item, property, value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"_layoutStrategy\":\r\n            case \"_queue\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            case \"align\":\r\n                this._layout.renderAlign();\r\n                break;\r\n            case \"crossAlign\":\r\n                this._layout.renderCrossAlign();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _itemOptions: function() {\r\n        var that = this,\r\n            options = this.callBase();\r\n        options.fireItemStateChangedAction = function(e) {\r\n            that._onItemStateChanged(e)\r\n        };\r\n        return options\r\n    },\r\n    repaint: function() {\r\n        this._dimensionChanged()\r\n    }\r\n});\r\nBox.ItemClass = BoxItem;\r\nregisterComponent(\"dxBox\", Box);\r\nmodule.exports = Box;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 753:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar registerComponent = __webpack_require__(16),\r\n    NumberBoxMask = __webpack_require__(754);\r\nregisterComponent(\"dxNumberBox\", NumberBoxMask);\r\nmodule.exports = NumberBoxMask;\r\n\n\n/***/ }),\n\n/***/ 754:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.mask.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar eventsEngine = __webpack_require__(7),\r\n    extend = __webpack_require__(3).extend,\r\n    isNumeric = __webpack_require__(4).isNumeric,\r\n    browser = __webpack_require__(78),\r\n    fitIntoRange = __webpack_require__(60).fitIntoRange,\r\n    inRange = __webpack_require__(60).inRange,\r\n    escapeRegExp = __webpack_require__(6).escapeRegExp,\r\n    number = __webpack_require__(336),\r\n    maskCaret = __webpack_require__(755),\r\n    getLDMLFormat = __webpack_require__(343).getFormat,\r\n    NumberBoxBase = __webpack_require__(756),\r\n    eventUtils = __webpack_require__(8),\r\n    typeUtils = __webpack_require__(4);\r\nvar NUMBER_FORMATTER_NAMESPACE = \"dxNumberFormatter\",\r\n    MOVE_FORWARD = 1,\r\n    MOVE_BACKWARD = -1,\r\n    MINUS = \"-\",\r\n    NUMPUD_MINUS_KEY_IE = \"Subtract\",\r\n    INPUT_EVENT = \"input\";\r\nvar ensureDefined = function(value, defaultValue) {\r\n    return void 0 === value ? defaultValue : value\r\n};\r\nvar NumberBoxMask = NumberBoxBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            useMaskBehavior: true,\r\n            format: null\r\n        })\r\n    },\r\n    _isDeleteKey: function(key) {\r\n        return \"Delete\" === key || \"Del\" === key\r\n    },\r\n    _supportedKeys: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        return extend(this.callBase(), {\r\n            minus: that._revertSign.bind(that),\r\n            del: that._removeHandler.bind(that),\r\n            backspace: that._removeHandler.bind(that),\r\n            leftArrow: that._arrowHandler.bind(that, MOVE_BACKWARD),\r\n            rightArrow: that._arrowHandler.bind(that, MOVE_FORWARD),\r\n            home: that._moveCaretToBoundary.bind(that, MOVE_FORWARD),\r\n            enter: that._updateFormattedValue.bind(that),\r\n            end: that._moveCaretToBoundary.bind(that, MOVE_BACKWARD)\r\n        })\r\n    },\r\n    _focusInHandler: function(e) {\r\n        this.callBase(e);\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            return\r\n        }\r\n        if (browser.msie) {\r\n            clearTimeout(this._ieCaretTimeout);\r\n            this._ieCaretTimeout = setTimeout(this._moveCaretToBoundary.bind(this, MOVE_BACKWARD, e))\r\n        } else {\r\n            this._moveCaretToBoundary(MOVE_BACKWARD, e)\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this._focusOutOccurs = true;\r\n        if (this._useMaskBehavior()) {\r\n            this._updateFormattedValue()\r\n        }\r\n        this.callBase(e);\r\n        this._focusOutOccurs = false\r\n    },\r\n    _updateFormattedValue: function() {\r\n        this._parsedValue = this._tryParse(this._getInputVal(), this._caret());\r\n        this._adjustParsedValue();\r\n        this._setTextByParsedValue();\r\n        if (this._isValueDirty()) {\r\n            this._isDirty = false;\r\n            eventsEngine.trigger(this._input(), \"change\")\r\n        }\r\n    },\r\n    _isValueDirty: function() {\r\n        return this._isDirty || this._parsedValue !== this.option(\"value\")\r\n    },\r\n    _arrowHandler: function(step, e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this._getInputVal(),\r\n            format = this._getFormatPattern(),\r\n            nextCaret = maskCaret.getCaretWithOffset(this._caret(), step);\r\n        if (!maskCaret.isCaretInBoundaries(nextCaret, text, format)) {\r\n            nextCaret = step === MOVE_FORWARD ? nextCaret.end : nextCaret.start;\r\n            e.preventDefault();\r\n            this._caret(maskCaret.getCaretInBoundaries(nextCaret, text, format))\r\n        }\r\n    },\r\n    _moveCaretToBoundary: function(direction, e) {\r\n        if (!this._useMaskBehavior() || e.shiftKey) {\r\n            return\r\n        }\r\n        var boundaries = maskCaret.getCaretBoundaries(this._getInputVal(), this._getFormatPattern()),\r\n            newCaret = maskCaret.getCaretWithOffset(direction === MOVE_FORWARD ? boundaries.start : boundaries.end, 0);\r\n        this._caret(newCaret);\r\n        e && e.preventDefault()\r\n    },\r\n    _shouldMoveCaret: function(text, caret) {\r\n        var decimalSeparator = number.getDecimalSeparator(),\r\n            isDecimalSeparatorNext = text.charAt(caret.end) === decimalSeparator,\r\n            isZeroNext = \"0\" === text.charAt(caret.end),\r\n            moveToFloat = this._lastKey === decimalSeparator && isDecimalSeparatorNext,\r\n            zeroToZeroReplace = \"0\" === this._lastKey && isZeroNext;\r\n        return moveToFloat || zeroToZeroReplace\r\n    },\r\n    _getInputVal: function() {\r\n        return number.convertDigits(this._input().val(), true)\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        this._lastKey = number.convertDigits(e.originalEvent.key, true);\r\n        if (!this._shouldHandleKey(e.originalEvent)) {\r\n            return this.callBase(e)\r\n        }\r\n        var text = this._getInputVal(),\r\n            caret = this._caret();\r\n        var enteredChar = this._lastKey === MINUS ? \"\" : this._lastKey,\r\n            newValue = this._tryParse(text, caret, enteredChar);\r\n        if (void 0 === newValue) {\r\n            if (this._lastKey !== MINUS) {\r\n                e.originalEvent.preventDefault()\r\n            }\r\n            if (this._shouldMoveCaret(text, caret)) {\r\n                this._moveCaret(1)\r\n            }\r\n        } else {\r\n            this._parsedValue = newValue\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _removeHandler: function(e) {\r\n        var caret = this._caret(),\r\n            text = this._getInputVal(),\r\n            start = caret.start,\r\n            end = caret.end;\r\n        this._lastKey = e.key;\r\n        if (caret.start === caret.end) {\r\n            this._isDeleteKey(e.key) ? end++ : start--\r\n        }\r\n        var char = text.slice(start, end);\r\n        if (this._isStub(char)) {\r\n            this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n            if (this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0)) {\r\n                this._revertSign(e);\r\n                this._setTextByParsedValue()\r\n            }\r\n            e.preventDefault();\r\n            return\r\n        }\r\n        var decimalSeparator = number.getDecimalSeparator();\r\n        if (char === decimalSeparator) {\r\n            var decimalSeparatorIndex = text.indexOf(decimalSeparator);\r\n            if (this._isNonStubAfter(decimalSeparatorIndex + 1)) {\r\n                this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n                e.preventDefault()\r\n            }\r\n            return\r\n        }\r\n        if (end - start < text.length) {\r\n            var editedText = this._replaceSelectedText(text, {\r\n                    start: start,\r\n                    end: end\r\n                }, \"\"),\r\n                noDigits = editedText.search(/[0-9]/) < 0;\r\n            if (noDigits && this._isValueInRange(0)) {\r\n                this._parsedValue = this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0) ? -0 : 0;\r\n                return\r\n            }\r\n        }\r\n        var valueAfterRemoving = this._tryParse(text, {\r\n            start: start,\r\n            end: end\r\n        }, \"\");\r\n        if (void 0 === valueAfterRemoving) {\r\n            e.preventDefault()\r\n        } else {\r\n            this._parsedValue = valueAfterRemoving\r\n        }\r\n    },\r\n    _isPercentFormat: function() {\r\n        var format = this._getFormatPattern(),\r\n            noEscapedFormat = format.replace(/'[^']+'/g, \"\");\r\n        return noEscapedFormat.indexOf(\"%\") !== -1\r\n    },\r\n    _parse: function(text, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomParser = typeUtils.isFunction(formatOption.formatter),\r\n            parser = isCustomParser ? formatOption.parser : number.parse;\r\n        return parser(text, format)\r\n    },\r\n    _format: function(value, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomFormatter = typeUtils.isFunction(formatOption.formatter),\r\n            formatter = isCustomFormatter ? formatOption.formatter : number.format;\r\n        return formatter(value, format)\r\n    },\r\n    _getFormatPattern: function() {\r\n        var format = this.option(\"format\"),\r\n            isLDMLPattern = \"string\" === typeof format && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        if (isLDMLPattern) {\r\n            return format\r\n        } else {\r\n            return getLDMLFormat(function(value) {\r\n                return this._format(value, format)\r\n            }.bind(this))\r\n        }\r\n    },\r\n    _getFormatForSign: function(text) {\r\n        var format = this._getFormatPattern(),\r\n            signParts = format.split(\";\"),\r\n            sign = number.getSign(text, format);\r\n        signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n        return sign < 0 ? signParts[1] : signParts[0]\r\n    },\r\n    _removeStubs: function(text, excludeComma) {\r\n        var format = this._getFormatForSign(text),\r\n            thousandsSeparator = number.getThousandsSeparator(),\r\n            stubs = format.replace(/[#0.,]/g, \"\"),\r\n            regExp = new RegExp(\"[-\" + escapeRegExp((excludeComma ? \"\" : thousandsSeparator) + stubs) + \"]\", \"g\");\r\n        return text.replace(regExp, \"\")\r\n    },\r\n    _truncateToPrecision: function(value, decimalSeparator, maxPrecision) {\r\n        if (typeUtils.isDefined(value)) {\r\n            var strValue = value.toString(),\r\n                decimalSeparatorIndex = strValue.indexOf(decimalSeparator);\r\n            if (strValue && decimalSeparatorIndex > -1) {\r\n                var parsedValue = parseFloat(strValue.substr(0, decimalSeparatorIndex + maxPrecision + 1));\r\n                return isNaN(parsedValue) ? value : parsedValue\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _tryParse: function(text, selection, char) {\r\n        var editedText = this._replaceSelectedText(text, selection, char),\r\n            format = this._getFormatPattern(),\r\n            isTextSelected = selection.start !== selection.end,\r\n            parsed = this._parse(editedText, format),\r\n            maxPrecision = this._getPrecisionLimits(format, editedText).max,\r\n            isValueChanged = parsed !== this._parsedValue,\r\n            decimalSeparator = number.getDecimalSeparator();\r\n        var isDecimalPointRestricted = char === decimalSeparator && 0 === maxPrecision,\r\n            isUselessCharRestricted = !isTextSelected && !isValueChanged && char !== MINUS && !this._isValueIncomplete(editedText) && this._isStub(char);\r\n        if (isDecimalPointRestricted || isUselessCharRestricted) {\r\n            return\r\n        }\r\n        if (\"\" === editedText) {\r\n            parsed = 0\r\n        }\r\n        if (isNaN(parsed)) {\r\n            return\r\n        }\r\n        var value = null === parsed ? this._parsedValue : parsed;\r\n        parsed = this._truncateToPrecision(value, decimalSeparator, maxPrecision);\r\n        return this._isPercentFormat() ? parsed && parsed / 100 : parsed\r\n    },\r\n    _isValueIncomplete: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        var caret = this._caret(),\r\n            point = number.getDecimalSeparator(),\r\n            pointIndex = text.indexOf(point),\r\n            isCaretOnFloat = pointIndex > 0 && pointIndex < caret.start,\r\n            textParts = this._removeStubs(text, true).split(point);\r\n        if (!isCaretOnFloat || 2 !== textParts.length) {\r\n            return false\r\n        }\r\n        var floatLength = textParts[1].length,\r\n            precision = this._getPrecisionLimits(this._getFormatPattern(), text),\r\n            isPrecisionInRange = inRange(floatLength, precision.min, precision.max),\r\n            endsWithZero = \"0\" === textParts[1].charAt(floatLength - 1);\r\n        return isPrecisionInRange && (endsWithZero || !floatLength)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        var min = ensureDefined(this.option(\"min\"), -(1 / 0)),\r\n            max = ensureDefined(this.option(\"max\"), 1 / 0);\r\n        return inRange(value, min, max)\r\n    },\r\n    _setInputText: function(text) {\r\n        var newCaret = maskCaret.getCaretAfterFormat(this._getInputVal(), text, this._caret(), this._getFormatPattern()),\r\n            newValue = number.convertDigits(text);\r\n        if (this._formattedValue !== newValue) {\r\n            this._isDirty = true\r\n        }\r\n        this._input().val(newValue);\r\n        this._toggleEmptinessEventHandler();\r\n        this._formattedValue = text;\r\n        if (!this._focusOutOccurs) {\r\n            this._caret(newCaret)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return !!this.option(\"format\") && this.option(\"useMaskBehavior\")\r\n    },\r\n    _renderInputType: function() {\r\n        var isNumberType = \"number\" === this.option(\"mode\");\r\n        if (this._useMaskBehavior() && isNumberType) {\r\n            this._setInputType(\"tel\")\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isChar: function(str) {\r\n        return \"string\" === typeof str && 1 === str.length\r\n    },\r\n    _moveCaret: function(offset) {\r\n        if (!offset) {\r\n            return\r\n        }\r\n        var newCaret = maskCaret.getCaretWithOffset(this._caret(), offset),\r\n            adjustedCaret = maskCaret.getCaretInBoundaries(newCaret, this._getInputVal(), this._getFormatPattern());\r\n        this._caret(adjustedCaret)\r\n    },\r\n    _shouldHandleKey: function(e) {\r\n        var isSpecialChar = e.ctrlKey || e.shiftKey || e.altKey || !this._isChar(e.key),\r\n            isMinusKey = e.key === MINUS,\r\n            useMaskBehavior = this._useMaskBehavior();\r\n        return useMaskBehavior && !isSpecialChar && !isMinusKey\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderFormatter()\r\n    },\r\n    _renderFormatter: function() {\r\n        this._clearCache();\r\n        this._detachFormatterEvents();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachFormatterEvents()\r\n        }\r\n    },\r\n    _detachFormatterEvents: function() {\r\n        eventsEngine.off(this._input(), \".\" + NUMBER_FORMATTER_NAMESPACE)\r\n    },\r\n    _attachFormatterEvents: function() {\r\n        var $input = this._input();\r\n        eventsEngine.on($input, eventUtils.addNamespace(INPUT_EVENT, NUMBER_FORMATTER_NAMESPACE), this._formatValue.bind(this));\r\n        eventsEngine.on($input, eventUtils.addNamespace(\"dxclick\", NUMBER_FORMATTER_NAMESPACE), function() {\r\n            this._caret(maskCaret.getCaretInBoundaries(this._caret(), this._getInputVal(), this._getFormatPattern()))\r\n        }.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n    },\r\n    _isNonStubAfter: function(index, text) {\r\n        text = (text || this._getInputVal()).slice(index);\r\n        return text && !this._isStub(text, true)\r\n    },\r\n    _isStub: function(str, isString) {\r\n        var escapedDecimalSeparator = escapeRegExp(number.getDecimalSeparator()),\r\n            regExpString = \"^[^0-9\" + escapedDecimalSeparator + \"]+$\",\r\n            stubRegExp = new RegExp(regExpString, \"g\");\r\n        return stubRegExp.test(str) && (isString || this._isChar(str))\r\n    },\r\n    _parseValue: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        return this._parsedValue\r\n    },\r\n    _getPrecisionLimits: function(text) {\r\n        var currentFormat = this._getFormatForSign(text),\r\n            floatPart = (currentFormat.split(\".\")[1] || \"\").replace(/[^#0]/g, \"\"),\r\n            minPrecision = floatPart.replace(/^(0*)#*/, \"$1\").length,\r\n            maxPrecision = floatPart.length;\r\n        return {\r\n            min: minPrecision,\r\n            max: maxPrecision\r\n        }\r\n    },\r\n    _revertSign: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            if (e.key === MINUS || e.key === NUMPUD_MINUS_KEY_IE) {\r\n                this._applyRevertedSign(e, caret, true);\r\n                return\r\n            } else {\r\n                this._caret(maskCaret.getCaretInBoundaries(0, this._getInputVal(), this._getFormatPattern()))\r\n            }\r\n        }\r\n        this._applyRevertedSign(e, caret)\r\n    },\r\n    _applyRevertedSign: function(e, caret, preserveSelectedText) {\r\n        var newValue = -1 * ensureDefined(this._parsedValue, null);\r\n        if (this._isValueInRange(newValue)) {\r\n            this._parsedValue = newValue;\r\n            if (preserveSelectedText) {\r\n                var format = this._getFormatPattern(),\r\n                    previousText = this._getInputVal();\r\n                this._setTextByParsedValue();\r\n                e.preventDefault();\r\n                var currentText = this._getInputVal(),\r\n                    offset = maskCaret.getCaretOffset(previousText, currentText, format);\r\n                caret = maskCaret.getCaretWithOffset(caret, offset);\r\n                var caretInBoundaries = maskCaret.getCaretInBoundaries(caret, currentText, format);\r\n                if (browser.msie) {\r\n                    clearTimeout(this._ieCaretTimeout);\r\n                    this._ieCaretTimeout = setTimeout(this._caret.bind(this, caretInBoundaries))\r\n                } else {\r\n                    this._caret(caretInBoundaries)\r\n                }\r\n            }\r\n            if (e.key === NUMPUD_MINUS_KEY_IE) {\r\n                eventsEngine.trigger(this._input(), INPUT_EVENT)\r\n            }\r\n        }\r\n    },\r\n    _removeMinusFromText: function(text, caret) {\r\n        var isMinusPressed = this._lastKey === MINUS && text.charAt(caret.start - 1) === MINUS;\r\n        return isMinusPressed ? this._replaceSelectedText(text, {\r\n            start: caret.start - 1,\r\n            end: caret.start\r\n        }, \"\") : text\r\n    },\r\n    _setTextByParsedValue: function() {\r\n        var format = this._getFormatPattern(),\r\n            parsed = this._parseValue(),\r\n            formatted = this._format(parsed, format) || \"\";\r\n        this._setInputText(formatted)\r\n    },\r\n    _formatValue: function() {\r\n        var text = this._getInputVal(),\r\n            caret = this._caret(),\r\n            textWithoutMinus = this._removeMinusFromText(text, caret),\r\n            wasMinusRemoved = textWithoutMinus !== text;\r\n        this._isDirty = false;\r\n        text = textWithoutMinus;\r\n        if (this._isValueIncomplete(textWithoutMinus)) {\r\n            this._formattedValue = text;\r\n            if (wasMinusRemoved) {\r\n                this._setTextByParsedValue()\r\n            }\r\n            return\r\n        }\r\n        var textWasChanged = this._formattedValue !== text;\r\n        if (textWasChanged) {\r\n            var value = this._tryParse(text, caret, \"\");\r\n            if (typeUtils.isDefined(value)) {\r\n                this._parsedValue = value\r\n            }\r\n        }\r\n        this._setTextByParsedValue()\r\n    },\r\n    _renderDisplayText: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._toggleEmptinessEventHandler()\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._parsedValue = this.option(\"value\");\r\n            this._setTextByParsedValue()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _adjustParsedValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var clearedText = this._removeStubs(this._getInputVal()),\r\n            parsedValue = clearedText ? this._parseValue() : null;\r\n        if (!isNumeric(parsedValue)) {\r\n            this._parsedValue = parsedValue;\r\n            return\r\n        }\r\n        this._parsedValue = fitIntoRange(parsedValue, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(e)\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this._lastKey = null;\r\n        this._adjustParsedValue();\r\n        this.option(\"value\", this._parsedValue)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"format\":\r\n            case \"useMaskBehavior\":\r\n                this._renderFormatter();\r\n                this._renderValue();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._adjustParsedValue();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionValuesEqual: function(name, oldValue, newValue) {\r\n        if (\"value\" === name && 0 === oldValue && 0 === newValue) {\r\n            return 1 / oldValue === 1 / newValue\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _clearCache: function() {\r\n        delete this._formattedValue;\r\n        delete this._lastKey;\r\n        delete this._parsedValue;\r\n        delete this._isDirty;\r\n        delete this._focusOutOccurs;\r\n        clearTimeout(this._ieCaretTimeout);\r\n        delete this._ieCaretTimeout\r\n    },\r\n    _clean: function() {\r\n        this._clearCache();\r\n        this.callBase()\r\n    }\r\n});\r\nmodule.exports = NumberBoxMask;\r\n\n\n/***/ }),\n\n/***/ 755:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.caret.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar fitIntoRange = __webpack_require__(60).fitIntoRange,\r\n    escapeRegExp = __webpack_require__(6).escapeRegExp,\r\n    number = __webpack_require__(336);\r\nvar getCaretBoundaries = function(text, format) {\r\n    var signParts = format.split(\";\"),\r\n        sign = number.getSign(text, format);\r\n    signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n    format = sign < 0 ? signParts[1] : signParts[0];\r\n    var clearedFormat = format.replace(/'([^']*)'/g, \"$1\"),\r\n        result = /^([^#0\\.,]*)([#0\\.,]*)([^#0\\.,]*)$/.exec(clearedFormat);\r\n    var startBorder = result[1].length,\r\n        endBorder = text.length - result[3].length;\r\n    return {\r\n        start: startBorder,\r\n        end: endBorder\r\n    }\r\n};\r\nvar _getDigitCountBeforeIndex = function(index, text) {\r\n    var decimalSeparator = number.getDecimalSeparator(),\r\n        regExp = new RegExp(\"[^0-9\" + escapeRegExp(decimalSeparator) + \"]\", \"g\"),\r\n        textBeforePosition = text.slice(0, index);\r\n    return textBeforePosition.replace(regExp, \"\").length\r\n};\r\nvar _reverseText = function(text) {\r\n    return text.split(\"\").reverse().join(\"\")\r\n};\r\nvar _getDigitPositionByIndex = function(digitIndex, text) {\r\n    if (!digitIndex) {\r\n        return -1\r\n    }\r\n    var regExp = /[0-9]/g,\r\n        counter = 1,\r\n        index = null,\r\n        result = regExp.exec(text);\r\n    while (result) {\r\n        index = result.index;\r\n        if (!digitIndex || counter >= digitIndex) {\r\n            return index\r\n        }\r\n        counter++;\r\n        result = regExp.exec(text)\r\n    }\r\n    return null === index ? text.length : index\r\n};\r\nvar getCaretWithOffset = function(caret, offset) {\r\n    if (void 0 === caret.start) {\r\n        caret = {\r\n            start: caret,\r\n            end: caret\r\n        }\r\n    }\r\n    return {\r\n        start: caret.start + offset,\r\n        end: caret.end + offset\r\n    }\r\n};\r\nvar getCaretAfterFormat = function(text, formatted, caret, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var point = number.getDecimalSeparator(),\r\n        pointPosition = text.indexOf(point),\r\n        newPointPosition = formatted.indexOf(point),\r\n        textParts = text.split(point),\r\n        formattedParts = formatted.split(point),\r\n        isCaretOnFloat = pointPosition !== -1 && caret.start > pointPosition;\r\n    if (isCaretOnFloat) {\r\n        var relativeIndex = caret.start - pointPosition - 1,\r\n            digitsBefore = _getDigitCountBeforeIndex(relativeIndex, textParts[1]),\r\n            newPosition = formattedParts[1] ? newPointPosition + 1 + _getDigitPositionByIndex(digitsBefore, formattedParts[1]) + 1 : formatted.length;\r\n        return getCaretInBoundaries(newPosition, formatted, format)\r\n    } else {\r\n        var positionFromEnd = textParts[0].length - caret.start,\r\n            digitsFromEnd = _getDigitCountBeforeIndex(positionFromEnd, _reverseText(textParts[0])),\r\n            newPositionFromEnd = _getDigitPositionByIndex(digitsFromEnd, _reverseText(formattedParts[0])),\r\n            newPositionFromBegin = formattedParts[0].length - (newPositionFromEnd + 1);\r\n        return getCaretInBoundaries(newPositionFromBegin, formatted, format)\r\n    }\r\n};\r\nvar isCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretInBoundaries(caret, text, format);\r\n    return caret.start >= boundaries.start && caret.end <= boundaries.end\r\n};\r\nvar getCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretBoundaries(text, format),\r\n        adjustedCaret = {\r\n            start: fitIntoRange(caret.start, boundaries.start, boundaries.end),\r\n            end: fitIntoRange(caret.end, boundaries.start, boundaries.end)\r\n        };\r\n    return adjustedCaret\r\n};\r\nvar getCaretOffset = function(previousText, newText, format) {\r\n    var previousBoundaries = getCaretBoundaries(previousText, format),\r\n        newBoundaries = getCaretBoundaries(newText, format);\r\n    return newBoundaries.start - previousBoundaries.start\r\n};\r\nexports.getCaretBoundaries = getCaretBoundaries;\r\nexports.isCaretInBoundaries = isCaretInBoundaries;\r\nexports.getCaretWithOffset = getCaretWithOffset;\r\nexports.getCaretInBoundaries = getCaretInBoundaries;\r\nexports.getCaretAfterFormat = getCaretAfterFormat;\r\nexports.getCaretOffset = getCaretOffset;\r\n\n\n/***/ }),\n\n/***/ 756:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    commonUtils = __webpack_require__(6),\r\n    mathUtils = __webpack_require__(60),\r\n    extend = __webpack_require__(3).extend,\r\n    inArray = __webpack_require__(15).inArray,\r\n    focused = __webpack_require__(52).focused,\r\n    devices = __webpack_require__(14),\r\n    TextEditor = __webpack_require__(344),\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(31),\r\n    wheelEvent = __webpack_require__(339),\r\n    SpinButton = __webpack_require__(757),\r\n    messageLocalization = __webpack_require__(24);\r\nvar math = Math;\r\nvar WIDGET_CLASS = \"dx-numberbox\",\r\n    SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\",\r\n    SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\r\nvar FIREFOX_CONTROL_KEYS = [\"Tab\", \"Del\", \"Delete\", \"Backspace\", \"Left\", \"ArrowLeft\", \"Right\", \"ArrowRight\", \"Home\", \"End\", \"Enter\"];\r\nvar NumberBoxBase = TextEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinUpChangeHandler(e)\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinDownChangeHandler(e)\r\n            },\r\n            enter: function() {}\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            step: 1,\r\n            showSpinButtons: false,\r\n            useLargeSpinButtons: true,\r\n            mode: \"text\",\r\n            invalidValueMessage: messageLocalization.format(\"dxNumberBox-invalidValueMessage\")\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return devices.real().generic && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                useLargeSpinButtons: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"generic\" !== devices.real().platform\r\n            },\r\n            options: {\r\n                mode: \"number\"\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\r\n        this.setAria(\"role\", \"spinbutton\");\r\n        this._renderMouseWheelHandler()\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        this._$submitElement.val(commonUtils.applyServerDecimalSeparator(value))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        var ch = e.key || String.fromCharCode(e.which),\r\n            validCharRegExp = /[\\d.,eE\\-+]|Subtract/,\r\n            isInputCharValid = validCharRegExp.test(ch);\r\n        if (!isInputCharValid) {\r\n            if (e.metaKey || e.ctrlKey || e.key && inArray(e.key, FIREFOX_CONTROL_KEYS) >= 0) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n        this._keyPressed = true\r\n    },\r\n    _renderMouseWheelHandler: function() {\r\n        var eventName = eventUtils.addNamespace(wheelEvent.name, this.NAME);\r\n        var mouseWheelAction = this._createAction(function(e) {\r\n            this._mouseWheelHandler(e.event)\r\n        }.bind(this));\r\n        eventsEngine.off(this._input(), eventName);\r\n        eventsEngine.on(this._input(), eventName, function(e) {\r\n            mouseWheelAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _mouseWheelHandler: function(dxEvent) {\r\n        if (!focused(this._input())) {\r\n            return\r\n        }\r\n        dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent);\r\n        dxEvent.preventDefault();\r\n        dxEvent.stopPropagation()\r\n    },\r\n    _renderValue: function() {\r\n        var inputValue = this._input().val();\r\n        if (!inputValue.length || Number(inputValue) !== this.option(\"value\")) {\r\n            this._forceValueRender();\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        var value = this.option(\"value\");\r\n        this._renderInputAddons();\r\n        this.setAria(\"valuenow\", value);\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _renderValueEventName: function() {\r\n        return this.callBase() + \" keypress\"\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        if (this._$spinUp) {\r\n            SpinButton.getInstance(this._$spinUp).option(\"disabled\", value)\r\n        }\r\n        if (this._$spinDown) {\r\n            SpinButton.getInstance(this._$spinDown).option(\"disabled\", value)\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _forceValueRender: function() {\r\n        var value = this.option(\"value\"),\r\n            number = Number(value),\r\n            formattedValue = isNaN(number) ? \"\" : this._applyValueFormat(value);\r\n        this._renderDisplayText(formattedValue)\r\n    },\r\n    _applyValueFormat: function(value) {\r\n        return this.option(\"valueFormat\")(value)\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().prop({\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            step: this.option(\"step\")\r\n        });\r\n        this.setAria({\r\n            valuemin: this.option(\"min\") || \"undefined\",\r\n            valuemax: this.option(\"max\") || \"undefined\"\r\n        })\r\n    },\r\n    _renderInputAddons: function() {\r\n        this.callBase();\r\n        this._renderSpinButtons()\r\n    },\r\n    _renderSpinButtons: function() {\r\n        var spinButtonsVisible = this.option(\"showSpinButtons\");\r\n        this.$element().toggleClass(SPIN_CLASS, spinButtonsVisible);\r\n        this._toggleTouchFriendlyClass();\r\n        if (!spinButtonsVisible) {\r\n            this._$spinContainer && this._$spinContainer.remove();\r\n            this._$spinContainer = null;\r\n            return\r\n        }\r\n        if (!this._$spinContainer) {\r\n            this._$spinContainer = this._createSpinButtons()\r\n        }\r\n        this._$spinContainer.prependTo(this._buttonsContainer())\r\n    },\r\n    _toggleTouchFriendlyClass: function() {\r\n        this.$element().toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, this.option(\"showSpinButtons\") && this.option(\"useLargeSpinButtons\"))\r\n    },\r\n    _createSpinButtons: function() {\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME);\r\n        var pointerDownAction = this._createAction(this._spinButtonsPointerDownHandler.bind(this));\r\n        var $spinContainer = $(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\r\n        eventsEngine.off($spinContainer, eventName);\r\n        eventsEngine.on($spinContainer, eventName, function(e) {\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        this._$spinUp = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinUp, SpinButton, {\r\n            direction: \"up\",\r\n            onChange: this._spinUpChangeHandler.bind(this)\r\n        });\r\n        this._$spinDown = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinDown, SpinButton, {\r\n            direction: \"down\",\r\n            onChange: this._spinDownChangeHandler.bind(this)\r\n        });\r\n        return $spinContainer\r\n    },\r\n    _spinButtonsPointerDownHandler: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"useLargeSpinButtons\") && domAdapter.getActiveElement() !== $input[0]) {\r\n            eventsEngine.trigger($input, \"focus\")\r\n        }\r\n    },\r\n    _spinUpChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(1, e.event || e)\r\n        }\r\n    },\r\n    _spinDownChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(-1, e.event || e)\r\n        }\r\n    },\r\n    _spinValueChange: function(sign, dxEvent) {\r\n        var value = parseFloat(this._normalizeInputValue()) || 0,\r\n            step = parseFloat(this.option(\"step\"));\r\n        value = this._correctRounding(value, step * sign);\r\n        var min = this.option(\"min\"),\r\n            max = this.option(\"max\");\r\n        if (void 0 !== min) {\r\n            value = Math.max(min, value)\r\n        }\r\n        if (void 0 !== max) {\r\n            value = Math.min(max, value)\r\n        }\r\n        this._saveValueChangeEvent(dxEvent);\r\n        this.option(\"value\", value)\r\n    },\r\n    _correctRounding: function(value, step) {\r\n        var regex = /[,.](.*)/;\r\n        var isFloatValue = regex.test(value),\r\n            isFloatStep = regex.test(step);\r\n        if (isFloatValue || isFloatStep) {\r\n            var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0,\r\n                stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0,\r\n                accuracy = math.max(valueAccuracy, stepAccuracy);\r\n            value = this._round(value + step, accuracy);\r\n            return value\r\n        }\r\n        return value + step\r\n    },\r\n    _round: function(value, precision) {\r\n        precision = precision || 0;\r\n        var multiplier = Math.pow(10, precision);\r\n        value *= multiplier;\r\n        value = Math.round(value) / multiplier;\r\n        return value\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        this.callBase();\r\n        eventsEngine.on(this._input(), \"focusout\", this._forceRefreshInputValue.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (\"number\" === this.option(\"mode\")) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            formattedValue = this._applyValueFormat(this.option(\"value\"));\r\n        $input.val(null);\r\n        $input.val(formattedValue)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var $input = this._input(),\r\n            inputValue = this._normalizeText(),\r\n            value = this._parseValue(inputValue),\r\n            valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\r\n        if (this._isValueValid() && !this._validateValue(value)) {\r\n            $input.val(this._applyValueFormat(value));\r\n            return\r\n        }\r\n        if (valueHasDigits) {\r\n            this.callBase(e, isNaN(value) ? null : value)\r\n        }\r\n        this._applyValueBoundaries(inputValue, value);\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        })\r\n    },\r\n    _applyValueBoundaries: function(inputValue, parsedValue) {\r\n        var isValueIncomplete = this._isValueIncomplete(inputValue),\r\n            isValueCorrect = this._isValueInRange(inputValue);\r\n        if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\r\n            if (Number(inputValue) !== parsedValue) {\r\n                this._input().val(this._applyValueFormat(parsedValue))\r\n            }\r\n        }\r\n    },\r\n    _replaceCommaWithPoint: function(value) {\r\n        return value.replace(\",\", \".\")\r\n    },\r\n    _inputIsInvalid: function() {\r\n        var isNumberMode = \"number\" === this.option(\"mode\");\r\n        var validityState = this._input().get(0).validity;\r\n        return isNumberMode && validityState && validityState.badInput\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        if (this._inputIsInvalid()) {\r\n            return\r\n        }\r\n        this.callBase(text)\r\n    },\r\n    _isValueIncomplete: function(value) {\r\n        var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\r\n        return incompleteRegex.test(value)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        return mathUtils.inRange(value, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _isNumber: function(value) {\r\n        return null !== this._parseValue(value)\r\n    },\r\n    _validateValue: function(value) {\r\n        var inputValue = this._normalizeText(),\r\n            isValueValid = this._isValueValid(),\r\n            isValid = true,\r\n            isNumber = this._isNumber(inputValue);\r\n        if (isNaN(Number(value))) {\r\n            isValid = false\r\n        }\r\n        if (!value && isValueValid) {\r\n            isValid = true\r\n        } else {\r\n            if (!isNumber && !isValueValid) {\r\n                isValid = false\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"invalidValueMessage\")\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _normalizeInputValue: function() {\r\n        return this._parseValue(this._normalizeText())\r\n    },\r\n    _normalizeText: function() {\r\n        var value = this._input().val().trim();\r\n        return this._replaceCommaWithPoint(value)\r\n    },\r\n    _parseValue: function(value) {\r\n        var number = parseFloat(value);\r\n        if (isNaN(number)) {\r\n            return null\r\n        }\r\n        return mathUtils.fitIntoRange(number, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    reset: function() {\r\n        this.option(\"value\", null)\r\n    },\r\n    _clean: function() {\r\n        delete this._$spinContainer;\r\n        delete this._$spinUp;\r\n        delete this._$spinDown;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._validateValue(args.value);\r\n                this._setSubmitValue(args.value);\r\n                this.callBase(args);\r\n                this._resumeValueChangeAction();\r\n                break;\r\n            case \"step\":\r\n                this._renderProps();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._renderProps();\r\n                this.option(\"value\", this._parseValue(this.option(\"value\")));\r\n                break;\r\n            case \"showSpinButtons\":\r\n                this._renderInputAddons();\r\n                break;\r\n            case \"useLargeSpinButtons\":\r\n                this._toggleTouchFriendlyClass();\r\n                break;\r\n            case \"invalidValueMessage\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = NumberBoxBase;\r\n\n\n/***/ }),\n\n/***/ 757:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.spin.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    Widget = __webpack_require__(43),\r\n    extend = __webpack_require__(3).extend,\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(31),\r\n    feedbackEvents = __webpack_require__(144),\r\n    holdEvent = __webpack_require__(203),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\",\r\n    SPIN_HOLD_DELAY = 100,\r\n    NUMBER_BOX = \"dxNumberBox\",\r\n    POINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, NUMBER_BOX),\r\n    POINTERCANCEL_EVENT_NAME = eventUtils.addNamespace(pointerEvents.cancel, NUMBER_BOX);\r\nvar SpinButton = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            direction: \"up\",\r\n            onChange: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        var direction = SPIN_CLASS + \"-\" + this.option(\"direction\");\r\n        this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\r\n        this._spinIcon = $(\"<div>\").addClass(direction + \"-icon\").appendTo(this.$element())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME),\r\n            $element = this.$element();\r\n        eventsEngine.off($element, eventName);\r\n        eventsEngine.on($element, eventName, this._spinDownHandler.bind(this));\r\n        this._spinChangeHandler = this._createActionByOption(\"onChange\")\r\n    },\r\n    _spinDownHandler: function(e) {\r\n        e.preventDefault();\r\n        this._clearTimer();\r\n        eventsEngine.on(this.$element(), holdEvent.name, function() {\r\n            this._feedBackDeferred = new Deferred;\r\n            feedbackEvents.lock(this._feedBackDeferred);\r\n            this._spinChangeHandler({\r\n                event: e\r\n            });\r\n            this._holdTimer = setInterval(this._spinChangeHandler, SPIN_HOLD_DELAY, {\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\r\n        eventsEngine.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\r\n        this._spinChangeHandler({\r\n            event: e\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this._clearTimer();\r\n        this.callBase()\r\n    },\r\n    _clearTimer: function() {\r\n        eventsEngine.off(this.$element(), holdEvent.name);\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.off(document, POINTERUP_EVENT_NAME);\r\n        eventsEngine.off(document, POINTERCANCEL_EVENT_NAME);\r\n        if (this._feedBackDeferred) {\r\n            this._feedBackDeferred.resolve()\r\n        }\r\n        if (this._holdTimer) {\r\n            clearInterval(this._holdTimer)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onChange\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = SpinButton;\r\n\n\n/***/ }),\n\n/***/ 758:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (localization/ldml/date.format.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar ARABIC_COMMA = \"،\",\r\n    FORMAT_SEPARATORS = \" .,:;/\\\\<>()-[]\" + ARABIC_COMMA,\r\n    ARABIC_ZERO_CODE = 1632;\r\nvar checkDigit = function(char) {\r\n    var code = char && char.charCodeAt(0);\r\n    return char >= \"0\" && char <= \"9\" || code >= ARABIC_ZERO_CODE && code < ARABIC_ZERO_CODE + 10\r\n};\r\nvar checkPatternContinue = function(text, index, isDigit) {\r\n    var char = text[index],\r\n        prevChar = text[index - 1],\r\n        nextChar = text[index + 1];\r\n    if (!isDigit) {\r\n        if (\".\" === char || \" \" === char && \".\" === prevChar) {\r\n            return true\r\n        }\r\n        if (\"-\" === char && !checkDigit(nextChar)) {\r\n            return true\r\n        }\r\n    }\r\n    return FORMAT_SEPARATORS.indexOf(char) < 0 && isDigit === checkDigit(char)\r\n};\r\nvar getPatternStartIndex = function(defaultPattern, index) {\r\n    if (!checkDigit(defaultPattern[index])) {\r\n        while (index > 0 && !checkDigit(defaultPattern[index - 1]) && (\".\" === defaultPattern[index - 1] || FORMAT_SEPARATORS.indexOf(defaultPattern[index - 1]) < 0)) {\r\n            index--\r\n        }\r\n    }\r\n    return index\r\n};\r\nvar getDifference = function(defaultPattern, patterns, processedIndexes, isDigit) {\r\n    var i = 0,\r\n        result = [];\r\n    var patternsFilter = function(pattern) {\r\n        return defaultPattern[i] !== pattern[i] && (void 0 === isDigit || checkDigit(defaultPattern[i]) === isDigit)\r\n    };\r\n    if (!Array.isArray(patterns)) {\r\n        patterns = [patterns]\r\n    }\r\n    for (i = 0; i < defaultPattern.length; i++) {\r\n        if (processedIndexes.indexOf(i) < 0 && patterns.filter(patternsFilter).length) {\r\n            i = getPatternStartIndex(defaultPattern, i);\r\n            do {\r\n                isDigit = checkDigit(defaultPattern[i]);\r\n                if (!result.length && !isDigit && checkDigit(patterns[0][i])) {\r\n                    break\r\n                }\r\n                result.push(i);\r\n                processedIndexes.unshift(i);\r\n                i++\r\n            } while (defaultPattern[i] && checkPatternContinue(defaultPattern, i, isDigit));\r\n            break\r\n        }\r\n    }\r\n    if (1 === result.length && (\"0\" === defaultPattern[processedIndexes[0] - 1] || \"٠\" === defaultPattern[processedIndexes[0] - 1])) {\r\n        processedIndexes.unshift(processedIndexes[0] - 1)\r\n    }\r\n    return result\r\n};\r\nvar replaceCharsCore = function(pattern, indexes, char, patternPositions) {\r\n    var baseCharIndex = indexes[0];\r\n    var patternIndex = baseCharIndex < patternPositions.length ? patternPositions[baseCharIndex] : baseCharIndex;\r\n    indexes.forEach(function(_, index) {\r\n        pattern = pattern.substr(0, patternIndex + index) + (char.length > 1 ? char[index] : char) + pattern.substr(patternIndex + index + 1)\r\n    });\r\n    if (1 === indexes.length) {\r\n        pattern = pattern.replace(\"0\" + char, char + char);\r\n        pattern = pattern.replace(\"٠\" + char, char + char)\r\n    }\r\n    return pattern\r\n};\r\nvar replaceChars = function(pattern, indexes, char, patternPositions) {\r\n    var i, index, patternIndex;\r\n    if (!checkDigit(pattern[indexes[0]] || \"0\")) {\r\n        var letterCount = Math.max(indexes.length <= 3 ? 3 : 4, char.length);\r\n        while (indexes.length > letterCount) {\r\n            index = indexes.pop();\r\n            patternIndex = patternPositions[index];\r\n            patternPositions[index] = -1;\r\n            for (i = index + 1; i < patternPositions.length; i++) {\r\n                patternPositions[i]--\r\n            }\r\n            pattern = pattern.substr(0, patternIndex) + pattern.substr(patternIndex + 1)\r\n        }\r\n        index = indexes[indexes.length - 1] + 1, patternIndex = index < patternPositions.length ? patternPositions[index] : index;\r\n        while (indexes.length < letterCount) {\r\n            indexes.push(indexes[indexes.length - 1] + 1);\r\n            for (i = index; i < patternPositions.length; i++) {\r\n                patternPositions[i]++\r\n            }\r\n            pattern = pattern.substr(0, patternIndex) + \" \" + pattern.substr(patternIndex)\r\n        }\r\n    }\r\n    pattern = replaceCharsCore(pattern, indexes, char, patternPositions);\r\n    return pattern\r\n};\r\nvar formatValue = function(value, formatter) {\r\n    if (Array.isArray(value)) {\r\n        return value.map(function(value) {\r\n            return (formatter(value) || \"\").toString()\r\n        })\r\n    }\r\n    return (formatter(value) || \"\").toString()\r\n};\r\nvar ESCAPE_CHARS_REGEXP = /[a-zA-Z]/g;\r\nvar escapeChars = function(pattern, defaultPattern, processedIndexes, patternPositions) {\r\n    var escapeIndexes = defaultPattern.split(\"\").map(function(char, index) {\r\n        if (processedIndexes.indexOf(index) < 0 && (char.match(ESCAPE_CHARS_REGEXP) || \"'\" === char)) {\r\n            return patternPositions[index]\r\n        }\r\n        return -1\r\n    });\r\n    pattern = pattern.split(\"\").map(function(char, index) {\r\n        var result = char,\r\n            isCurrentCharEscaped = escapeIndexes.indexOf(index) >= 0,\r\n            isPrevCharEscaped = index > 0 && escapeIndexes.indexOf(index - 1) >= 0,\r\n            isNextCharEscaped = escapeIndexes.indexOf(index + 1) >= 0;\r\n        if (isCurrentCharEscaped) {\r\n            if (!isPrevCharEscaped) {\r\n                result = \"'\" + result\r\n            }\r\n            if (!isNextCharEscaped) {\r\n                result += \"'\"\r\n            }\r\n        }\r\n        return result\r\n    }).join(\"\");\r\n    return pattern\r\n};\r\nvar getFormat = function(formatter) {\r\n    var processedIndexes = [],\r\n        defaultPattern = formatValue(new Date(2009, 8, 8, 6, 5, 4), formatter),\r\n        patternPositions = defaultPattern.split(\"\").map(function(_, index) {\r\n            return index\r\n        }),\r\n        result = defaultPattern,\r\n        replacedPatterns = {},\r\n        datePatterns = [{\r\n            date: new Date(2009, 8, 8, 6, 5, 4, 100),\r\n            pattern: \"S\"\r\n        }, {\r\n            date: new Date(2009, 8, 8, 6, 5, 2),\r\n            pattern: \"s\"\r\n        }, {\r\n            date: new Date(2009, 8, 8, 6, 2, 4),\r\n            pattern: \"m\"\r\n        }, {\r\n            date: new Date(2009, 8, 8, 18, 5, 4),\r\n            pattern: \"H\",\r\n            isDigit: true\r\n        }, {\r\n            date: new Date(2009, 8, 8, 2, 5, 4),\r\n            pattern: \"h\",\r\n            isDigit: true\r\n        }, {\r\n            date: new Date(2009, 8, 8, 18, 5, 4),\r\n            pattern: \"a\",\r\n            isDigit: false\r\n        }, {\r\n            date: new Date(2009, 8, 1, 6, 5, 4),\r\n            pattern: \"d\"\r\n        }, {\r\n            date: [new Date(2009, 8, 2, 6, 5, 4), new Date(2009, 8, 3, 6, 5, 4), new Date(2009, 8, 4, 6, 5, 4)],\r\n            pattern: \"E\"\r\n        }, {\r\n            date: new Date(2009, 9, 6, 6, 5, 4),\r\n            pattern: \"M\"\r\n        }, {\r\n            date: new Date(1998, 8, 8, 6, 5, 4),\r\n            pattern: \"y\"\r\n        }];\r\n    if (!result) {\r\n        return\r\n    }\r\n    datePatterns.forEach(function(test) {\r\n        var diff = getDifference(defaultPattern, formatValue(test.date, formatter), processedIndexes, test.isDigit),\r\n            pattern = \"M\" === test.pattern && !replacedPatterns.d ? \"L\" : test.pattern;\r\n        result = replaceChars(result, diff, pattern, patternPositions);\r\n        replacedPatterns[pattern] = diff.length\r\n    });\r\n    result = escapeChars(result, defaultPattern, processedIndexes, patternPositions);\r\n    if (processedIndexes.length) {\r\n        return result\r\n    }\r\n};\r\nexports.getFormat = getFormat;\r\n\n\n/***/ }),\n\n/***/ 759:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/select_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    commonUtils = __webpack_require__(6),\r\n    typeUtils = __webpack_require__(4),\r\n    isDefined = typeUtils.isDefined,\r\n    isPromise = typeUtils.isPromise,\r\n    extend = __webpack_require__(3).extend,\r\n    inArray = __webpack_require__(15).inArray,\r\n    each = __webpack_require__(5).each,\r\n    deferredUtils = __webpack_require__(10),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    Deferred = deferredUtils.Deferred,\r\n    errors = __webpack_require__(17),\r\n    inkRipple = __webpack_require__(100),\r\n    messageLocalization = __webpack_require__(24),\r\n    registerComponent = __webpack_require__(16),\r\n    eventUtils = __webpack_require__(8),\r\n    dataQuery = __webpack_require__(55),\r\n    DropDownList = __webpack_require__(760),\r\n    themes = __webpack_require__(22),\r\n    clickEvent = __webpack_require__(25);\r\nvar DISABLED_STATE_SELECTOR = \".dx-state-disabled\",\r\n    SELECTBOX_CLASS = \"dx-selectbox\",\r\n    SELECTBOX_POPUP_CLASS = \"dx-selectbox-popup\",\r\n    SELECTBOX_CONTAINER_CLASS = \"dx-selectbox-container\",\r\n    SELECTBOX_POPUP_WRAPPER_CLASS = \"dx-selectbox-popup-wrapper\";\r\nvar SelectBox = DropDownList.inherit({\r\n    _supportedKeys: function() {\r\n        var that = this,\r\n            parent = this.callBase(),\r\n            clearSelectBox = function(e) {\r\n                var isEditable = this._isEditable();\r\n                if (!isEditable) {\r\n                    if (this.option(\"showClearButton\")) {\r\n                        e.preventDefault();\r\n                        this.reset()\r\n                    }\r\n                } else {\r\n                    if (this._valueSubstituted()) {\r\n                        this._preventFiltering = true\r\n                    }\r\n                }\r\n                this._preventSubstitution = true\r\n            };\r\n        var searchIfNeeded = function() {\r\n            if (that.option(\"searchEnabled\") && that._valueSubstituted()) {\r\n                that._searchHandler()\r\n            }\r\n        };\r\n        return extend({}, parent, {\r\n            tab: function() {\r\n                if (this.option(\"opened\") && \"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this._cleanInputSelection()\r\n                }\r\n                if (this._wasSearch()) {\r\n                    this._clearFilter()\r\n                }\r\n                parent.tab.apply(this, arguments)\r\n            },\r\n            upArrow: function() {\r\n                if (parent.upArrow.apply(this, arguments)) {\r\n                    if (!this.option(\"opened\")) {\r\n                        this._setNextValue(-1)\r\n                    }\r\n                    return true\r\n                }\r\n            },\r\n            downArrow: function() {\r\n                if (parent.downArrow.apply(this, arguments)) {\r\n                    if (!this.option(\"opened\")) {\r\n                        this._setNextValue(1)\r\n                    }\r\n                    return true\r\n                }\r\n            },\r\n            leftArrow: function() {\r\n                searchIfNeeded();\r\n                parent.leftArrow.apply(this, arguments)\r\n            },\r\n            rightArrow: function() {\r\n                searchIfNeeded();\r\n                parent.rightArrow.apply(this, arguments)\r\n            },\r\n            home: function() {\r\n                searchIfNeeded();\r\n                parent.home.apply(this, arguments)\r\n            },\r\n            end: function() {\r\n                searchIfNeeded();\r\n                parent.end.apply(this, arguments)\r\n            },\r\n            escape: function() {\r\n                parent.escape.apply(this, arguments);\r\n                this._cancelEditing()\r\n            },\r\n            enter: function(e) {\r\n                if (\"\" === this._input().val() && this.option(\"value\") && this.option(\"allowClearing\")) {\r\n                    this.option({\r\n                        selectedItem: null,\r\n                        value: null\r\n                    });\r\n                    this.close()\r\n                } else {\r\n                    if (this.option(\"acceptCustomValue\")) {\r\n                        e.preventDefault();\r\n                        return this.option(\"opened\")\r\n                    }\r\n                    if (parent.enter.apply(this, arguments)) {\r\n                        return this.option(\"opened\")\r\n                    }\r\n                }\r\n            },\r\n            space: function(e) {\r\n                var isOpened = this.option(\"opened\"),\r\n                    isSearchEnabled = this.option(\"searchEnabled\"),\r\n                    acceptCustomValue = this.option(\"acceptCustomValue\");\r\n                if (!isOpened || isSearchEnabled || acceptCustomValue) {\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                this._valueChangeEventHandler(e);\r\n                return true\r\n            },\r\n            backspace: clearSelectBox,\r\n            del: clearSelectBox\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            placeholder: messageLocalization.format(\"Select\"),\r\n            fieldTemplate: null,\r\n            valueChangeEvent: \"change\",\r\n            acceptCustomValue: false,\r\n            onCustomItemCreating: function(e) {\r\n                if (!isDefined(e.customItem)) {\r\n                    e.customItem = e.text\r\n                }\r\n            },\r\n            showSelectionControls: false,\r\n            autocompletionEnabled: true,\r\n            allowClearing: true,\r\n            tooltipEnabled: false,\r\n            openOnFieldClick: true,\r\n            showDropDownButton: true,\r\n            displayCustomValue: false,\r\n            _isAdaptablePopupPosition: false,\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = themes.current();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isWin8(themeName)\r\n            },\r\n            options: {\r\n                _isAdaptablePopupPosition: true,\r\n                popupPosition: {\r\n                    at: \"left top\",\r\n                    offset: {\r\n                        h: 0,\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isAndroid5(themeName)\r\n            },\r\n            options: {\r\n                _isAdaptablePopupPosition: true,\r\n                popupPosition: {\r\n                    offset: {\r\n                        h: -16,\r\n                        v: -8\r\n                    }\r\n                },\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initCustomItemCreatingAction()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(SELECTBOX_CLASS);\r\n        this._renderTooltip();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.callBase();\r\n        this._$container.addClass(SELECTBOX_CONTAINER_CLASS)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple || this._isEditable()) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: this._inputWrapper(),\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _createPopup: function() {\r\n        this.callBase();\r\n        this._popup.$element().addClass(SELECTBOX_POPUP_CLASS)\r\n    },\r\n    _popupWrapperClass: function() {\r\n        return this.callBase() + \" \" + SELECTBOX_POPUP_WRAPPER_CLASS\r\n    },\r\n    _cancelEditing: function() {\r\n        if (!this.option(\"searchEnabled\") && this._list) {\r\n            this._focusListElement(null);\r\n            this._updateField(this.option(\"selectedItem\"))\r\n        }\r\n    },\r\n    _closeOutsideDropDownHandler: function(e) {\r\n        this._cancelEditing();\r\n        return this.callBase(e)\r\n    },\r\n    _renderOpenedState: function() {\r\n        this.callBase();\r\n        if (this.option(\"opened\")) {\r\n            this._scrollToSelectedItem();\r\n            this._focusSelectedElement()\r\n        }\r\n    },\r\n    _focusSelectedElement: function() {\r\n        var searchValue = this._searchValue();\r\n        if (!searchValue) {\r\n            this._focusListElement(null);\r\n            return\r\n        }\r\n        var $listItems = this._list._itemElements(),\r\n            index = inArray(this.option(\"selectedItem\"), this.option(\"items\")),\r\n            focusedElement = index >= 0 && !this._isCustomItemSelected() ? $listItems.eq(index) : null;\r\n        this._focusListElement(focusedElement)\r\n    },\r\n    _renderFocusedElement: function() {\r\n        if (!this._list) {\r\n            return\r\n        }\r\n        var searchValue = this._searchValue();\r\n        if (!searchValue || this.option(\"acceptCustomValue\")) {\r\n            this._focusListElement(null);\r\n            return\r\n        }\r\n        var $listItems = this._list._itemElements(),\r\n            focusedElement = $listItems.not(DISABLED_STATE_SELECTOR).eq(0);\r\n        this._focusListElement(focusedElement)\r\n    },\r\n    _focusListElement: function(element) {\r\n        this._preventInputValueRender = true;\r\n        this._list.option(\"focusedElement\", getPublicElement(element));\r\n        delete this._preventInputValueRender\r\n    },\r\n    _scrollToSelectedItem: function() {\r\n        this._list && this._list.scrollToItem(this._list.option(\"selectedItem\"))\r\n    },\r\n    _listContentReadyHandler: function() {\r\n        this.callBase();\r\n        var isPaginate = this._dataSource && this._dataSource.paginate();\r\n        if (isPaginate && this._needPopupRepaint()) {\r\n            return\r\n        }\r\n        this._scrollToSelectedItem()\r\n    },\r\n    _renderValue: function() {\r\n        this._renderInputValue();\r\n        this._setSubmitValue()\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.option(\"value\"),\r\n            submitValue = \"this\" === this.option(\"valueExpr\") ? this._displayGetter(value) : value;\r\n        this._$submitElement.val(submitValue)\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _renderInputValue: function() {\r\n        return this.callBase().always(function() {\r\n            this._renderInputValueAsync()\r\n        }.bind(this))\r\n    },\r\n    _renderInputValueAsync: function() {\r\n        this._renderTooltip();\r\n        this._renderInputValueImpl();\r\n        this._refreshSelected()\r\n    },\r\n    _renderInputValueImpl: function() {\r\n        this._renderInputAddons()\r\n    },\r\n    _fitIntoRange: function(value, start, end) {\r\n        if (value > end) {\r\n            return start\r\n        }\r\n        if (value < start) {\r\n            return end\r\n        }\r\n        return value\r\n    },\r\n    _setNextValue: function(step) {\r\n        var dataSourceIsLoaded = this._dataSource.isLoaded() ? (new Deferred).resolve() : this._dataSource.load();\r\n        dataSourceIsLoaded.done(function() {\r\n            var item = this._calcNextItem(step),\r\n                value = this._valueGetter(item);\r\n            this._setValue(value)\r\n        }.bind(this))\r\n    },\r\n    _calcNextItem: function(step) {\r\n        var items = this._items();\r\n        var nextIndex = this._fitIntoRange(this._getSelectedIndex() + step, 0, items.length - 1);\r\n        return items[nextIndex]\r\n    },\r\n    _items: function() {\r\n        var items = this._getPlainItems(!this._list && this._dataSource.items());\r\n        var availableItems = new dataQuery(items).filter(\"disabled\", \"<>\", true).toArray();\r\n        return availableItems\r\n    },\r\n    _getSelectedIndex: function() {\r\n        var items = this._items();\r\n        var selectedItem = this.option(\"selectedItem\");\r\n        var result = -1;\r\n        each(items, function(index, item) {\r\n            if (this._isValueEquals(item, selectedItem)) {\r\n                result = index;\r\n                return false\r\n            }\r\n        }.bind(this));\r\n        return result\r\n    },\r\n    _setSelectedItem: function(item) {\r\n        var isUnknownItem = !this._isCustomValueAllowed() && void 0 === item;\r\n        this.callBase(isUnknownItem ? null : item)\r\n    },\r\n    _isCustomValueAllowed: function() {\r\n        return this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _displayValue: function(item) {\r\n        item = !isDefined(item) && this._isCustomValueAllowed() ? this.option(\"value\") : item;\r\n        return this.callBase(item)\r\n    },\r\n    _listConfig: function() {\r\n        var result = extend(this.callBase(), {\r\n            pageLoadMode: \"scrollBottom\",\r\n            onSelectionChanged: this._getSelectionChangeHandler(),\r\n            selectedItem: this.option(\"selectedItem\"),\r\n            onFocusedItemChanged: this._listFocusedItemChangeHandler.bind(this)\r\n        });\r\n        if (this.option(\"showSelectionControls\")) {\r\n            extend(result, {\r\n                showSelectionControls: true,\r\n                selectionByClick: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _listFocusedItemChangeHandler: function(e) {\r\n        if (this._preventInputValueRender) {\r\n            return\r\n        }\r\n        var list = e.component,\r\n            focusedElement = $(list.option(\"focusedElement\")),\r\n            focusedItem = list._getItemData(focusedElement);\r\n        this._updateField(focusedItem)\r\n    },\r\n    _updateField: function(item) {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            this._renderDisplayText(this._displayGetter(item));\r\n            return\r\n        }\r\n        this._renderInputAddons()\r\n    },\r\n    _getSelectionChangeHandler: function() {\r\n        return this.option(\"showSelectionControls\") ? this._selectionChangeHandler.bind(this) : commonUtils.noop\r\n    },\r\n    _selectionChangeHandler: function(e) {\r\n        each(e.addedItems || [], function(_, addedItem) {\r\n            this._setValue(this._valueGetter(addedItem))\r\n        }.bind(this))\r\n    },\r\n    _getActualSearchValue: function() {\r\n        return this._dataSource.searchValue()\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n        if (!isVisible) {\r\n            this._restoreInputText()\r\n        }\r\n        if (this._wasSearch() && isVisible) {\r\n            this._wasSearch(false);\r\n            if (this.option(\"showDataBeforeSearch\") || 0 === this.option(\"minSearchLength\")) {\r\n                if (this._searchTimer) {\r\n                    return\r\n                }\r\n                var searchValue = this._getActualSearchValue();\r\n                searchValue && this._wasSearch(true);\r\n                this._filterDataSource(searchValue || null)\r\n            } else {\r\n                this._setListOption(\"items\", [])\r\n            }\r\n        }\r\n        if (isVisible) {\r\n            this._scrollToSelectedItem()\r\n        }\r\n        this.callBase(isVisible)\r\n    },\r\n    _renderTooltip: function() {\r\n        if (this.option(\"tooltipEnabled\")) {\r\n            this.$element().attr(\"title\", this.option(\"displayValue\"))\r\n        }\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this._setPopupOption(\"width\")\r\n    },\r\n    _restoreInputText: function() {\r\n        this._loadItemDeferred && this._loadItemDeferred.always(function() {\r\n            if (this.option(\"acceptCustomValue\")) {\r\n                return\r\n            }\r\n            if (this.option(\"searchEnabled\")) {\r\n                if (!this._searchValue() && this.option(\"allowClearing\")) {\r\n                    this._clearTextValue();\r\n                    return\r\n                }\r\n            }\r\n            var oldSelectedItem = this.option(\"selectedItem\");\r\n            if ((this._displayGetter(oldSelectedItem) || \"\").toString() === this._searchValue()) {\r\n                return\r\n            }\r\n            this._renderInputValue().always(function(selectedItem) {\r\n                var newSelectedItem = commonUtils.ensureDefined(selectedItem, oldSelectedItem);\r\n                this._setSelectedItem(newSelectedItem);\r\n                this._updateField(newSelectedItem);\r\n                this._clearFilter()\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this.callBase(e);\r\n        this._restoreInputText()\r\n    },\r\n    _clearTextValue: function() {\r\n        this.option(\"value\", null)\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        if (this._isEditable()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isEditable: function() {\r\n        return this.option(\"acceptCustomValue\") || this.option(\"searchEnabled\")\r\n    },\r\n    _fieldRenderData: function() {\r\n        var $listFocused = this._list && this.option(\"opened\") && $(this._list.option(\"focusedElement\"));\r\n        if ($listFocused && $listFocused.length) {\r\n            return this._list._getItemData($listFocused)\r\n        }\r\n        return this.option(\"selectedItem\")\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this._isEditable() || this.option(\"readOnly\")\r\n    },\r\n    _isSelectedValue: function(value) {\r\n        return this._isValueEquals(value, this.option(\"value\"))\r\n    },\r\n    _shouldCloseOnItemClick: function() {\r\n        return !(this.option(\"showSelectionControls\") && \"single\" !== this.option(\"selectionMode\"))\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        var previousValue = this._getCurrentValue();\r\n        this._focusListElement($(e.itemElement));\r\n        this._saveValueChangeEvent(e.event);\r\n        if (this._shouldClearFilter()) {\r\n            this._clearFilter()\r\n        }\r\n        this._completeSelection(this._valueGetter(e.itemData));\r\n        if (this._shouldCloseOnItemClick()) {\r\n            this.option(\"opened\", false)\r\n        }\r\n        if (this.option(\"searchEnabled\") && previousValue === this._valueGetter(e.itemData)) {\r\n            this._updateField(e.itemData)\r\n        }\r\n    },\r\n    _shouldClearFilter: function() {\r\n        return this._wasSearch()\r\n    },\r\n    _completeSelection: function(value) {\r\n        this._setValue(value)\r\n    },\r\n    _loadItem: function(value, cache) {\r\n        var that = this,\r\n            deferred = new Deferred;\r\n        this.callBase(value, cache).done(function(item) {\r\n            deferred.resolve(item)\r\n        }.bind(this)).fail(function() {\r\n            var selectedItem = that.option(\"selectedItem\");\r\n            if (that.option(\"acceptCustomValue\") && value === that._valueGetter(selectedItem)) {\r\n                deferred.resolve(selectedItem)\r\n            } else {\r\n                deferred.reject()\r\n            }\r\n        }.bind(this));\r\n        return deferred.promise()\r\n    },\r\n    _loadInputValue: function(value, callback) {\r\n        this._loadItemDeferred = this._loadItem(value).always(callback);\r\n        return this._loadItemDeferred\r\n    },\r\n    _isCustomItemSelected: function() {\r\n        var selectedItem = this.option(\"selectedItem\"),\r\n            searchValue = this._searchValue(),\r\n            selectedItemText = this._displayGetter(selectedItem);\r\n        return !selectedItemText || searchValue !== selectedItemText.toString()\r\n    },\r\n    _valueChangeEventHandler: function() {\r\n        if (this.option(\"acceptCustomValue\") && this._isCustomItemSelected()) {\r\n            this._customItemAddedHandler()\r\n        }\r\n    },\r\n    _initCustomItemCreatingAction: function() {\r\n        this._customItemCreatingAction = this._createActionByOption(\"onCustomItemCreating\")\r\n    },\r\n    _createCustomItem: function(text) {\r\n        var params = {\r\n                text: text\r\n            },\r\n            actionResult = this._customItemCreatingAction(params),\r\n            item = commonUtils.ensureDefined(actionResult, params.customItem);\r\n        if (isDefined(actionResult)) {\r\n            errors.log(\"W0015\", \"onCustomItemCreating\", \"customItem\")\r\n        }\r\n        return item\r\n    },\r\n    _customItemAddedHandler: function() {\r\n        var searchValue = this._searchValue(),\r\n            item = this._createCustomItem(searchValue);\r\n        if (void 0 === item) {\r\n            this._renderValue();\r\n            throw errors.Error(\"E0121\")\r\n        }\r\n        if (isPromise(item)) {\r\n            deferredUtils.fromPromise(item).done(this._setCustomItem.bind(this)).fail(this._setCustomItem.bind(this, null))\r\n        } else {\r\n            this._setCustomItem(item)\r\n        }\r\n    },\r\n    _setCustomItem: function(item) {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        item = item || null;\r\n        this.option(\"selectedItem\", item);\r\n        this._setValue(this._valueGetter(item));\r\n        this._renderDisplayText(this._displayGetter(item));\r\n        if (null === item && this._wasSearch()) {\r\n            this._filterDataSource(null)\r\n        }\r\n    },\r\n    _createClearButton: function() {\r\n        var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\r\n        var $clearButton = this.callBase();\r\n        eventsEngine.on($clearButton, eventName, function() {\r\n            return false\r\n        });\r\n        return $clearButton\r\n    },\r\n    _wasSearch: function(value) {\r\n        if (!arguments.length) {\r\n            return this._wasSearchValue\r\n        }\r\n        this._wasSearchValue = value\r\n    },\r\n    _searchHandler: function(e) {\r\n        if (this._preventFiltering) {\r\n            delete this._preventFiltering;\r\n            return\r\n        }\r\n        if (this._needPassDataSourceToList()) {\r\n            this._wasSearch(true)\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _dataSourceFiltered: function(searchValue) {\r\n        this.callBase();\r\n        if (null !== searchValue) {\r\n            this._renderInputSubstitution();\r\n            this._renderFocusedElement()\r\n        }\r\n    },\r\n    _valueSubstituted: function() {\r\n        var input = this._input().get(0),\r\n            isAllSelected = 0 === input.selectionStart && input.selectionEnd === this._searchValue().length,\r\n            inputHasSelection = input.selectionStart !== input.selectionEnd;\r\n        return this._wasSearch() && inputHasSelection && !isAllSelected\r\n    },\r\n    _shouldSubstitutionBeRendered: function() {\r\n        return this.option(\"autocompletionEnabled\") && !this._preventSubstitution && this.option(\"searchEnabled\") && !this.option(\"acceptCustomValue\") && \"startswith\" === this.option(\"searchMode\")\r\n    },\r\n    _renderInputSubstitution: function() {\r\n        if (!this._shouldSubstitutionBeRendered()) {\r\n            delete this._preventSubstitution;\r\n            return\r\n        }\r\n        var item = this._list && this._getPlainItems(this._list.option(\"items\"))[0];\r\n        if (!item) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            valueLength = $input.val().length;\r\n        if (0 === valueLength) {\r\n            return\r\n        }\r\n        var inputElement = $input.get(0),\r\n            displayValue = this._displayGetter(item).toString();\r\n        inputElement.value = displayValue;\r\n        this._caret({\r\n            start: valueLength,\r\n            end: displayValue.length\r\n        })\r\n    },\r\n    _cleanInputSelection: function() {\r\n        var inputElement = this._input().get(0),\r\n            endPosition = inputElement.value.length;\r\n        inputElement.selectionStart = endPosition;\r\n        inputElement.selectionEnd = endPosition\r\n    },\r\n    _dispose: function() {\r\n        this._renderInputValueAsync = commonUtils.noop;\r\n        delete this._loadItemDeferred;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"_isAdaptablePopupPosition\":\r\n            case \"autocompletionEnabled\":\r\n                break;\r\n            case \"onCustomItemCreating\":\r\n                this._initCustomItemCreatingAction();\r\n                break;\r\n            case \"tooltipEnabled\":\r\n                this._renderTooltip();\r\n                break;\r\n            case \"displayCustomValue\":\r\n            case \"acceptCustomValue\":\r\n            case \"showSelectionControls\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"selectedItem\":\r\n                if (args.previousValue !== args.value) {\r\n                    this.callBase(args)\r\n                }\r\n                break;\r\n            case \"allowClearing\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxSelectBox\", SelectBox);\r\nmodule.exports = SelectBox;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 760:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_list.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = __webpack_require__(1),\r\n    window = __webpack_require__(9).getWindow(),\r\n    eventsEngine = __webpack_require__(7),\r\n    Guid = __webpack_require__(77),\r\n    registerComponent = __webpack_require__(16),\r\n    commonUtils = __webpack_require__(6),\r\n    typeUtils = __webpack_require__(4),\r\n    extend = __webpack_require__(3).extend,\r\n    inArray = __webpack_require__(15).inArray,\r\n    DropDownEditor = __webpack_require__(742),\r\n    List = __webpack_require__(202),\r\n    errors = __webpack_require__(35),\r\n    eventUtils = __webpack_require__(8),\r\n    devices = __webpack_require__(14),\r\n    DataExpressionMixin = __webpack_require__(749),\r\n    messageLocalization = __webpack_require__(24),\r\n    themes = __webpack_require__(22),\r\n    ChildDefaultTemplate = __webpack_require__(143),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar LIST_ITEM_SELECTOR = \".dx-list-item\",\r\n    LIST_ITEM_DATA_KEY = \"dxListItemData\",\r\n    DROPDOWNLIST_POPUP_WRAPPER_CLASS = \"dx-dropdownlist-popup-wrapper\",\r\n    SKIP_GESTURE_EVENT_CLASS = \"dx-skip-gesture-event\",\r\n    SEARCH_EVENT = \"input\",\r\n    SEARCH_MODES = [\"startswith\", \"contains\", \"endwith\", \"notcontains\"];\r\nvar DropDownList = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        var parent = this.callBase();\r\n        return extend({}, parent, {\r\n            tab: function(e) {\r\n                if (this.option(\"opened\") && \"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this._saveValueChangeEvent(e);\r\n                    var $focusedItem = $(this._list.option(\"focusedElement\"));\r\n                    $focusedItem.length && this._setSelectedElement($focusedItem)\r\n                }\r\n                parent.tab.apply(this, arguments)\r\n            },\r\n            space: commonUtils.noop,\r\n            home: commonUtils.noop,\r\n            end: commonUtils.noop\r\n        })\r\n    },\r\n    _setSelectedElement: function($element) {\r\n        var value = this._valueGetter(this._list._getItemData($element));\r\n        this._setValue(value)\r\n    },\r\n    _setValue: function(value) {\r\n        this.option(\"value\", value)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), extend(DataExpressionMixin._dataExpressionDefaultOptions(), {\r\n            displayValue: void 0,\r\n            searchEnabled: false,\r\n            searchMode: \"contains\",\r\n            searchTimeout: 500,\r\n            minSearchLength: 0,\r\n            searchExpr: null,\r\n            valueChangeEvent: \"input change keyup\",\r\n            selectedItem: null,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            onSelectionChanged: null,\r\n            onItemClick: commonUtils.noop,\r\n            showDataBeforeSearch: false,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            popupPosition: {\r\n                my: \"left top\",\r\n                at: \"left bottom\",\r\n                offset: {\r\n                    h: 0,\r\n                    v: 0\r\n                },\r\n                collision: \"flip\"\r\n            },\r\n            popupWidthExtension: 0\r\n        }))\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: -6\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                popupWidthExtension: 32\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: -1\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom center\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            value: true,\r\n            selectedItem: true,\r\n            displayValue: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initDataExpressions();\r\n        this._initActions();\r\n        this._setListDataSource();\r\n        this._validateSearchMode();\r\n        this._clearSelectedItem();\r\n        this._initItems()\r\n    },\r\n    _initItems: function() {\r\n        var items = this.option().items;\r\n        if (items && !items.length && this._dataSource) {\r\n            this.option().items = this._dataSource.items()\r\n        }\r\n    },\r\n    _initActions: function() {\r\n        this._initContentReadyAction();\r\n        this._initSelectionChangedAction();\r\n        this._initItemClickAction()\r\n    },\r\n    _initContentReadyAction: function() {\r\n        this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initSelectionChangedAction: function() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initItemClickAction: function() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.item = new ChildDefaultTemplate(\"item\", this)\r\n    },\r\n    _saveFocusOnWidget: function(e) {\r\n        if (this._list && this._list.initialOption(\"focusStateEnabled\")) {\r\n            this._focusInput()\r\n        }\r\n    },\r\n    _createPopup: function() {\r\n        this.callBase();\r\n        this._popup._wrapper().addClass(this._popupWrapperClass());\r\n        var $popupContent = this._popup.$content();\r\n        eventsEngine.off($popupContent, \"mouseup\");\r\n        eventsEngine.on($popupContent, \"mouseup\", this._saveFocusOnWidget.bind(this))\r\n    },\r\n    _popupWrapperClass: function() {\r\n        return DROPDOWNLIST_POPUP_WRAPPER_CLASS\r\n    },\r\n    _renderInputValue: function() {\r\n        var value = this._getCurrentValue();\r\n        return this._loadInputValue(value, this._setSelectedItem.bind(this)).always(this.callBase.bind(this, value))\r\n    },\r\n    _loadInputValue: function(value, callback) {\r\n        return this._loadItem(value).always(callback)\r\n    },\r\n    _loadItem: function(value, cache) {\r\n        var plainItems, selectedItem;\r\n        if (cache && \"object\" !== (\"undefined\" === typeof value ? \"undefined\" : _typeof(value))) {\r\n            if (!cache.itemByValue) {\r\n                cache.itemByValue = {};\r\n                plainItems = this._getPlainItems();\r\n                plainItems.forEach(function(item) {\r\n                    cache.itemByValue[this._valueGetter(item)] = item\r\n                }, this)\r\n            }\r\n            selectedItem = cache.itemByValue[value]\r\n        }\r\n        if (!selectedItem) {\r\n            plainItems = this._getPlainItems();\r\n            selectedItem = commonUtils.grep(plainItems, function(item) {\r\n                return this._isValueEquals(this._valueGetter(item), value)\r\n            }.bind(this))[0]\r\n        }\r\n        return void 0 !== selectedItem ? (new Deferred).resolve(selectedItem).promise() : this._loadValue(value)\r\n    },\r\n    _getPlainItems: function(items) {\r\n        var plainItems = [];\r\n        items = items || this.option(\"items\") || [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            if (items[i] && items[i].items) {\r\n                plainItems = plainItems.concat(items[i].items)\r\n            } else {\r\n                plainItems.push(items[i])\r\n            }\r\n        }\r\n        return plainItems\r\n    },\r\n    _setSelectedItem: function(item) {\r\n        var displayValue = this._displayValue(item);\r\n        this.option(\"selectedItem\", commonUtils.ensureDefined(item, null));\r\n        this.option(\"displayValue\", displayValue)\r\n    },\r\n    _displayValue: function(item) {\r\n        return this._displayGetter(item)\r\n    },\r\n    _refreshSelected: function() {\r\n        var cache = {};\r\n        this._listItemElements().each(function(_, itemElement) {\r\n            var $itemElement = $(itemElement);\r\n            var itemValue = this._valueGetter($itemElement.data(LIST_ITEM_DATA_KEY));\r\n            var isItemSelected = this._isSelectedValue(itemValue, cache);\r\n            if (isItemSelected) {\r\n                this._list.selectItem($itemElement)\r\n            } else {\r\n                this._list.unselectItem($itemElement)\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _popupShownHandler: function() {\r\n        this.callBase();\r\n        this._setFocusPolicy()\r\n    },\r\n    _setFocusPolicy: function() {\r\n        if (!this.option(\"focusStateEnabled\") || !this._list) {\r\n            return\r\n        }\r\n        this._list.option(\"focusedElement\", null)\r\n    },\r\n    _isSelectedValue: function(value) {\r\n        return this._isValueEquals(value, this.option(\"value\"))\r\n    },\r\n    _validateSearchMode: function() {\r\n        var searchMode = this.option(\"searchMode\"),\r\n            normalizedSearchMode = searchMode.toLowerCase();\r\n        if (inArray(normalizedSearchMode, SEARCH_MODES) < 0) {\r\n            throw errors.Error(\"E1019\", searchMode)\r\n        }\r\n    },\r\n    _clearSelectedItem: function() {\r\n        this.option(\"selectedItem\", null)\r\n    },\r\n    _processDataSourceChanging: function() {\r\n        this._setListDataSource();\r\n        this._renderInputValue().fail(function() {\r\n            if (this._isCustomValueAllowed()) {\r\n                return\r\n            }\r\n            this._clearSelectedItem()\r\n        }.bind(this))\r\n    },\r\n    _isCustomValueAllowed: function() {\r\n        return this.option(\"displayCustomValue\")\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._clearFilter();\r\n        this._clearSelectedItem()\r\n    },\r\n    _listItemElements: function() {\r\n        return this._$list ? this._$list.find(LIST_ITEM_SELECTOR) : $()\r\n    },\r\n    _popupConfig: function() {\r\n        var that = this;\r\n        return extend(this.callBase(), {\r\n            templatesRenderAsynchronously: false,\r\n            width: this.option(\"width\"),\r\n            onShowing: function() {\r\n                that.$element().addClass(SKIP_GESTURE_EVENT_CLASS)\r\n            },\r\n            onHidden: function() {\r\n                that.$element().removeClass(SKIP_GESTURE_EVENT_CLASS)\r\n            },\r\n            height: \"auto\",\r\n            maxHeight: this._getMaxHeight.bind(this)\r\n        })\r\n    },\r\n    _renderPopupContent: function() {\r\n        this._renderList()\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._childKeyboardProcessor = this._keyboardProcessor.attachChildProcessor();\r\n        this._setListOption(\"_keyboardProcessor\", this._childKeyboardProcessor)\r\n    },\r\n    _fireContentReadyAction: commonUtils.noop,\r\n    _setAriaTargetForList: function() {\r\n        this._list._getAriaTarget = this._getAriaTarget.bind(this);\r\n        this._list.setAria(\"role\", \"combobox\")\r\n    },\r\n    _renderList: function() {\r\n        this._listId = \"dx-\" + (new Guid)._value;\r\n        var $list = this._$list = $(\"<div>\").attr(\"id\", this._listId).appendTo(this._popup.$content());\r\n        this._list = this._createComponent($list, List, this._listConfig());\r\n        this._refreshList();\r\n        this._setAriaTargetForList();\r\n        this._renderPreventBlur(this._$list)\r\n    },\r\n    _renderPreventBlur: function($target) {\r\n        var eventName = eventUtils.addNamespace(\"mousedown\", \"dxDropDownList\");\r\n        eventsEngine.off($target, eventName);\r\n        eventsEngine.on($target, eventName, function(e) {\r\n            e.preventDefault()\r\n        }.bind(this))\r\n    },\r\n    _renderOpenedState: function() {\r\n        this.callBase();\r\n        var opened = this.option(\"opened\") || void 0;\r\n        this.setAria({\r\n            activedescendant: opened && this._list.getFocusedItemId(),\r\n            owns: opened && this._listId\r\n        })\r\n    },\r\n    _refreshList: function() {\r\n        if (this._list && this._shouldRefreshDataSource()) {\r\n            this._setListDataSource()\r\n        }\r\n    },\r\n    _shouldRefreshDataSource: function() {\r\n        var dataSourceProvided = !!this._list.option(\"dataSource\");\r\n        return dataSourceProvided !== this._needPassDataSourceToList()\r\n    },\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    },\r\n    _getListKeyExpr: function() {\r\n        var valueExpr = this.option(\"valueExpr\"),\r\n            isValueExprField = typeUtils.isString(valueExpr) && \"this\" !== valueExpr;\r\n        return isValueExprField ? valueExpr : null\r\n    },\r\n    _listConfig: function() {\r\n        var options = {\r\n            selectionMode: \"single\",\r\n            _templates: this.option(\"_templates\"),\r\n            templateProvider: this.option(\"templateProvider\"),\r\n            noDataText: this.option(\"noDataText\"),\r\n            grouped: this.option(\"grouped\"),\r\n            onContentReady: this._listContentReadyHandler.bind(this),\r\n            itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\r\n            indicateLoading: false,\r\n            keyExpr: this._getListKeyExpr(),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            tabIndex: null,\r\n            onItemClick: this._listItemClickAction.bind(this),\r\n            dataSource: this._getDataSource(),\r\n            _keyboardProcessor: this._childKeyboardProcessor,\r\n            hoverStateEnabled: this._isDesktopDevice() ? this.option(\"hoverStateEnabled\") : false,\r\n            focusStateEnabled: this._isDesktopDevice() ? this.option(\"focusStateEnabled\") : false\r\n        };\r\n        return options\r\n    },\r\n    _getDataSource: function() {\r\n        return this._needPassDataSourceToList() ? this._dataSource : null\r\n    },\r\n    _dataSourceOptions: function() {\r\n        return {\r\n            paginate: false\r\n        }\r\n    },\r\n    _dataSourceFromUrlLoadMode: function() {\r\n        return \"raw\"\r\n    },\r\n    _listContentReadyHandler: function() {\r\n        this._list = this._list || this._$list.dxList(\"instance\");\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._refreshSelected()\r\n        }\r\n        this._dimensionChanged();\r\n        this._contentReadyAction()\r\n    },\r\n    _setListOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_list\", arguments)\r\n    },\r\n    _listItemClickAction: function(e) {\r\n        this._listItemClickHandler(e);\r\n        this._itemClickAction(e)\r\n    },\r\n    _listItemClickHandler: commonUtils.noop,\r\n    _setListDataSource: function() {\r\n        if (!this._list) {\r\n            return\r\n        }\r\n        this._setListOption(\"dataSource\", this._getDataSource());\r\n        if (!this._needPassDataSourceToList()) {\r\n            this._setListOption(\"items\", [])\r\n        }\r\n    },\r\n    _needPassDataSourceToList: function() {\r\n        return this.option(\"showDataBeforeSearch\") || this._isMinSearchLengthExceeded()\r\n    },\r\n    _isMinSearchLengthExceeded: function() {\r\n        return this._searchValue().toString().length >= this.option(\"minSearchLength\")\r\n    },\r\n    _searchValue: function() {\r\n        return this._input().val() || \"\"\r\n    },\r\n    _getSearchEvent: function() {\r\n        return eventUtils.addNamespace(SEARCH_EVENT, this.NAME + \"Search\")\r\n    },\r\n    _getSetFocusPolicyEvent: function() {\r\n        return eventUtils.addNamespace(\"input\", this.NAME + \"FocusPolicy\")\r\n    },\r\n    _renderEvents: function() {\r\n        this.callBase();\r\n        eventsEngine.on(this._input(), this._getSetFocusPolicyEvent(), this._setFocusPolicy.bind(this));\r\n        if (this._shouldRenderSearchEvent()) {\r\n            eventsEngine.on(this._input(), this._getSearchEvent(), this._searchHandler.bind(this))\r\n        }\r\n    },\r\n    _shouldRenderSearchEvent: function() {\r\n        return this.option(\"searchEnabled\")\r\n    },\r\n    _refreshEvents: function() {\r\n        eventsEngine.off(this._input(), this._getSearchEvent());\r\n        eventsEngine.off(this._input(), this._getSetFocusPolicyEvent());\r\n        this.callBase()\r\n    },\r\n    _searchHandler: function() {\r\n        if (!this._isMinSearchLengthExceeded()) {\r\n            this._searchCanceled();\r\n            return\r\n        }\r\n        var searchTimeout = this.option(\"searchTimeout\");\r\n        if (searchTimeout) {\r\n            this._clearSearchTimer();\r\n            this._searchTimer = setTimeout(this._searchDataSource.bind(this), searchTimeout)\r\n        } else {\r\n            this._searchDataSource()\r\n        }\r\n    },\r\n    _searchCanceled: function() {\r\n        this._clearSearchTimer();\r\n        if (this._needPassDataSourceToList()) {\r\n            this._filterDataSource(null)\r\n        }\r\n        this._refreshList()\r\n    },\r\n    _searchDataSource: function() {\r\n        this._filterDataSource(this._searchValue())\r\n    },\r\n    _filterDataSource: function(searchValue) {\r\n        this._clearSearchTimer();\r\n        var dataSource = this._dataSource;\r\n        dataSource.searchExpr(this.option(\"searchExpr\") || this._displayGetterExpr());\r\n        dataSource.searchOperation(this.option(\"searchMode\"));\r\n        dataSource.searchValue(searchValue);\r\n        return dataSource.load().done(this._dataSourceFiltered.bind(this, searchValue))\r\n    },\r\n    _clearFilter: function() {\r\n        var dataSource = this._dataSource;\r\n        dataSource && dataSource.searchValue() && dataSource.searchValue(null)\r\n    },\r\n    _dataSourceFiltered: function() {\r\n        this._refreshList();\r\n        this._refreshPopupVisibility()\r\n    },\r\n    _refreshPopupVisibility: function() {\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this.option(\"opened\", this._hasItemsToShow());\r\n        if (this.option(\"opened\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dataSourceChangedHandler: function(newItems) {\r\n        if (0 === this._dataSource.pageIndex()) {\r\n            this.option().items = newItems\r\n        } else {\r\n            this.option().items = this.option().items.concat(newItems)\r\n        }\r\n    },\r\n    _hasItemsToShow: function() {\r\n        var resultItems = this._dataSource && this._dataSource.items() || [];\r\n        var resultAmount = resultItems.length;\r\n        var isMinSearchLengthExceeded = this._needPassDataSourceToList();\r\n        return !!(isMinSearchLengthExceeded && resultAmount)\r\n    },\r\n    _clearSearchTimer: function() {\r\n        clearTimeout(this._searchTimer);\r\n        delete this._searchTimer\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this._dimensionChanged()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._popup && this._updatePopupDimensions()\r\n    },\r\n    _updatePopupDimensions: function() {\r\n        this._updatePopupWidth();\r\n        this._updatePopupHeight()\r\n    },\r\n    _updatePopupWidth: function() {\r\n        this._setPopupOption(\"width\", this.$element().outerWidth() + this.option(\"popupWidthExtension\"))\r\n    },\r\n    _needPopupRepaint: function() {\r\n        if (!this._dataSource) {\r\n            return false\r\n        }\r\n        var currentPageIndex = this._dataSource.pageIndex(),\r\n            needRepaint = typeUtils.isDefined(this._pageIndex) && currentPageIndex <= this._pageIndex;\r\n        this._pageIndex = currentPageIndex;\r\n        return needRepaint\r\n    },\r\n    _updatePopupHeight: function() {\r\n        if (this._needPopupRepaint()) {\r\n            this._popup.repaint()\r\n        }\r\n        this._list && this._list.updateDimensions()\r\n    },\r\n    _getMaxHeight: function() {\r\n        var $element = this.$element(),\r\n            offset = $element.offset(),\r\n            windowHeight = $(window).height(),\r\n            maxHeight = Math.max(offset.top, windowHeight - offset.top - $element.outerHeight());\r\n        return Math.min(.5 * windowHeight, maxHeight)\r\n    },\r\n    _clean: function() {\r\n        if (this._list) {\r\n            delete this._list\r\n        }\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        this._clearSearchTimer();\r\n        this.callBase()\r\n    },\r\n    _setCollectionWidgetOption: function() {\r\n        this._setListOption.apply(this, arguments)\r\n    },\r\n    _optionChanged: function(args) {\r\n        this._dataExpressionOptionChanged(args);\r\n        switch (args.name) {\r\n            case \"hoverStateEnabled\":\r\n            case \"focusStateEnabled\":\r\n                this._isDesktopDevice() && this._setListOption(args.name, args.value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                if (!this.option(\"dataSource\")) {\r\n                    this._processDataSourceChanging()\r\n                }\r\n                break;\r\n            case \"dataSource\":\r\n                this._processDataSourceChanging();\r\n                break;\r\n            case \"valueExpr\":\r\n                this._renderValue();\r\n                this._setListOption(\"keyExpr\", this._getListKeyExpr());\r\n                break;\r\n            case \"displayExpr\":\r\n                this._renderValue();\r\n                break;\r\n            case \"searchMode\":\r\n                this._validateSearchMode();\r\n                break;\r\n            case \"minSearchLength\":\r\n                this._refreshList();\r\n                break;\r\n            case \"searchEnabled\":\r\n            case \"showDataBeforeSearch\":\r\n            case \"searchExpr\":\r\n                this._invalidate();\r\n                break;\r\n            case \"onContentReady\":\r\n                this._initContentReadyAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._initSelectionChangedAction();\r\n                break;\r\n            case \"onItemClick\":\r\n                this._initItemClickAction();\r\n                break;\r\n            case \"grouped\":\r\n            case \"groupTemplate\":\r\n            case \"noDataText\":\r\n                this._setListOption(args.name);\r\n                break;\r\n            case \"displayValue\":\r\n                this.option(\"text\", args.value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"searchTimeout\":\r\n            case \"popupWidthExtension\":\r\n                break;\r\n            case \"selectedItem\":\r\n                this._selectionChangedAction({\r\n                    selectedItem: args.value\r\n                });\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataExpressionMixin);\r\nregisterComponent(\"dxDropDownList\", DropDownList);\r\nmodule.exports = DropDownList;\r\n\n\n/***/ }),\n\n/***/ 764:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (localization/ldml/date.parser.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar escapeRegExp = __webpack_require__(6).escapeRegExp;\r\nvar FORMAT_TYPES = {\r\n    3: \"abbreviated\",\r\n    4: \"wide\",\r\n    5: \"narrow\"\r\n};\r\nvar monthRegExpGenerator = function(count, dateParts) {\r\n    if (count > 2) {\r\n        return Object.keys(FORMAT_TYPES).map(function(count) {\r\n            return [\"format\", \"standalone\"].map(function(type) {\r\n                return dateParts.getMonthNames(FORMAT_TYPES[count], type).join(\"|\")\r\n            }).join(\"|\")\r\n        }).join(\"|\")\r\n    }\r\n    return \"0?[1-9]|1[012]\"\r\n};\r\nvar PATTERN_REGEXPS = {\r\n    y: function(count) {\r\n        return \"[0-9]+\"\r\n    },\r\n    M: monthRegExpGenerator,\r\n    L: monthRegExpGenerator,\r\n    Q: function(count, dateParts) {\r\n        if (count > 2) {\r\n            return dateParts.getQuarterNames(FORMAT_TYPES[count], \"format\").join(\"|\")\r\n        }\r\n        return \"0?[1-4]\"\r\n    },\r\n    E: function(count, dateParts) {\r\n        return \"\\\\D*\"\r\n    },\r\n    a: function(count, dateParts) {\r\n        return dateParts.getPeriodNames(FORMAT_TYPES[count < 3 ? 3 : count], \"format\").join(\"|\")\r\n    },\r\n    d: function(count) {\r\n        return \"0?[1-9]|[12][0-9]|3[01]\"\r\n    },\r\n    H: function(count) {\r\n        return \"0?[0-9]|1[0-9]|2[0-3]\"\r\n    },\r\n    h: function(count) {\r\n        return \"0?[1-9]|1[012]\"\r\n    },\r\n    m: function(count) {\r\n        return \"0?[0-9]|[1-5][0-9]\"\r\n    },\r\n    s: function(count) {\r\n        return \"0?[0-9]|[1-5][0-9]\"\r\n    },\r\n    S: function(count) {\r\n        return \"[0-9]{1,\" + count + \"}\"\r\n    }\r\n};\r\nvar parseNumber = Number;\r\nvar caseInsensitiveIndexOf = function(array, value) {\r\n    return array.map(function(item) {\r\n        return item.toLowerCase()\r\n    }).indexOf(value.toLowerCase())\r\n};\r\nvar monthPatternParser = function(text, count, dateParts) {\r\n    if (count > 2) {\r\n        return [\"format\", \"standalone\"].map(function(type) {\r\n            return Object.keys(FORMAT_TYPES).map(function(count) {\r\n                var monthNames = dateParts.getMonthNames(FORMAT_TYPES[count], type);\r\n                return caseInsensitiveIndexOf(monthNames, text)\r\n            })\r\n        }).reduce(function(a, b) {\r\n            return a.concat(b)\r\n        }).filter(function(index) {\r\n            return index >= 0\r\n        })[0]\r\n    }\r\n    return parseNumber(text) - 1\r\n};\r\nvar PATTERN_PARSERS = {\r\n    y: function(text, count) {\r\n        var year = parseNumber(text);\r\n        if (2 === count) {\r\n            return year < 30 ? 2e3 + year : 1900 + year\r\n        }\r\n        return year\r\n    },\r\n    M: monthPatternParser,\r\n    L: monthPatternParser,\r\n    Q: function(text, count, dateParts) {\r\n        if (count > 2) {\r\n            return dateParts.getQuarterNames(FORMAT_TYPES[count], \"format\").indexOf(text)\r\n        }\r\n        return parseNumber(text) - 1\r\n    },\r\n    E: function(text, count, dateParts) {\r\n        var dayNames = dateParts.getDayNames(FORMAT_TYPES[count < 3 ? 3 : count], \"format\");\r\n        return caseInsensitiveIndexOf(dayNames, text)\r\n    },\r\n    a: function(text, count, dateParts) {\r\n        var periodNames = dateParts.getPeriodNames(FORMAT_TYPES[count < 3 ? 3 : count], \"format\");\r\n        return caseInsensitiveIndexOf(periodNames, text)\r\n    },\r\n    d: parseNumber,\r\n    H: parseNumber,\r\n    h: parseNumber,\r\n    m: parseNumber,\r\n    s: parseNumber,\r\n    S: function(text, count) {\r\n        count = Math.max(count, 3);\r\n        text = text.slice(0, 3);\r\n        while (count < 3) {\r\n            text += \"0\";\r\n            count++\r\n        }\r\n        return parseNumber(text)\r\n    }\r\n};\r\nvar ORDERED_PATTERNS = [\"y\", \"M\", \"d\", \"h\", \"m\", \"s\", \"S\"];\r\nvar PATTERN_SETTERS = {\r\n    y: \"setFullYear\",\r\n    M: \"setMonth\",\r\n    L: \"setMonth\",\r\n    a: function(date, value) {\r\n        var hours = date.getHours();\r\n        if (!value && 12 === hours) {\r\n            date.setHours(0)\r\n        } else {\r\n            if (value && 12 !== hours) {\r\n                date.setHours(hours + 12)\r\n            }\r\n        }\r\n    },\r\n    d: \"setDate\",\r\n    H: \"setHours\",\r\n    h: \"setHours\",\r\n    m: \"setMinutes\",\r\n    s: \"setSeconds\",\r\n    S: \"setMilliseconds\"\r\n};\r\nvar getSameCharCount = function(text, index) {\r\n    var char = text[index],\r\n        count = 0;\r\n    do {\r\n        index++;\r\n        count++\r\n    } while (text[index] === char);\r\n    return count\r\n};\r\nvar createPattern = function(char, count) {\r\n    var result = \"\";\r\n    for (var i = 0; i < count; i++) {\r\n        result += char\r\n    }\r\n    return result\r\n};\r\nvar getRegExpInfo = function(format, dateParts) {\r\n    var isEscaping, regexpText = \"\",\r\n        patterns = [];\r\n    for (var i = 0; i < format.length; i++) {\r\n        var char = format[i],\r\n            isEscapeChar = \"'\" === char,\r\n            regexpPart = PATTERN_REGEXPS[char];\r\n        if (isEscapeChar) {\r\n            isEscaping = !isEscaping;\r\n            if (\"'\" !== format[i - 1]) {\r\n                continue\r\n            }\r\n        }\r\n        if (regexpPart && !isEscaping) {\r\n            var count = getSameCharCount(format, i),\r\n                pattern = createPattern(char, count);\r\n            patterns.push(pattern);\r\n            regexpText += \"(\" + regexpPart(count, dateParts) + \")\";\r\n            i += count - 1\r\n        } else {\r\n            char = escapeRegExp(char);\r\n            patterns.push(char);\r\n            regexpText += \"(\" + char + \")\"\r\n        }\r\n    }\r\n    return {\r\n        patterns: patterns,\r\n        regexp: new RegExp(\"^\" + regexpText + \"$\", \"i\")\r\n    }\r\n};\r\nvar getPatternSetters = function() {\r\n    return PATTERN_SETTERS\r\n};\r\nvar setPatternPart = function(date, pattern, text, dateParts) {\r\n    var patternChar = pattern[0],\r\n        partSetter = PATTERN_SETTERS[patternChar],\r\n        partParser = PATTERN_PARSERS[patternChar];\r\n    if (partSetter && partParser) {\r\n        var value = partParser(text, pattern.length, dateParts);\r\n        if (date[partSetter]) {\r\n            date[partSetter](value)\r\n        } else {\r\n            partSetter(date, value)\r\n        }\r\n    }\r\n};\r\nvar setPatternPartFromNow = function(date, pattern, now) {\r\n    var setterName = PATTERN_SETTERS[pattern],\r\n        getterName = \"g\" + setterName.substr(1);\r\n    date[setterName](now[getterName]())\r\n};\r\nvar getShortPatterns = function(fullPatterns) {\r\n    return fullPatterns.map(function(pattern) {\r\n        return \"H\" === pattern[0] ? \"h\" : pattern[0]\r\n    })\r\n};\r\nvar getMaxOrderedPatternIndex = function(patterns) {\r\n    var indexes = patterns.map(function(pattern) {\r\n        return ORDERED_PATTERNS.indexOf(pattern)\r\n    });\r\n    return Math.max.apply(Math, indexes)\r\n};\r\nvar getOrderedFormatPatterns = function(formatPatterns) {\r\n    var otherPatterns = formatPatterns.filter(function(pattern) {\r\n        return ORDERED_PATTERNS.indexOf(pattern) < 0\r\n    });\r\n    return ORDERED_PATTERNS.concat(otherPatterns)\r\n};\r\nvar getParser = function(format, dateParts) {\r\n    var regExpInfo = getRegExpInfo(format, dateParts);\r\n    return function(text) {\r\n        var regExpResult = regExpInfo.regexp.exec(text);\r\n        if (regExpResult) {\r\n            var now = new Date,\r\n                date = new Date(now.getFullYear(), 0, 1),\r\n                formatPatterns = getShortPatterns(regExpInfo.patterns),\r\n                maxPatternIndex = getMaxOrderedPatternIndex(formatPatterns),\r\n                orderedFormatPatterns = getOrderedFormatPatterns(formatPatterns);\r\n            orderedFormatPatterns.forEach(function(pattern, index) {\r\n                if (index < ORDERED_PATTERNS.length && index > maxPatternIndex) {\r\n                    return\r\n                }\r\n                var patternIndex = formatPatterns.indexOf(pattern);\r\n                if (patternIndex >= 0) {\r\n                    setPatternPart(date, regExpInfo.patterns[patternIndex], regExpResult[patternIndex + 1], dateParts)\r\n                } else {\r\n                    setPatternPartFromNow(date, pattern, now)\r\n                }\r\n            });\r\n            return date\r\n        }\r\n        return null\r\n    }\r\n};\r\nexports.getParser = getParser;\r\nexports.getRegExpInfo = getRegExpInfo;\r\nexports.getPatternSetters = getPatternSetters;\r\n\n\n/***/ }),\n\n/***/ 765:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (localization/ldml/date.formatter.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\nfunction leftPad(text, length) {\r\n    while (text.length < length) {\r\n        text = \"0\" + text\r\n    }\r\n    return text\r\n}\r\nvar FORMAT_TYPES = {\r\n    3: \"abbreviated\",\r\n    4: \"wide\",\r\n    5: \"narrow\"\r\n};\r\nvar LDML_FORMATTERS = {\r\n    y: function(date, count, useUtc) {\r\n        var year = date[useUtc ? \"getUTCFullYear\" : \"getFullYear\"]();\r\n        if (2 === count) {\r\n            year %= 100\r\n        }\r\n        return leftPad(year.toString(), count)\r\n    },\r\n    M: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getMonthNames(formatType, \"format\")[month]\r\n        }\r\n        return leftPad((month + 1).toString(), Math.min(count, 2))\r\n    },\r\n    L: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getMonthNames(formatType, \"standalone\")[month]\r\n        }\r\n        return leftPad((month + 1).toString(), Math.min(count, 2))\r\n    },\r\n    Q: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var quarter = Math.floor(month / 3);\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getQuarterNames(formatType)[quarter]\r\n        }\r\n        return leftPad((quarter + 1).toString(), Math.min(count, 2))\r\n    },\r\n    E: function(date, count, useUtc, dateParts) {\r\n        var day = date[useUtc ? \"getUTCDay\" : \"getDay\"]();\r\n        var formatType = FORMAT_TYPES[count < 3 ? 3 : count];\r\n        return dateParts.getDayNames(formatType)[day]\r\n    },\r\n    a: function(date, count, useUtc, dateParts) {\r\n        var hours = date[useUtc ? \"getUTCHours\" : \"getHours\"](),\r\n            period = hours < 12 ? 0 : 1,\r\n            formatType = FORMAT_TYPES[count];\r\n        return dateParts.getPeriodNames(formatType)[period]\r\n    },\r\n    d: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCDate\" : \"getDate\"]().toString(), Math.min(count, 2))\r\n    },\r\n    H: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCHours\" : \"getHours\"]().toString(), Math.min(count, 2))\r\n    },\r\n    h: function(date, count, useUtc) {\r\n        var hours = date[useUtc ? \"getUTCHours\" : \"getHours\"]();\r\n        return leftPad((hours % 12 || 12).toString(), Math.min(count, 2))\r\n    },\r\n    m: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCMinutes\" : \"getMinutes\"]().toString(), Math.min(count, 2))\r\n    },\r\n    s: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCSeconds\" : \"getSeconds\"]().toString(), Math.min(count, 2))\r\n    },\r\n    S: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCMilliseconds\" : \"getMilliseconds\"]().toString(), 3).substr(0, count)\r\n    },\r\n    x: function(date, count, useUtc) {\r\n        var timezoneOffset = useUtc ? 0 : date.getTimezoneOffset(),\r\n            signPart = timezoneOffset > 0 ? \"-\" : \"+\",\r\n            timezoneOffsetAbs = Math.abs(timezoneOffset),\r\n            hours = Math.floor(timezoneOffsetAbs / 60),\r\n            minutes = timezoneOffsetAbs % 60,\r\n            hoursPart = leftPad(hours.toString(), 2),\r\n            minutesPart = leftPad(minutes.toString(), 2);\r\n        return signPart + hoursPart + (count >= 3 ? \":\" : \"\") + (count > 1 || minutes ? minutesPart : \"\")\r\n    },\r\n    X: function(date, count, useUtc) {\r\n        if (useUtc || !date.getTimezoneOffset()) {\r\n            return \"Z\"\r\n        }\r\n        return LDML_FORMATTERS.x(date, count, useUtc)\r\n    },\r\n    Z: function(date, count, useUtc) {\r\n        return LDML_FORMATTERS.X(date, count >= 5 ? 3 : 2, useUtc)\r\n    }\r\n};\r\nvar getFormatter = function(format, dateParts) {\r\n    return function(date) {\r\n        var charIndex, formatter, char, isCurrentCharEqualsNext, charCount = 0,\r\n            separator = \"'\",\r\n            isEscaping = false,\r\n            result = \"\";\r\n        if (!date) {\r\n            return null\r\n        }\r\n        if (!format) {\r\n            return date\r\n        }\r\n        var useUtc = \"Z\" === format[format.length - 1] || \"'Z'\" === format.slice(-3);\r\n        for (charIndex = 0; charIndex < format.length; charIndex++) {\r\n            char = format[charIndex];\r\n            formatter = LDML_FORMATTERS[char];\r\n            isCurrentCharEqualsNext = char === format[charIndex + 1];\r\n            charCount++;\r\n            if (!isCurrentCharEqualsNext) {\r\n                if (formatter && !isEscaping) {\r\n                    result += formatter(date, charCount, useUtc, dateParts)\r\n                }\r\n                charCount = 0\r\n            }\r\n            if (char === separator && !isCurrentCharEqualsNext) {\r\n                isEscaping = !isEscaping\r\n            } else {\r\n                if (isEscaping || !formatter) {\r\n                    result += char\r\n                }\r\n            }\r\n            if (char === separator && isCurrentCharEqualsNext) {\r\n                charIndex++\r\n            }\r\n        }\r\n        return result\r\n    }\r\n};\r\nmodule.exports.getFormatter = getFormatter;\r\n\n\n/***/ }),\n\n/***/ 766:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (localization/default_date_names.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar iteratorUtils = __webpack_require__(5);\r\nvar MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n    DAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n    PERIODS = [\"AM\", \"PM\"],\r\n    QUARTERS = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\r\nvar cutCaptions = function(captions, format) {\r\n    var lengthByFormat = {\r\n        abbreviated: 3,\r\n        \"short\": 2,\r\n        narrow: 1\r\n    };\r\n    return iteratorUtils.map(captions, function(caption) {\r\n        return caption.substr(0, lengthByFormat[format])\r\n    })\r\n};\r\nmodule.exports = {\r\n    getMonthNames: function(format) {\r\n        return cutCaptions(MONTHS, format)\r\n    },\r\n    getDayNames: function(format) {\r\n        return cutCaptions(DAYS, format)\r\n    },\r\n    getQuarterNames: function(format) {\r\n        return QUARTERS\r\n    },\r\n    getPeriodNames: function(format) {\r\n        return PERIODS\r\n    }\r\n};\r\n\n\n/***/ }),\n\n/***/ 767:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.calendar.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar Calendar = __webpack_require__(794),\r\n    DateBoxStrategy = __webpack_require__(743),\r\n    dateUtils = __webpack_require__(737),\r\n    commonUtils = __webpack_require__(6),\r\n    isFunction = __webpack_require__(4).isFunction,\r\n    extend = __webpack_require__(3).extend,\r\n    messageLocalization = __webpack_require__(24);\r\nvar CalendarStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"Calendar\",\r\n    supportedKeys: function() {\r\n        return {\r\n            rightArrow: function() {\r\n                if (this.option(\"opened\")) {\r\n                    return true\r\n                }\r\n            },\r\n            leftArrow: function() {\r\n                if (this.option(\"opened\")) {\r\n                    return true\r\n                }\r\n            },\r\n            enter: function(e) {\r\n                if (this.dateBox.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    if (this._widget.option(\"zoomLevel\") === this._widget.option(\"maxZoomLevel\")) {\r\n                        var contouredDate = this._widget._view.option(\"contouredDate\");\r\n                        contouredDate && this.dateBoxValue(contouredDate, e);\r\n                        this.dateBox.close();\r\n                        this.dateBox._valueChangeEventHandler(e)\r\n                    } else {\r\n                        return true\r\n                    }\r\n                } else {\r\n                    this.dateBox._valueChangeEventHandler(e)\r\n                }\r\n            }.bind(this)\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shortdate\"\r\n    },\r\n    _getWidgetName: function() {\r\n        return Calendar\r\n    },\r\n    _getWidgetOptions: function() {\r\n        var disabledDates = this.dateBox.option(\"disabledDates\");\r\n        return extend(this.dateBox.option(\"calendarOptions\"), {\r\n            value: this.dateBoxValue() || null,\r\n            dateSerializationFormat: null,\r\n            _keyboardProcessor: this._widgetKeyboardProcessor,\r\n            min: this.dateBox.dateOption(\"min\"),\r\n            max: this.dateBox.dateOption(\"max\"),\r\n            onValueChanged: this._valueChangedHandler.bind(this),\r\n            onCellClick: this._cellClickHandler.bind(this),\r\n            tabIndex: null,\r\n            disabledDates: isFunction(disabledDates) ? this._injectComponent(disabledDates.bind(this.dateBox)) : disabledDates,\r\n            onContouredChanged: this._refreshActiveDescendant.bind(this),\r\n            hasFocus: function() {\r\n                return true\r\n            }\r\n        })\r\n    },\r\n    _injectComponent: function(func) {\r\n        var that = this;\r\n        return function(params) {\r\n            extend(params, {\r\n                component: that.dateBox\r\n            });\r\n            return func(params)\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function(e) {\r\n        this.dateBox.setAria(\"activedescendant\", e.actionValue)\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var toolbarItems = _popupConfig.toolbarItems,\r\n            buttonsLocation = this.dateBox.option(\"buttonsLocation\");\r\n        var position = [];\r\n        if (\"default\" !== buttonsLocation) {\r\n            position = commonUtils.splitPair(buttonsLocation)\r\n        } else {\r\n            position = [\"bottom\", \"center\"]\r\n        }\r\n        if (\"useButtons\" === this.dateBox.option(\"applyValueMode\")) {\r\n            toolbarItems.unshift({\r\n                widget: \"dxButton\",\r\n                toolbar: position[0],\r\n                location: \"after\" === position[1] ? \"before\" : position[1],\r\n                options: {\r\n                    onClick: function() {\r\n                        this._widget._toTodayView()\r\n                    }.bind(this),\r\n                    text: messageLocalization.format(\"dxCalendar-todayButtonText\"),\r\n                    type: \"today\"\r\n                }\r\n            })\r\n        }\r\n        return extend(true, _popupConfig, {\r\n            toolbarItems: toolbarItems,\r\n            position: {\r\n                collision: \"flipfit flip\"\r\n            }\r\n        })\r\n    },\r\n    _valueChangedHandler: function(e) {\r\n        var dateBox = this.dateBox,\r\n            value = e.value,\r\n            prevValue = e.previousValue;\r\n        if (dateUtils.sameDate(value, prevValue)) {\r\n            return\r\n        }\r\n        if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\r\n            this.dateBoxValue(this.getValue(), e.event)\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._widget.option(\"value\", this.dateBoxValue())\r\n    },\r\n    textChangedHandler: function() {\r\n        if (this.dateBox.option(\"opened\") && this._widget) {\r\n            this._updateValue(true)\r\n        }\r\n    },\r\n    _cellClickHandler: function(e) {\r\n        var dateBox = this.dateBox;\r\n        if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\r\n            dateBox.option(\"opened\", false);\r\n            this.dateBoxValue(this.getValue(), e.event)\r\n        }\r\n    }\r\n});\r\nmodule.exports = CalendarStrategy;\r\n\n\n/***/ }),\n\n/***/ 778:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/validator.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar dataUtils = __webpack_require__(40),\r\n    Callbacks = __webpack_require__(21),\r\n    errors = __webpack_require__(35),\r\n    DOMComponent = __webpack_require__(104),\r\n    extend = __webpack_require__(3).extend,\r\n    map = __webpack_require__(5).map,\r\n    ValidationMixin = __webpack_require__(208),\r\n    ValidationEngine = __webpack_require__(340),\r\n    DefaultAdapter = __webpack_require__(834),\r\n    registerComponent = __webpack_require__(16);\r\nvar VALIDATOR_CLASS = \"dx-validator\";\r\nvar Validator = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            validationRules: []\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initGroupRegistration();\r\n        this.focused = Callbacks();\r\n        this._initAdapter()\r\n    },\r\n    _initGroupRegistration: function() {\r\n        var group = this._findGroup();\r\n        if (!this._groupWasInit) {\r\n            this.on(\"disposing\", function(args) {\r\n                ValidationEngine.removeRegisteredValidator(args.component._validationGroup, args.component)\r\n            })\r\n        }\r\n        if (!this._groupWasInit || this._validationGroup !== group) {\r\n            ValidationEngine.removeRegisteredValidator(this._validationGroup, this);\r\n            this._groupWasInit = true;\r\n            this._validationGroup = group;\r\n            ValidationEngine.registerValidatorInGroup(group, this)\r\n        }\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _initAdapter: function() {\r\n        var that = this,\r\n            element = that.$element()[0],\r\n            dxStandardEditor = dataUtils.data(element, \"dx-validation-target\"),\r\n            adapter = that.option(\"adapter\");\r\n        if (!adapter) {\r\n            if (dxStandardEditor) {\r\n                adapter = new DefaultAdapter(dxStandardEditor, this);\r\n                adapter.validationRequestsCallbacks.add(function() {\r\n                    that.validate()\r\n                });\r\n                this.option(\"adapter\", adapter);\r\n                return\r\n            }\r\n            throw errors.Error(\"E0120\")\r\n        }\r\n        var callbacks = adapter.validationRequestsCallbacks;\r\n        if (callbacks) {\r\n            if (Array.isArray(callbacks)) {\r\n                callbacks.push(function() {\r\n                    that.validate()\r\n                })\r\n            } else {\r\n                errors.log(\"W0014\", \"validationRequestsCallbacks\", \"jQuery.Callbacks\", \"17.2\", \"Use the array instead\");\r\n                callbacks.add(function() {\r\n                    that.validate()\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(VALIDATOR_CLASS);\r\n        this.callBase()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._initGroupRegistration()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"validationGroup\":\r\n                this._initGroupRegistration();\r\n                return;\r\n            case \"validationRules\":\r\n                this._resetValidationRules();\r\n                void 0 !== this.option(\"isValid\") && this.validate();\r\n                return;\r\n            case \"adapter\":\r\n                this._initAdapter();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getValidationRules: function() {\r\n        if (!this._validationRules) {\r\n            this._validationRules = map(this.option(\"validationRules\"), function(rule) {\r\n                return extend({}, rule, {\r\n                    validator: this\r\n                })\r\n            }.bind(this))\r\n        }\r\n        return this._validationRules\r\n    },\r\n    _resetValidationRules: function() {\r\n        delete this._validationRules\r\n    },\r\n    validate: function() {\r\n        var result, that = this,\r\n            adapter = that.option(\"adapter\"),\r\n            name = that.option(\"name\"),\r\n            bypass = adapter.bypass && adapter.bypass(),\r\n            value = adapter.getValue(),\r\n            currentError = adapter.getCurrentValidationError && adapter.getCurrentValidationError(),\r\n            rules = this._getValidationRules();\r\n        if (bypass) {\r\n            result = {\r\n                isValid: true\r\n            }\r\n        } else {\r\n            if (currentError && currentError.editorSpecific) {\r\n                currentError.validator = this;\r\n                result = {\r\n                    isValid: false,\r\n                    brokenRule: currentError\r\n                }\r\n            } else {\r\n                result = ValidationEngine.validate(value, rules, name)\r\n            }\r\n        }\r\n        this._applyValidationResult(result, adapter);\r\n        return result\r\n    },\r\n    reset: function() {\r\n        var that = this,\r\n            adapter = that.option(\"adapter\"),\r\n            result = {\r\n                isValid: true,\r\n                brokenRule: null\r\n            };\r\n        adapter.reset();\r\n        this._resetValidationRules();\r\n        this._applyValidationResult(result, adapter)\r\n    },\r\n    _applyValidationResult: function(result, adapter) {\r\n        var validatedAction = this._createActionByOption(\"onValidated\");\r\n        result.validator = this;\r\n        adapter.applyValidationResults && adapter.applyValidationResults(result);\r\n        this.option({\r\n            isValid: result.isValid\r\n        });\r\n        validatedAction(result)\r\n    },\r\n    focus: function() {\r\n        var adapter = this.option(\"adapter\");\r\n        adapter && adapter.focus && adapter.focus()\r\n    }\r\n}).include(ValidationMixin);\r\nregisterComponent(\"dxValidator\", Validator);\r\nmodule.exports = Validator;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 779:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(790);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 790:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar registerComponent = __webpack_require__(16),\r\n    DateBoxMask = __webpack_require__(791);\r\nregisterComponent(\"dxDateBox\", DateBoxMask);\r\nmodule.exports = DateBoxMask;\r\n\n\n/***/ }),\n\n/***/ 791:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.mask.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar _utils = __webpack_require__(8);\r\nvar _utils2 = _interopRequireDefault(_utils);\r\nvar _type = __webpack_require__(4);\r\nvar _dom = __webpack_require__(13);\r\nvar _extend = __webpack_require__(3);\r\nvar _math = __webpack_require__(60);\r\nvar _events_engine = __webpack_require__(7);\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _wheel = __webpack_require__(339);\r\nvar _wheel2 = _interopRequireDefault(_wheel);\r\nvar _uiDate_boxMask = __webpack_require__(792);\r\nvar _date = __webpack_require__(732);\r\nvar _date2 = _interopRequireDefault(_date);\r\nvar _date3 = __webpack_require__(758);\r\nvar _uiDate_box = __webpack_require__(793);\r\nvar _uiDate_box2 = _interopRequireDefault(_uiDate_box);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MASK_EVENT_NAMESPACE = \"dateBoxMask\",\r\n    FORWARD = 1,\r\n    BACKWARD = -1;\r\nvar DateBoxMask = _uiDate_box2.default.inherit({\r\n    _supportedKeys: function(e) {\r\n        if (!this._useMaskBehavior() || this.option(\"opened\") || e.altKey) {\r\n            return this.callBase(e)\r\n        }\r\n        var that = this;\r\n        return (0, _extend.extend)(this.callBase(e), {\r\n            del: that._revertPart.bind(that, FORWARD),\r\n            backspace: that._revertPart.bind(that, BACKWARD),\r\n            home: that._selectFirstPart.bind(that),\r\n            end: that._selectLastPart.bind(that),\r\n            escape: that._revertChanges.bind(that),\r\n            enter: that._fireChangeEvent.bind(that),\r\n            leftArrow: that._selectNextPart.bind(that, BACKWARD),\r\n            rightArrow: that._selectNextPart.bind(that, FORWARD),\r\n            upArrow: that._partIncrease.bind(that, FORWARD),\r\n            downArrow: that._partIncrease.bind(that, BACKWARD)\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            useMaskBehavior: false,\r\n            advanceCaret: true\r\n        })\r\n    },\r\n    _isSingleCharKey: function(e) {\r\n        var key = e.originalEvent.key;\r\n        return \"string\" === typeof key && 1 === key.length && !e.ctrl && !e.alt\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        var key = e.originalEvent.key;\r\n        var result = this.callBase(e);\r\n        if (!this._useMaskBehavior() || !this._isSingleCharKey(e)) {\r\n            return result\r\n        }\r\n        this._setNewDateIfEmpty();\r\n        isNaN(parseInt(key)) ? this._searchString(key) : this._searchNumber(key);\r\n        e.originalEvent.preventDefault();\r\n        return result\r\n    },\r\n    _getFormatPattern: function() {\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\")),\r\n            isLDMLPattern = \"string\" === typeof format && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        if (isLDMLPattern) {\r\n            return format\r\n        } else {\r\n            return (0, _date3.getFormat)(function(value) {\r\n                return _date2.default.format(value, format)\r\n            })\r\n        }\r\n    },\r\n    _setNewDateIfEmpty: function() {\r\n        if (!this._maskValue) {\r\n            this._maskValue = new Date;\r\n            this._renderDateParts()\r\n        }\r\n    },\r\n    _searchNumber: function(char) {\r\n        this._searchValue += char;\r\n        var limits = this._getActivePartLimits(),\r\n            getter = this._getActivePartProp(\"getter\"),\r\n            newValue = parseInt(this._searchValue);\r\n        if (\"getMonth\" === getter) {\r\n            newValue--\r\n        }\r\n        if (!(0, _math.inRange)(newValue, limits.min, limits.max)) {\r\n            this._searchValue = char;\r\n            newValue = parseInt(char)\r\n        }\r\n        this._setActivePartValue(newValue);\r\n        if (this.option(\"advanceCaret\")) {\r\n            if (parseInt(this._searchValue + \"0\") > limits.max) {\r\n                this._selectNextPart(FORWARD)\r\n            }\r\n        }\r\n    },\r\n    _searchString: function(char) {\r\n        if (!isNaN(parseInt(this._getActivePartProp(\"text\")))) {\r\n            return\r\n        }\r\n        var limits = this._getActivePartProp(\"limits\")(this._maskValue),\r\n            startString = this._searchValue + char.toLowerCase(),\r\n            endLimit = limits.max - limits.min;\r\n        for (var i = 0; i <= endLimit; i++) {\r\n            this._partIncrease(1);\r\n            if (0 === this._getActivePartProp(\"text\").toLowerCase().indexOf(startString)) {\r\n                this._searchValue = startString;\r\n                return\r\n            }\r\n        }\r\n        this._revertPart(0);\r\n        if (this._searchValue) {\r\n            this._clearSearchValue();\r\n            this._searchString(char)\r\n        }\r\n    },\r\n    _clearSearchValue: function() {\r\n        this._searchValue = \"\"\r\n    },\r\n    _revertPart: function(direction, e) {\r\n        var value = this.dateOption(\"value\");\r\n        var caret = this._caret();\r\n        var isAllSelected = caret.end - caret.start === this.option(\"text\").length;\r\n        if (value && !isAllSelected) {\r\n            var actual = this._getActivePartValue(value);\r\n            this._setActivePartValue(actual);\r\n            this._selectNextPart(direction, e)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return this.option(\"useMaskBehavior\") && \"text\" === this.option(\"mode\")\r\n    },\r\n    _renderMask: function() {\r\n        this.callBase();\r\n        this._detachMaskEvents();\r\n        this._clearState();\r\n        if (this._useMaskBehavior()) {\r\n            this._activePartIndex = 0;\r\n            this._attachMaskEvents();\r\n            this._loadMaskValue();\r\n            this._renderDateParts()\r\n        }\r\n    },\r\n    _renderDateParts: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this.option(\"text\") || this._getDisplayedText(this._maskValue);\r\n        if (text) {\r\n            this._dateParts = (0, _uiDate_boxMask.renderDateParts)(text, this._getFormatPattern());\r\n            this._selectNextPart(0)\r\n        }\r\n    },\r\n    _detachMaskEvents: function() {\r\n        _events_engine2.default.off(this._input(), \".\" + MASK_EVENT_NAMESPACE)\r\n    },\r\n    _attachMaskEvents: function() {\r\n        var _this = this;\r\n        _events_engine2.default.on(this._input(), _utils2.default.addNamespace(\"dxclick\", MASK_EVENT_NAMESPACE), this._maskClickHandler.bind(this));\r\n        _events_engine2.default.on(this._input(), _utils2.default.addNamespace(\"paste\", MASK_EVENT_NAMESPACE), this._maskPasteHandler.bind(this));\r\n        _events_engine2.default.on(this._input(), _utils2.default.addNamespace(\"drop\", MASK_EVENT_NAMESPACE), function(e) {\r\n            _this._renderDisplayText(_this._getDisplayedText(_this._maskValue));\r\n            _this._selectNextPart(0, e)\r\n        });\r\n        _events_engine2.default.on(this._input(), _utils2.default.addNamespace(_wheel2.default.name, MASK_EVENT_NAMESPACE), this._mouseWheelHandler.bind(this))\r\n    },\r\n    _selectLastPart: function(e) {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = this._dateParts.length;\r\n            this._selectNextPart(BACKWARD, e)\r\n        }\r\n    },\r\n    _selectFirstPart: function(e) {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = -1;\r\n            this._selectNextPart(FORWARD, e)\r\n        }\r\n    },\r\n    _mouseWheelHandler: function(e) {\r\n        this._partIncrease(e.delta > 0 ? FORWARD : BACKWARD, e)\r\n    },\r\n    _selectNextPart: function(step, e) {\r\n        if (!this.option(\"text\")) {\r\n            return\r\n        }\r\n        var index = (0, _math.fitIntoRange)(this._activePartIndex + step, 0, this._dateParts.length - 1);\r\n        if (this._dateParts[index].isStub) {\r\n            var isBoundaryIndex = 0 === index && step < 0 || index === this._dateParts.length - 1 && step > 0;\r\n            if (!isBoundaryIndex) {\r\n                this._selectNextPart(step >= 0 ? step + 1 : step - 1, e);\r\n                return\r\n            } else {\r\n                index = this._activePartIndex\r\n            }\r\n        }\r\n        this._activePartIndex = index;\r\n        this._caret(this._getActivePartProp(\"caret\"));\r\n        if (0 !== step) {\r\n            this._clearSearchValue()\r\n        }\r\n        e && e.preventDefault()\r\n    },\r\n    _getActivePartLimits: function() {\r\n        var limitFunction = this._getActivePartProp(\"limits\");\r\n        return limitFunction(this._maskValue)\r\n    },\r\n    _getActivePartValue: function(dateValue) {\r\n        dateValue = dateValue || this._maskValue;\r\n        var getter = this._getActivePartProp(\"getter\");\r\n        return (0, _type.isFunction)(getter) ? getter(dateValue) : dateValue[getter]()\r\n    },\r\n    _setActivePartValue: function(value, dateValue) {\r\n        dateValue = dateValue || this._maskValue;\r\n        var setter = this._getActivePartProp(\"setter\"),\r\n            limits = this._getActivePartLimits();\r\n        value = (0, _math.fitIntoRange)(value, limits.min, limits.max);\r\n        (0, _type.isFunction)(setter) ? setter(dateValue, value): dateValue[setter](value);\r\n        this._renderDisplayText(this._getDisplayedText(dateValue));\r\n        this._renderDateParts()\r\n    },\r\n    _getActivePartProp: function(property) {\r\n        if (!this._dateParts || !this._dateParts[this._activePartIndex]) {\r\n            return\r\n        }\r\n        return this._dateParts[this._activePartIndex][property]\r\n    },\r\n    _loadMaskValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        this._maskValue = value && new Date(value)\r\n    },\r\n    _saveMaskValue: function() {\r\n        var value = this._maskValue && new Date(this._maskValue);\r\n        this.dateOption(\"value\", value)\r\n    },\r\n    _revertChanges: function() {\r\n        this._loadMaskValue();\r\n        this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n        this._renderDateParts()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this.callBase(text);\r\n        if (this._useMaskBehavior()) {\r\n            this.option(\"text\", text)\r\n        }\r\n    },\r\n    _partIncrease: function(step, e) {\r\n        this._setNewDateIfEmpty();\r\n        var limits = this._getActivePartLimits(),\r\n            newValue = step + this._getActivePartValue();\r\n        newValue = newValue > limits.max ? limits.min : newValue;\r\n        newValue = newValue < limits.min ? limits.max : newValue;\r\n        this._setActivePartValue(newValue);\r\n        e && e.preventDefault()\r\n    },\r\n    _maskClickHandler: function() {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = (0, _uiDate_boxMask.getDatePartIndexByPosition)(this._dateParts, this._caret().start);\r\n            this._caret(this._getActivePartProp(\"caret\"))\r\n        }\r\n    },\r\n    _maskPasteHandler: function(e) {\r\n        var newText = this._replaceSelectedText(this.option(\"text\"), this._caret(), (0, _dom.clipboardText)(e));\r\n        var date = _date2.default.parse(newText, this._getFormatPattern());\r\n        if (date) {\r\n            this._renderDateParts();\r\n            this._maskValue = date;\r\n            this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n            this._selectNextPart(0, e)\r\n        } else {\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _isValueDirty: function() {\r\n        var value = this.dateOption(\"value\");\r\n        return (this._maskValue && this._maskValue.getTime()) !== (value && value.getTime())\r\n    },\r\n    _fireChangeEvent: function() {\r\n        this._clearSearchValue();\r\n        this._selectNextPart(FORWARD);\r\n        if (this._isValueDirty()) {\r\n            _events_engine2.default.trigger(this._input(), \"change\")\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this.callBase(e);\r\n        if (this._useMaskBehavior()) {\r\n            this._fireChangeEvent()\r\n        }\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (this._useMaskBehavior()) {\r\n            this._saveValueChangeEvent(e);\r\n            if (!this.option(\"text\")) {\r\n                this._maskValue = null\r\n            }\r\n            this._saveMaskValue()\r\n        } else {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useMaskBehavior\":\r\n                this._renderMask();\r\n                break;\r\n            case \"displayFormat\":\r\n            case \"mode\":\r\n                this.callBase(args);\r\n                this._renderMask();\r\n                break;\r\n            case \"value\":\r\n                this._loadMaskValue();\r\n                this.callBase(args);\r\n                this._renderDateParts();\r\n                break;\r\n            case \"advanceCaret\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clearState: function() {\r\n        this._clearSearchValue();\r\n        delete this._dateParts;\r\n        delete this._activePartIndex;\r\n        delete this._maskValue\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._clearState();\r\n        this._activePartIndex = 0\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._detachMaskEvents();\r\n        this._clearState()\r\n    }\r\n});\r\nmodule.exports = DateBoxMask;\r\n\n\n/***/ }),\n\n/***/ 792:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.mask.parts.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports.renderDateParts = exports.getDatePartIndexByPosition = void 0;\r\nvar _date = __webpack_require__(764);\r\nvar _date2 = __webpack_require__(732);\r\nvar _date3 = _interopRequireDefault(_date2);\r\nvar _extend = __webpack_require__(3);\r\nvar _math = __webpack_require__(60);\r\nvar _common = __webpack_require__(6);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PATTERN_GETTERS = {\r\n    a: function(date) {\r\n        return date.getHours() < 12 ? 0 : 1\r\n    },\r\n    E: \"getDay\",\r\n    y: \"getFullYear\",\r\n    M: \"getMonth\",\r\n    L: \"getMonth\",\r\n    d: \"getDate\",\r\n    H: \"getHours\",\r\n    h: \"getHours\",\r\n    m: \"getMinutes\",\r\n    s: \"getSeconds\",\r\n    S: \"getMilliseconds\"\r\n};\r\nvar PATTERN_SETTERS = (0, _extend.extend)({}, (0, _date.getPatternSetters)(), {\r\n    a: function(date, value) {\r\n        var hours = date.getHours(),\r\n            current = hours >= 12;\r\n        if (current === value) {\r\n            return\r\n        }\r\n        date.setHours((hours + 12) % 24)\r\n    },\r\n    M: function(date, value) {\r\n        var day = date.getDate();\r\n        date.setMonth(value, 1);\r\n        var dayLimits = getLimits(\"getDate\", date),\r\n            newDay = (0, _math.fitIntoRange)(day, dayLimits.min, dayLimits.max);\r\n        date.setDate(newDay)\r\n    },\r\n    E: function(date, value) {\r\n        if (value < 0) {\r\n            return\r\n        }\r\n        date.setDate(date.getDate() - date.getDay() + value)\r\n    },\r\n    y: function(date, value) {\r\n        var currentYear = date.getFullYear();\r\n        if (value < 100) {\r\n            date.setFullYear(currentYear - currentYear % 100 + value)\r\n        } else {\r\n            date.setFullYear(value)\r\n        }\r\n    }\r\n});\r\nvar getPatternGetter = function(patternChar) {\r\n    var unsupportedCharGetter = function() {\r\n        return patternChar\r\n    };\r\n    return PATTERN_GETTERS[patternChar] || unsupportedCharGetter\r\n};\r\nvar renderDateParts = function(text, format) {\r\n    var regExpInfo = (0, _date.getRegExpInfo)(format, _date3.default),\r\n        result = regExpInfo.regexp.exec(text);\r\n    var start = 0,\r\n        end = 0,\r\n        sections = [];\r\n    for (var i = 1; i < result.length; i++) {\r\n        start = end;\r\n        end = start + result[i].length;\r\n        var pattern = regExpInfo.patterns[i - 1],\r\n            getter = getPatternGetter(pattern[0]);\r\n        sections.push({\r\n            index: i - 1,\r\n            isStub: pattern === (0, _common.escapeRegExp)(result[i]),\r\n            caret: {\r\n                start: start,\r\n                end: end\r\n            },\r\n            pattern: pattern,\r\n            text: result[i],\r\n            limits: getLimits.bind(void 0, getter),\r\n            setter: PATTERN_SETTERS[pattern[0]] || _common.noop,\r\n            getter: getter\r\n        })\r\n    }\r\n    return sections\r\n};\r\nvar getLimits = function(getter, date) {\r\n    var limits = {\r\n        getFullYear: {\r\n            min: 0,\r\n            max: 9999\r\n        },\r\n        getMonth: {\r\n            min: 0,\r\n            max: 11\r\n        },\r\n        getDate: {\r\n            min: 1,\r\n            max: new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\r\n        },\r\n        getDay: {\r\n            min: 0,\r\n            max: 6\r\n        },\r\n        getHours: {\r\n            min: 0,\r\n            max: 23\r\n        },\r\n        getMinutes: {\r\n            min: 0,\r\n            max: 59\r\n        },\r\n        getAmPm: {\r\n            min: 0,\r\n            max: 1\r\n        }\r\n    };\r\n    return limits[getter] || limits.getAmPm\r\n};\r\nvar getDatePartIndexByPosition = function(dateParts, position) {\r\n    for (var i = 0; i < dateParts.length; i++) {\r\n        var caretInGroup = dateParts[i].caret.end >= position;\r\n        if (!dateParts[i].isStub && caretInGroup) {\r\n            return i\r\n        }\r\n    }\r\n    return null\r\n};\r\nexports.getDatePartIndexByPosition = getDatePartIndexByPosition;\r\nexports.renderDateParts = renderDateParts;\r\n\n\n/***/ }),\n\n/***/ 793:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.base.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    windowUtils = __webpack_require__(9),\r\n    window = windowUtils.getWindow(),\r\n    registerComponent = __webpack_require__(16),\r\n    typeUtils = __webpack_require__(4),\r\n    each = __webpack_require__(5).each,\r\n    compareVersions = __webpack_require__(146).compare,\r\n    extend = __webpack_require__(3).extend,\r\n    support = __webpack_require__(51),\r\n    devices = __webpack_require__(14),\r\n    config = __webpack_require__(23),\r\n    dateUtils = __webpack_require__(737),\r\n    uiDateUtils = __webpack_require__(734),\r\n    dateSerialization = __webpack_require__(738),\r\n    DropDownEditor = __webpack_require__(742),\r\n    dateLocalization = __webpack_require__(732),\r\n    messageLocalization = __webpack_require__(24),\r\n    DATEBOX_CLASS = \"dx-datebox\",\r\n    DX_AUTO_WIDTH_CLASS = \"dx-auto-width\",\r\n    DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\r\nvar PICKER_TYPE = {\r\n    calendar: \"calendar\",\r\n    rollers: \"rollers\",\r\n    list: \"list\",\r\n    \"native\": \"native\"\r\n};\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar STRATEGY_NAME = {\r\n    calendar: \"Calendar\",\r\n    dateView: \"DateView\",\r\n    \"native\": \"Native\",\r\n    calendarWithTime: \"CalendarWithTime\",\r\n    list: \"List\"\r\n};\r\nvar STRATEGY_CLASSES = {\r\n    Calendar: __webpack_require__(767),\r\n    DateView: __webpack_require__(799),\r\n    Native: __webpack_require__(802),\r\n    CalendarWithTime: __webpack_require__(803),\r\n    List: __webpack_require__(805)\r\n};\r\nvar isRealWidthSet = function($element) {\r\n    var explicitWidth = $element[0].style.width;\r\n    if (explicitWidth && \"auto\" !== explicitWidth && \"inherit\" !== explicitWidth) {\r\n        return true\r\n    }\r\n    return false\r\n};\r\nvar calculateWidth = function(value, $input, $element) {\r\n    var IE_ROUNDING_ERROR = 10;\r\n    var NATIVE_BUTTONS_WIDTH = 48;\r\n    var $longestValueElement = $(\"<div>\").text(value).css({\r\n        fontStyle: $input.css(\"fontStyle\"),\r\n        fontVariant: $input.css(\"fontVariant\"),\r\n        fontWeight: $input.css(\"fontWeight\"),\r\n        fontSize: $input.css(\"fontSize\"),\r\n        fontFamily: $input.css(\"fontFamily\"),\r\n        letterSpacing: $input.css(\"letterSpacing\"),\r\n        border: $input.css(\"border\"),\r\n        visibility: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        position: \"absolute\",\r\n        \"float\": \"left\"\r\n    });\r\n    $longestValueElement.appendTo($element);\r\n    var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width),\r\n        rightPadding = parseFloat(window.getComputedStyle($input.get(0)).paddingRight),\r\n        leftPadding = parseFloat(window.getComputedStyle($input.get(0)).paddingLeft);\r\n    var width = elementWidth + rightPadding + leftPadding + IE_ROUNDING_ERROR + (\"text\" !== $input.prop(\"type\") ? NATIVE_BUTTONS_WIDTH : 0);\r\n    $longestValueElement.remove();\r\n    return width\r\n};\r\nvar DateBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), this._strategy.supportedKeys())\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        extend(this._deprecatedOptions, {\r\n            maxZoomLevel: {\r\n                since: \"18.1\",\r\n                alias: \"calendarOptions.maxZoomLevel\"\r\n            },\r\n            minZoomLevel: {\r\n                since: \"18.1\",\r\n                alias: \"calendarOptions.minZoomLevel\"\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            type: \"date\",\r\n            showAnalogClock: true,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            displayFormat: null,\r\n            interval: 30,\r\n            disabledDates: null,\r\n            maxZoomLevel: \"month\",\r\n            minZoomLevel: \"century\",\r\n            pickerType: PICKER_TYPE.calendar,\r\n            invalidDateMessage: messageLocalization.format(\"dxDateBox-validation-datetime\"),\r\n            dateOutOfRangeMessage: messageLocalization.format(\"validation-range\"),\r\n            applyButtonText: messageLocalization.format(\"Done\"),\r\n            adaptivityEnabled: false,\r\n            calendarOptions: {}\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                showPopupTitle: true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                var realDevice = devices.real(),\r\n                    platform = realDevice.platform;\r\n                return \"ios\" === platform || \"android\" === platform\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.native\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function(_device2) {\r\n                return \"win\" === _device2.platform && _device2.version && 10 === _device2.version[0]\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom center\"\r\n            }\r\n        }, {\r\n            device: function(currentDevice) {\r\n                var realDevice = devices.real(),\r\n                    platform = realDevice.platform,\r\n                    version = realDevice.version,\r\n                    isPhone = realDevice.phone;\r\n                return \"generic\" === platform && \"desktop\" !== currentDevice.deviceType || \"win\" === platform && isPhone || \"android\" === platform && compareVersions(version, [4, 4]) < 0\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.rollers\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\",\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        this._userOptions = extend({}, options);\r\n        this.callBase(options);\r\n        this._updatePickerOptions()\r\n    },\r\n    _updatePickerOptions: function() {\r\n        var pickerType = this.option(\"pickerType\");\r\n        var type = this.option(\"type\");\r\n        if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\r\n            pickerType = PICKER_TYPE.calendar\r\n        }\r\n        if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\r\n            pickerType = PICKER_TYPE.list\r\n        }\r\n        this.option(\"showDropDownButton\", \"generic\" !== devices.real().platform || pickerType !== PICKER_TYPE.native);\r\n        this._pickerType = pickerType\r\n    },\r\n    _init: function() {\r\n        this._initStrategy();\r\n        this.option(extend({}, this._strategy.getDefaultOptions(), this._userOptions));\r\n        delete this._userOptions;\r\n        this.callBase()\r\n    },\r\n    _toLowerCaseFirstLetter: function(string) {\r\n        return string.charAt(0).toLowerCase() + string.substr(1)\r\n    },\r\n    _initStrategy: function() {\r\n        var strategyName = this._getStrategyName(this._getFormatType()),\r\n            strategy = STRATEGY_CLASSES[strategyName];\r\n        if (!(this._strategy && this._strategy.NAME === strategyName)) {\r\n            this._strategy = new strategy(this)\r\n        }\r\n    },\r\n    _getFormatType: function() {\r\n        var currentType = this.option(\"type\");\r\n        var isTime = /h|m|s/g.test(currentType),\r\n            isDate = /d|M|Y/g.test(currentType);\r\n        var type = \"\";\r\n        if (isDate) {\r\n            type += TYPE.date\r\n        }\r\n        if (isTime) {\r\n            type += TYPE.time\r\n        }\r\n        return type\r\n    },\r\n    _getStrategyName: function(type) {\r\n        var pickerType = this._pickerType;\r\n        if (pickerType === PICKER_TYPE.rollers) {\r\n            return STRATEGY_NAME.dateView\r\n        } else {\r\n            if (pickerType === PICKER_TYPE.native) {\r\n                return STRATEGY_NAME.native\r\n            }\r\n        }\r\n        if (type === TYPE.date) {\r\n            return STRATEGY_NAME.calendar\r\n        }\r\n        if (type === TYPE.datetime) {\r\n            return STRATEGY_NAME.calendarWithTime\r\n        }\r\n        return STRATEGY_NAME.list\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(DATEBOX_CLASS);\r\n        this._renderSubmitElement();\r\n        this.callBase();\r\n        this._refreshFormatClass();\r\n        this._refreshPickerTypeClass();\r\n        this._strategy.renderInputMinMax(this._input())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._updateSize()\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"))\r\n    },\r\n    _refreshFormatClass: function() {\r\n        var $element = this.$element();\r\n        each(TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"))\r\n    },\r\n    _refreshPickerTypeClass: function() {\r\n        var $element = this.$element();\r\n        each(PICKER_TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _updateSize: function() {\r\n        var $element = this.$element(),\r\n            widthOption = this.option(\"width\"),\r\n            isWidthSet = typeUtils.isDefined(widthOption) || isRealWidthSet($element) && !this._isSizeUpdatable,\r\n            pickerType = this._pickerType,\r\n            shouldCalculateWidth = pickerType !== PICKER_TYPE.rollers && \"generic\" === devices.current().platform;\r\n        if (!windowUtils.hasWindow() || isWidthSet || !(shouldCalculateWidth && $element.is(\":visible\"))) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            format = this._strategy.getDisplayFormat(this.option(\"displayFormat\")),\r\n            longestValue = dateLocalization.format(uiDateUtils.getLongestDate(format, dateLocalization.getMonthNames(), dateLocalization.getDayNames()), format);\r\n        $element.width(calculateWidth(longestValue, $input, this.$element()));\r\n        this._isSizeUpdatable = true\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._strategy.attachKeyboardEvents(this._keyboardProcessor)\r\n    },\r\n    _renderPopup: function() {\r\n        this.callBase();\r\n        this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS);\r\n        this._renderPopupWrapper()\r\n    },\r\n    _popupConfig: function() {\r\n        var popupConfig = this.callBase();\r\n        return extend(this._strategy.popupConfig(popupConfig), {\r\n            title: this._getPopupTitle(),\r\n            dragEnabled: false\r\n        })\r\n    },\r\n    _renderPopupWrapper: function() {\r\n        if (!this._popup) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        var classPostfixes = extend({}, TYPE, PICKER_TYPE);\r\n        each(classPostfixes, function(_, item) {\r\n            $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item)\r\n        }.bind(this));\r\n        this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _renderPopupContent: function() {\r\n        this.callBase();\r\n        this._strategy.renderPopupContent()\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._strategy.getFirstPopupElement() || this.callBase()\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._strategy.getLastPopupElement() || this.callBase()\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupShowingHandler()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupHiddenHandler()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateSize()\r\n        }\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        this.option(\"text\", \"\");\r\n        this.callBase(e)\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return this.callBase() || this._pickerType === PICKER_TYPE.rollers\r\n    },\r\n    _clearButtonVisibility: function() {\r\n        return this.callBase() && !this._isNativeType()\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.dateOption(\"value\"),\r\n            dateSerializationFormat = this.option(\"dateSerializationFormat\");\r\n        this.option(\"text\", this._getDisplayedText(value));\r\n        var submitFormat = uiDateUtils.SUBMIT_FORMATS_MAP[this.option(\"type\")];\r\n        var submitValue = dateSerializationFormat ? dateSerialization.serializeDate(value, dateSerializationFormat) : uiDateUtils.toStandardDateFormat(value, submitFormat);\r\n        this._$submitElement.val(submitValue);\r\n        this._strategy.renderValue();\r\n        this.callBase();\r\n        this._validateValue(value)\r\n    },\r\n    _getDisplayedText: function(value) {\r\n        var displayedText, mode = this.option(\"mode\");\r\n        if (\"text\" === mode) {\r\n            var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n            displayedText = dateLocalization.format(value, displayFormat)\r\n        } else {\r\n            var format = this._getFormatByMode(mode);\r\n            if (format) {\r\n                displayedText = dateLocalization.format(value, format)\r\n            } else {\r\n                displayedText = uiDateUtils.toStandardDateFormat(value, mode)\r\n            }\r\n        }\r\n        return displayedText\r\n    },\r\n    _getFormatByMode: function(mode) {\r\n        return support.inputType(mode) ? null : uiDateUtils.FORMATS_MAP[mode]\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var text = this.option(\"text\"),\r\n            parsedDate = this._getParsedDate(text),\r\n            value = this.dateOption(\"value\") || this._getDateByDefault(),\r\n            type = this.option(\"type\"),\r\n            newValue = uiDateUtils.mergeDates(value, parsedDate, type),\r\n            date = parsedDate && \"time\" === type ? newValue : parsedDate;\r\n        if (this._validateValue(date)) {\r\n            var displayedText = this._getDisplayedText(newValue);\r\n            if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\r\n                this._renderValue()\r\n            } else {\r\n                this.dateValue(newValue, e)\r\n            }\r\n        }\r\n        this.validationRequest.fire({\r\n            value: newValue,\r\n            editor: this\r\n        })\r\n    },\r\n    _getDateByDefault: function() {\r\n        return this._strategy.useCurrentDateByDefault() && new Date\r\n    },\r\n    _getParsedDate: function(text) {\r\n        var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var parsedText = this._strategy.getParsedText(text, displayFormat);\r\n        return typeUtils.isDefined(parsedText) ? parsedText : void 0\r\n    },\r\n    _validateValue: function(value) {\r\n        var text = this.option(\"text\"),\r\n            hasText = !!text && null !== value,\r\n            isDate = !!value && typeUtils.isDate(value) && !isNaN(value.getTime()),\r\n            isDateInRange = isDate && dateUtils.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\")),\r\n            isValid = !hasText || !hasText && !value || isDateInRange,\r\n            validationMessage = \"\";\r\n        if (!isDate) {\r\n            validationMessage = this.option(\"invalidDateMessage\")\r\n        } else {\r\n            if (!isDateInRange) {\r\n                validationMessage = this.option(\"dateOutOfRangeMessage\")\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: validationMessage\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _isValueChanged: function(newValue) {\r\n        var oldValue = this.dateOption(\"value\"),\r\n            oldTime = oldValue && oldValue.getTime(),\r\n            newTime = newValue && newValue.getTime();\r\n        return oldTime !== newTime\r\n    },\r\n    _isTextChanged: function(newValue) {\r\n        var oldText = this.dateOption(\"text\"),\r\n            newText = newValue && this._getDisplayedText(newValue) || \"\";\r\n        return oldText !== newText\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().attr(\"autocomplete\", \"off\")\r\n    },\r\n    _renderOpenedState: function() {\r\n        if (!this._isNativeType()) {\r\n            this.callBase()\r\n        }\r\n        if (this._strategy.isAdaptivityChanged()) {\r\n            this._refreshStrategy()\r\n        }\r\n        this._strategy.renderOpenedState()\r\n    },\r\n    _getPopupTitle: function() {\r\n        var placeholder = this.option(\"placeholder\");\r\n        if (placeholder) {\r\n            return placeholder\r\n        }\r\n        var type = this.option(\"type\");\r\n        if (type === TYPE.time) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleTime\")\r\n        }\r\n        if (type === TYPE.date || type === TYPE.datetime) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleDate\")\r\n        }\r\n        return \"\"\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._popup && this._popup.option(\"title\", this._getPopupTitle());\r\n        this.callBase()\r\n    },\r\n    _refreshStrategy: function() {\r\n        this._strategy.dispose();\r\n        this._initStrategy();\r\n        this.option(this._strategy.getDefaultOptions());\r\n        this._refresh()\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.dateValue(this._strategy.getValue());\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        this._strategy && this._strategy.dispose();\r\n        this.callBase()\r\n    },\r\n    _isNativeType: function() {\r\n        return this._pickerType === PICKER_TYPE.native\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showClearButton\":\r\n                this.callBase.apply(this, arguments);\r\n                this._updateSize();\r\n                break;\r\n            case \"pickerType\":\r\n                this._updatePickerOptions({\r\n                    pickerType: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshPickerTypeClass();\r\n                this._invalidate();\r\n                break;\r\n            case \"type\":\r\n                this._updatePickerOptions({\r\n                    format: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshFormatClass();\r\n                this._renderPopupWrapper();\r\n                this._updateSize();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._validateValue(this.dateOption(\"value\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"readOnly\":\r\n            case \"interval\":\r\n            case \"disabledDates\":\r\n            case \"calendarOptions\":\r\n            case \"minZoomLevel\":\r\n            case \"maxZoomLevel\":\r\n                this._invalidate();\r\n                break;\r\n            case \"displayFormat\":\r\n                this._updateValue();\r\n                break;\r\n            case \"formatWidthCalculator\":\r\n                break;\r\n            case \"closeOnValueChange\":\r\n                var applyValueMode = args.value ? \"instantly\" : \"useButtons\";\r\n                this.option(\"applyValueMode\", applyValueMode);\r\n                break;\r\n            case \"applyValueMode\":\r\n                this._suppressDeprecatedWarnings();\r\n                this.option(\"closeOnValueChange\", \"instantly\" === args.value);\r\n                this._resumeDeprecatedWarnings();\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"text\":\r\n                this._strategy.textChangedHandler(args.value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"isValid\":\r\n                this.callBase.apply(this, arguments);\r\n                this._updateSize();\r\n                break;\r\n            case \"showDropDownButton\":\r\n            case \"invalidDateMessage\":\r\n            case \"dateOutOfRangeMessage\":\r\n            case \"adaptivityEnabled\":\r\n            case \"showAnalogClock\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getSerializationFormat: function() {\r\n        var value = this.option(\"value\");\r\n        if (this.option(\"dateSerializationFormat\") && config().forceIsoDateParsing) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if (typeUtils.isNumeric(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!typeUtils.isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    },\r\n    dateValue: function(value, dxEvent) {\r\n        if (this._isValueChanged(value) && dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        } else {\r\n            if (this._isTextChanged(value)) {\r\n                this._updateValue();\r\n                this._validateValue(value)\r\n            }\r\n        }\r\n        return this.dateOption(\"value\", value)\r\n    },\r\n    dateOption: function(optionName, value) {\r\n        if (1 === arguments.length) {\r\n            return dateSerialization.deserializeDate(this.option(optionName))\r\n        }\r\n        var serializationFormat = this._getSerializationFormat();\r\n        this.option(optionName, dateSerialization.serializeDate(value, serializationFormat))\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._updateValue()\r\n    }\r\n});\r\nregisterComponent(\"dxDateBox\", DateBox);\r\nmodule.exports = DateBox;\r\n\n\n/***/ }),\n\n/***/ 794:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/calendar.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(795);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 795:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/calendar/ui.calendar.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    Guid = __webpack_require__(77),\r\n    registerComponent = __webpack_require__(16),\r\n    noop = __webpack_require__(6).noop,\r\n    typeUtils = __webpack_require__(4),\r\n    extend = __webpack_require__(3).extend,\r\n    Button = __webpack_require__(42),\r\n    Editor = __webpack_require__(140),\r\n    Swipeable = __webpack_require__(341),\r\n    Navigator = __webpack_require__(796),\r\n    Views = __webpack_require__(797),\r\n    translator = __webpack_require__(19),\r\n    browser = __webpack_require__(78),\r\n    dateUtils = __webpack_require__(737),\r\n    dateSerialization = __webpack_require__(738),\r\n    devices = __webpack_require__(14),\r\n    config = __webpack_require__(23),\r\n    fx = __webpack_require__(32),\r\n    windowUtils = __webpack_require__(9),\r\n    messageLocalization = __webpack_require__(24),\r\n    FunctionTemplate = __webpack_require__(201);\r\nvar CALENDAR_CLASS = \"dx-calendar\",\r\n    CALENDAR_BODY_CLASS = \"dx-calendar-body\",\r\n    CALENDAR_CELL_CLASS = \"dx-calendar-cell\",\r\n    CALENDAR_FOOTER_CLASS = \"dx-calendar-footer\",\r\n    CALENDAR_TODAY_BUTTON_CLASS = \"dx-calendar-today-button\",\r\n    CALENDAR_HAS_FOOTER_CLASS = \"dx-calendar-with-footer\",\r\n    CALENDAR_VIEWS_WRAPPER_CLASS = \"dx-calendar-views-wrapper\",\r\n    CALENDAR_VIEW_CLASS = \"dx-calendar-view\",\r\n    FOCUSED_STATE_CLASS = \"dx-state-focused\",\r\n    ANIMATION_DURATION_SHOW_VIEW = 250,\r\n    POP_ANIMATION_FROM = .6,\r\n    POP_ANIMATION_TO = 1,\r\n    CALENDAR_INPUT_STANDARD_PATTERN = \"yyyy-MM-dd\",\r\n    CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\",\r\n    LEVEL_COMPARE_MAP = {\r\n        month: 3,\r\n        year: 2,\r\n        decade: 1,\r\n        century: 0\r\n    };\r\nvar Calendar = Editor.inherit({\r\n    _activeStateUnit: \".\" + CALENDAR_CELL_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            currentDate: new Date,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: new Date(1e3, 0),\r\n            max: new Date(3e3, 0),\r\n            firstDayOfWeek: void 0,\r\n            zoomLevel: \"month\",\r\n            maxZoomLevel: \"month\",\r\n            minZoomLevel: \"century\",\r\n            showTodayButton: false,\r\n            cellTemplate: \"cell\",\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            onContouredChanged: null,\r\n            hasFocus: function(element) {\r\n                return element.hasClass(FOCUSED_STATE_CLASS)\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            rightArrow: function(e) {\r\n                e.preventDefault();\r\n                if (e.ctrlKey) {\r\n                    this._waitRenderView(1)\r\n                } else {\r\n                    this._moveCurrentDate(1 * this._getRtlCorrection())\r\n                }\r\n            },\r\n            leftArrow: function(e) {\r\n                e.preventDefault();\r\n                if (e.ctrlKey) {\r\n                    this._waitRenderView(-1)\r\n                } else {\r\n                    this._moveCurrentDate(-1 * this._getRtlCorrection())\r\n                }\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                if (e.ctrlKey) {\r\n                    this._navigateUp()\r\n                } else {\r\n                    if (fx.isAnimating(this._view.$element())) {\r\n                        return\r\n                    }\r\n                    this._moveCurrentDate(-1 * this._view.option(\"colCount\"))\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                if (e.ctrlKey) {\r\n                    this._navigateDown()\r\n                } else {\r\n                    if (fx.isAnimating(this._view.$element())) {\r\n                        return\r\n                    }\r\n                    this._moveCurrentDate(1 * this._view.option(\"colCount\"))\r\n                }\r\n            },\r\n            home: function(e) {\r\n                e.preventDefault();\r\n                var zoomLevel = this.option(\"zoomLevel\");\r\n                var currentDate = this.option(\"currentDate\");\r\n                var min = this._dateOption(\"min\");\r\n                var date = dateUtils.sameView(zoomLevel, currentDate, min) ? min : dateUtils.getViewFirstCellDate(zoomLevel, currentDate);\r\n                this._moveToClosestAvailableDate(date, 1)\r\n            },\r\n            end: function(e) {\r\n                e.preventDefault();\r\n                var zoomLevel = this.option(\"zoomLevel\");\r\n                var currentDate = this.option(\"currentDate\");\r\n                var max = this._dateOption(\"max\");\r\n                var date = dateUtils.sameView(zoomLevel, currentDate, max) ? max : dateUtils.getViewLastCellDate(zoomLevel, currentDate);\r\n                this._moveToClosestAvailableDate(date, -1)\r\n            },\r\n            pageUp: function(e) {\r\n                e.preventDefault();\r\n                this._waitRenderView(-1)\r\n            },\r\n            pageDown: function(e) {\r\n                e.preventDefault();\r\n                this._waitRenderView(1)\r\n            },\r\n            tab: noop,\r\n            enter: function(e) {\r\n                if (!this._isMaxZoomLevel()) {\r\n                    this._navigateDown()\r\n                } else {\r\n                    var value = this._updateTimeComponent(this.option(\"currentDate\"));\r\n                    this._dateValue(value, e)\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getSerializationFormat: function(optionName) {\r\n        var value = this.option(optionName || \"value\");\r\n        if (this.option(\"dateSerializationFormat\")) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if (typeUtils.isNumeric(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!typeUtils.isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    },\r\n    _convertToDate: function(value, optionName) {\r\n        return dateSerialization.deserializeDate(value)\r\n    },\r\n    _dateValue: function(value, dxEvent) {\r\n        if (dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        }\r\n        this._dateOption(\"value\", value)\r\n    },\r\n    _dateOption: function(optionName, optionValue) {\r\n        if (1 === arguments.length) {\r\n            return this._convertToDate(this.option(optionName), optionName)\r\n        }\r\n        var serializationFormat = this._getSerializationFormat(optionName);\r\n        this.option(optionName, dateSerialization.serializeDate(optionValue, serializationFormat))\r\n    },\r\n    _moveCurrentDate: function(offset, baseDate) {\r\n        var newDate, currentDate = baseDate || new Date(this.option(\"currentDate\")),\r\n            maxDate = this.option(\"max\"),\r\n            minDate = this.option(\"min\"),\r\n            zoomLevel = this.option(\"zoomLevel\"),\r\n            isAvailableDateFound = false;\r\n        while (!isAvailableDateFound) {\r\n            newDate = new Date(currentDate);\r\n            switch (zoomLevel) {\r\n                case \"month\":\r\n                    newDate.setDate(currentDate.getDate() + offset);\r\n                    break;\r\n                case \"year\":\r\n                    newDate.setMonth(currentDate.getMonth() + offset);\r\n                    break;\r\n                case \"decade\":\r\n                    newDate.setFullYear(currentDate.getFullYear() + offset);\r\n                    break;\r\n                case \"century\":\r\n                    newDate.setFullYear(currentDate.getFullYear() + 10 * offset)\r\n            }\r\n            var offsetCorrection = 2 * offset / Math.abs(offset);\r\n            if (Math.abs(offset) > 1 && !dateUtils.sameView(zoomLevel, currentDate, newDate)) {\r\n                if (\"decade\" === zoomLevel) {\r\n                    newDate.setFullYear(currentDate.getFullYear() + offset - offsetCorrection)\r\n                }\r\n                if (\"century\" === zoomLevel) {\r\n                    newDate.setFullYear(currentDate.getFullYear() + 10 * (offset - offsetCorrection))\r\n                }\r\n            }\r\n            if (this._view.isDateDisabled(newDate) && newDate <= new Date(maxDate) && newDate >= new Date(minDate)) {\r\n                currentDate = newDate\r\n            } else {\r\n                isAvailableDateFound = true\r\n            }\r\n        }\r\n        this.option(\"currentDate\", newDate)\r\n    },\r\n    _moveToClosestAvailableDate: function(baseDate, offset) {\r\n        if (this._view.isDateDisabled(baseDate)) {\r\n            this._moveCurrentDate(offset, baseDate)\r\n        } else {\r\n            this.option(\"currentDate\", baseDate)\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._correctZoomLevel();\r\n        this._initCurrentDate();\r\n        this._initActions()\r\n    },\r\n    _correctZoomLevel: function() {\r\n        var minZoomLevel = this.option(\"minZoomLevel\"),\r\n            maxZoomLevel = this.option(\"maxZoomLevel\"),\r\n            zoomLevel = this.option(\"zoomLevel\");\r\n        if (LEVEL_COMPARE_MAP[maxZoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\r\n            return\r\n        }\r\n        if (LEVEL_COMPARE_MAP[zoomLevel] > LEVEL_COMPARE_MAP[maxZoomLevel]) {\r\n            this.option(\"zoomLevel\", maxZoomLevel)\r\n        } else {\r\n            if (LEVEL_COMPARE_MAP[zoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\r\n                this.option(\"zoomLevel\", minZoomLevel)\r\n            }\r\n        }\r\n    },\r\n    _initCurrentDate: function() {\r\n        var currentDate = this._getNormalizedDate(this._dateOption(\"value\")) || this._getNormalizedDate(this.option(\"currentDate\"));\r\n        this.option(\"currentDate\", currentDate)\r\n    },\r\n    _getNormalizedDate: function(date) {\r\n        date = dateUtils.normalizeDate(date, this._getMinDate(), this._getMaxDate());\r\n        return typeUtils.isDefined(date) ? new Date(date) : date\r\n    },\r\n    _initActions: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\");\r\n        this._onContouredChanged = this._createActionByOption(\"onContouredChanged\")\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.cell = new FunctionTemplate(function(options) {\r\n            var data = options.model;\r\n            $(options.container).append($(\"<span>\").text(data && data.text || String(data)))\r\n        }, this)\r\n    },\r\n    _updateCurrentDate: function(date) {\r\n        if (fx.isAnimating(this._$viewsWrapper)) {\r\n            fx.stop(this._$viewsWrapper, true)\r\n        }\r\n        var min = this._getMinDate(),\r\n            max = this._getMaxDate();\r\n        if (min > max) {\r\n            this.option(\"currentDate\", new Date);\r\n            return\r\n        }\r\n        var normalizedDate = this._getNormalizedDate(date);\r\n        if (date.getTime() !== normalizedDate.getTime()) {\r\n            this.option(\"currentDate\", new Date(normalizedDate));\r\n            return\r\n        }\r\n        var offset = this._getViewsOffset(this._view.option(\"date\"), normalizedDate);\r\n        if (0 !== offset && !this._isMaxZoomLevel() && this._isOtherViewCellClicked) {\r\n            offset = 0\r\n        }\r\n        if (this._view && 0 !== offset && !this._suppressNavigation) {\r\n            this._navigate(offset, normalizedDate)\r\n        } else {\r\n            this._renderNavigator();\r\n            this._setViewContoured(normalizedDate);\r\n            this._updateAriaId(normalizedDate)\r\n        }\r\n    },\r\n    _setViewContoured: function(date) {\r\n        if (this.option(\"hasFocus\")(this._focusTarget())) {\r\n            this._view.option(\"contouredDate\", date)\r\n        }\r\n    },\r\n    _getMinDate: function() {\r\n        if (this.min) {\r\n            return this.min\r\n        }\r\n        this.min = this._dateOption(\"min\") || new Date(1e3, 0);\r\n        return this.min\r\n    },\r\n    _getMaxDate: function() {\r\n        if (this.max) {\r\n            return this.max\r\n        }\r\n        this.max = this._dateOption(\"max\") || new Date(3e3, 0);\r\n        return this.max\r\n    },\r\n    _getViewsOffset: function(startDate, endDate) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (\"month\" === zoomLevel) {\r\n            return this._getMonthsOffset(startDate, endDate)\r\n        }\r\n        var zoomCorrection;\r\n        switch (zoomLevel) {\r\n            case \"century\":\r\n                zoomCorrection = 100;\r\n                break;\r\n            case \"decade\":\r\n                zoomCorrection = 10;\r\n                break;\r\n            default:\r\n                zoomCorrection = 1\r\n        }\r\n        return parseInt(endDate.getFullYear() / zoomCorrection) - parseInt(startDate.getFullYear() / zoomCorrection)\r\n    },\r\n    _getMonthsOffset: function(startDate, endDate) {\r\n        var yearOffset = endDate.getFullYear() - startDate.getFullYear(),\r\n            monthOffset = endDate.getMonth() - startDate.getMonth();\r\n        return 12 * yearOffset + monthOffset\r\n    },\r\n    _waitRenderView: function(offset) {\r\n        if (this._alreadyViewRender) {\r\n            return\r\n        }\r\n        this._alreadyViewRender = true;\r\n        var date = this._getDateByOffset(offset * this._getRtlCorrection());\r\n        this._moveToClosestAvailableDate(date, offset);\r\n        setTimeout(function() {\r\n            this._alreadyViewRender = false\r\n        }.bind(this))\r\n    },\r\n    _getRtlCorrection: function() {\r\n        return this.option(\"rtlEnabled\") ? -1 : 1\r\n    },\r\n    _getDateByOffset: function(offset, date) {\r\n        date = new Date(date || this.option(\"currentDate\"));\r\n        var currentDay = date.getDate();\r\n        var difference = dateUtils.getDifferenceInMonth(this.option(\"zoomLevel\")) * offset;\r\n        date.setDate(1);\r\n        date.setMonth(date.getMonth() + difference);\r\n        var lastDay = dateUtils.getLastMonthDate(date).getDate();\r\n        date.setDate(currentDay > lastDay ? lastDay : currentDay);\r\n        return date\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.callBase();\r\n        var $element = this.$element();\r\n        $element.addClass(CALENDAR_CLASS);\r\n        this._renderBody();\r\n        $element.append(this.$body);\r\n        this._renderViews();\r\n        this._renderNavigator();\r\n        $element.append(this._navigator.$element());\r\n        this._renderSwipeable();\r\n        this._renderFooter();\r\n        this.setAria({\r\n            role: \"listbox\",\r\n            label: messageLocalization.format(\"dxCalendar-ariaWidgetName\")\r\n        });\r\n        this._updateAriaSelected();\r\n        this._updateAriaId();\r\n        if (this._view.isDateDisabled(this.option(\"currentDate\"))) {\r\n            this._moveCurrentDate(1)\r\n        }\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._setViewContoured(this.option(\"currentDate\"))\r\n    },\r\n    _renderBody: function() {\r\n        if (!this._$viewsWrapper) {\r\n            this.$body = $(\"<div>\").addClass(CALENDAR_BODY_CLASS);\r\n            this._$viewsWrapper = $(\"<div>\").addClass(CALENDAR_VIEWS_WRAPPER_CLASS);\r\n            this.$body.append(this._$viewsWrapper)\r\n        }\r\n    },\r\n    _renderViews: function() {\r\n        this.$element().addClass(CALENDAR_VIEW_CLASS + \"-\" + this.option(\"zoomLevel\"));\r\n        var currentDate = this.option(\"currentDate\");\r\n        this._view = this._renderSpecificView(currentDate);\r\n        this._view.option(\"_keyboardProcessor\", this._viewKeyboardProcessor);\r\n        if (windowUtils.hasWindow()) {\r\n            var beforeDate = this._getDateByOffset(-1, currentDate);\r\n            this._beforeView = this._isViewAvailable(beforeDate) ? this._renderSpecificView(beforeDate) : null;\r\n            var afterDate = this._getDateByOffset(1, currentDate);\r\n            afterDate.setDate(1);\r\n            this._afterView = this._isViewAvailable(afterDate) ? this._renderSpecificView(afterDate) : null\r\n        }\r\n        this._translateViews()\r\n    },\r\n    _renderSpecificView: function(date) {\r\n        var specificView = Views[this.option(\"zoomLevel\")],\r\n            $view = $(\"<div>\").appendTo(this._$viewsWrapper),\r\n            config = this._viewConfig(date);\r\n        return new specificView($view, config)\r\n    },\r\n    _viewConfig: function(date) {\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        disabledDates = typeUtils.isFunction(disabledDates) ? this._injectComponent(disabledDates.bind(this)) : disabledDates;\r\n        return {\r\n            date: date,\r\n            min: this._getMinDate(),\r\n            max: this._getMaxDate(),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            value: this._dateOption(\"value\"),\r\n            rtl: this.option(\"rtlEnabled\"),\r\n            disabled: this.option(\"disabled\") || config().designMode,\r\n            tabIndex: void 0,\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            disabledDates: disabledDates,\r\n            onCellClick: this._cellClickHandler.bind(this),\r\n            cellTemplate: this._getTemplateByOption(\"cellTemplate\"),\r\n            allowValueSelection: this._isMaxZoomLevel()\r\n        }\r\n    },\r\n    _injectComponent: function(func) {\r\n        var that = this;\r\n        return function(params) {\r\n            extend(params, {\r\n                component: that\r\n            });\r\n            return func(params)\r\n        }\r\n    },\r\n    _isViewAvailable: function(date) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var min = dateUtils.getViewMinBoundaryDate(zoomLevel, this._getMinDate());\r\n        var max = dateUtils.getViewMaxBoundaryDate(zoomLevel, this._getMaxDate());\r\n        return dateUtils.dateInRange(date, min, max)\r\n    },\r\n    _translateViews: function() {\r\n        translator.move(this._view.$element(), {\r\n            left: 0,\r\n            top: 0\r\n        });\r\n        this._beforeView && translator.move(this._beforeView.$element(), {\r\n            left: this._getViewPosition(-1),\r\n            top: 0\r\n        });\r\n        this._afterView && translator.move(this._afterView.$element(), {\r\n            left: this._getViewPosition(1),\r\n            top: 0\r\n        })\r\n    },\r\n    _getViewPosition: function(coefficient) {\r\n        var rtlCorrection = this.option(\"rtlEnabled\") && !browser.msie ? -1 : 1;\r\n        return 100 * coefficient * rtlCorrection + \"%\"\r\n    },\r\n    _cellClickHandler: function(e) {\r\n        var zoomLevel = this.option(\"zoomLevel\"),\r\n            nextView = dateUtils.getViewDown(zoomLevel);\r\n        var isMaxZoomLevel = this._isMaxZoomLevel();\r\n        if (nextView && !isMaxZoomLevel) {\r\n            this._navigateDown(e.event.currentTarget)\r\n        } else {\r\n            var newValue = this._updateTimeComponent(e.value);\r\n            this._dateValue(newValue, e.event);\r\n            this._cellClickAction(e)\r\n        }\r\n    },\r\n    _updateTimeComponent: function(date) {\r\n        var result = new Date(date);\r\n        var currentValue = this._dateOption(\"value\");\r\n        if (currentValue) {\r\n            result.setHours(currentValue.getHours());\r\n            result.setMinutes(currentValue.getMinutes());\r\n            result.setSeconds(currentValue.getSeconds());\r\n            result.setMilliseconds(currentValue.getMilliseconds())\r\n        }\r\n        return result\r\n    },\r\n    _isMaxZoomLevel: function() {\r\n        return this.option(\"zoomLevel\") === this.option(\"maxZoomLevel\")\r\n    },\r\n    _navigateDown: function(cell) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (this._isMaxZoomLevel()) {\r\n            return\r\n        }\r\n        var nextView = dateUtils.getViewDown(zoomLevel);\r\n        if (!nextView) {\r\n            return\r\n        }\r\n        var newCurrentDate = this._view.option(\"contouredDate\") || this._view.option(\"date\");\r\n        if (cell) {\r\n            newCurrentDate = $(cell).data(CALENDAR_DATE_VALUE_KEY)\r\n        }\r\n        this._isOtherViewCellClicked = true;\r\n        this.option(\"currentDate\", newCurrentDate);\r\n        this.option(\"zoomLevel\", nextView);\r\n        this._isOtherViewCellClicked = false;\r\n        this._renderNavigator();\r\n        this._animateShowView();\r\n        this._setViewContoured(this._getNormalizedDate(newCurrentDate))\r\n    },\r\n    _renderNavigator: function() {\r\n        if (!this._navigator) {\r\n            this._navigator = new Navigator($(\"<div>\"), this._navigatorConfig())\r\n        }\r\n        this._navigator.option(\"text\", this._view.getNavigatorCaption());\r\n        this._updateButtonsVisibility()\r\n    },\r\n    _navigatorConfig: function() {\r\n        return {\r\n            text: this._view.getNavigatorCaption(),\r\n            onClick: this._navigatorClickHandler.bind(this),\r\n            onCaptionClick: this._navigateUp.bind(this),\r\n            rtlEnabled: this.option(\"rtlEnabled\")\r\n        }\r\n    },\r\n    _navigatorClickHandler: function(e) {\r\n        var currentDate = this._getDateByOffset(e.direction, this.option(\"currentDate\"));\r\n        this._moveToClosestAvailableDate(currentDate, 1 * e.direction);\r\n        this._updateNavigatorCaption(-e.direction * this._getRtlCorrection())\r\n    },\r\n    _navigateUp: function() {\r\n        var zoomLevel = this.option(\"zoomLevel\"),\r\n            nextView = dateUtils.getViewUp(zoomLevel);\r\n        if (!nextView || this._isMinZoomLevel(zoomLevel)) {\r\n            return\r\n        }\r\n        var contouredDate = this._view.option(\"contouredDate\");\r\n        this.option(\"zoomLevel\", nextView);\r\n        this.option(\"currentDate\", contouredDate || this._view.option(\"date\"));\r\n        this._renderNavigator();\r\n        this._animateShowView().done(function() {\r\n            this._setViewContoured(contouredDate)\r\n        }.bind(this))\r\n    },\r\n    _isMinZoomLevel: function(zoomLevel) {\r\n        var min = this._getMinDate(),\r\n            max = this._getMaxDate();\r\n        return dateUtils.sameView(zoomLevel, min, max) || this.option(\"minZoomLevel\") === zoomLevel\r\n    },\r\n    _updateButtonsVisibility: function() {\r\n        this._navigator.toggleButton(\"next\", !typeUtils.isDefined(this._getRequiredView(\"next\")));\r\n        this._navigator.toggleButton(\"prev\", !typeUtils.isDefined(this._getRequiredView(\"prev\")))\r\n    },\r\n    _renderSwipeable: function() {\r\n        if (!this._swipeable) {\r\n            this._swipeable = this._createComponent(this.$element(), Swipeable, {\r\n                onStart: this._swipeStartHandler.bind(this),\r\n                onUpdated: this._swipeUpdateHandler.bind(this),\r\n                onEnd: this._swipeEndHandler.bind(this),\r\n                itemSizeFunc: this._viewWidth.bind(this)\r\n            })\r\n        }\r\n    },\r\n    _swipeStartHandler: function(e) {\r\n        fx.stop(this._$viewsWrapper, true);\r\n        e.event.maxLeftOffset = this._getRequiredView(\"next\") ? 1 : 0;\r\n        e.event.maxRightOffset = this._getRequiredView(\"prev\") ? 1 : 0\r\n    },\r\n    _getRequiredView: function(name) {\r\n        var view;\r\n        var isRtl = this.option(\"rtlEnabled\");\r\n        if (\"next\" === name) {\r\n            view = isRtl ? this._beforeView : this._afterView\r\n        } else {\r\n            if (\"prev\" === name) {\r\n                view = isRtl ? this._afterView : this._beforeView\r\n            }\r\n        }\r\n        return view\r\n    },\r\n    _swipeUpdateHandler: function(e) {\r\n        var offset = e.event.offset;\r\n        translator.move(this._$viewsWrapper, {\r\n            left: offset * this._viewWidth(),\r\n            top: 0\r\n        });\r\n        this._updateNavigatorCaption(offset)\r\n    },\r\n    _swipeEndHandler: function(e) {\r\n        var targetOffset = e.event.targetOffset,\r\n            moveOffset = !targetOffset ? 0 : targetOffset / Math.abs(targetOffset);\r\n        if (0 === moveOffset) {\r\n            this._animateWrapper(0, ANIMATION_DURATION_SHOW_VIEW);\r\n            return\r\n        }\r\n        var date = this._getDateByOffset(-moveOffset * this._getRtlCorrection());\r\n        if (this._isDateInInvalidRange(date)) {\r\n            if (moveOffset >= 0) {\r\n                date = new Date(this._getMinDate())\r\n            } else {\r\n                date = new Date(this._getMaxDate())\r\n            }\r\n        }\r\n        this.option(\"currentDate\", date)\r\n    },\r\n    _viewWidth: function() {\r\n        if (!this._viewWidthValue) {\r\n            this._viewWidthValue = this.$element().width()\r\n        }\r\n        return this._viewWidthValue\r\n    },\r\n    _updateNavigatorCaption: function(offset) {\r\n        offset *= this._getRtlCorrection();\r\n        var view = this._view;\r\n        if (offset > .5 && this._beforeView) {\r\n            view = this._beforeView\r\n        } else {\r\n            if (offset < -.5 && this._afterView) {\r\n                view = this._afterView\r\n            }\r\n        }\r\n        this._navigator.option(\"text\", view.getNavigatorCaption())\r\n    },\r\n    _isDateInInvalidRange: function(date) {\r\n        if (this._view.isBoundary(date)) {\r\n            return\r\n        }\r\n        var min = this._getMinDate(),\r\n            max = this._getMaxDate(),\r\n            normalizedDate = dateUtils.normalizeDate(date, min, max);\r\n        return normalizedDate === min || normalizedDate === max\r\n    },\r\n    _renderFooter: function() {\r\n        var showTodayButton = this.option(\"showTodayButton\");\r\n        if (showTodayButton) {\r\n            var $todayButton = this._createComponent($(\"<a>\"), Button, {\r\n                focusStateEnabled: false,\r\n                text: messageLocalization.format(\"dxCalendar-todayButtonText\"),\r\n                onClick: function() {\r\n                    this._toTodayView()\r\n                }.bind(this),\r\n                integrationOptions: {}\r\n            }).$element().addClass(CALENDAR_TODAY_BUTTON_CLASS);\r\n            this._$footer = $(\"<div>\").addClass(CALENDAR_FOOTER_CLASS).append($todayButton);\r\n            this.$element().append(this._$footer)\r\n        }\r\n        this.$element().toggleClass(CALENDAR_HAS_FOOTER_CLASS, showTodayButton)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        var dateValue = this._convertToDate(value);\r\n        this._$submitElement.val(dateSerialization.serializeDate(dateValue, CALENDAR_INPUT_STANDARD_PATTERN))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _animateShowView: function() {\r\n        fx.stop(this._view.$element(), true);\r\n        return this._popAnimationView(this._view, POP_ANIMATION_FROM, POP_ANIMATION_TO, ANIMATION_DURATION_SHOW_VIEW).promise()\r\n    },\r\n    _popAnimationView: function(view, from, to, duration) {\r\n        return fx.animate(view.$element(), {\r\n            type: \"pop\",\r\n            from: {\r\n                scale: from,\r\n                opacity: from\r\n            },\r\n            to: {\r\n                scale: to,\r\n                opacity: to\r\n            },\r\n            duration: duration\r\n        })\r\n    },\r\n    _navigate: function(offset, value) {\r\n        if (0 !== offset && 1 !== Math.abs(offset) && this._isViewAvailable(value)) {\r\n            var newView = this._renderSpecificView(value);\r\n            if (offset > 0) {\r\n                this._afterView && this._afterView.$element().remove();\r\n                this._afterView = newView\r\n            } else {\r\n                this._beforeView && this._beforeView.$element().remove();\r\n                this._beforeView = newView\r\n            }\r\n            this._translateViews()\r\n        }\r\n        var rtlCorrection = this._getRtlCorrection(),\r\n            offsetSign = offset > 0 ? 1 : offset < 0 ? -1 : 0,\r\n            endPosition = -rtlCorrection * offsetSign * this._viewWidth();\r\n        var viewsWrapperPosition = this._$viewsWrapper.position().left;\r\n        if (viewsWrapperPosition !== endPosition) {\r\n            if (this._preventViewChangeAnimation) {\r\n                this._wrapperAnimationEndHandler(offset, value)\r\n            } else {\r\n                this._animateWrapper(endPosition, ANIMATION_DURATION_SHOW_VIEW).done(this._wrapperAnimationEndHandler.bind(this, offset, value))\r\n            }\r\n        }\r\n    },\r\n    _animateWrapper: function(to, duration) {\r\n        return fx.animate(this._$viewsWrapper, {\r\n            type: \"slide\",\r\n            from: {\r\n                left: this._$viewsWrapper.position().left\r\n            },\r\n            to: {\r\n                left: to\r\n            },\r\n            duration: duration\r\n        })\r\n    },\r\n    _toTodayView: function() {\r\n        var today = new Date;\r\n        if (this._isMaxZoomLevel()) {\r\n            this._dateOption(\"value\", today);\r\n            return\r\n        }\r\n        this._preventViewChangeAnimation = true;\r\n        this.option(\"zoomLevel\", this.option(\"maxZoomLevel\"));\r\n        this._dateOption(\"value\", today);\r\n        this._animateShowView();\r\n        this._preventViewChangeAnimation = false\r\n    },\r\n    _wrapperAnimationEndHandler: function(offset, newDate) {\r\n        this._rearrangeViews(offset);\r\n        this._translateViews();\r\n        this._resetLocation();\r\n        this._renderNavigator();\r\n        this._setViewContoured(newDate);\r\n        this._updateAriaId(newDate)\r\n    },\r\n    _rearrangeViews: function(offset) {\r\n        if (0 === offset) {\r\n            return\r\n        }\r\n        var viewOffset, viewToCreateKey, viewToRemoveKey;\r\n        if (offset < 0) {\r\n            viewOffset = 1;\r\n            viewToCreateKey = \"_beforeView\";\r\n            viewToRemoveKey = \"_afterView\"\r\n        } else {\r\n            viewOffset = -1;\r\n            viewToCreateKey = \"_afterView\";\r\n            viewToRemoveKey = \"_beforeView\"\r\n        }\r\n        if (!this[viewToCreateKey]) {\r\n            return\r\n        }\r\n        var destinationDate = this[viewToCreateKey].option(\"date\");\r\n        if (this[viewToRemoveKey]) {\r\n            this[viewToRemoveKey].$element().remove()\r\n        }\r\n        if (offset === viewOffset) {\r\n            this[viewToRemoveKey] = this._view\r\n        } else {\r\n            this[viewToRemoveKey] = this._renderSpecificView(this._getDateByOffset(viewOffset, destinationDate));\r\n            this._view.$element().remove()\r\n        }\r\n        this._view = this[viewToCreateKey];\r\n        var dateByOffset = this._getDateByOffset(-viewOffset, destinationDate);\r\n        this[viewToCreateKey] = this._isViewAvailable(dateByOffset) ? this._renderSpecificView(dateByOffset) : null\r\n    },\r\n    _resetLocation: function() {\r\n        translator.move(this._$viewsWrapper, {\r\n            left: 0,\r\n            top: 0\r\n        })\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._clearViewWidthCache();\r\n        delete this._$viewsWrapper;\r\n        delete this._navigator;\r\n        delete this._$footer\r\n    },\r\n    _clearViewWidthCache: function() {\r\n        delete this._viewWidthValue\r\n    },\r\n    _disposeViews: function() {\r\n        this._view.$element().remove();\r\n        this._beforeView && this._beforeView.$element().remove();\r\n        this._afterView && this._afterView.$element().remove();\r\n        delete this._view;\r\n        delete this._beforeView;\r\n        delete this._afterView\r\n    },\r\n    _refreshViews: function() {\r\n        this._disposeViews();\r\n        this._renderViews()\r\n    },\r\n    _visibilityChanged: function() {\r\n        this._translateViews()\r\n    },\r\n    _focusInHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._view.option(\"contouredDate\", this.option(\"currentDate\"))\r\n    },\r\n    _focusOutHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._view.option(\"contouredDate\", null)\r\n    },\r\n    _updateViewsValue: function(value) {\r\n        var newValue = value ? new Date(value) : null;\r\n        this._view.option(\"value\", newValue);\r\n        this._beforeView && this._beforeView.option(\"value\", newValue);\r\n        this._afterView && this._afterView.option(\"value\", newValue)\r\n    },\r\n    _updateAriaSelected: function(value, previousValue) {\r\n        value = value || this._dateOption(\"value\");\r\n        var $prevSelectedCell = this._view._getCellByDate(previousValue);\r\n        var $selectedCell = this._view._getCellByDate(value);\r\n        this.setAria(\"selected\", void 0, $prevSelectedCell);\r\n        this.setAria(\"selected\", true, $selectedCell);\r\n        if (value && this.option(\"currentDate\").getTime() === value.getTime()) {\r\n            this._updateAriaId(value)\r\n        }\r\n    },\r\n    _updateAriaId: function(value) {\r\n        value = value || this.option(\"currentDate\");\r\n        var ariaId = \"dx-\" + new Guid;\r\n        var $newCell = this._view._getCellByDate(value);\r\n        this.setAria(\"id\", ariaId, $newCell);\r\n        this.setAria(\"activedescendant\", ariaId);\r\n        this._onContouredChanged(ariaId)\r\n    },\r\n    _suppressingNavigation: function(callback, args) {\r\n        this._suppressNavigation = true;\r\n        callback.apply(this, args);\r\n        delete this._suppressNavigation\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        var previousValue = args.previousValue;\r\n        switch (args.name) {\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._clearViewWidthCache();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this.min = void 0;\r\n                this.max = void 0;\r\n                this._suppressingNavigation(this._updateCurrentDate, [this.option(\"currentDate\")]);\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._refreshViews();\r\n                this._updateButtonsVisibility();\r\n                break;\r\n            case \"currentDate\":\r\n                this.setAria(\"id\", void 0, this._view._getCellByDate(previousValue));\r\n                this._updateCurrentDate(value);\r\n                break;\r\n            case \"zoomLevel\":\r\n                this.$element().removeClass(CALENDAR_VIEW_CLASS + \"-\" + previousValue);\r\n                this._correctZoomLevel();\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                this._updateAriaId();\r\n                break;\r\n            case \"minZoomLevel\":\r\n            case \"maxZoomLevel\":\r\n                this._correctZoomLevel();\r\n                this._updateButtonsVisibility();\r\n                break;\r\n            case \"value\":\r\n                value = this._convertToDate(value);\r\n                previousValue = this._convertToDate(previousValue);\r\n                this._updateAriaSelected(value, previousValue);\r\n                this.option(\"currentDate\", typeUtils.isDefined(value) ? new Date(value) : new Date);\r\n                this._updateViewsValue(value);\r\n                this._setSubmitValue(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"disabled\":\r\n                this._view.option(\"disabled\", value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"onCellClick\":\r\n                this._view.option(\"onCellClick\", value);\r\n                break;\r\n            case \"onContouredChanged\":\r\n                this._onContouredChanged = this._createActionByOption(\"onContouredChanged\");\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"dateSerializationFormat\":\r\n            case \"cellTemplate\":\r\n            case \"showTodayButton\":\r\n                this._invalidate();\r\n                break;\r\n            case \"hasFocus\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxCalendar\", Calendar);\r\nmodule.exports = Calendar;\r\n\n\n/***/ }),\n\n/***/ 796:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/calendar/ui.calendar.navigator.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    extend = __webpack_require__(3).extend,\r\n    Widget = __webpack_require__(43),\r\n    Button = __webpack_require__(42);\r\nvar CALENDAR_NAVIGATOR_CLASS = \"dx-calendar-navigator\",\r\n    CALENDAR_NAVIGATOR_PREVIOUS_MONTH_CLASS = \"dx-calendar-navigator-previous-month\",\r\n    CALENDAR_NAVIGATOR_NEXT_MONTH_CLASS = \"dx-calendar-navigator-next-month\",\r\n    CALENDAR_NAVIGATOR_PREVIOUS_VIEW_CLASS = \"dx-calendar-navigator-previous-view\",\r\n    CALENDAR_NAVIGATOR_NEXT_VIEW_CLASS = \"dx-calendar-navigator-next-view\",\r\n    CALENDAR_NAVIGATOR_DISABLED_LINK_CLASS = \"dx-calendar-disabled-navigator-link\",\r\n    CALENDAR_NAVIGATOR_CAPTION_BUTTON_CLASS = \"dx-calendar-caption-button\";\r\nvar Navigator = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onClick: null,\r\n            onCaptionClick: null,\r\n            text: \"\"\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initActions()\r\n    },\r\n    _initActions: function() {\r\n        this._clickAction = this._createActionByOption(\"onClick\");\r\n        this._captionClickAction = this._createActionByOption(\"onCaptionClick\")\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(CALENDAR_NAVIGATOR_CLASS);\r\n        this._renderButtons();\r\n        this._renderCaption()\r\n    },\r\n    _renderButtons: function() {\r\n        var that = this,\r\n            direction = this.option(\"rtlEnabled\") ? -1 : 1;\r\n        this._prevButton = this._createComponent($(\"<a>\"), Button, {\r\n            focusStateEnabled: false,\r\n            icon: \"chevronleft\",\r\n            onClick: function(e) {\r\n                that._clickAction({\r\n                    direction: -direction,\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $prevButton = this._prevButton.$element().addClass(CALENDAR_NAVIGATOR_PREVIOUS_VIEW_CLASS).addClass(CALENDAR_NAVIGATOR_PREVIOUS_MONTH_CLASS);\r\n        this._nextButton = this._createComponent($(\"<a>\"), Button, {\r\n            focusStateEnabled: false,\r\n            icon: \"chevronright\",\r\n            onClick: function(e) {\r\n                that._clickAction({\r\n                    direction: direction,\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $nextButton = this._nextButton.$element().addClass(CALENDAR_NAVIGATOR_NEXT_VIEW_CLASS).addClass(CALENDAR_NAVIGATOR_NEXT_MONTH_CLASS);\r\n        this._caption = this._createComponent($(\"<a>\").addClass(CALENDAR_NAVIGATOR_CAPTION_BUTTON_CLASS), Button, {\r\n            focusStateEnabled: false,\r\n            onClick: function(e) {\r\n                that._captionClickAction({\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $caption = this._caption.$element();\r\n        this.$element().append($prevButton, $caption, $nextButton)\r\n    },\r\n    _renderCaption: function() {\r\n        this._caption.option(\"text\", this.option(\"text\"))\r\n    },\r\n    toggleButton: function(buttonPrefix, value) {\r\n        var buttonName = \"_\" + buttonPrefix + \"Button\",\r\n            button = this[buttonName];\r\n        if (button) {\r\n            button.option(\"disabled\", value);\r\n            button.$element().toggleClass(CALENDAR_NAVIGATOR_DISABLED_LINK_CLASS, value)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"text\":\r\n                this._renderCaption();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = Navigator;\r\n\n\n/***/ }),\n\n/***/ 797:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/calendar/ui.calendar.views.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    noop = __webpack_require__(6).noop,\r\n    BaseView = __webpack_require__(798),\r\n    dateUtils = __webpack_require__(737),\r\n    extend = __webpack_require__(3).extend,\r\n    dateLocalization = __webpack_require__(732),\r\n    dateSerialization = __webpack_require__(738),\r\n    typeUtils = __webpack_require__(4);\r\nvar CALENDAR_OTHER_MONTH_CLASS = \"dx-calendar-other-month\",\r\n    CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\r\nvar Views = {\r\n    month: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"month\"\r\n        },\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                firstDayOfWeek: void 0,\r\n                rowCount: 6,\r\n                colCount: 7\r\n            })\r\n        },\r\n        _renderImpl: function() {\r\n            this.callBase();\r\n            this._renderHeader()\r\n        },\r\n        _renderBody: function() {\r\n            this.callBase();\r\n            this._$table.find(\".\" + CALENDAR_OTHER_VIEW_CLASS).addClass(CALENDAR_OTHER_MONTH_CLASS)\r\n        },\r\n        _renderFocusTarget: noop,\r\n        getCellAriaLabel: function(date) {\r\n            return dateLocalization.format(date, \"longdate\")\r\n        },\r\n        _renderHeader: function() {\r\n            var that = this;\r\n            var $header = $(\"<thead>\");\r\n            this._$table.prepend($header);\r\n            var $headerRow = $(\"<tr>\");\r\n            $header.append($headerRow);\r\n            var appendCell = this.option(\"rtl\") ? function(row, cell) {\r\n                row.prepend(cell)\r\n            } : function(row, cell) {\r\n                row.append(cell)\r\n            };\r\n            this._iterateCells(this.option(\"colCount\"), function(i) {\r\n                var $cell = $(\"<th>\").text(that._getDayCaption(that._getFirstDayOfWeek() + i));\r\n                appendCell($headerRow, $cell)\r\n            })\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return dateLocalization.format(this.option(\"date\"), \"monthandyear\")\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = new Date;\r\n            return dateUtils.sameDate(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var minDate = this.option(\"min\"),\r\n                maxDate = this.option(\"max\");\r\n            return !dateUtils.dateInRange(cellDate, minDate, maxDate, \"date\")\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            return cellDate.getMonth() !== this.option(\"date\").getMonth()\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.format(cellDate, \"d\")\r\n        },\r\n        _getDayCaption: function(day) {\r\n            var daysInWeek = this.option(\"colCount\");\r\n            return dateLocalization.getDayNames(\"abbreviated\")[day % daysInWeek]\r\n        },\r\n        _getFirstCellData: function() {\r\n            var firstDay = dateUtils.getFirstMonthDate(this.option(\"date\")),\r\n                firstMonthDayOffset = this._getFirstDayOfWeek() - firstDay.getDay(),\r\n                daysInWeek = this.option(\"colCount\");\r\n            if (firstMonthDayOffset >= 0) {\r\n                firstMonthDayOffset -= daysInWeek\r\n            }\r\n            firstDay.setDate(firstDay.getDate() + firstMonthDayOffset);\r\n            return firstDay\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setDate(date.getDate() + 1);\r\n            return date\r\n        },\r\n        _getFirstDayOfWeek: function() {\r\n            return typeUtils.isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex()\r\n        },\r\n        _getCellByDate: function(date) {\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(date, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameMonthAndYear(date, this.option(\"min\")) || dateUtils.sameMonthAndYear(date, this.option(\"max\"))\r\n        },\r\n        _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n            return function(args) {\r\n                var isDisabledDate = disabledDates.some(function(item) {\r\n                    return dateUtils.sameDate(item, args.date)\r\n                });\r\n                if (isDisabledDate) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    year: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"year\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameMonthAndYear(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            return !dateUtils.dateInRange(cellDate, dateUtils.getFirstMonthDate(this.option(\"min\")), dateUtils.getLastMonthDate(this.option(\"max\")))\r\n        },\r\n        _isOtherView: function() {\r\n            return false\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.getMonthNames(\"abbreviated\")[cellDate.getMonth()]\r\n        },\r\n        _getFirstCellData: function() {\r\n            var data = new Date(this.option(\"date\"));\r\n            data.setDate(1);\r\n            data.setMonth(0);\r\n            return data\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setMonth(date.getMonth() + 1);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        getCellAriaLabel: function(date) {\r\n            return dateLocalization.format(date, \"monthandyear\")\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return dateLocalization.format(this.option(\"date\"), \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameYear(date, this.option(\"min\")) || dateUtils.sameYear(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    decade: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"decade\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameYear(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var min = this.option(\"min\"),\r\n                max = this.option(\"max\");\r\n            return !dateUtils.dateInRange(cellDate.getFullYear(), min && min.getFullYear(), max && max.getFullYear())\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = new Date(cellDate);\r\n            date.setMonth(1);\r\n            return !dateUtils.sameDecade(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.format(cellDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var year = dateUtils.getFirstYearInDecade(this.option(\"date\")) - 1;\r\n            return new Date(year, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setFullYear(date.getFullYear() + 1);\r\n            return date\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\"),\r\n                firstYearInDecade = dateUtils.getFirstYearInDecade(currentDate),\r\n                startDate = new Date(currentDate),\r\n                endDate = new Date(currentDate);\r\n            startDate.setFullYear(firstYearInDecade);\r\n            endDate.setFullYear(firstYearInDecade + 9);\r\n            return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        _isValueOnCurrentView: function(currentDate, value) {\r\n            return dateUtils.sameDecade(currentDate, value)\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameDecade(date, this.option(\"min\")) || dateUtils.sameDecade(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    century: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"century\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameDecade(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var decade = dateUtils.getFirstYearInDecade(cellDate),\r\n                minDecade = dateUtils.getFirstYearInDecade(this.option(\"min\")),\r\n                maxDecade = dateUtils.getFirstYearInDecade(this.option(\"max\"));\r\n            return !dateUtils.dateInRange(decade, minDecade, maxDecade)\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = new Date(cellDate);\r\n            date.setMonth(1);\r\n            return !dateUtils.sameCentury(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            var startDate = dateLocalization.format(cellDate, \"yyyy\"),\r\n                endDate = new Date(cellDate);\r\n            endDate.setFullYear(endDate.getFullYear() + 9);\r\n            return startDate + \" - \" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var decade = dateUtils.getFirstDecadeInCentury(this.option(\"date\")) - 10;\r\n            return new Date(decade, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setFullYear(date.getFullYear() + 10);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            foundDate.setFullYear(dateUtils.getFirstYearInDecade(foundDate));\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\"),\r\n                firstDecadeInCentury = dateUtils.getFirstDecadeInCentury(currentDate),\r\n                startDate = new Date(currentDate),\r\n                endDate = new Date(currentDate);\r\n            startDate.setFullYear(firstDecadeInCentury);\r\n            endDate.setFullYear(firstDecadeInCentury + 99);\r\n            return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameCentury(date, this.option(\"min\")) || dateUtils.sameCentury(date, this.option(\"max\"))\r\n        }\r\n    })\r\n};\r\nmodule.exports = Views;\r\n\n\n/***/ }),\n\n/***/ 798:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/calendar/ui.calendar.base_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    dataUtils = __webpack_require__(40),\r\n    domUtils = __webpack_require__(13),\r\n    Widget = __webpack_require__(43),\r\n    dateUtils = __webpack_require__(737),\r\n    extend = __webpack_require__(3).extend,\r\n    noop = __webpack_require__(6).noop,\r\n    dateSerialization = __webpack_require__(738),\r\n    eventUtils = __webpack_require__(8),\r\n    clickEvent = __webpack_require__(25);\r\nvar abstract = Widget.abstract,\r\n    CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\",\r\n    CALENDAR_CELL_CLASS = \"dx-calendar-cell\",\r\n    CALENDAR_EMPTY_CELL_CLASS = \"dx-calendar-empty-cell\",\r\n    CALENDAR_TODAY_CLASS = \"dx-calendar-today\",\r\n    CALENDAR_SELECTED_DATE_CLASS = \"dx-calendar-selected-date\",\r\n    CALENDAR_CONTOURED_DATE_CLASS = \"dx-calendar-contoured-date\",\r\n    CALENDAR_DXCLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxCalendar\"),\r\n    CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\r\nvar BaseView = Widget.inherit({\r\n    _getViewName: function() {\r\n        return \"base\"\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            date: new Date,\r\n            focusStateEnabled: false,\r\n            cellTemplate: null,\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            rowCount: 3,\r\n            colCount: 4,\r\n            allowValueSelection: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        var value = this.option(\"value\");\r\n        this.option(\"value\", new Date(value));\r\n        if (!this.option(\"value\").valueOf()) {\r\n            this.option(\"value\", new Date(0, 0, 0, 0, 0, 0))\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderImpl()\r\n    },\r\n    _renderImpl: function() {\r\n        this._$table = $(\"<table>\");\r\n        this.$element().append(this._$table);\r\n        this._createDisabledDatesHandler();\r\n        this._renderBody();\r\n        this._renderContouredDate();\r\n        this._renderValue();\r\n        this._renderEvents()\r\n    },\r\n    _renderBody: function() {\r\n        this.$body = $(\"<tbody>\").appendTo(this._$table);\r\n        var that = this,\r\n            cellTemplate = this.option(\"cellTemplate\");\r\n        var appendChild = this.option(\"rtl\") ? function(row, cell) {\r\n            row.insertBefore(cell, row.firstChild)\r\n        } : function(row, cell) {\r\n            row.appendChild(cell)\r\n        };\r\n\r\n        function renderCell(cellIndex) {\r\n            if (prevCellDate) {\r\n                dateUtils.fixTimezoneGap(prevCellDate, cellDate)\r\n            }\r\n            prevCellDate = cellDate;\r\n            var cell = domAdapter.createElement(\"td\"),\r\n                $cell = $(cell),\r\n                className = CALENDAR_CELL_CLASS;\r\n            if (that._isTodayCell(cellDate)) {\r\n                className = className + \" \" + CALENDAR_TODAY_CLASS\r\n            }\r\n            if (that._isDateOutOfRange(cellDate) || that.isDateDisabled(cellDate)) {\r\n                className = className + \" \" + CALENDAR_EMPTY_CELL_CLASS\r\n            }\r\n            if (that._isOtherView(cellDate)) {\r\n                className = className + \" \" + CALENDAR_OTHER_VIEW_CLASS\r\n            }\r\n            cell.className = className;\r\n            cell.setAttribute(\"data-value\", dateSerialization.serializeDate(cellDate, dateUtils.getShortDateFormat()));\r\n            dataUtils.data(cell, CALENDAR_DATE_VALUE_KEY, cellDate);\r\n            that.setAria({\r\n                role: \"option\",\r\n                label: that.getCellAriaLabel(cellDate)\r\n            }, $cell);\r\n            appendChild(row, cell);\r\n            if (cellTemplate) {\r\n                cellTemplate.render({\r\n                    model: {\r\n                        text: that._getCellText(cellDate),\r\n                        date: cellDate,\r\n                        view: that._getViewName()\r\n                    },\r\n                    container: domUtils.getPublicElement($cell),\r\n                    index: cellIndex\r\n                })\r\n            } else {\r\n                cell.innerHTML = that._getCellText(cellDate)\r\n            }\r\n            cellDate = that._getNextCellData(cellDate)\r\n        }\r\n        var prevCellDate, cellDate = this._getFirstCellData(),\r\n            colCount = this.option(\"colCount\");\r\n        for (var indexRow = 0, len = this.option(\"rowCount\"); indexRow < len; indexRow++) {\r\n            var row = domAdapter.createElement(\"tr\");\r\n            this.$body.get(0).appendChild(row);\r\n            this._iterateCells(colCount, renderCell)\r\n        }\r\n    },\r\n    _iterateCells: function(colCount, delegate) {\r\n        var i = 0;\r\n        while (i < colCount) {\r\n            delegate(i);\r\n            ++i\r\n        }\r\n    },\r\n    _renderEvents: function() {\r\n        this._createCellClickAction();\r\n        eventsEngine.off(this._$table, CALENDAR_DXCLICK_EVENT_NAME);\r\n        eventsEngine.on(this._$table, CALENDAR_DXCLICK_EVENT_NAME, \"td\", function(e) {\r\n            if (!$(e.currentTarget).hasClass(CALENDAR_EMPTY_CELL_CLASS)) {\r\n                this._cellClickAction({\r\n                    event: e,\r\n                    value: $(e.currentTarget).data(CALENDAR_DATE_VALUE_KEY)\r\n                })\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _createCellClickAction: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\")\r\n    },\r\n    _createDisabledDatesHandler: function() {\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        this._disabledDatesHandler = Array.isArray(disabledDates) ? this._getDefaultDisabledDatesHandler(disabledDates) : disabledDates || noop\r\n    },\r\n    _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n        return noop\r\n    },\r\n    _isTodayCell: abstract,\r\n    _isDateOutOfRange: abstract,\r\n    isDateDisabled: function(cellDate) {\r\n        var dateParts = {\r\n            date: cellDate,\r\n            view: this._getViewName()\r\n        };\r\n        return this._disabledDatesHandler(dateParts)\r\n    },\r\n    _isOtherView: abstract,\r\n    _getCellText: abstract,\r\n    _getFirstCellData: abstract,\r\n    _getNextCellData: abstract,\r\n    _renderContouredDate: function(contouredDate) {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        contouredDate = contouredDate || this.option(\"contouredDate\");\r\n        var $oldContouredCell = this._$table.find(\".\" + CALENDAR_CONTOURED_DATE_CLASS);\r\n        var $newContouredCell = this._getCellByDate(contouredDate);\r\n        $oldContouredCell.removeClass(CALENDAR_CONTOURED_DATE_CLASS);\r\n        $newContouredCell.addClass(CALENDAR_CONTOURED_DATE_CLASS)\r\n    },\r\n    _dispose: function() {\r\n        this._keyboardProcessor = void 0;\r\n        this.callBase()\r\n    },\r\n    _changeValue: function(cellDate) {\r\n        if (cellDate) {\r\n            var value = this.option(\"value\"),\r\n                newValue = value ? new Date(value) : new Date;\r\n            newValue.setDate(cellDate.getDate());\r\n            newValue.setMonth(cellDate.getMonth());\r\n            newValue.setFullYear(cellDate.getFullYear());\r\n            newValue.setDate(cellDate.getDate());\r\n            this.option(\"value\", newValue)\r\n        } else {\r\n            this.option(\"value\", null)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (!this.option(\"allowValueSelection\")) {\r\n            return\r\n        }\r\n        var value = this.option(\"value\"),\r\n            selectedCell = this._getCellByDate(value);\r\n        if (this._selectedCell) {\r\n            this._selectedCell.removeClass(CALENDAR_SELECTED_DATE_CLASS)\r\n        }\r\n        selectedCell.addClass(CALENDAR_SELECTED_DATE_CLASS);\r\n        this._selectedCell = selectedCell\r\n    },\r\n    getCellAriaLabel: function(date) {\r\n        return this._getCellText(date)\r\n    },\r\n    _getFirstAvailableDate: function() {\r\n        var date = this.option(\"date\"),\r\n            min = this.option(\"min\");\r\n        date = dateUtils.getFirstDateView(this._getViewName(), date);\r\n        return new Date(min && date < min ? min : date)\r\n    },\r\n    _getCellByDate: abstract,\r\n    isBoundary: abstract,\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._renderValue();\r\n                break;\r\n            case \"contouredDate\":\r\n                this._renderContouredDate(args.value);\r\n                break;\r\n            case \"onCellClick\":\r\n                this._createCellClickAction();\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"cellTemplate\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = BaseView;\r\n\n\n/***/ }),\n\n/***/ 799:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.date_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    window = __webpack_require__(9).getWindow(),\r\n    DateView = __webpack_require__(800),\r\n    DateBoxStrategy = __webpack_require__(743),\r\n    support = __webpack_require__(51),\r\n    extend = __webpack_require__(3).extend,\r\n    themes = __webpack_require__(22),\r\n    dateUtils = __webpack_require__(734),\r\n    messageLocalization = __webpack_require__(24);\r\nvar DateViewStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"DateView\",\r\n    getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            openOnFieldClick: true,\r\n            applyButtonText: messageLocalization.format(\"Done\")\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || dateUtils.FORMATS_MAP[this.dateBox.option(\"type\")]\r\n    },\r\n    popupConfig: function(config) {\r\n        var themeName = themes.current();\r\n        return {\r\n            showTitle: true,\r\n            toolbarItems: this.dateBox._popupToolbarItemsConfig(),\r\n            onInitialized: config.onInitialized,\r\n            defaultOptionsRules: [{\r\n                device: function(_device) {\r\n                    return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n                },\r\n                options: {\r\n                    showNames: true\r\n                }\r\n            }, {\r\n                device: function(_device2) {\r\n                    return \"win\" === _device2.platform && _device2.phone && _device2.version && 8 === _device2.version[0]\r\n                },\r\n                options: {\r\n                    animation: null\r\n                }\r\n            }, {\r\n                device: function() {\r\n                    return themes.isWin8(themeName)\r\n                },\r\n                options: {\r\n                    fullScreen: true\r\n                }\r\n            }, {\r\n                device: {\r\n                    platform: \"android\"\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    height: 331\r\n                }\r\n            }, {\r\n                device: function(_device3) {\r\n                    var platform = _device3.platform,\r\n                        version = _device3.version;\r\n                    return \"generic\" === platform || \"ios\" === platform || \"win\" === platform && version && 10 === version[0]\r\n                },\r\n                options: {\r\n                    width: \"auto\",\r\n                    height: \"auto\"\r\n                }\r\n            }, {\r\n                device: function(_device4) {\r\n                    var platform = _device4.platform,\r\n                        phone = _device4.phone;\r\n                    return \"generic\" === platform && phone\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    maxWidth: \"100%\",\r\n                    maxHeight: \"100%\",\r\n                    height: \"auto\",\r\n                    position: {\r\n                        collision: \"flipfit flip\"\r\n                    }\r\n                }\r\n            }, {\r\n                device: function(_device5) {\r\n                    return _device5.phone && themes.isWin10(themeName)\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    height: \"auto\"\r\n                }\r\n            }, {\r\n                device: {\r\n                    platform: \"ios\",\r\n                    phone: true\r\n                },\r\n                options: {\r\n                    width: \"100%\",\r\n                    position: {\r\n                        my: \"bottom\",\r\n                        at: \"bottom\",\r\n                        of: window\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    _renderWidget: function() {\r\n        if (support.inputType(this.dateBox.option(\"mode\")) && this.dateBox._isNativeType() || this.dateBox.option(\"readOnly\")) {\r\n            if (this._widget) {\r\n                this._widget.$element().remove();\r\n                this._widget = null\r\n            }\r\n            return\r\n        }\r\n        var popup = this._getPopup();\r\n        if (this._widget) {\r\n            this._widget.option(this._getWidgetOptions())\r\n        } else {\r\n            var element = $(\"<div>\").appendTo(popup.$content());\r\n            this._widget = this._createWidget(element)\r\n        }\r\n        this._widget.$element().appendTo(this._getWidgetContainer())\r\n    },\r\n    _getWidgetName: function() {\r\n        return DateView\r\n    },\r\n    _getWidgetOptions: function() {\r\n        return {\r\n            value: this.dateBoxValue() || new Date,\r\n            type: this.dateBox.option(\"type\"),\r\n            minDate: this.dateBox.dateOption(\"min\") || new Date(1900, 1, 1),\r\n            maxDate: this.dateBox.dateOption(\"max\") || new Date(Date.now() + 50 * dateUtils.ONE_YEAR),\r\n            onDisposing: function() {\r\n                this._widget = null\r\n            }.bind(this)\r\n        }\r\n    }\r\n});\r\nmodule.exports = DateViewStrategy;\r\n\n\n/***/ }),\n\n/***/ 800:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    Editor = __webpack_require__(140),\r\n    DateViewRoller = __webpack_require__(801),\r\n    dateUtils = __webpack_require__(737),\r\n    each = __webpack_require__(5).each,\r\n    extend = __webpack_require__(3).extend,\r\n    uiDateUtils = __webpack_require__(734),\r\n    registerComponent = __webpack_require__(16),\r\n    dateLocalization = __webpack_require__(732);\r\nvar DATEVIEW_CLASS = \"dx-dateview\",\r\n    DATEVIEW_COMPACT_CLASS = \"dx-dateview-compact\",\r\n    DATEVIEW_WRAPPER_CLASS = \"dx-dateview-wrapper\",\r\n    DATEVIEW_ROLLER_CONTAINER_CLASS = \"dx-dateview-rollers\",\r\n    DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar ROLLER_TYPE = {\r\n    year: \"year\",\r\n    month: \"month\",\r\n    day: \"day\",\r\n    hours: \"hours\"\r\n};\r\nvar DateView = Editor.inherit({\r\n    _valueOption: function() {\r\n        var value = this.option(\"value\"),\r\n            date = new Date(value);\r\n        return !value || isNaN(date) ? this._getDefaultDate() : date\r\n    },\r\n    _getDefaultDate: function() {\r\n        var date = new Date;\r\n        if (this.option(\"type\") === TYPE.date) {\r\n            return new Date(date.getFullYear(), date.getMonth(), date.getDate())\r\n        }\r\n        return date\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            minDate: uiDateUtils.MIN_DATEVIEW_DEFAULT_DATE,\r\n            maxDate: uiDateUtils.MAX_DATEVIEW_DEFAULT_DATE,\r\n            type: TYPE.date,\r\n            value: new Date,\r\n            showNames: false,\r\n            applyCompactClass: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n            },\r\n            options: {\r\n                showNames: true\r\n            }\r\n        }, {\r\n            device: function(_device2) {\r\n                return \"desktop\" !== _device2.deviceType\r\n            },\r\n            options: {\r\n                applyCompactClass: true\r\n            }\r\n        }])\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DATEVIEW_CLASS);\r\n        this._toggleFormatClasses(this.option(\"type\"));\r\n        this._toggleCompactClass()\r\n    },\r\n    _toggleFormatClasses: function(currentFormat, previousFormat) {\r\n        this.$element().addClass(DATEVIEW_CLASS + \"-\" + currentFormat);\r\n        previousFormat && this.$element().removeClass(DATEVIEW_CLASS + \"-\" + previousFormat)\r\n    },\r\n    _toggleCompactClass: function() {\r\n        this.$element().toggleClass(DATEVIEW_COMPACT_CLASS, this.option(\"applyCompactClass\"))\r\n    },\r\n    _wrapper: function() {\r\n        return this._$wrapper\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._$wrapper = $(\"<div>\").addClass(DATEVIEW_WRAPPER_CLASS);\r\n        this._renderRollers();\r\n        this._$wrapper.appendTo(this.$element())\r\n    },\r\n    _renderRollers: function() {\r\n        if (!this._$rollersContainer) {\r\n            this._$rollersContainer = $(\"<div>\").addClass(DATEVIEW_ROLLER_CONTAINER_CLASS)\r\n        }\r\n        this._$rollersContainer.empty();\r\n        this._createRollerConfigs();\r\n        this._rollers = {};\r\n        var that = this;\r\n        each(that._rollerConfigs, function(name) {\r\n            var $roller = $(\"<div>\").appendTo(that._$rollersContainer).addClass(DATEVIEW_ROLLER_CLASS + \"-\" + that._rollerConfigs[name].type);\r\n            that._rollers[that._rollerConfigs[name].type] = that._createComponent($roller, DateViewRoller, {\r\n                items: that._rollerConfigs[name].displayItems,\r\n                selectedIndex: that._rollerConfigs[name].selectedIndex,\r\n                showScrollbar: false,\r\n                onStart: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(true);\r\n                    that._setActiveRoller(that._rollerConfigs[name], roller.option(\"selectedIndex\"))\r\n                },\r\n                onEnd: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(false)\r\n                },\r\n                onClick: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(true);\r\n                    that._setActiveRoller(that._rollerConfigs[name], roller.option(\"selectedIndex\"));\r\n                    that._setRollerState(that._rollerConfigs[name], roller.option(\"selectedIndex\"));\r\n                    roller._toggleActive(false)\r\n                },\r\n                onSelectedIndexChanged: function(e) {\r\n                    var roller = e.component;\r\n                    that._setRollerState(that._rollerConfigs[name], roller.option(\"selectedIndex\"))\r\n                }\r\n            })\r\n        });\r\n        that._$rollersContainer.appendTo(that._wrapper())\r\n    },\r\n    _createRollerConfigs: function(type) {\r\n        var that = this;\r\n        type = type || that.option(\"type\");\r\n        that._rollerConfigs = {};\r\n        dateLocalization.getFormatParts(uiDateUtils.FORMATS_MAP[type]).forEach(function(partName) {\r\n            that._createRollerConfig(partName)\r\n        })\r\n    },\r\n    _createRollerConfig: function(componentName) {\r\n        var componentInfo = uiDateUtils.DATE_COMPONENTS_INFO[componentName],\r\n            valueRange = this._calculateRollerConfigValueRange(componentName),\r\n            startValue = valueRange.startValue,\r\n            endValue = valueRange.endValue,\r\n            formatter = componentInfo.formatter,\r\n            showNames = this.option(\"showNames\"),\r\n            curDate = this._getCurrentDate();\r\n        var config = {\r\n            type: componentName,\r\n            setValue: componentInfo.setter,\r\n            valueItems: [],\r\n            displayItems: [],\r\n            getIndex: function(value) {\r\n                return value[componentInfo.getter]() - startValue\r\n            }\r\n        };\r\n        for (var i = startValue; i <= endValue; i++) {\r\n            config.valueItems.push(i);\r\n            config.displayItems.push(formatter(i, showNames, curDate))\r\n        }\r\n        config.selectedIndex = config.getIndex(curDate);\r\n        this._rollerConfigs[componentName] = config\r\n    },\r\n    _setActiveRoller: function(currentRoller) {\r\n        var activeRoller = currentRoller && this._rollers[currentRoller.type];\r\n        each(this._rollers, function() {\r\n            this.toggleActiveState(this === activeRoller)\r\n        })\r\n    },\r\n    _updateRollersPosition: function() {\r\n        var that = this;\r\n        each(this._rollers, function(type) {\r\n            var correctIndex = that._rollerConfigs[type].getIndex(that._getCurrentDate());\r\n            this.option(\"selectedIndex\", correctIndex)\r\n        })\r\n    },\r\n    _setRollerState: function(roller, selectedIndex) {\r\n        if (selectedIndex !== roller.selectedIndex) {\r\n            var rollerValue = roller.valueItems[selectedIndex],\r\n                setValue = roller.setValue,\r\n                currentValue = new Date(this._getCurrentDate()),\r\n                currentDate = currentValue.getDate();\r\n            if (roller.type === ROLLER_TYPE.month) {\r\n                currentDate = Math.min(currentDate, uiDateUtils.getMaxMonthDay(currentValue.getFullYear(), rollerValue))\r\n            } else {\r\n                if (roller.type === ROLLER_TYPE.year) {\r\n                    currentDate = Math.min(currentDate, uiDateUtils.getMaxMonthDay(rollerValue, currentValue.getMonth()))\r\n                }\r\n            }\r\n            currentValue.setDate(currentDate);\r\n            currentValue[setValue](rollerValue);\r\n            currentValue = dateUtils.normalizeDate(currentValue, this.option(\"minDate\"), this.option(\"maxDate\"));\r\n            this.option(\"value\", currentValue);\r\n            roller.selectedIndex = selectedIndex\r\n        }\r\n        if (roller.type === ROLLER_TYPE.year) {\r\n            this._refreshRollers()\r\n        }\r\n        if (roller.type === ROLLER_TYPE.month) {\r\n            this._refreshRoller(ROLLER_TYPE.day);\r\n            this._refreshRoller(ROLLER_TYPE.hours)\r\n        }\r\n    },\r\n    _refreshRoller: function(rollerType) {\r\n        var roller = this._rollers[rollerType];\r\n        if (roller) {\r\n            this._createRollerConfig(rollerType);\r\n            var rollerConfig = this._rollerConfigs[rollerType];\r\n            if (rollerType === ROLLER_TYPE.day || rollerConfig.displayItems.toString() !== roller.option(\"items\").toString()) {\r\n                roller.option({\r\n                    items: rollerConfig.displayItems,\r\n                    selectedIndex: rollerConfig.selectedIndex\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _getCurrentDate: function() {\r\n        var curDate = this._valueOption(),\r\n            minDate = this.option(\"minDate\"),\r\n            maxDate = this.option(\"maxDate\");\r\n        if (minDate && curDate.getTime() <= minDate.getTime()) {\r\n            curDate = minDate\r\n        } else {\r\n            if (maxDate && curDate.getTime() >= maxDate.getTime()) {\r\n                curDate = maxDate\r\n            }\r\n        }\r\n        return curDate\r\n    },\r\n    _calculateRollerConfigValueRange: function(componentName) {\r\n        var curDate = this._getCurrentDate(),\r\n            minDate = this.option(\"minDate\"),\r\n            maxDate = this.option(\"maxDate\"),\r\n            minYear = dateUtils.sameYear(curDate, minDate),\r\n            minMonth = minYear && curDate.getMonth() === minDate.getMonth(),\r\n            maxYear = dateUtils.sameYear(curDate, maxDate),\r\n            maxMonth = maxYear && curDate.getMonth() === maxDate.getMonth(),\r\n            minHour = minMonth && curDate.getDate() === minDate.getDate(),\r\n            maxHour = maxMonth && curDate.getDate() === maxDate.getDate(),\r\n            componentInfo = uiDateUtils.DATE_COMPONENTS_INFO[componentName],\r\n            startValue = componentInfo.startValue,\r\n            endValue = componentInfo.endValue;\r\n        if (componentName === ROLLER_TYPE.year) {\r\n            startValue = minDate.getFullYear();\r\n            endValue = maxDate.getFullYear()\r\n        }\r\n        if (componentName === ROLLER_TYPE.month) {\r\n            if (minYear) {\r\n                startValue = minDate.getMonth()\r\n            }\r\n            if (maxYear) {\r\n                endValue = maxDate.getMonth()\r\n            }\r\n        }\r\n        if (componentName === ROLLER_TYPE.day) {\r\n            endValue = uiDateUtils.getMaxMonthDay(curDate.getFullYear(), curDate.getMonth());\r\n            if (minYear && minMonth) {\r\n                startValue = minDate.getDate()\r\n            }\r\n            if (maxYear && maxMonth) {\r\n                endValue = maxDate.getDate()\r\n            }\r\n        }\r\n        if (componentName === ROLLER_TYPE.hours) {\r\n            startValue = minHour ? minDate.getHours() : startValue;\r\n            endValue = maxHour ? maxDate.getHours() : endValue\r\n        }\r\n        return {\r\n            startValue: startValue,\r\n            endValue: endValue\r\n        }\r\n    },\r\n    _refreshRollers: function() {\r\n        this._refreshRoller(ROLLER_TYPE.month);\r\n        this._refreshRoller(ROLLER_TYPE.day);\r\n        this._refreshRoller(ROLLER_TYPE.hours)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showNames\":\r\n            case \"minDate\":\r\n            case \"maxDate\":\r\n            case \"type\":\r\n                this._renderRollers();\r\n                this._toggleFormatClasses(args.value, args.previousValue);\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (args.value) {\r\n                    this._renderRollers()\r\n                }\r\n                break;\r\n            case \"value\":\r\n                this.option(\"value\", this._valueOption());\r\n                this._refreshRollers();\r\n                this._updateRollersPosition();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        delete this._$rollersContainer\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._deferredRenderDayTimeout);\r\n        clearTimeout(this._deferredRenderMonthTimeout);\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxDateView\", DateView);\r\nmodule.exports = DateView;\r\n\n\n/***/ }),\n\n/***/ 801:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_view_roller.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    registerComponent = __webpack_require__(16),\r\n    extend = __webpack_require__(3).extend,\r\n    each = __webpack_require__(5).each,\r\n    eventUtils = __webpack_require__(8),\r\n    clickEvent = __webpack_require__(25),\r\n    Scrollable = __webpack_require__(141),\r\n    fx = __webpack_require__(32),\r\n    translator = __webpack_require__(19);\r\nvar DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\",\r\n    DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\",\r\n    DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\",\r\n    DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\",\r\n    DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\",\r\n    DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\",\r\n    DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\r\nvar DateViewRoller = Scrollable.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            showScrollbar: false,\r\n            useNative: false,\r\n            selectedIndex: 0,\r\n            bounceEnabled: false,\r\n            items: [],\r\n            showOnClick: false,\r\n            onClick: null,\r\n            onSelectedIndexChanged: null\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n            },\r\n            options: {\r\n                showOnClick: true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                scrollByContent: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItemFrame()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DATEVIEW_ROLLER_CLASS);\r\n        this._renderContainerClick();\r\n        this._renderItems();\r\n        this._renderSelectedValue();\r\n        this._renderItemsClick();\r\n        this._wrapAction(\"_endAction\", this._endActionHandler.bind(this));\r\n        this._renderSelectedIndexChanged()\r\n    },\r\n    _renderSelectedIndexChanged: function() {\r\n        this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\")\r\n    },\r\n    _renderContainerClick: function() {\r\n        if (!this.option(\"showOnClick\")) {\r\n            return\r\n        }\r\n        var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\r\n        var clickAction = this._createActionByOption(\"onClick\");\r\n        eventsEngine.off(this._$container, eventName);\r\n        eventsEngine.on(this._$container, eventName, function(e) {\r\n            clickAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _wrapAction: function(actionName, callback) {\r\n        var strategy = this._strategy,\r\n            originalAction = strategy[actionName];\r\n        strategy[actionName] = function() {\r\n            callback.apply(this, arguments);\r\n            return originalAction.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderItems: function() {\r\n        var items = this.option(\"items\") || [],\r\n            $items = $();\r\n        this._$content.empty();\r\n        items.forEach(function(item) {\r\n            $items = $items.add($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_CLASS).append(item))\r\n        });\r\n        this._$content.append($items);\r\n        this._$items = $items;\r\n        this.update()\r\n    },\r\n    _renderSelectedItemFrame: function() {\r\n        $(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS).append($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS)).appendTo(this._$container)\r\n    },\r\n    _renderSelectedValue: function(selectedIndex) {\r\n        var index = this._fitIndex(selectedIndex || this.option(\"selectedIndex\"));\r\n        this._moveTo({\r\n            top: this._getItemPosition(index)\r\n        });\r\n        this._renderActiveStateItem()\r\n    },\r\n    _fitIndex: function(index) {\r\n        var items = this.option(\"items\") || [],\r\n            itemCount = items.length;\r\n        if (index >= itemCount) {\r\n            return itemCount - 1\r\n        }\r\n        if (index < 0) {\r\n            return 0\r\n        }\r\n        return index\r\n    },\r\n    _getItemPosition: function(index) {\r\n        return Math.round(this._itemHeight() * index)\r\n    },\r\n    _renderItemsClick: function() {\r\n        var itemSelector = this._getItemSelector(),\r\n            eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\r\n        eventsEngine.off(this.$element(), eventName, itemSelector);\r\n        eventsEngine.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this))\r\n    },\r\n    _getItemSelector: function() {\r\n        return \".\" + DATEVIEW_ROLLER_ITEM_CLASS\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget))\r\n    },\r\n    _itemElementIndex: function(itemElement) {\r\n        return this._itemElements().index(itemElement)\r\n    },\r\n    _itemElements: function() {\r\n        return this.$element().find(this._getItemSelector())\r\n    },\r\n    _renderActiveStateItem: function() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        each(this._$items, function(index) {\r\n            $(this).toggleClass(DATEVIEW_ROLLER_ITEM_SELECTED_CLASS, selectedIndex === index)\r\n        })\r\n    },\r\n    _moveTo: function(targetLocation) {\r\n        targetLocation = this._normalizeLocation(targetLocation);\r\n        var location = this._location(),\r\n            delta = {\r\n                x: -(location.left - targetLocation.left),\r\n                y: -(location.top - targetLocation.top)\r\n            };\r\n        if (this._isVisible() && (delta.x || delta.y)) {\r\n            this._strategy._prepareDirections(true);\r\n            if (this._animation) {\r\n                var that = this;\r\n                fx.stop(this._$content);\r\n                fx.animate(this._$content, {\r\n                    duration: 200,\r\n                    type: \"slide\",\r\n                    to: {\r\n                        top: Math.floor(delta.y)\r\n                    },\r\n                    complete: function() {\r\n                        translator.resetPosition(that._$content);\r\n                        that._strategy.handleMove({\r\n                            delta: delta\r\n                        })\r\n                    }\r\n                });\r\n                delete this._animation\r\n            } else {\r\n                this._strategy.handleMove({\r\n                    delta: delta\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _validate: function(e) {\r\n        return this._strategy.validate(e)\r\n    },\r\n    _endActionHandler: function() {\r\n        var currentSelectedIndex = this.option(\"selectedIndex\"),\r\n            ratio = -this._location().top / this._itemHeight(),\r\n            newSelectedIndex = Math.round(ratio);\r\n        this._animation = true;\r\n        if (newSelectedIndex === currentSelectedIndex) {\r\n            this._renderSelectedValue(newSelectedIndex)\r\n        } else {\r\n            this.option(\"selectedIndex\", newSelectedIndex)\r\n        }\r\n    },\r\n    _itemHeight: function() {\r\n        var $item = this._$items.first();\r\n        return $item.get(0) && $item.get(0).getBoundingClientRect().height || 0\r\n    },\r\n    _toggleActive: function(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_ACTIVE_CLASS, state)\r\n    },\r\n    _isVisible: function() {\r\n        return this._$container.is(\":visible\")\r\n    },\r\n    _fireSelectedIndexChanged: function(value, previousValue) {\r\n        this._selectedIndexChanged({\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: void 0\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._renderSelectedValue(this.option(\"selectedIndex\"))\r\n        }\r\n        this.toggleActiveState(false)\r\n    },\r\n    toggleActiveState: function(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_CURRENT_CLASS, state)\r\n    },\r\n    _refreshSelectedIndex: function() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        var fitIndex = this._fitIndex(selectedIndex);\r\n        fitIndex === selectedIndex ? this._renderActiveStateItem() : this.option(\"selectedIndex\", fitIndex)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"selectedIndex\":\r\n                this._fireSelectedIndexChanged(args.value, args.previousValue);\r\n                this._renderSelectedValue(args.value);\r\n                break;\r\n            case \"items\":\r\n                this._renderItems();\r\n                this._refreshSelectedIndex();\r\n                break;\r\n            case \"onClick\":\r\n            case \"showOnClick\":\r\n                this._renderContainerClick();\r\n                break;\r\n            case \"onSelectedIndexChanged\":\r\n                this._renderSelectedIndexChanged();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxDateViewRoller\", DateViewRoller);\r\nmodule.exports = DateViewRoller;\r\n\n\n/***/ }),\n\n/***/ 802:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar noop = __webpack_require__(6).noop,\r\n    DateBoxStrategy = __webpack_require__(743),\r\n    support = __webpack_require__(51),\r\n    inArray = __webpack_require__(15).inArray,\r\n    dateUtils = __webpack_require__(734),\r\n    dateSerialization = __webpack_require__(738);\r\nvar NativeStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"Native\",\r\n    popupConfig: noop,\r\n    getParsedText: function(text) {\r\n        if (!text) {\r\n            return null\r\n        }\r\n        if (\"datetime\" === this.dateBox.option(\"type\")) {\r\n            return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0])\r\n        }\r\n        return dateUtils.fromStandardDateFormat(text)\r\n    },\r\n    renderPopupContent: noop,\r\n    _getWidgetName: noop,\r\n    _getWidgetOptions: noop,\r\n    _getDateBoxType: function() {\r\n        var type = this.dateBox.option(\"type\");\r\n        if (inArray(type, dateUtils.SUPPORTED_FORMATS) === -1) {\r\n            type = \"date\"\r\n        } else {\r\n            if (\"datetime\" === type && !support.inputType(type)) {\r\n                type = \"datetime-local\"\r\n            }\r\n        }\r\n        return type\r\n    },\r\n    getDefaultOptions: function() {\r\n        return {\r\n            mode: this._getDateBoxType()\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        var type = this._getDateBoxType();\r\n        return displayFormat || dateUtils.FORMATS_MAP[type]\r\n    },\r\n    renderInputMinMax: function($input) {\r\n        $input.attr({\r\n            min: dateSerialization.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\r\n            max: dateSerialization.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\r\n        })\r\n    }\r\n});\r\nmodule.exports = NativeStrategy;\r\n\n\n/***/ }),\n\n/***/ 803:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.calendar_with_time.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    window = __webpack_require__(9).getWindow(),\r\n    CalendarStrategy = __webpack_require__(767),\r\n    TimeView = __webpack_require__(804),\r\n    dateLocalization = __webpack_require__(732),\r\n    extend = __webpack_require__(3).extend,\r\n    Box = __webpack_require__(750),\r\n    uiDateUtils = __webpack_require__(734);\r\nvar SHRINK_VIEW_SCREEN_WIDTH = 573,\r\n    DATEBOX_ADAPTIVITY_MODE_CLASS = \"dx-datebox-adaptivity-mode\";\r\nvar CalendarWithTimeStrategy = CalendarStrategy.inherit({\r\n    NAME: \"CalendarWithTime\",\r\n    getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            applyValueMode: \"useButtons\",\r\n            buttonsLocation: \"bottom after\",\r\n            showPopupTitle: false\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shortdateshorttime\"\r\n    },\r\n    _is24HourFormat: function() {\r\n        return dateLocalization.is24HourFormat(this.getDisplayFormat(this.dateBox.option(\"displayFormat\")))\r\n    },\r\n    _renderWidget: function() {\r\n        this.callBase();\r\n        this._timeView = this.dateBox._createComponent($(\"<div>\"), TimeView, {\r\n            value: this.dateBoxValue(),\r\n            _showClock: !this._isShrinkView(),\r\n            use24HourFormat: this._is24HourFormat(),\r\n            onValueChanged: this._valueChangedHandler.bind(this),\r\n            stylingMode: this.dateBox.option(\"stylingMode\")\r\n        })\r\n    },\r\n    renderOpenedState: function() {\r\n        this.callBase();\r\n        var popup = this._getPopup();\r\n        if (popup) {\r\n            popup._wrapper().toggleClass(DATEBOX_ADAPTIVITY_MODE_CLASS, this._isSmallScreen())\r\n        }\r\n        clearTimeout(this._repaintTimer);\r\n        this._repaintTimer = setTimeout(function() {\r\n            this._getPopup() && this._getPopup().repaint()\r\n        }.bind(this), 0)\r\n    },\r\n    isAdaptivityChanged: function() {\r\n        var isAdaptiveMode = this._isShrinkView();\r\n        if (isAdaptiveMode !== this._currentAdaptiveMode) {\r\n            this._currentAdaptiveMode = isAdaptiveMode;\r\n            return true\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _updateValue: function(preventDefaultValue) {\r\n        var date = this.dateBoxValue();\r\n        if (!date && !preventDefaultValue) {\r\n            date = new Date;\r\n            uiDateUtils.normalizeTime(date)\r\n        }\r\n        this.callBase();\r\n        if (this._timeView) {\r\n            date && this._timeView.option(\"value\", date);\r\n            this._timeView.option(\"use24HourFormat\", this._is24HourFormat())\r\n        }\r\n    },\r\n    _isSmallScreen: function() {\r\n        return $(window).width() <= SHRINK_VIEW_SCREEN_WIDTH\r\n    },\r\n    _isShrinkView: function() {\r\n        return !this.dateBox.option(\"showAnalogClock\") || this.dateBox.option(\"adaptivityEnabled\") && this._isSmallScreen()\r\n    },\r\n    _getBoxItems: function() {\r\n        var items = [{\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            name: \"calendar\"\r\n        }];\r\n        if (!this._isShrinkView()) {\r\n            items.push({\r\n                ratio: 0,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                name: \"time\"\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    renderPopupContent: function() {\r\n        this.callBase();\r\n        this._currentAdaptiveMode = this._isShrinkView();\r\n        var $popupContent = this._getPopup().$content();\r\n        this._box = this.dateBox._createComponent($(\"<div>\").appendTo($popupContent), Box, {\r\n            direction: \"row\",\r\n            crossAlign: \"start\",\r\n            items: this._getBoxItems(),\r\n            itemTemplate: function(data) {\r\n                var $container = $(\"<div>\");\r\n                switch (data.name) {\r\n                    case \"calendar\":\r\n                        $container.append(this._widget.$element());\r\n                        if (this._isShrinkView()) {\r\n                            $container.append(this._timeView.$element())\r\n                        }\r\n                        break;\r\n                    case \"time\":\r\n                        $container.append(this._timeView.$element())\r\n                }\r\n                return $container\r\n            }.bind(this)\r\n        });\r\n        this._attachTabHandler()\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var calendarPopupConfig = this.callBase(_popupConfig),\r\n            result = extend(calendarPopupConfig, {\r\n                onShowing: function() {\r\n                    if (\"fallback\" === this._box.option(\"_layoutStrategy\")) {\r\n                        var clockMinWidth = this._getPopup().$content().find(\".dx-timeview-clock\").css(\"minWidth\");\r\n                        this._timeView.$element().css(\"maxWidth\", clockMinWidth)\r\n                    }\r\n                }.bind(this)\r\n            });\r\n        return result\r\n    },\r\n    getFirstPopupElement: function() {\r\n        return this._timeView._hourBox.$element().find(\"input\")\r\n    },\r\n    _attachTabHandler: function() {\r\n        var dateBox = this.dateBox,\r\n            handler = function(e) {\r\n                if (e.shiftKey) {\r\n                    e.preventDefault();\r\n                    dateBox.focus()\r\n                }\r\n            };\r\n        this._timeView._hourBox.registerKeyHandler(\"tab\", handler)\r\n    },\r\n    _preventFocusOnPopup: function(e) {\r\n        if (!$(e.target).hasClass(\"dx-texteditor-input\")) {\r\n            this.callBase.apply(this, arguments);\r\n            if (!this.dateBox._hasFocusClass()) {\r\n                this.dateBox.focus()\r\n            }\r\n        }\r\n    },\r\n    getValue: function() {\r\n        var date = this._widget.option(\"value\"),\r\n            time = this._timeView.option(\"value\");\r\n        date = date ? new Date(date) : new Date;\r\n        date.setHours(time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\r\n        return date\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._removeMinWidthTimer);\r\n        clearTimeout(this._repaintTimer);\r\n        this.callBase()\r\n    }\r\n});\r\nmodule.exports = CalendarWithTimeStrategy;\r\n\n\n/***/ }),\n\n/***/ 804:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.time_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    Editor = __webpack_require__(140),\r\n    NumberBox = __webpack_require__(745),\r\n    SelectBox = __webpack_require__(759),\r\n    ensureDefined = __webpack_require__(6).ensureDefined,\r\n    Box = __webpack_require__(750),\r\n    extend = __webpack_require__(3).extend,\r\n    registerComponent = __webpack_require__(16),\r\n    dateLocalization = __webpack_require__(732),\r\n    uiDateUtils = __webpack_require__(734);\r\nvar TIMEVIEW_CLASS = \"dx-timeview\",\r\n    TIMEVIEW_CLOCK_CLASS = \"dx-timeview-clock\",\r\n    TIMEVIEW_FIELD_CLASS = \"dx-timeview-field\",\r\n    TIMEVIEW_HOURARROW_CLASS = \"dx-timeview-hourarrow\",\r\n    TIMEVIEW_TIME_SEPARATOR_CLASS = \"dx-timeview-time-separator\",\r\n    TIMEVIEW_FORMAT12_CLASS = \"dx-timeview-format12\",\r\n    TIMEVIEW_FORMAT12_AM = -1,\r\n    TIMEVIEW_FORMAT12_PM = 1,\r\n    TIMEVIEW_MINUTEARROW_CLASS = \"dx-timeview-minutearrow\";\r\nvar rotateArrow = function($arrow, angle, offset) {\r\n    cssRotate($arrow, angle, offset)\r\n};\r\nvar cssRotate = function($arrow, angle, offset) {\r\n    $arrow.css(\"transform\", \"rotate(\" + angle + \"deg) translate(0,\" + offset + \"px)\")\r\n};\r\nvar TimeView = Editor.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: new Date(Date.now()),\r\n            use24HourFormat: true,\r\n            _showClock: true,\r\n            _arrowOffset: 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 15\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 5\r\n            }\r\n        }])\r\n    },\r\n    _getValue: function() {\r\n        return this.option(\"value\") || new Date\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TIMEVIEW_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderBox();\r\n        this._updateTime()\r\n    },\r\n    _renderBox: function() {\r\n        var $box = $(\"<div>\").appendTo(this.$element()),\r\n            items = [];\r\n        if (this.option(\"_showClock\")) {\r\n            items.push({\r\n                ratio: 1,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: this._renderClock.bind(this)\r\n            })\r\n        }\r\n        items.push({\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: 50,\r\n            template: this._renderField.bind(this)\r\n        });\r\n        this._createComponent($box, Box, {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            direction: \"col\",\r\n            items: items\r\n        })\r\n    },\r\n    _renderClock: function(_, __, container) {\r\n        this._$hourArrow = $(\"<div>\").addClass(TIMEVIEW_HOURARROW_CLASS);\r\n        this._$minuteArrow = $(\"<div>\").addClass(TIMEVIEW_MINUTEARROW_CLASS);\r\n        var $container = $(container);\r\n        $container.addClass(TIMEVIEW_CLOCK_CLASS).append(this._$hourArrow).append(this._$minuteArrow);\r\n        this.setAria(\"role\", \"presentation\", $container)\r\n    },\r\n    _updateClock: function() {\r\n        var time = this._getValue(),\r\n            hourArrowAngle = time.getHours() / 12 * 360 + time.getMinutes() / 60 * 30,\r\n            minuteArrowAngle = time.getMinutes() / 60 * 360;\r\n        rotateArrow(this._$hourArrow, hourArrowAngle, this.option(\"_arrowOffset\"));\r\n        rotateArrow(this._$minuteArrow, minuteArrowAngle, this.option(\"_arrowOffset\"))\r\n    },\r\n    _getBoxItems: function(is12HourFormat) {\r\n        var items = [{\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return this._hourBox.$element()\r\n            }.bind(this)\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: $(\"<div>\").addClass(TIMEVIEW_TIME_SEPARATOR_CLASS).text(dateLocalization.getTimeSeparator())\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return this._minuteBox.$element()\r\n            }.bind(this)\r\n        }];\r\n        if (is12HourFormat) {\r\n            items.push({\r\n                ratio: 0,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: function() {\r\n                    return this._format12.$element()\r\n                }.bind(this)\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _renderField: function() {\r\n        var is12HourFormat = !this.option(\"use24HourFormat\");\r\n        this._createHourBox();\r\n        this._createMinuteBox();\r\n        if (is12HourFormat) {\r\n            this._createFormat12Box()\r\n        }\r\n        return this._createComponent($(\"<div>\").addClass(TIMEVIEW_FIELD_CLASS), Box, {\r\n            direction: \"row\",\r\n            align: \"center\",\r\n            crossAlign: \"center\",\r\n            items: this._getBoxItems(is12HourFormat)\r\n        }).$element()\r\n    },\r\n    _createHourBox: function() {\r\n        this._hourBox = this._createComponent($(\"<div>\"), NumberBox, extend({\r\n            min: -1,\r\n            max: 24,\r\n            value: this._getValue().getHours(),\r\n            onValueChanged: function(args) {\r\n                var newHours = this._normalizeHours((24 + args.value) % 24);\r\n                this._hourBox.option(\"value\", newHours);\r\n                var time = new Date(this._getValue());\r\n                time.setHours(this._denormalizeHours(newHours, args.value > args.previousValue));\r\n                uiDateUtils.normalizeTime(time);\r\n                this.option(\"value\", time)\r\n            }.bind(this)\r\n        }, this._getNumberBoxConfig()));\r\n        this._hourBox.setAria(\"label\", \"hours\")\r\n    },\r\n    _createMinuteBox: function() {\r\n        this._minuteBox = this._createComponent($(\"<div>\"), NumberBox, extend({\r\n            min: -1,\r\n            max: 60,\r\n            value: this._getValue().getMinutes(),\r\n            onValueChanged: function(args) {\r\n                var newMinutes = (60 + args.value) % 60;\r\n                this._minuteBox.option(\"value\", newMinutes);\r\n                var time = new Date(this._getValue());\r\n                time.setMinutes(newMinutes);\r\n                uiDateUtils.normalizeTime(time);\r\n                this.option(\"value\", time)\r\n            }.bind(this)\r\n        }, this._getNumberBoxConfig()));\r\n        this._minuteBox.setAria(\"label\", \"minutes\")\r\n    },\r\n    _createFormat12Box: function() {\r\n        this._format12 = this._createComponent($(\"<div>\").addClass(TIMEVIEW_FORMAT12_CLASS), SelectBox, extend({\r\n            items: [{\r\n                value: TIMEVIEW_FORMAT12_AM,\r\n                text: \"AM\"\r\n            }, {\r\n                value: TIMEVIEW_FORMAT12_PM,\r\n                text: \"PM\"\r\n            }],\r\n            valueExpr: \"value\",\r\n            displayExpr: \"text\",\r\n            onValueChanged: function(args) {\r\n                var hours = this._getValue().getHours(),\r\n                    time = new Date(this._getValue()),\r\n                    newHours = (hours + 12 * args.value) % 24;\r\n                time.setHours(newHours);\r\n                this.option(\"value\", time)\r\n            }.bind(this),\r\n            value: this._getValue().getHours() >= 12 ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM\r\n        }, {\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }));\r\n        this._format12.setAria(\"label\", \"type\")\r\n    },\r\n    _refreshFormat12: function() {\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return\r\n        }\r\n        var value = this._getValue(),\r\n            hours = value.getHours(),\r\n            isPM = hours >= 12;\r\n        this._format12._valueChangeActionSuppressed = true;\r\n        this._format12.option(\"value\", isPM ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM);\r\n        this._format12._valueChangeActionSuppressed = false\r\n    },\r\n    _getNumberBoxConfig: function() {\r\n        return extend({\r\n            showSpinButtons: true,\r\n            disabled: this.option(\"disabled\"),\r\n            valueFormat: function(value) {\r\n                return (value < 10 ? \"0\" : \"\") + value\r\n            }\r\n        }, {\r\n            stylingMode: this.option(\"stylingMode\")\r\n        })\r\n    },\r\n    _normalizeHours: function(hours) {\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return hours\r\n        }\r\n        return hours % 12 || 12\r\n    },\r\n    _denormalizeHours: function(hours, moveForward) {\r\n        hours = ensureDefined(hours, this._getValue().getHours());\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return hours\r\n        }\r\n        var isPM = this._format12.option(\"value\") === TIMEVIEW_FORMAT12_PM;\r\n        if (11 === hours && !moveForward) {\r\n            isPM = !isPM\r\n        }\r\n        return (isPM ? hours + 12 : hours) % 24\r\n    },\r\n    _updateField: function() {\r\n        if (this._hourBox) {\r\n            this._hourBox._valueChangeActionSuppressed = true;\r\n            this._hourBox.option(\"value\", this._normalizeHours(this._getValue().getHours()));\r\n            this._hourBox._valueChangeActionSuppressed = false\r\n        }\r\n        if (this._minuteBox) {\r\n            this._minuteBox._valueChangeActionSuppressed = true;\r\n            this._minuteBox.option(\"value\", this._getValue().getMinutes());\r\n            this._minuteBox._valueChangeActionSuppressed = false\r\n        }\r\n        this._refreshFormat12()\r\n    },\r\n    _updateTime: function() {\r\n        if (this.option(\"_showClock\")) {\r\n            this._updateClock()\r\n        }\r\n        this._updateField()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateTime()\r\n        }\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this._hourBox && this._hourBox.option(\"disabled\", value);\r\n        this._minuteBox && this._minuteBox.option(\"disabled\", value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._updateTime();\r\n                this.callBase(args);\r\n                break;\r\n            case \"_arrowOffset\":\r\n                break;\r\n            case \"use24HourFormat\":\r\n            case \"_showClock\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxTimeView\", TimeView);\r\nmodule.exports = TimeView;\r\n\n\n/***/ }),\n\n/***/ 805:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.list.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    window = __webpack_require__(9).getWindow(),\r\n    List = __webpack_require__(202),\r\n    DateBoxStrategy = __webpack_require__(743),\r\n    themes = __webpack_require__(22),\r\n    noop = __webpack_require__(6).noop,\r\n    isDate = __webpack_require__(4).isDate,\r\n    extend = __webpack_require__(3).extend,\r\n    dateUtils = __webpack_require__(734),\r\n    dateLocalization = __webpack_require__(732),\r\n    uiDateUtils = __webpack_require__(734);\r\nvar BOUNDARY_VALUES = {\r\n    min: new Date(0, 0, 0, 0, 0),\r\n    max: new Date(0, 0, 0, 23, 59)\r\n};\r\nvar ListStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"List\",\r\n    supportedKeys: function() {\r\n        return {\r\n            tab: function() {\r\n                if (this.option(\"opened\")) {\r\n                    this.close()\r\n                }\r\n            },\r\n            space: noop,\r\n            home: noop,\r\n            end: noop\r\n        }\r\n    },\r\n    getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            applyValueMode: \"instantly\"\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shorttime\"\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var result = extend(_popupConfig, {\r\n            width: this._getPopupWidth()\r\n        });\r\n        if (themes.isAndroid5()) {\r\n            extend(true, result, {\r\n                position: {\r\n                    offset: {\r\n                        h: -16,\r\n                        v: -10\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    useCurrentDateByDefault: function() {\r\n        return true\r\n    },\r\n    _getPopupWidth: function() {\r\n        var result = this.dateBox.$element().outerWidth();\r\n        if (themes.isAndroid5()) {\r\n            result += 32\r\n        }\r\n        return result\r\n    },\r\n    popupShowingHandler: function() {\r\n        this._dimensionChanged()\r\n    },\r\n    _renderWidget: function() {\r\n        this.callBase();\r\n        this._refreshItems()\r\n    },\r\n    _getWidgetName: function() {\r\n        return List\r\n    },\r\n    _getWidgetOptions: function() {\r\n        var keyboardProcessor = this.dateBox._keyboardProcessor;\r\n        return {\r\n            _keyboardProcessor: keyboardProcessor ? keyboardProcessor.attachChildProcessor() : null,\r\n            itemTemplate: this._timeListItemTemplate.bind(this),\r\n            onItemClick: this._listItemClickHandler.bind(this),\r\n            tabIndex: -1,\r\n            onFocusedItemChanged: this._refreshActiveDescendant.bind(this),\r\n            selectionMode: \"single\"\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function(e) {\r\n        this.dateBox.setAria(\"activedescendant\", \"\");\r\n        this.dateBox.setAria(\"activedescendant\", e.actionValue)\r\n    },\r\n    _refreshItems: function() {\r\n        this._widgetItems = this._getTimeListItems();\r\n        this._widget.option(\"items\", this._widgetItems)\r\n    },\r\n    renderOpenedState: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._widget.option(\"focusedElement\", null);\r\n        this._setSelectedItemsByValue();\r\n        if (this._widget.option(\"templatesRenderAsynchronously\")) {\r\n            this._asyncScrollTimeout = setTimeout(this._scrollToSelectedItem.bind(this))\r\n        } else {\r\n            this._scrollToSelectedItem()\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._asyncScrollTimeout)\r\n    },\r\n    _updateValue: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._refreshItems();\r\n        this._setSelectedItemsByValue();\r\n        this._scrollToSelectedItem()\r\n    },\r\n    _setSelectedItemsByValue: function() {\r\n        var value = this.dateBoxValue();\r\n        var dateIndex = this._getDateIndex(value);\r\n        if (dateIndex === -1) {\r\n            this._widget.option(\"selectedItems\", [])\r\n        } else {\r\n            this._widget.option(\"selectedIndex\", dateIndex)\r\n        }\r\n    },\r\n    _scrollToSelectedItem: function() {\r\n        this._widget.scrollToItem(this._widget.option(\"selectedIndex\"))\r\n    },\r\n    _getDateIndex: function(date) {\r\n        var result = -1;\r\n        for (var i = 0, n = this._widgetItems.length; i < n; i++) {\r\n            if (this._areDatesEqual(date, this._widgetItems[i])) {\r\n                result = i;\r\n                break\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _areDatesEqual: function(first, second) {\r\n        return isDate(first) && isDate(second) && first.getHours() === second.getHours() && first.getMinutes() === second.getMinutes()\r\n    },\r\n    _getTimeListItems: function() {\r\n        var min = this.dateBox.dateOption(\"min\") || this._getBoundaryDate(\"min\"),\r\n            max = this.dateBox.dateOption(\"max\") || this._getBoundaryDate(\"max\"),\r\n            value = this.dateBox.dateOption(\"value\") || null,\r\n            delta = max - min,\r\n            minutes = min.getMinutes() % this.dateBox.option(\"interval\");\r\n        if (delta < 0) {\r\n            return []\r\n        }\r\n        if (delta > dateUtils.ONE_DAY) {\r\n            delta = dateUtils.ONE_DAY\r\n        }\r\n        if (value - min < dateUtils.ONE_DAY) {\r\n            return this._getRangeItems(min, new Date(min), delta)\r\n        }\r\n        min = this._getBoundaryDate(\"min\");\r\n        min.setMinutes(minutes);\r\n        if (value && Math.abs(value - max) < dateUtils.ONE_DAY) {\r\n            delta = (60 * max.getHours() + Math.abs(max.getMinutes() - minutes)) * dateUtils.ONE_MINUTE\r\n        }\r\n        return this._getRangeItems(min, new Date(min), delta)\r\n    },\r\n    _getRangeItems: function(startValue, currentValue, rangeDuration) {\r\n        var rangeItems = [];\r\n        var interval = this.dateBox.option(\"interval\");\r\n        while (currentValue - startValue < rangeDuration) {\r\n            rangeItems.push(new Date(currentValue));\r\n            currentValue.setMinutes(currentValue.getMinutes() + interval)\r\n        }\r\n        return rangeItems\r\n    },\r\n    _getBoundaryDate: function(boundary) {\r\n        var boundaryValue = BOUNDARY_VALUES[boundary],\r\n            currentValue = this.dateBox.dateOption(\"value\") || new Date;\r\n        return new Date(currentValue.getFullYear(), currentValue.getMonth(), currentValue.getDate(), boundaryValue.getHours(), boundaryValue.getMinutes())\r\n    },\r\n    _timeListItemTemplate: function(itemData) {\r\n        var displayFormat = this.dateBox.option(\"displayFormat\");\r\n        return dateLocalization.format(itemData, this.getDisplayFormat(displayFormat))\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        this.dateBox.option(\"opened\", false);\r\n        var date = this.dateBox.option(\"value\");\r\n        if (date) {\r\n            date = new Date(date)\r\n        } else {\r\n            date = new Date;\r\n            uiDateUtils.normalizeTime(date)\r\n        }\r\n        date.setHours(e.itemData.getHours());\r\n        date.setMinutes(e.itemData.getMinutes());\r\n        date.setSeconds(e.itemData.getSeconds());\r\n        this.dateBoxValue(date)\r\n    },\r\n    attachKeyboardEvents: function(keyboardProcessor) {\r\n        var child = keyboardProcessor.attachChildProcessor();\r\n        if (this._widget) {\r\n            this._widget.option(\"_keyboardProcessor\", child)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._getPopup() && this._updatePopupDimensions()\r\n    },\r\n    _updatePopupDimensions: function() {\r\n        this._updatePopupWidth();\r\n        this._updatePopupHeight()\r\n    },\r\n    _updatePopupWidth: function() {\r\n        this.dateBox._setPopupOption(\"width\", this._getPopupWidth())\r\n    },\r\n    _updatePopupHeight: function() {\r\n        this.dateBox._setPopupOption(\"height\", \"auto\");\r\n        var popupHeight = this._widget.$element().outerHeight();\r\n        var maxHeight = .45 * $(window).height();\r\n        this.dateBox._setPopupOption(\"height\", Math.min(popupHeight, maxHeight));\r\n        this.dateBox._timeList && this.dateBox._timeList.updateDimensions()\r\n    }\r\n});\r\nmodule.exports = ListStrategy;\r\n\n\n/***/ }),\n\n/***/ 806:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/validation_summary.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar registerComponent = __webpack_require__(16),\r\n    eventsEngine = __webpack_require__(7),\r\n    grep = __webpack_require__(6).grep,\r\n    extend = __webpack_require__(3).extend,\r\n    iteratorUtils = __webpack_require__(5),\r\n    ValidationMixin = __webpack_require__(208),\r\n    ValidationEngine = __webpack_require__(340),\r\n    CollectionWidget = __webpack_require__(102);\r\nvar VALIDATION_SUMMARY_CLASS = \"dx-validationsummary\",\r\n    ITEM_CLASS = VALIDATION_SUMMARY_CLASS + \"-item\",\r\n    ITEM_DATA_KEY = VALIDATION_SUMMARY_CLASS + \"-item-data\";\r\nvar ValidationSummary = CollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            focusStateEnabled: false,\r\n            noDataText: null\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initGroupRegistration()\r\n    },\r\n    _initGroupRegistration: function() {\r\n        var group = this._findGroup(),\r\n            groupConfig = ValidationEngine.addGroup(group);\r\n        this._unsubscribeGroup();\r\n        this._groupWasInit = true;\r\n        this._validationGroup = group;\r\n        this.groupSubscription = this._groupValidationHandler.bind(this);\r\n        groupConfig.on(\"validated\", this.groupSubscription)\r\n    },\r\n    _unsubscribeGroup: function() {\r\n        var groupConfig = ValidationEngine.getGroupConfig(this._validationGroup);\r\n        groupConfig && groupConfig.off(\"validated\", this.groupSubscription)\r\n    },\r\n    _getOrderedItems: function(validators, items) {\r\n        var orderedItems = [];\r\n        iteratorUtils.each(validators, function(_, validator) {\r\n            var firstItem = grep(items, function(item) {\r\n                if (item.validator === validator) {\r\n                    return true\r\n                }\r\n            })[0];\r\n            if (firstItem) {\r\n                orderedItems.push(firstItem)\r\n            }\r\n        });\r\n        return orderedItems\r\n    },\r\n    _groupValidationHandler: function(params) {\r\n        var that = this,\r\n            items = that._getOrderedItems(params.validators, iteratorUtils.map(params.brokenRules, function(rule) {\r\n                return {\r\n                    text: rule.message,\r\n                    validator: rule.validator\r\n                }\r\n            }));\r\n        that.validators = params.validators;\r\n        iteratorUtils.each(that.validators, function(_, validator) {\r\n            if (validator._validationSummary !== this) {\r\n                var handler = that._itemValidationHandler.bind(that),\r\n                    disposingHandler = function() {\r\n                        validator.off(\"validated\", handler);\r\n                        validator._validationSummary = null;\r\n                        handler = null\r\n                    };\r\n                validator.on(\"validated\", handler);\r\n                validator.on(\"disposing\", disposingHandler);\r\n                validator._validationSummary = this\r\n            }\r\n        });\r\n        that.option(\"items\", items)\r\n    },\r\n    _itemValidationHandler: function(itemValidationResult) {\r\n        var elementIndex, items = this.option(\"items\"),\r\n            isValid = itemValidationResult.isValid,\r\n            replacementFound = false,\r\n            newMessage = itemValidationResult.brokenRule && itemValidationResult.brokenRule.message,\r\n            validator = itemValidationResult.validator;\r\n        iteratorUtils.each(items, function(index, item) {\r\n            if (item.validator === validator) {\r\n                if (isValid) {\r\n                    elementIndex = index\r\n                } else {\r\n                    item.text = newMessage\r\n                }\r\n                replacementFound = true;\r\n                return false\r\n            }\r\n        });\r\n        if (isValid ^ replacementFound) {\r\n            return\r\n        }\r\n        if (isValid) {\r\n            items.splice(elementIndex, 1)\r\n        } else {\r\n            items.push({\r\n                text: newMessage,\r\n                validator: validator\r\n            })\r\n        }\r\n        items = this._getOrderedItems(this.validators, items);\r\n        this.option(\"items\", items)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(VALIDATION_SUMMARY_CLASS);\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"validationGroup\":\r\n                this._initGroupRegistration();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return ITEM_DATA_KEY\r\n    },\r\n    _postprocessRenderItem: function(params) {\r\n        eventsEngine.on(params.itemElement, \"click\", function() {\r\n            params.itemData.validator && params.itemData.validator.focus && params.itemData.validator.focus()\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._unsubscribeGroup()\r\n    }\r\n}).include(ValidationMixin);\r\nregisterComponent(\"dxValidationSummary\", ValidationSummary);\r\nmodule.exports = ValidationSummary;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 818:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/form.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(832);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 832:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/form/ui.form.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    registerComponent = __webpack_require__(16),\r\n    Guid = __webpack_require__(77),\r\n    utils = __webpack_require__(6),\r\n    typeUtils = __webpack_require__(4),\r\n    each = __webpack_require__(5).each,\r\n    inArray = __webpack_require__(15).inArray,\r\n    extend = __webpack_require__(3).extend,\r\n    stringUtils = __webpack_require__(53),\r\n    errors = __webpack_require__(35),\r\n    browser = __webpack_require__(78),\r\n    domUtils = __webpack_require__(13),\r\n    messageLocalization = __webpack_require__(24),\r\n    Widget = __webpack_require__(43),\r\n    windowUtils = __webpack_require__(9),\r\n    ValidationEngine = __webpack_require__(340),\r\n    LayoutManager = __webpack_require__(833),\r\n    TabPanel = __webpack_require__(836),\r\n    Scrollable = __webpack_require__(141),\r\n    Deferred = __webpack_require__(10).Deferred,\r\n    themes = __webpack_require__(22);\r\n__webpack_require__(806);\r\n__webpack_require__(840);\r\nvar FORM_CLASS = \"dx-form\",\r\n    FIELD_ITEM_CLASS = \"dx-field-item\",\r\n    FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\",\r\n    FORM_GROUP_CLASS = \"dx-form-group\",\r\n    FORM_GROUP_CONTENT_CLASS = \"dx-form-group-content\",\r\n    FORM_GROUP_WITH_CAPTION_CLASS = \"dx-form-group-with-caption\",\r\n    FORM_GROUP_CAPTION_CLASS = \"dx-form-group-caption\",\r\n    HIDDEN_LABEL_CLASS = \"dx-layout-manager-hidden-label\",\r\n    FIELD_ITEM_LABEL_CLASS = \"dx-field-item-label\",\r\n    FIELD_ITEM_LABEL_CONTENT_CLASS = \"dx-field-item-label-content\",\r\n    FIELD_ITEM_TAB_CLASS = \"dx-field-item-tab\",\r\n    FORM_FIELD_ITEM_COL_CLASS = \"dx-col-\",\r\n    GROUP_COL_COUNT_CLASS = \"dx-group-colcount-\",\r\n    FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\",\r\n    FORM_VALIDATION_SUMMARY = \"dx-form-validation-summary\",\r\n    WIDGET_CLASS = \"dx-widget\",\r\n    FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar Form = Widget.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._cachedColCountOptions = [];\r\n        this._groupsColCount = []\r\n    },\r\n    _initOptions: function(options) {\r\n        if (!(\"screenByWidth\" in options)) {\r\n            options.screenByWidth = windowUtils.defaultScreenFactorFunc\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            formID: \"dx-\" + new Guid,\r\n            formData: {},\r\n            colCount: 1,\r\n            screenByWidth: null,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            readOnly: false,\r\n            onFieldDataChanged: null,\r\n            customizeItem: null,\r\n            onEditorEnterKey: null,\r\n            minColWidth: 200,\r\n            alignItemLabels: true,\r\n            alignItemLabelsInAllGroups: true,\r\n            showColonAfterLabel: true,\r\n            showRequiredMark: true,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\"),\r\n            showValidationSummary: false,\r\n            items: void 0,\r\n            scrollingEnabled: false,\r\n            validationGroup: void 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isMaterial()\r\n            },\r\n            options: {\r\n                showColonAfterLabel: false,\r\n                labelLocation: \"top\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            formData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _getColCount: function($element) {\r\n        var $cols, index = 0,\r\n            isColsExist = true;\r\n        while (isColsExist) {\r\n            $cols = $element.find(\".\" + FORM_FIELD_ITEM_COL_CLASS + index);\r\n            if (!$cols.length) {\r\n                isColsExist = false\r\n            } else {\r\n                index++\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    _createHiddenElement: function(rootLayoutManager) {\r\n        this._$hiddenElement = $(\"<div>\").addClass(WIDGET_CLASS).addClass(HIDDEN_LABEL_CLASS).appendTo(\"body\");\r\n        var $hiddenLabel = rootLayoutManager._renderLabel({\r\n            text: \" \",\r\n            location: this.option(\"labelLocation\")\r\n        }).appendTo(this._$hiddenElement);\r\n        this._hiddenLabelText = $hiddenLabel.find(\".\" + FIELD_ITEM_LABEL_TEXT_CLASS)[0]\r\n    },\r\n    _removeHiddenElement: function() {\r\n        this._$hiddenElement.remove();\r\n        this._hiddenLabelText = null\r\n    },\r\n    _getLabelWidthByText: function(text) {\r\n        this._hiddenLabelText.innerHTML = text;\r\n        return this._hiddenLabelText.offsetWidth\r\n    },\r\n    _getLabelsSelectorByCol: function(index, options) {\r\n        options = options || {};\r\n        var fieldItemClass = options.inOneColumn ? FIELD_ITEM_CLASS : FORM_FIELD_ITEM_COL_CLASS + index,\r\n            cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\" + FIELD_ITEM_TAB_CLASS + \")\" : \"\",\r\n            childLabelContentSelector = \"> .\" + FIELD_ITEM_LABEL_CLASS + \" > .\" + FIELD_ITEM_LABEL_CONTENT_CLASS;\r\n        return \".\" + fieldItemClass + cssExcludeTabbedSelector + childLabelContentSelector\r\n    },\r\n    _getLabelText: function(labelText) {\r\n        var child, i, length = labelText.children.length,\r\n            result = \"\";\r\n        for (i = 0; i < length; i++) {\r\n            child = labelText.children[i];\r\n            result += !stringUtils.isEmpty(child.innerText) ? child.innerText : child.innerHTML\r\n        }\r\n        return result\r\n    },\r\n    _applyLabelsWidthByCol: function($container, index, options) {\r\n        var labelWidth, i, $labelTexts = $container.find(this._getLabelsSelectorByCol(index, options)),\r\n            $labelTextsLength = $labelTexts.length,\r\n            maxWidth = 0;\r\n        for (i = 0; i < $labelTextsLength; i++) {\r\n            labelWidth = this._getLabelWidthByText(this._getLabelText($labelTexts[i]));\r\n            if (labelWidth > maxWidth) {\r\n                maxWidth = labelWidth\r\n            }\r\n        }\r\n        for (i = 0; i < $labelTextsLength; i++) {\r\n            $labelTexts[i].style.width = maxWidth + \"px\"\r\n        }\r\n    },\r\n    _applyLabelsWidth: function($container, excludeTabbed, inOneColumn, colCount) {\r\n        colCount = inOneColumn ? 1 : colCount || this._getColCount($container);\r\n        var i, applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed,\r\n            inOneColumn: inOneColumn\r\n        };\r\n        for (i = 0; i < colCount; i++) {\r\n            this._applyLabelsWidthByCol($container, i, applyLabelsOptions)\r\n        }\r\n    },\r\n    _getGroupElementsInColumn: function($container, columnIndex, colCount) {\r\n        var cssColCountSelector = typeUtils.isDefined(colCount) ? \".\" + GROUP_COL_COUNT_CLASS + colCount : \"\",\r\n            groupSelector = \".\" + FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + FIELD_ITEM_CONTENT_CLASS + \" > .\" + FORM_GROUP_CLASS + cssColCountSelector;\r\n        return $container.find(groupSelector)\r\n    },\r\n    _applyLabelsWidthWithGroups: function($container, colCount, excludeTabbed) {\r\n        var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\r\n        if (alignItemLabelsInAllGroups) {\r\n            this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed)\r\n        } else {\r\n            var i, $groups = this.$element().find(\".\" + FORM_GROUP_CLASS);\r\n            for (i = 0; i < $groups.length; i++) {\r\n                this._applyLabelsWidth($groups.eq(i), excludeTabbed)\r\n            }\r\n        }\r\n    },\r\n    _applyLabelsWidthWithNestedGroups: function($container, colCount, excludeTabbed) {\r\n        var colIndex, groupsColIndex, groupColIndex, $groupsByCol, applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed\r\n        };\r\n        for (colIndex = 0; colIndex < colCount; colIndex++) {\r\n            $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\r\n            this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions);\r\n            for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\r\n                $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\r\n                var groupColCount = this._getColCount($groupsByCol);\r\n                for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\r\n                    this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _alignLabelsInColumn: function(options) {\r\n        if (!windowUtils.hasWindow()) {\r\n            return\r\n        }\r\n        this._createHiddenElement(options.layoutManager);\r\n        if (options.inOneColumn) {\r\n            this._applyLabelsWidth(options.$container, options.excludeTabbed, true)\r\n        } else {\r\n            if (this._checkGrouping(options.items)) {\r\n                this._applyLabelsWidthWithGroups(options.$container, options.layoutManager._getColCount(), options.excludeTabbed)\r\n            } else {\r\n                this._applyLabelsWidth(options.$container, options.excludeTabbed, false, options.layoutManager._getColCount())\r\n            }\r\n        }\r\n        this._removeHiddenElement()\r\n    },\r\n    _prepareFormData: function() {\r\n        if (!typeUtils.isDefined(this.option(\"formData\"))) {\r\n            this.option(\"formData\", {})\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this._clearCachedInstances();\r\n        this._prepareFormData();\r\n        this.$element().addClass(FORM_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"form\", this.$element());\r\n        if (this.option(\"scrollingEnabled\")) {\r\n            this._renderScrollable()\r\n        }\r\n        this._renderLayout();\r\n        this._renderValidationSummary();\r\n        this._attachSyncSubscriptions();\r\n        this._cachedScreenFactor = this._getCurrentScreenFactor()\r\n    },\r\n    _getCurrentScreenFactor: function() {\r\n        return windowUtils.hasWindow() ? windowUtils.getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\"\r\n    },\r\n    _clearCachedInstances: function() {\r\n        this._editorInstancesByField = {};\r\n        this._cachedLayoutManagers = []\r\n    },\r\n    _alignLabels: function(layoutManager, inOneColumn) {\r\n        this._alignLabelsInColumn({\r\n            $container: this.$element(),\r\n            layoutManager: layoutManager,\r\n            excludeTabbed: true,\r\n            items: this.option(\"items\"),\r\n            inOneColumn: inOneColumn\r\n        })\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._groupsColCount = [];\r\n        this._cachedColCountOptions = [];\r\n        delete this._cachedScreenFactor\r\n    },\r\n    _renderScrollable: function() {\r\n        var useNativeScrolling = this.option(\"useNativeScrolling\");\r\n        this._scrollable = new Scrollable(this.$element(), {\r\n            useNative: !!useNativeScrolling,\r\n            useSimulatedScrollbar: !useNativeScrolling,\r\n            useKeyboard: false,\r\n            direction: \"both\",\r\n            bounceEnabled: false\r\n        })\r\n    },\r\n    _getContent: function() {\r\n        return this.option(\"scrollingEnabled\") ? this._scrollable.$content() : this.$element()\r\n    },\r\n    _renderValidationSummary: function() {\r\n        var $validationSummary = this.$element().find(\".\" + FORM_VALIDATION_SUMMARY);\r\n        if ($validationSummary.length > 0) {\r\n            $validationSummary.remove()\r\n        }\r\n        if (this.option(\"showValidationSummary\")) {\r\n            $(\"<div>\").addClass(FORM_VALIDATION_SUMMARY).dxValidationSummary({\r\n                validationGroup: this._getValidationGroup()\r\n            }).appendTo(this._getContent())\r\n        }\r\n    },\r\n    _prepareItems: function(items, isTabbed) {\r\n        if (items) {\r\n            var i, item, clonedItem, that = this,\r\n                extendedItems = [];\r\n            for (i = 0; i < items.length; i++) {\r\n                item = items[i];\r\n                clonedItem = typeUtils.isObject(item) ? extend({}, item) : item;\r\n                that._prepareGroupItem(clonedItem);\r\n                that._prepareTabbedItem(clonedItem);\r\n                that._prepareItemTemplate(clonedItem);\r\n                if (typeUtils.isObject(clonedItem)) {\r\n                    if (isTabbed) {\r\n                        clonedItem.cssItemClass = FIELD_ITEM_TAB_CLASS\r\n                    }\r\n                    clonedItem.items = this._prepareItems(clonedItem.items, isTabbed)\r\n                }\r\n                extendedItems.push(clonedItem)\r\n            }\r\n            return extendedItems\r\n        }\r\n    },\r\n    _prepareGroupItem: function(item) {\r\n        if (\"group\" === item.itemType) {\r\n            item.alignItemLabels = utils.ensureDefined(item.alignItemLabels, true);\r\n            if (item.template) {\r\n                item.groupContentTemplate = this._getTemplate(item.template)\r\n            }\r\n            item.template = this._itemGroupTemplate.bind(this, item)\r\n        }\r\n    },\r\n    _prepareTabbedItem: function(item) {\r\n        if (\"tabbed\" === item.itemType) {\r\n            item.template = this._itemTabbedTemplate.bind(this, item);\r\n            item.tabs = this._prepareItems(item.tabs, true)\r\n        }\r\n    },\r\n    _prepareItemTemplate: function(item) {\r\n        if (item.template) {\r\n            item.template = this._getTemplate(item.template)\r\n        }\r\n    },\r\n    _checkGrouping: function(items) {\r\n        if (items) {\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                if (\"group\" === item.itemType) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        var that = this,\r\n            items = that.option(\"items\"),\r\n            $content = that._getContent();\r\n        items = that._prepareItems(items);\r\n        that._rootLayoutManager = that._renderLayoutManager(items, $content, {\r\n            colCount: that.option(\"colCount\"),\r\n            alignItemLabels: that.option(\"alignItemLabels\"),\r\n            screenByWidth: this.option(\"screenByWidth\"),\r\n            colCountByScreen: this.option(\"colCountByScreen\"),\r\n            onLayoutChanged: function(inOneColumn) {\r\n                that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn)\r\n            },\r\n            onContentReady: function(e) {\r\n                that._alignLabels(e.component, e.component.isSingleColumnMode())\r\n            }\r\n        })\r\n    },\r\n    _itemTabbedTemplate: function(item, e, $container) {\r\n        var that = this,\r\n            $tabPanel = $(\"<div>\").appendTo($container),\r\n            tabPanelOptions = extend({}, item.tabPanelOptions, {\r\n                dataSource: item.tabs,\r\n                onItemRendered: function(args) {\r\n                    domUtils.triggerShownEvent(args.itemElement)\r\n                },\r\n                itemTemplate: function(itemData, e, container) {\r\n                    var layoutManager, $container = $(container),\r\n                        alignItemLabels = utils.ensureDefined(itemData.alignItemLabels, true);\r\n                    layoutManager = that._renderLayoutManager(itemData.items, $container, {\r\n                        colCount: itemData.colCount,\r\n                        alignItemLabels: alignItemLabels,\r\n                        screenByWidth: this.option(\"screenByWidth\"),\r\n                        colCountByScreen: itemData.colCountByScreen,\r\n                        cssItemClass: itemData.cssItemClass,\r\n                        onLayoutChanged: function(inOneColumn) {\r\n                            that._alignLabelsInColumn.bind(that)({\r\n                                $container: $container,\r\n                                layoutManager: layoutManager,\r\n                                items: itemData.items,\r\n                                inOneColumn: inOneColumn\r\n                            })\r\n                        }\r\n                    });\r\n                    if (alignItemLabels) {\r\n                        that._alignLabelsInColumn.bind(that)({\r\n                            $container: $container,\r\n                            layoutManager: layoutManager,\r\n                            items: itemData.items,\r\n                            inOneColumn: layoutManager.isSingleColumnMode()\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        that._createComponent($tabPanel, TabPanel, tabPanelOptions)\r\n    },\r\n    _itemGroupTemplate: function(item, e, $container) {\r\n        var $groupContent, colCount, layoutManager, $group = $(\"<div>\").toggleClass(FORM_GROUP_WITH_CAPTION_CLASS, typeUtils.isDefined(item.caption) && item.caption.length).addClass(FORM_GROUP_CLASS).appendTo($container);\r\n        if (item.caption) {\r\n            $(\"<span>\").addClass(FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group)\r\n        }\r\n        $groupContent = $(\"<div>\").addClass(FORM_GROUP_CONTENT_CLASS).appendTo($group);\r\n        if (item.groupContentTemplate) {\r\n            var data = {\r\n                formData: this.option(\"formData\"),\r\n                component: this\r\n            };\r\n            item.groupContentTemplate.render({\r\n                model: data,\r\n                container: domUtils.getPublicElement($groupContent)\r\n            })\r\n        } else {\r\n            layoutManager = this._renderLayoutManager(item.items, $groupContent, {\r\n                colCount: item.colCount,\r\n                colCountByScreen: item.colCountByScreen,\r\n                alignItemLabels: item.alignItemLabels,\r\n                cssItemClass: item.cssItemClass\r\n            });\r\n            colCount = layoutManager._getColCount();\r\n            if (inArray(colCount, this._groupsColCount) === -1) {\r\n                this._groupsColCount.push(colCount)\r\n            }\r\n            $group.addClass(GROUP_COL_COUNT_CLASS + colCount)\r\n        }\r\n    },\r\n    _renderLayoutManager: function(items, $rootElement, options) {\r\n        var instance, $element = $(\"<div>\"),\r\n            that = this,\r\n            config = that._getLayoutManagerConfig(items, options),\r\n            baseColCountByScreen = {\r\n                lg: options.colCount,\r\n                md: options.colCount,\r\n                sm: options.colCount,\r\n                xs: 1\r\n            };\r\n        that._cachedColCountOptions.push({\r\n            colCountByScreen: extend(baseColCountByScreen, options.colCountByScreen)\r\n        });\r\n        $element.appendTo($rootElement);\r\n        instance = that._createComponent($element, \"dxLayoutManager\", config);\r\n        instance.on(\"autoColCountChanged\", function() {\r\n            that._refresh()\r\n        });\r\n        that._cachedLayoutManagers.push(instance);\r\n        return instance\r\n    },\r\n    _getValidationGroup: function() {\r\n        return this.option(\"validationGroup\") || this\r\n    },\r\n    _getLayoutManagerConfig: function(items, options) {\r\n        var that = this,\r\n            baseConfig = {\r\n                form: that,\r\n                validationGroup: that._getValidationGroup(),\r\n                showRequiredMark: that.option(\"showRequiredMark\"),\r\n                showOptionalMark: that.option(\"showOptionalMark\"),\r\n                requiredMark: that.option(\"requiredMark\"),\r\n                optionalMark: that.option(\"optionalMark\"),\r\n                requiredMessage: that.option(\"requiredMessage\"),\r\n                screenByWidth: that.option(\"screenByWidth\"),\r\n                layoutData: that.option(\"formData\"),\r\n                labelLocation: that.option(\"labelLocation\"),\r\n                customizeItem: that.option(\"customizeItem\"),\r\n                minColWidth: that.option(\"minColWidth\"),\r\n                showColonAfterLabel: that.option(\"showColonAfterLabel\"),\r\n                onEditorEnterKey: that.option(\"onEditorEnterKey\"),\r\n                onFieldDataChanged: function(args) {\r\n                    if (!that._isDataUpdating) {\r\n                        that._triggerOnFieldDataChanged(args)\r\n                    }\r\n                },\r\n                validationBoundary: that.option(\"scrollingEnabled\") ? that.$element() : void 0\r\n            };\r\n        return extend(baseConfig, {\r\n            items: items,\r\n            onContentReady: function(args) {\r\n                that._updateEditorInstancesFromLayoutManager(args.component._editorInstancesByField);\r\n                options.onContentReady && options.onContentReady(args)\r\n            },\r\n            colCount: options.colCount,\r\n            alignItemLabels: options.alignItemLabels,\r\n            cssItemClass: options.cssItemClass,\r\n            colCountByScreen: options.colCountByScreen,\r\n            onLayoutChanged: options.onLayoutChanged,\r\n            width: options.width\r\n        })\r\n    },\r\n    _updateEditorInstancesFromLayoutManager: function(instancesByDataFields) {\r\n        extend(this._editorInstancesByField, instancesByDataFields)\r\n    },\r\n    _createComponent: function($element, type, config) {\r\n        var that = this;\r\n        config = config || {};\r\n        that._extendConfig(config, {\r\n            readOnly: that.option(\"readOnly\")\r\n        });\r\n        return that.callBase($element, type, config)\r\n    },\r\n    _attachSyncSubscriptions: function() {\r\n        var that = this;\r\n        that.off(\"optionChanged\").on(\"optionChanged\", function(args) {\r\n            var optionFullName = args.fullName;\r\n            if (\"formData\" === optionFullName) {\r\n                if (!typeUtils.isDefined(args.value)) {\r\n                    that._options.formData = args.value = {}\r\n                }\r\n                that._triggerOnFieldDataChangedByDataSet(args.value)\r\n            }\r\n            if (that._cachedLayoutManagers.length) {\r\n                each(that._cachedLayoutManagers, function(index, layoutManager) {\r\n                    if (\"formData\" === optionFullName) {\r\n                        that._isDataUpdating = true;\r\n                        layoutManager.option(\"layoutData\", args.value);\r\n                        that._isDataUpdating = false\r\n                    }\r\n                    if (\"readOnly\" === args.name || \"disabled\" === args.name) {\r\n                        layoutManager.option(optionFullName, args.value)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var rootNameOfComplexOption = this._getRootLevelOfExpectedComplexOption(args.fullName, [\"formData\", \"items\"]);\r\n        if (rootNameOfComplexOption) {\r\n            this._customHandlerOfComplexOption(args, rootNameOfComplexOption);\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"formData\":\r\n                if (!this.option(\"items\")) {\r\n                    this._invalidate()\r\n                } else {\r\n                    if (typeUtils.isEmptyObject(args.value)) {\r\n                        this._resetValues()\r\n                    }\r\n                }\r\n                break;\r\n            case \"items\":\r\n            case \"colCount\":\r\n            case \"onFieldDataChanged\":\r\n            case \"onEditorEnterKey\":\r\n            case \"labelLocation\":\r\n            case \"alignItemLabels\":\r\n            case \"showColonAfterLabel\":\r\n            case \"customizeItem\":\r\n            case \"alignItemLabelsInAllGroups\":\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n            case \"requiredMessage\":\r\n            case \"scrollingEnabled\":\r\n            case \"formID\":\r\n            case \"colCountByScreen\":\r\n            case \"screenByWidth\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationSummary\":\r\n                this._renderValidationSummary();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._rootLayoutManager.option(args.name, args.value);\r\n                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (args.value) {\r\n                    domUtils.triggerShownEvent(this.$element())\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getRootLevelOfExpectedComplexOption: function(fullOptionName, expectedRootNames) {\r\n        var result, splitFullName = fullOptionName.split(\".\");\r\n        if (splitFullName.length > 1) {\r\n            var i, rootOptionName = splitFullName[0];\r\n            for (i = 0; i < expectedRootNames.length; i++) {\r\n                if (rootOptionName.search(expectedRootNames[i]) !== -1) {\r\n                    result = expectedRootNames[i]\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _customHandlerOfComplexOption: function(args, rootOptionName) {\r\n        var nameParts = args.fullName.split(\".\");\r\n        switch (rootOptionName) {\r\n            case \"items\":\r\n                var instance, itemPath = this._getItemPath(nameParts),\r\n                    item = this.option(itemPath);\r\n                if (args.fullName.search(\"editorOptions\") !== -1) {\r\n                    instance = this.getEditor(item.dataField) || this.getEditor(item.name);\r\n                    instance && instance.option(item.editorOptions)\r\n                }\r\n                if (!instance && item) {\r\n                    var items, name = args.fullName.replace(itemPath + \".\", \"\");\r\n                    this._changeItemOption(item, name, args.value);\r\n                    items = this._generateItemsFromData(this.option(\"items\"));\r\n                    this.option(\"items\", items)\r\n                }\r\n                break;\r\n            case \"formData\":\r\n                var dataField = nameParts.slice(1).join(\".\"),\r\n                    editor = this.getEditor(dataField);\r\n                if (editor) {\r\n                    editor.option(\"value\", args.value)\r\n                } else {\r\n                    this._triggerOnFieldDataChanged({\r\n                        dataField: dataField,\r\n                        value: args.value\r\n                    })\r\n                }\r\n        }\r\n    },\r\n    _getItemPath: function(nameParts) {\r\n        var i, itemPath = nameParts[0];\r\n        for (i = 1; i < nameParts.length; i++) {\r\n            if (nameParts[i].search(\"items|tabs\") !== -1) {\r\n                itemPath += \".\" + nameParts[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        return itemPath\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _triggerOnFieldDataChangedByDataSet: function(data) {\r\n        var that = this;\r\n        if (data && typeUtils.isObject(data)) {\r\n            each(data, function(dataField, value) {\r\n                that._triggerOnFieldDataChanged({\r\n                    dataField: dataField,\r\n                    value: value\r\n                })\r\n            })\r\n        }\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        if (typeUtils.isDefined(this.option(\"formData\"))) {\r\n            var editor = this.getEditor(dataField);\r\n            this.option(\"formData.\" + dataField, value);\r\n            if (editor) {\r\n                var editorValue = editor.option(\"value\");\r\n                if (editorValue !== value) {\r\n                    editor.option(\"value\", value)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _generateItemsFromData: function(items) {\r\n        var formData = this.option(\"formData\"),\r\n            result = [];\r\n        if (!items && typeUtils.isDefined(formData)) {\r\n            each(formData, function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            })\r\n        }\r\n        if (items) {\r\n            each(items, function(index, item) {\r\n                if (typeUtils.isObject(item)) {\r\n                    result.push(item)\r\n                } else {\r\n                    result.push({\r\n                        dataField: item\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _getItemByField: function(field, items) {\r\n        var resultItem, that = this,\r\n            fieldParts = typeUtils.isObject(field) ? field : that._getFieldParts(field),\r\n            fieldName = fieldParts.fieldName,\r\n            fieldPath = fieldParts.fieldPath;\r\n        if (items.length) {\r\n            each(items, function(index, item) {\r\n                var itemType = item.itemType;\r\n                if (fieldPath.length) {\r\n                    var path = fieldPath.slice();\r\n                    item = that._getItemByFieldPath(path, fieldName, item)\r\n                } else {\r\n                    if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType) {\r\n                        var subItemsField = that._getSubItemField(itemType);\r\n                        item.items = that._generateItemsFromData(item.items);\r\n                        item = that._getItemByField({\r\n                            fieldName: fieldName,\r\n                            fieldPath: fieldPath\r\n                        }, item[subItemsField])\r\n                    }\r\n                }\r\n                if (that._isExpectedItem(item, fieldName)) {\r\n                    resultItem = item;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        return resultItem\r\n    },\r\n    _getFieldParts: function(field) {\r\n        var fieldSeparator = \".\",\r\n            fieldName = field,\r\n            separatorIndex = fieldName.indexOf(fieldSeparator),\r\n            resultPath = [];\r\n        while (separatorIndex !== -1) {\r\n            resultPath.push(fieldName.substr(0, separatorIndex));\r\n            fieldName = fieldName.substr(separatorIndex + 1);\r\n            separatorIndex = fieldName.indexOf(fieldSeparator)\r\n        }\r\n        return {\r\n            fieldName: fieldName,\r\n            fieldPath: resultPath.reverse()\r\n        }\r\n    },\r\n    _getItemByFieldPath: function(path, fieldName, item) {\r\n        var result, that = this,\r\n            itemType = item.itemType,\r\n            subItemsField = that._getSubItemField(itemType),\r\n            isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\r\n        do {\r\n            if (isItemWithSubItems) {\r\n                var pathNode, name = item.name || item.caption || item.title,\r\n                    isGroupWithName = typeUtils.isDefined(name),\r\n                    nameWithoutSpaces = that._getTextWithoutSpaces(name);\r\n                item[subItemsField] = that._generateItemsFromData(item[subItemsField]);\r\n                if (isGroupWithName) {\r\n                    pathNode = path.pop()\r\n                }\r\n                if (!path.length) {\r\n                    result = that._getItemByField(fieldName, item[subItemsField]);\r\n                    if (result) {\r\n                        break\r\n                    }\r\n                }\r\n                if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\r\n                    if (path.length) {\r\n                        result = that._searchItemInEverySubItem(path, fieldName, item[subItemsField])\r\n                    }\r\n                }\r\n            } else {\r\n                break\r\n            }\r\n        } while (path.length && !typeUtils.isDefined(result));\r\n        return result\r\n    },\r\n    _getSubItemField: function(itemType) {\r\n        return \"tabbed\" === itemType ? \"tabs\" : \"items\"\r\n    },\r\n    _searchItemInEverySubItem: function(path, fieldName, items) {\r\n        var result, that = this;\r\n        each(items, function(index, groupItem) {\r\n            result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\r\n            if (result) {\r\n                return false\r\n            }\r\n        });\r\n        if (!result) {\r\n            result = false\r\n        }\r\n        return result\r\n    },\r\n    _getTextWithoutSpaces: function(text) {\r\n        return text ? text.replace(/\\s/g, \"\") : void 0\r\n    },\r\n    _isExpectedItem: function(item, fieldName) {\r\n        return item && (item.dataField === fieldName || item.name === fieldName || this._getTextWithoutSpaces(item.title) === fieldName || \"group\" === item.itemType && this._getTextWithoutSpaces(item.caption) === fieldName)\r\n    },\r\n    _changeItemOption: function(item, option, value) {\r\n        if (typeUtils.isObject(item)) {\r\n            item[option] = value\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var currentScreenFactor = this._getCurrentScreenFactor();\r\n        if (this._cachedScreenFactor !== currentScreenFactor) {\r\n            if (this._isColCountChanged(this._cachedScreenFactor, currentScreenFactor)) {\r\n                this._refresh()\r\n            }\r\n            this._cachedScreenFactor = currentScreenFactor;\r\n            return\r\n        }\r\n    },\r\n    _isColCountChanged: function(oldScreenSize, newScreenSize) {\r\n        var isChanged = false;\r\n        each(this._cachedColCountOptions, function(index, item) {\r\n            if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\r\n                isChanged = true;\r\n                return false\r\n            }\r\n        });\r\n        return isChanged\r\n    },\r\n    _refresh: function() {\r\n        var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\r\n        eventsEngine.trigger(this.$element().find(editorSelector), \"change\");\r\n        this.callBase()\r\n    },\r\n    _resetValues: function() {\r\n        var validationGroup = this._getValidationGroup(),\r\n            validationGroupConfig = ValidationEngine.getGroupConfig(validationGroup);\r\n        validationGroupConfig && validationGroupConfig.reset();\r\n        each(this._editorInstancesByField, function(dataField, editor) {\r\n            editor.reset();\r\n            editor.option(\"isValid\", true)\r\n        })\r\n    },\r\n    _updateData: function(data, value, isComplexData) {\r\n        var that = this,\r\n            _data = isComplexData ? value : data;\r\n        if (typeUtils.isObject(_data)) {\r\n            each(_data, function(dataField, fieldValue) {\r\n                that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, typeUtils.isObject(fieldValue))\r\n            })\r\n        } else {\r\n            if (typeUtils.isString(data)) {\r\n                that._updateFieldValue(data, value)\r\n            }\r\n        }\r\n    },\r\n    registerKeyHandler: function(key, handler) {\r\n        this.callBase(key, handler);\r\n        each(this._editorInstancesByField, function(dataField, editor) {\r\n            editor.registerKeyHandler(key, handler)\r\n        })\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element().find(\".\" + FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible && browser.msie) {\r\n            this._refresh()\r\n        }\r\n    },\r\n    resetValues: function() {\r\n        this._resetValues()\r\n    },\r\n    updateData: function(data, value) {\r\n        this._updateData(data, value)\r\n    },\r\n    getEditor: function(dataField) {\r\n        return this._editorInstancesByField[dataField]\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this,\r\n            deferred = new Deferred;\r\n        if (that._scrollable) {\r\n            that._scrollable.update().done(function() {\r\n                deferred.resolveWith(that)\r\n            })\r\n        } else {\r\n            deferred.resolveWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    itemOption: function(id, option, value) {\r\n        var that = this,\r\n            argsCount = arguments.length,\r\n            items = that._generateItemsFromData(that.option(\"items\")),\r\n            item = that._getItemByField(id, items);\r\n        switch (argsCount) {\r\n            case 1:\r\n                return item;\r\n            case 3:\r\n                that._changeItemOption(item, option, value);\r\n                break;\r\n            default:\r\n                if (typeUtils.isObject(option)) {\r\n                    each(option, function(optionName, optionValue) {\r\n                        that._changeItemOption(item, optionName, optionValue)\r\n                    })\r\n                }\r\n        }\r\n        this.option(\"items\", items)\r\n    },\r\n    validate: function() {\r\n        try {\r\n            return ValidationEngine.validateGroup(this._getValidationGroup())\r\n        } catch (e) {\r\n            errors.log(\"E1036\", e.message)\r\n        }\r\n    },\r\n    getItemID: function(name) {\r\n        return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new Guid)\r\n    }\r\n});\r\nregisterComponent(\"dxForm\", Form);\r\nmodule.exports = Form;\r\n\n\n/***/ }),\n\n/***/ 833:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/form/ui.form.layout_manager.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    Guid = __webpack_require__(77),\r\n    registerComponent = __webpack_require__(16),\r\n    typeUtils = __webpack_require__(4),\r\n    domUtils = __webpack_require__(13),\r\n    isWrapped = __webpack_require__(200).isWrapped,\r\n    isWritableWrapped = __webpack_require__(200).isWritableWrapped,\r\n    unwrap = __webpack_require__(200).unwrap,\r\n    windowUtils = __webpack_require__(9),\r\n    stringUtils = __webpack_require__(53),\r\n    each = __webpack_require__(5).each,\r\n    extend = __webpack_require__(3).extend,\r\n    inArray = __webpack_require__(15).inArray,\r\n    dataUtils = __webpack_require__(27),\r\n    removeEvent = __webpack_require__(145),\r\n    clickEvent = __webpack_require__(25),\r\n    normalizeIndexes = __webpack_require__(15).normalizeIndexes,\r\n    errors = __webpack_require__(35),\r\n    messageLocalization = __webpack_require__(24),\r\n    styleUtils = __webpack_require__(142),\r\n    inflector = __webpack_require__(79),\r\n    Widget = __webpack_require__(43),\r\n    Validator = __webpack_require__(778),\r\n    ResponsiveBox = __webpack_require__(835),\r\n    themes = __webpack_require__(22);\r\n__webpack_require__(337);\r\n__webpack_require__(745);\r\n__webpack_require__(206);\r\n__webpack_require__(779);\r\n__webpack_require__(42);\r\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\",\r\n    FIELD_ITEM_CLASS = \"dx-field-item\",\r\n    FIELD_EMPTY_ITEM_CLASS = \"dx-field-empty-item\",\r\n    FIELD_BUTTON_ITEM_CLASS = \"dx-field-button-item\",\r\n    FIELD_ITEM_REQUIRED_CLASS = \"dx-field-item-required\",\r\n    FIELD_ITEM_OPTIONAL_CLASS = \"dx-field-item-optional\",\r\n    FIELD_ITEM_REQUIRED_MARK_CLASS = \"dx-field-item-required-mark\",\r\n    FIELD_ITEM_OPTIONAL_MARK_CLASS = \"dx-field-item-optional-mark\",\r\n    FIELD_ITEM_LABEL_CLASS = \"dx-field-item-label\",\r\n    FIELD_ITEM_LABEL_ALIGN_CLASS = \"dx-field-item-label-align\",\r\n    FIELD_ITEM_LABEL_CONTENT_CLASS = \"dx-field-item-label-content\",\r\n    FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\",\r\n    FIELD_ITEM_LABEL_LOCATION_CLASS = \"dx-field-item-label-location-\",\r\n    FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\",\r\n    FIELD_ITEM_CONTENT_LOCATION_CLASS = \"dx-field-item-content-location-\",\r\n    FIELD_ITEM_CONTENT_WRAPPER_CLASS = \"dx-field-item-content-wrapper\",\r\n    FIELD_ITEM_HELP_TEXT_CLASS = \"dx-field-item-help-text\",\r\n    SINGLE_COLUMN_ITEM_CONTENT = \"dx-single-column-item-content\",\r\n    LABEL_HORIZONTAL_ALIGNMENT_CLASS = \"dx-label-h-align\",\r\n    LABEL_VERTICAL_ALIGNMENT_CLASS = \"dx-label-v-align\",\r\n    FORM_LAYOUT_MANAGER_CLASS = \"dx-layout-manager\",\r\n    LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\",\r\n    LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\",\r\n    LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\",\r\n    LAYOUT_MANAGER_ONE_COLUMN = \"dx-layout-manager-one-col\",\r\n    FLEX_LAYOUT_CLASS = \"dx-flex-layout\",\r\n    INVALID_CLASS = \"dx-invalid\",\r\n    LAYOUT_STRATEGY_FLEX = \"flex\",\r\n    LAYOUT_STRATEGY_FALLBACK = \"fallback\",\r\n    SIMPLE_ITEM_TYPE = \"simple\",\r\n    DATA_OPTIONS = [\"dataSource\", \"items\"],\r\n    EDITORS_WITH_ARRAY_VALUE = [\"dxTagBox\", \"dxRangeSlider\"];\r\nvar LayoutManager = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            layoutData: {},\r\n            readOnly: false,\r\n            colCount: 1,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            onFieldDataChanged: null,\r\n            onEditorEnterKey: null,\r\n            customizeItem: null,\r\n            alignItemLabels: true,\r\n            minColWidth: 200,\r\n            showRequiredMark: true,\r\n            screenByWidth: null,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            layoutData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._itemWatchers = [];\r\n        this._initDataAndItems(this.option(\"layoutData\"))\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._cleanItemWatchers()\r\n    },\r\n    _initDataAndItems: function(initialData) {\r\n        this._syncDataWithItems();\r\n        this._updateItems(initialData)\r\n    },\r\n    _syncDataWithItems: function() {\r\n        var that = this,\r\n            userItems = that.option(\"items\");\r\n        if (typeUtils.isDefined(userItems)) {\r\n            each(userItems, function(index, item) {\r\n                var value;\r\n                if (item.dataField && void 0 === that._getDataByField(item.dataField)) {\r\n                    if (item.editorOptions) {\r\n                        value = item.editorOptions.value\r\n                    }\r\n                    that._updateFieldValue(item.dataField, value)\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getDataByField: function(dataField) {\r\n        return dataField ? this.option(\"layoutData.\" + dataField) : null\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        var layoutData = this.option(\"layoutData\"),\r\n            newValue = value;\r\n        if (!isWrapped(layoutData[dataField]) && typeUtils.isDefined(dataField)) {\r\n            this.option(\"layoutData.\" + dataField, newValue)\r\n        } else {\r\n            if (isWritableWrapped(layoutData[dataField])) {\r\n                newValue = typeUtils.isFunction(newValue) ? newValue() : newValue;\r\n                layoutData[dataField](newValue)\r\n            }\r\n        }\r\n        this._triggerOnFieldDataChanged({\r\n            dataField: dataField,\r\n            value: newValue\r\n        })\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _updateItems: function(layoutData) {\r\n        var items, processedItems, that = this,\r\n            userItems = this.option(\"items\"),\r\n            isUserItemsExist = typeUtils.isDefined(userItems),\r\n            customizeItem = that.option(\"customizeItem\");\r\n        items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\r\n        if (typeUtils.isDefined(items)) {\r\n            processedItems = [];\r\n            each(items, function(index, item) {\r\n                if (that._isAcceptableItem(item)) {\r\n                    item = that._processItem(item);\r\n                    customizeItem && customizeItem(item);\r\n                    if (typeUtils.isObject(item) && false !== unwrap(item.visible)) {\r\n                        processedItems.push(item)\r\n                    }\r\n                }\r\n            });\r\n            if (!that._itemWatchers.length || !isUserItemsExist) {\r\n                that._updateItemWatchers(items)\r\n            }\r\n            this._items = processedItems;\r\n            this._sortItems()\r\n        }\r\n    },\r\n    _cleanItemWatchers: function() {\r\n        this._itemWatchers.forEach(function(dispose) {\r\n            dispose()\r\n        });\r\n        this._itemWatchers = []\r\n    },\r\n    _updateItemWatchers: function(items) {\r\n        var that = this,\r\n            watch = that._getWatch();\r\n        items.forEach(function(item) {\r\n            if (typeUtils.isObject(item) && typeUtils.isDefined(item.visible) && typeUtils.isFunction(watch)) {\r\n                that._itemWatchers.push(watch(function() {\r\n                    return unwrap(item.visible)\r\n                }, function() {\r\n                    that._updateItems(that.option(\"layoutData\"));\r\n                    that.repaint()\r\n                }, {\r\n                    skipImmediate: true\r\n                }))\r\n            }\r\n        })\r\n    },\r\n    _generateItemsByData: function(layoutData) {\r\n        var result = [];\r\n        if (typeUtils.isDefined(layoutData)) {\r\n            each(layoutData, function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _isAcceptableItem: function(item) {\r\n        var itemField = item.dataField || item,\r\n            itemData = this._getDataByField(itemField);\r\n        return !(typeUtils.isFunction(itemData) && !isWrapped(itemData))\r\n    },\r\n    _processItem: function(item) {\r\n        if (\"string\" === typeof item) {\r\n            item = {\r\n                dataField: item\r\n            }\r\n        }\r\n        if (\"object\" === (\"undefined\" === typeof item ? \"undefined\" : _typeof(item)) && !item.itemType) {\r\n            item.itemType = SIMPLE_ITEM_TYPE\r\n        }\r\n        if (!typeUtils.isDefined(item.editorType) && typeUtils.isDefined(item.dataField)) {\r\n            var value = this._getDataByField(item.dataField);\r\n            item.editorType = typeUtils.isDefined(value) ? this._getEditorTypeByDataType(typeUtils.type(value)) : FORM_EDITOR_BY_DEFAULT\r\n        }\r\n        return item\r\n    },\r\n    _getEditorTypeByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"number\":\r\n                return \"dxNumberBox\";\r\n            case \"date\":\r\n                return \"dxDateBox\";\r\n            case \"boolean\":\r\n                return \"dxCheckBox\";\r\n            default:\r\n                return \"dxTextBox\"\r\n        }\r\n    },\r\n    _sortItems: function() {\r\n        normalizeIndexes(this._items, \"visibleIndex\");\r\n        this._sortIndexes()\r\n    },\r\n    _sortIndexes: function() {\r\n        this._items.sort(function(itemA, itemB) {\r\n            var result, indexA = itemA.visibleIndex,\r\n                indexB = itemB.visibleIndex;\r\n            if (indexA > indexB) {\r\n                result = 1\r\n            } else {\r\n                if (indexA < indexB) {\r\n                    result = -1\r\n                } else {\r\n                    result = 0\r\n                }\r\n            }\r\n            return result\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this._clearEditorInstances();\r\n        this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\r\n        this.callBase();\r\n        this._renderResponsiveBox()\r\n    },\r\n    _clearEditorInstances: function() {\r\n        this._editorInstancesByField = {}\r\n    },\r\n    _hasBrowserFlex: function() {\r\n        return styleUtils.styleProp(LAYOUT_STRATEGY_FLEX) === LAYOUT_STRATEGY_FLEX\r\n    },\r\n    _renderResponsiveBox: function() {\r\n        var that = this,\r\n            templatesInfo = [];\r\n        if (that._items && that._items.length) {\r\n            var layoutItems, colCount = that._getColCount(),\r\n                $container = $(\"<div>\").appendTo(that.$element());\r\n            that._prepareItemsWithMerging(colCount);\r\n            layoutItems = that._generateLayoutItems();\r\n            that._extendItemsWithDefaultTemplateOptions(layoutItems, that._items);\r\n            that._responsiveBox = that._createComponent($container, ResponsiveBox, that._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\r\n            if (!windowUtils.hasWindow()) {\r\n                that._renderTemplates(templatesInfo)\r\n            }\r\n        }\r\n    },\r\n    _extendItemsWithDefaultTemplateOptions: function(targetItems, sourceItems) {\r\n        sourceItems.forEach(function(item) {\r\n            if (!item.merged) {\r\n                if (typeUtils.isDefined(item.disabled)) {\r\n                    targetItems[item.visibleIndex].disabled = item.disabled\r\n                }\r\n                if (typeUtils.isDefined(item.visible)) {\r\n                    targetItems[item.visibleIndex].visible = item.visible\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _itemStateChangedHandler: function(e) {\r\n        this._refresh()\r\n    },\r\n    _renderTemplate: function($container, item) {\r\n        switch (item.itemType) {\r\n            case \"empty\":\r\n                this._renderEmptyItem($container);\r\n                break;\r\n            case \"button\":\r\n                this._renderButtonItem(item, $container);\r\n                break;\r\n            default:\r\n                this._renderFieldItem(item, $container)\r\n        }\r\n    },\r\n    _renderTemplates: function(templatesInfo) {\r\n        var that = this;\r\n        each(templatesInfo, function(index, info) {\r\n            that._renderTemplate(info.container, info.formItem)\r\n        })\r\n    },\r\n    _getResponsiveBoxConfig: function(layoutItems, colCount, templatesInfo) {\r\n        var that = this,\r\n            colCountByScreen = that.option(\"colCountByScreen\"),\r\n            xsColCount = colCountByScreen && colCountByScreen.xs;\r\n        return {\r\n            onItemStateChanged: this._itemStateChangedHandler.bind(this),\r\n            _layoutStrategy: that._hasBrowserFlex() ? LAYOUT_STRATEGY_FLEX : LAYOUT_STRATEGY_FALLBACK,\r\n            onLayoutChanged: function onLayoutChanged() {\r\n                var onLayoutChanged = that.option(\"onLayoutChanged\"),\r\n                    isSingleColumnMode = that.isSingleColumnMode();\r\n                if (onLayoutChanged) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\r\n                    onLayoutChanged(isSingleColumnMode)\r\n                }\r\n            },\r\n            onContentReady: function(e) {\r\n                if (windowUtils.hasWindow()) {\r\n                    that._renderTemplates(templatesInfo)\r\n                }\r\n                if (that.option(\"onLayoutChanged\")) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component))\r\n                }\r\n                that._fireContentReadyAction()\r\n            },\r\n            itemTemplate: function(e, itemData, itemElement) {\r\n                if (!e.location) {\r\n                    return\r\n                }\r\n                var $itemElement = $(itemElement),\r\n                    itemRenderedCountInPreviousRows = e.location.row * colCount,\r\n                    item = that._items[e.location.col + itemRenderedCountInPreviousRows],\r\n                    $fieldItem = $(\"<div>\").addClass(item.cssClass).appendTo($itemElement);\r\n                templatesInfo.push({\r\n                    container: $fieldItem,\r\n                    formItem: item\r\n                });\r\n                $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\r\n                if (0 === e.location.row) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_FIRST_ROW_CLASS)\r\n                }\r\n                if (0 === e.location.col) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_FIRST_COL_CLASS)\r\n                }\r\n                if (e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_LAST_COL_CLASS)\r\n                }\r\n            },\r\n            cols: that._generateRatio(colCount),\r\n            rows: that._generateRatio(that._getRowsCount(), true),\r\n            dataSource: layoutItems,\r\n            screenByWidth: that.option(\"screenByWidth\"),\r\n            singleColumnScreen: xsColCount ? false : \"xs\"\r\n        }\r\n    },\r\n    _getColCount: function() {\r\n        var colCount = this.option(\"colCount\"),\r\n            colCountByScreen = this.option(\"colCountByScreen\");\r\n        if (colCountByScreen) {\r\n            var screenFactor = windowUtils.hasWindow() ? windowUtils.getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\",\r\n                currentColCount = colCountByScreen[screenFactor];\r\n            colCount = currentColCount || colCount\r\n        }\r\n        if (\"auto\" === colCount) {\r\n            if (!!this._cashedColCount) {\r\n                return this._cashedColCount\r\n            }\r\n            this._cashedColCount = colCount = this._getMaxColCount()\r\n        }\r\n        return colCount < 1 ? 1 : colCount\r\n    },\r\n    _getMaxColCount: function() {\r\n        if (!windowUtils.hasWindow()) {\r\n            return 1\r\n        }\r\n        var minColWidth = this.option(\"minColWidth\"),\r\n            width = this.$element().width(),\r\n            itemsCount = this._items.length,\r\n            maxColCount = Math.floor(width / minColWidth) || 1;\r\n        return itemsCount < maxColCount ? itemsCount : maxColCount\r\n    },\r\n    isCachedColCountObsolete: function() {\r\n        return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount\r\n    },\r\n    _prepareItemsWithMerging: function(colCount) {\r\n        var item, itemsMergedByCol, j, i, items = this._items.slice(0),\r\n            result = [];\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            result.push(item);\r\n            if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\r\n                item.col = this._getColByIndex(result.length - 1, colCount)\r\n            }\r\n            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\r\n                itemsMergedByCol = [];\r\n                for (j = 0; j < item.colSpan - 1; j++) {\r\n                    itemsMergedByCol.push({\r\n                        merged: true\r\n                    })\r\n                }\r\n                result = result.concat(itemsMergedByCol)\r\n            } else {\r\n                delete item.colSpan\r\n            }\r\n        }\r\n        this._items = result\r\n    },\r\n    _getColByIndex: function(index, colCount) {\r\n        return index % colCount\r\n    },\r\n    _generateLayoutItems: function() {\r\n        var item, i, items = this._items,\r\n            colCount = this._getColCount(),\r\n            result = [];\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            if (!item.merged) {\r\n                var generatedItem = {\r\n                    location: {\r\n                        row: parseInt(i / colCount),\r\n                        col: this._getColByIndex(i, colCount)\r\n                    }\r\n                };\r\n                if (typeUtils.isDefined(item.colSpan)) {\r\n                    generatedItem.location.colspan = item.colSpan\r\n                }\r\n                if (typeUtils.isDefined(item.rowSpan)) {\r\n                    generatedItem.location.rowspan = item.rowSpan\r\n                }\r\n                result.push(generatedItem)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _renderEmptyItem: function($container) {\r\n        return $container.addClass(FIELD_EMPTY_ITEM_CLASS).html(\"&nbsp;\")\r\n    },\r\n    _getButtonHorizontalAlignment: function(item) {\r\n        if (typeUtils.isDefined(item.horizontalAlignment)) {\r\n            return item.horizontalAlignment\r\n        }\r\n        if (typeUtils.isDefined(item.alignment)) {\r\n            errors.log(\"W0001\", \"dxForm\", \"alignment\", \"18.1\", \"Use the 'horizontalAlignment' option in button items instead.\");\r\n            return item.alignment\r\n        }\r\n        return \"right\"\r\n    },\r\n    _getButtonVerticalAlignment: function(item) {\r\n        switch (item.verticalAlignment) {\r\n            case \"center\":\r\n                return \"center\";\r\n            case \"bottom\":\r\n                return \"flex-end\";\r\n            default:\r\n                return \"flex-start\"\r\n        }\r\n    },\r\n    _renderButtonItem: function(item, $container) {\r\n        var $button = $(\"<div>\").appendTo($container),\r\n            defaultOptions = {\r\n                validationGroup: this.option(\"validationGroup\")\r\n            };\r\n        $container.addClass(FIELD_BUTTON_ITEM_CLASS).css(\"textAlign\", this._getButtonHorizontalAlignment(item));\r\n        $container.parent().css(\"justifyContent\", this._getButtonVerticalAlignment(item));\r\n        this._createComponent($button, \"dxButton\", extend(defaultOptions, item.buttonOptions));\r\n        this._addItemClasses($container, item.col);\r\n        return $button\r\n    },\r\n    _addItemClasses: function($item, column) {\r\n        $item.addClass(FIELD_ITEM_CLASS).addClass(this.option(\"cssItemClass\")).addClass(typeUtils.isDefined(column) ? \"dx-col-\" + column : \"\")\r\n    },\r\n    _renderFieldItem: function(item, $container) {\r\n        var $label, that = this,\r\n            name = that._getName(item),\r\n            id = that.getItemID(name),\r\n            isRequired = typeUtils.isDefined(item.isRequired) ? item.isRequired : !!that._hasRequiredRuleInSet(item.validationRules),\r\n            labelOptions = that._getLabelOptions(item, id, isRequired),\r\n            $editor = $(\"<div>\"),\r\n            helpID = item.helpText ? \"dx-\" + new Guid : null;\r\n        this._addItemClasses($container, item.col);\r\n        $container.addClass(isRequired ? FIELD_ITEM_REQUIRED_CLASS : FIELD_ITEM_OPTIONAL_CLASS);\r\n        if (labelOptions.visible && labelOptions.text) {\r\n            $label = that._renderLabel(labelOptions).appendTo($container)\r\n        }\r\n        if (item.itemType === SIMPLE_ITEM_TYPE) {\r\n            if (that._isLabelNeedBaselineAlign(item) && \"top\" !== labelOptions.location) {\r\n                $container.addClass(FIELD_ITEM_LABEL_ALIGN_CLASS)\r\n            }\r\n            that._hasBrowserFlex() && $container.addClass(FLEX_LAYOUT_CLASS)\r\n        }\r\n        $editor.data(\"dx-form-item\", item);\r\n        that._appendEditorToField({\r\n            $fieldItem: $container,\r\n            $label: $label,\r\n            $editor: $editor,\r\n            labelOptions: labelOptions\r\n        });\r\n        that._renderEditor({\r\n            $container: $editor,\r\n            dataField: item.dataField,\r\n            name: name,\r\n            editorType: item.editorType,\r\n            editorOptions: item.editorOptions,\r\n            template: that._getTemplateByFieldItem(item),\r\n            isRequired: isRequired,\r\n            helpID: helpID,\r\n            id: id,\r\n            validationBoundary: that.option(\"validationBoundary\")\r\n        });\r\n        var $validationTarget = $editor.children().first();\r\n        if ($validationTarget && $validationTarget.data(\"dx-validation-target\")) {\r\n            that._renderValidator($validationTarget, item)\r\n        }\r\n        that._renderHelpText(item, $editor, helpID);\r\n        that._attachClickHandler($label, $editor, item.editorType)\r\n    },\r\n    _hasRequiredRuleInSet: function(rules) {\r\n        var hasRequiredRule;\r\n        if (rules && rules.length) {\r\n            each(rules, function(index, rule) {\r\n                if (\"required\" === rule.type) {\r\n                    hasRequiredRule = true;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        return hasRequiredRule\r\n    },\r\n    _getName: function(item) {\r\n        return item.dataField || item.name\r\n    },\r\n    _isLabelNeedBaselineAlign: function(item) {\r\n        var largeEditors = [\"dxTextArea\", \"dxRadioGroup\", \"dxCalendar\"];\r\n        return !!item.helpText && !this._hasBrowserFlex() || inArray(item.editorType, largeEditors) !== -1\r\n    },\r\n    _getLabelOptions: function(item, id, isRequired) {\r\n        var labelOptions = extend({\r\n            showColon: this.option(\"showColonAfterLabel\"),\r\n            location: this.option(\"labelLocation\"),\r\n            id: id,\r\n            visible: true,\r\n            isRequired: isRequired\r\n        }, item ? item.label : {});\r\n        if (!labelOptions.text && item.dataField) {\r\n            labelOptions.text = inflector.captionize(item.dataField)\r\n        }\r\n        if (labelOptions.text) {\r\n            labelOptions.text += labelOptions.showColon ? \":\" : \"\"\r\n        }\r\n        return labelOptions\r\n    },\r\n    _renderLabel: function(options) {\r\n        if (typeUtils.isDefined(options.text) && options.text.length > 0) {\r\n            var labelClasses = FIELD_ITEM_LABEL_CLASS + \" \" + FIELD_ITEM_LABEL_LOCATION_CLASS + options.location,\r\n                $label = $(\"<label>\").addClass(labelClasses).attr(\"for\", options.id),\r\n                $labelContent = $(\"<span>\").addClass(FIELD_ITEM_LABEL_CONTENT_CLASS).appendTo($label);\r\n            $(\"<span>\").addClass(FIELD_ITEM_LABEL_TEXT_CLASS).text(options.text).appendTo($labelContent);\r\n            if (options.alignment) {\r\n                $label.css(\"textAlign\", options.alignment)\r\n            }\r\n            $labelContent.append(this._renderLabelMark(options.isRequired));\r\n            return $label\r\n        }\r\n    },\r\n    _renderLabelMark: function(isRequired) {\r\n        var $mark, requiredMarksConfig = this._getRequiredMarksConfig(),\r\n            isRequiredMark = requiredMarksConfig.showRequiredMark && isRequired,\r\n            isOptionalMark = requiredMarksConfig.showOptionalMark && !isRequired;\r\n        if (isRequiredMark || isOptionalMark) {\r\n            var markClass = isRequiredMark ? FIELD_ITEM_REQUIRED_MARK_CLASS : FIELD_ITEM_OPTIONAL_MARK_CLASS,\r\n                markText = isRequiredMark ? requiredMarksConfig.requiredMark : requiredMarksConfig.optionalMark;\r\n            $mark = $(\"<span>\").addClass(markClass).html(\"&nbsp\" + markText)\r\n        }\r\n        return $mark\r\n    },\r\n    _getRequiredMarksConfig: function() {\r\n        if (!this._cashedRequiredConfig) {\r\n            this._cashedRequiredConfig = {\r\n                showRequiredMark: this.option(\"showRequiredMark\"),\r\n                showOptionalMark: this.option(\"showOptionalMark\"),\r\n                requiredMark: this.option(\"requiredMark\"),\r\n                optionalMark: this.option(\"optionalMark\")\r\n            }\r\n        }\r\n        return this._cashedRequiredConfig\r\n    },\r\n    _renderEditor: function(options) {\r\n        var editorOptions, dataValue = this._getDataByField(options.dataField),\r\n            defaultEditorOptions = {\r\n                value: dataValue\r\n            },\r\n            isDeepExtend = true;\r\n        if (EDITORS_WITH_ARRAY_VALUE.indexOf(options.editorType) !== -1) {\r\n            defaultEditorOptions.value = defaultEditorOptions.value || []\r\n        }\r\n        var formInstance = this.option(\"form\");\r\n        editorOptions = extend(isDeepExtend, defaultEditorOptions, options.editorOptions, {\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            validationBoundary: options.validationBoundary,\r\n            stylingMode: formInstance && formInstance.option(\"stylingMode\")\r\n        });\r\n        this._replaceDataOptions(options.editorOptions, editorOptions);\r\n        var renderOptions = {\r\n            editorType: options.editorType,\r\n            dataField: options.dataField,\r\n            template: options.template,\r\n            name: options.name,\r\n            helpID: options.helpID,\r\n            isRequired: options.isRequired\r\n        };\r\n        this._createEditor(options.$container, renderOptions, editorOptions)\r\n    },\r\n    _replaceDataOptions: function(originalOptions, resultOptions) {\r\n        if (originalOptions) {\r\n            DATA_OPTIONS.forEach(function(item) {\r\n                if (resultOptions[item]) {\r\n                    resultOptions[item] = originalOptions[item]\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _renderValidator: function($editor, item) {\r\n        var fieldName = this._getFieldLabelName(item),\r\n            validationRules = this._prepareValidationRules(item.validationRules, item.isRequired, item.itemType, fieldName);\r\n        if (Array.isArray(validationRules) && validationRules.length) {\r\n            this._createComponent($editor, Validator, {\r\n                validationRules: validationRules,\r\n                validationGroup: this.option(\"validationGroup\")\r\n            })\r\n        }\r\n    },\r\n    _getFieldLabelName: function(item) {\r\n        var isItemHaveCustomLabel = item.label && item.label.text,\r\n            itemName = isItemHaveCustomLabel ? null : this._getName(item);\r\n        return isItemHaveCustomLabel ? item.label.text : itemName && inflector.captionize(itemName)\r\n    },\r\n    _prepareValidationRules: function(userValidationRules, isItemRequired, itemType, itemName) {\r\n        var validationRules, isSimpleItem = itemType === SIMPLE_ITEM_TYPE;\r\n        if (isSimpleItem) {\r\n            if (userValidationRules) {\r\n                validationRules = userValidationRules\r\n            } else {\r\n                var requiredMessage = stringUtils.format(this.option(\"requiredMessage\"), itemName || \"\");\r\n                validationRules = isItemRequired ? [{\r\n                    type: \"required\",\r\n                    message: requiredMessage\r\n                }] : null\r\n            }\r\n        }\r\n        return validationRules\r\n    },\r\n    _addWrapperInvalidClass: function(editorInstance) {\r\n        var wrapperClass = \".\" + FIELD_ITEM_CONTENT_WRAPPER_CLASS,\r\n            toggleInvalidClass = function(e) {\r\n                $(e.element).parents(wrapperClass).toggleClass(INVALID_CLASS, \"focusin\" === e.event.type && false === e.component.option(\"isValid\"))\r\n            };\r\n        editorInstance.on(\"focusIn\", toggleInvalidClass).on(\"focusOut\", toggleInvalidClass)\r\n    },\r\n    _createEditor: function($container, renderOptions, editorOptions) {\r\n        var editorInstance, that = this,\r\n            template = renderOptions.template;\r\n        if (renderOptions.dataField && !editorOptions.name) {\r\n            editorOptions.name = renderOptions.dataField\r\n        }\r\n        that._addItemContentClasses($container);\r\n        if (template) {\r\n            var data = {\r\n                dataField: renderOptions.dataField,\r\n                editorType: renderOptions.editorType,\r\n                editorOptions: editorOptions,\r\n                component: that._getComponentOwner()\r\n            };\r\n            template.render({\r\n                model: data,\r\n                container: domUtils.getPublicElement($container)\r\n            })\r\n        } else {\r\n            var $editor = $(\"<div>\").appendTo($container);\r\n            try {\r\n                editorInstance = that._createComponent($editor, renderOptions.editorType, editorOptions);\r\n                editorInstance.setAria(\"describedby\", renderOptions.helpID);\r\n                editorInstance.setAria(\"required\", renderOptions.isRequired);\r\n                that._registerEditorInstance(editorInstance, renderOptions);\r\n                if (themes.isMaterial()) {\r\n                    that._addWrapperInvalidClass(editorInstance)\r\n                }\r\n                if (renderOptions.dataField) {\r\n                    that._bindDataField(editorInstance, renderOptions, $container)\r\n                }\r\n            } catch (e) {\r\n                errors.log(\"E1035\", e.message)\r\n            }\r\n        }\r\n    },\r\n    _getComponentOwner: function() {\r\n        return this.option(\"form\") || this\r\n    },\r\n    _bindDataField: function(editorInstance, renderOptions, $container) {\r\n        var componentOwner = this._getComponentOwner();\r\n        editorInstance.on(\"enterKey\", function(args) {\r\n            componentOwner._createActionByOption(\"onEditorEnterKey\")(extend(args, {\r\n                dataField: renderOptions.dataField\r\n            }))\r\n        });\r\n        this._createWatcher(editorInstance, $container, renderOptions);\r\n        this.linkEditorToDataField(editorInstance, renderOptions.dataField, renderOptions.editorType)\r\n    },\r\n    _createWatcher: function(editorInstance, $container, renderOptions) {\r\n        var that = this,\r\n            watch = that._getWatch();\r\n        if (!typeUtils.isFunction(watch)) {\r\n            return\r\n        }\r\n        var dispose = watch(function() {\r\n            return that._getDataByField(renderOptions.dataField)\r\n        }, function() {\r\n            editorInstance.option(\"value\", that._getDataByField(renderOptions.dataField))\r\n        }, {\r\n            deep: true,\r\n            skipImmediate: true\r\n        });\r\n        eventsEngine.on($container, removeEvent, dispose)\r\n    },\r\n    _getWatch: function() {\r\n        if (!typeUtils.isDefined(this._watch)) {\r\n            var formInstance = this.option(\"form\");\r\n            this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\")\r\n        }\r\n        return this._watch\r\n    },\r\n    _addItemContentClasses: function($itemContent) {\r\n        var locationSpecificClass = this._getItemContentLocationSpecificClass();\r\n        $itemContent.addClass([FIELD_ITEM_CONTENT_CLASS, locationSpecificClass].join(\" \"))\r\n    },\r\n    _getItemContentLocationSpecificClass: function() {\r\n        var labelLocation = this.option(\"labelLocation\"),\r\n            oppositeClasses = {\r\n                right: \"left\",\r\n                left: \"right\",\r\n                top: \"bottom\"\r\n            };\r\n        return FIELD_ITEM_CONTENT_LOCATION_CLASS + oppositeClasses[labelLocation]\r\n    },\r\n    _registerEditorInstance: function(instance, options) {\r\n        var name = this._getName(options);\r\n        if (name) {\r\n            this._editorInstancesByField[name] = instance\r\n        }\r\n    },\r\n    _createComponent: function($editor, type, editorOptions) {\r\n        var instance, that = this,\r\n            readOnlyState = this.option(\"readOnly\");\r\n        instance = that.callBase($editor, type, editorOptions);\r\n        readOnlyState && instance.option(\"readOnly\", readOnlyState);\r\n        that.on(\"optionChanged\", function(args) {\r\n            if (\"readOnly\" === args.name && !typeUtils.isDefined(editorOptions.readOnly)) {\r\n                instance.option(args.name, args.value)\r\n            }\r\n        });\r\n        return instance\r\n    },\r\n    _getTemplateByFieldItem: function(fieldItem) {\r\n        return fieldItem.template ? this._getTemplate(fieldItem.template) : null\r\n    },\r\n    _appendEditorToField: function(params) {\r\n        if (params.$label) {\r\n            var location = params.labelOptions.location;\r\n            if (\"top\" === location || \"left\" === location) {\r\n                params.$fieldItem.append(params.$editor)\r\n            }\r\n            if (\"right\" === location) {\r\n                params.$fieldItem.prepend(params.$editor)\r\n            }\r\n            this._addInnerItemAlignmentClass(params.$fieldItem, location)\r\n        } else {\r\n            params.$fieldItem.append(params.$editor)\r\n        }\r\n    },\r\n    _addInnerItemAlignmentClass: function($fieldItem, location) {\r\n        if (\"top\" === location) {\r\n            $fieldItem.addClass(LABEL_VERTICAL_ALIGNMENT_CLASS)\r\n        } else {\r\n            $fieldItem.addClass(LABEL_HORIZONTAL_ALIGNMENT_CLASS)\r\n        }\r\n    },\r\n    _renderHelpText: function(fieldItem, $editor, helpID) {\r\n        var helpText = fieldItem.helpText,\r\n            isSimpleItem = fieldItem.itemType === SIMPLE_ITEM_TYPE;\r\n        if (helpText && isSimpleItem) {\r\n            var $editorWrapper = $(\"<div>\").addClass(FIELD_ITEM_CONTENT_WRAPPER_CLASS);\r\n            $editor.wrap($editorWrapper);\r\n            $(\"<div>\").addClass(FIELD_ITEM_HELP_TEXT_CLASS).attr(\"id\", helpID).text(helpText).appendTo($editor.parent())\r\n        }\r\n    },\r\n    _attachClickHandler: function($label, $editor, editorType) {\r\n        var isBooleanEditors = \"dxCheckBox\" === editorType || \"dxSwitch\" === editorType;\r\n        if ($label && isBooleanEditors) {\r\n            eventsEngine.on($label, clickEvent.name, function() {\r\n                eventsEngine.trigger($editor.children(), clickEvent.name)\r\n            })\r\n        }\r\n    },\r\n    _generateRatio: function(count, isAutoSize) {\r\n        var ratio, i, result = [];\r\n        for (i = 0; i < count; i++) {\r\n            ratio = {\r\n                ratio: 1\r\n            };\r\n            if (isAutoSize) {\r\n                ratio.baseSize = \"auto\"\r\n            }\r\n            result.push(ratio)\r\n        }\r\n        return result\r\n    },\r\n    _getRowsCount: function() {\r\n        return Math.ceil(this._items.length / this._getColCount())\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (0 === args.fullName.search(\"layoutData.\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n                this._cashedRequiredConfig = null;\r\n                this._invalidate();\r\n                break;\r\n            case \"layoutData\":\r\n                if (this.option(\"items\")) {\r\n                    if (!typeUtils.isEmptyObject(args.value)) {\r\n                        each(this._editorInstancesByField, function(name, editor) {\r\n                            var valueGetter = dataUtils.compileGetter(name),\r\n                                dataValue = valueGetter(args.value);\r\n                            if (void 0 === dataValue) {\r\n                                editor.reset();\r\n                                editor.option(\"isValid\", true)\r\n                            } else {\r\n                                editor.option(\"value\", dataValue)\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    this._initDataAndItems(args.value);\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"items\":\r\n                this._cleanItemWatchers();\r\n                this._initDataAndItems(args.value);\r\n                this._invalidate();\r\n                break;\r\n            case \"alignItemLabels\":\r\n            case \"labelLocation\":\r\n            case \"requiredMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"customizeItem\":\r\n                this._updateItems(this.option(\"layoutData\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"colCount\":\r\n                this._resetColCount();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _resetColCount: function() {\r\n        this._cashedColCount = null;\r\n        this._invalidate()\r\n    },\r\n    linkEditorToDataField: function(editorInstance, dataField, editorType) {\r\n        var isDataUpdating, fullFieldName = \"layoutData.\" + dataField,\r\n            that = this;\r\n        that.on(\"optionChanged\", function(args) {\r\n            if (args.fullName === fullFieldName) {\r\n                isDataUpdating = true;\r\n                if (\"object\" === _typeof(args.value)) {\r\n                    that._managedUpdateEditorOption(editorInstance, \"value\", args.value)\r\n                } else {\r\n                    editorInstance.option(\"value\", args.value)\r\n                }\r\n                isDataUpdating = false\r\n            }\r\n        });\r\n        editorInstance.on(\"valueChanged\", function(args) {\r\n            var isObjectValue = \"object\" === _typeof(args.value),\r\n                isSameObjectValue = isObjectValue && args.value === args.previousValue;\r\n            if (!isDataUpdating && !isSameObjectValue) {\r\n                if (isObjectValue) {\r\n                    that._managedUpdateFieldValue(dataField, args.value)\r\n                } else {\r\n                    that._updateFieldValue(dataField, args.value)\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _managedUpdateEditorOption: function(editorInstance, optionName, value) {\r\n        if (!this._isValueChangedCalled) {\r\n            this._isFieldValueChanged = true;\r\n            editorInstance.option(optionName, value);\r\n            this._isFieldValueChanged = false\r\n        }\r\n    },\r\n    _managedUpdateFieldValue: function(dataField, value) {\r\n        this._isValueChangedCalled = true;\r\n        if (!this._isFieldValueChanged) {\r\n            this._updateFieldValue(dataField, value)\r\n        }\r\n        this._isValueChangedCalled = false\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\r\n            this.fireEvent(\"autoColCountChanged\")\r\n        }\r\n    },\r\n    getItemID: function(name) {\r\n        var formInstance = this.option(\"form\");\r\n        return formInstance && formInstance.getItemID(name)\r\n    },\r\n    updateData: function(data, value) {\r\n        var that = this;\r\n        if (typeUtils.isObject(data)) {\r\n            each(data, function(dataField, fieldValue) {\r\n                that._updateFieldValue(dataField, fieldValue)\r\n            })\r\n        } else {\r\n            if (\"string\" === typeof data) {\r\n                that._updateFieldValue(data, value)\r\n            }\r\n        }\r\n    },\r\n    getEditor: function(field) {\r\n        return this._editorInstancesByField[field]\r\n    },\r\n    isSingleColumnMode: function(component) {\r\n        var responsiveBox = this._responsiveBox || component;\r\n        if (responsiveBox) {\r\n            return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\")\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxLayoutManager\", LayoutManager);\r\nmodule.exports = LayoutManager;\r\n\n\n/***/ }),\n\n/***/ 834:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/validation/default_adapter.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar Callbacks = __webpack_require__(21),\r\n    Class = __webpack_require__(12);\r\nvar DefaultAdapter = Class.inherit({\r\n    ctor: function(editor, validator) {\r\n        var that = this;\r\n        that.editor = editor;\r\n        that.validator = validator;\r\n        that.validationRequestsCallbacks = Callbacks();\r\n        var handler = function() {\r\n            that.validationRequestsCallbacks.fire()\r\n        };\r\n        editor.validationRequest.add(handler);\r\n        editor.on(\"disposing\", function() {\r\n            editor.validationRequest.remove(handler)\r\n        })\r\n    },\r\n    getValue: function() {\r\n        return this.editor.option(\"value\")\r\n    },\r\n    getCurrentValidationError: function() {\r\n        return this.editor.option(\"validationError\")\r\n    },\r\n    bypass: function() {\r\n        return this.editor.option(\"disabled\")\r\n    },\r\n    applyValidationResults: function(params) {\r\n        this.editor.option({\r\n            isValid: params.isValid,\r\n            validationError: params.brokenRule\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.editor.reset()\r\n    },\r\n    focus: function() {\r\n        this.editor.focus()\r\n    }\r\n});\r\nmodule.exports = DefaultAdapter;\r\n\n\n/***/ }),\n\n/***/ 835:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/responsive_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    commonUtils = __webpack_require__(6),\r\n    typeUtils = __webpack_require__(4),\r\n    errors = __webpack_require__(35),\r\n    windowUtils = __webpack_require__(9),\r\n    window = windowUtils.getWindow(),\r\n    iteratorUtils = __webpack_require__(5),\r\n    extend = __webpack_require__(3).extend,\r\n    registerComponent = __webpack_require__(16),\r\n    Box = __webpack_require__(750),\r\n    CollectionWidget = __webpack_require__(102);\r\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\",\r\n    SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\",\r\n    BOX_ITEM_CLASS = \"dx-box-item\",\r\n    BOX_ITEM_DATA_KEY = \"dxBoxItemData\",\r\n    HD_SCREEN_WIDTH = 1920;\r\nvar ResponsiveBox = CollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            rows: [],\r\n            cols: [],\r\n            screenByWidth: null,\r\n            singleColumnScreen: \"\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            onLayoutChanged: null,\r\n            currentScreenFactor: void 0,\r\n            _layoutStrategy: void 0\r\n        })\r\n    },\r\n    _init: function() {\r\n        if (!this.option(\"screenByWidth\")) {\r\n            this._options.screenByWidth = windowUtils.defaultScreenFactorFunc\r\n        }\r\n        this.callBase();\r\n        this._initLayoutChangedAction()\r\n    },\r\n    _initLayoutChangedAction: function() {\r\n        this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\r\n            excludeValidators: [\"disabled\", \"readonly\"]\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return BOX_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESPONSIVE_BOX_CLASS);\r\n        this._updateRootBox()\r\n    },\r\n    _updateRootBox: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = setTimeout(function() {\r\n            if (this._$root) {\r\n                eventsEngine.triggerHandler(this._$root, \"dxupdate\")\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _renderItems: function() {\r\n        this._setScreenSize();\r\n        this._screenItems = this._itemsByScreen();\r\n        this._prepareGrid();\r\n        this._spreadItems();\r\n        this._layoutItems();\r\n        this._linkNodeToItem()\r\n    },\r\n    _itemOptionChanged: function(item) {\r\n        var $item = this._findItemElementByItem(item);\r\n        if (!$item.length) {\r\n            return\r\n        }\r\n        this._refreshItem($item, item);\r\n        this._clearItemNodeTemplates();\r\n        this._update()\r\n    },\r\n    _setScreenSize: function() {\r\n        var currentScreen = this._getCurrentScreen();\r\n        this._removeScreenSizeClass();\r\n        this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\r\n        this.option(\"currentScreenFactor\", currentScreen)\r\n    },\r\n    _removeScreenSizeClass: function() {\r\n        var currentScreenFactor = this.option(\"currentScreenFactor\");\r\n        currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor)\r\n    },\r\n    _prepareGrid: function() {\r\n        var grid = this._grid = [];\r\n        this._prepareRowsAndCols();\r\n        iteratorUtils.each(this._rows, function() {\r\n            var row = [];\r\n            grid.push(row);\r\n            iteratorUtils.each(this._cols, function() {\r\n                row.push(this._createEmptyCell())\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    _prepareRowsAndCols: function() {\r\n        if (this._isSingleColumnScreen()) {\r\n            this._prepareSingleColumnScreenItems();\r\n            this._rows = this._defaultSizeConfig(this._screenItems.length);\r\n            this._cols = this._defaultSizeConfig(1)\r\n        } else {\r\n            this._rows = this._sizesByScreen(this.option(\"rows\"));\r\n            this._cols = this._sizesByScreen(this.option(\"cols\"))\r\n        }\r\n    },\r\n    _isSingleColumnScreen: function() {\r\n        return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length\r\n    },\r\n    _prepareSingleColumnScreenItems: function() {\r\n        this._screenItems.sort(function(item1, item2) {\r\n            return item1.location.row - item2.location.row || item1.location.col - item2.location.col\r\n        });\r\n        iteratorUtils.each(this._screenItems, function(index, item) {\r\n            extend(item.location, {\r\n                row: index,\r\n                col: 0,\r\n                rowspan: 1,\r\n                colspan: 1\r\n            })\r\n        })\r\n    },\r\n    _sizesByScreen: function(sizeConfigs) {\r\n        return iteratorUtils.map(this._filterByScreen(sizeConfigs), function(sizeConfig) {\r\n            return extend(this._defaultSizeConfig(), sizeConfig)\r\n        }.bind(this))\r\n    },\r\n    _defaultSizeConfig: function(size) {\r\n        var defaultSizeConfig = {\r\n            ratio: 1,\r\n            baseSize: 0,\r\n            minSize: 0,\r\n            maxSize: 0\r\n        };\r\n        if (!arguments.length) {\r\n            return defaultSizeConfig\r\n        }\r\n        var result = [];\r\n        for (var i = 0; i < size; i++) {\r\n            result.push(defaultSizeConfig)\r\n        }\r\n        return result\r\n    },\r\n    _filterByScreen: function(items) {\r\n        var screenRegExp = this._screenRegExp();\r\n        return commonUtils.grep(items, function(item) {\r\n            return !item.screen || screenRegExp.test(item.screen)\r\n        })\r\n    },\r\n    _screenRegExp: function() {\r\n        var screen = this._getCurrentScreen();\r\n        return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\")\r\n    },\r\n    _getCurrentScreen: function() {\r\n        var width = this._screenWidth();\r\n        return this.option(\"screenByWidth\")(width)\r\n    },\r\n    _screenWidth: function() {\r\n        return windowUtils.hasWindow() ? $(window).width() : HD_SCREEN_WIDTH\r\n    },\r\n    _createEmptyCell: function() {\r\n        return {\r\n            item: {},\r\n            location: {\r\n                colspan: 1,\r\n                rowspan: 1\r\n            }\r\n        }\r\n    },\r\n    _spreadItems: function() {\r\n        iteratorUtils.each(this._screenItems, function(_, itemInfo) {\r\n            var location = itemInfo.location || {};\r\n            var itemCol = location.col;\r\n            var itemRow = location.row;\r\n            var row = this._grid[itemRow];\r\n            var itemCell = row && row[itemCol];\r\n            this._occupyCells(itemCell, itemInfo)\r\n        }.bind(this))\r\n    },\r\n    _itemsByScreen: function() {\r\n        var _this = this;\r\n        return this.option(\"items\").reduce(function(result, item) {\r\n            var locations = item.location || {};\r\n            locations = typeUtils.isPlainObject(locations) ? [locations] : locations;\r\n            _this._filterByScreen(locations).forEach(function(location) {\r\n                result.push({\r\n                    item: item,\r\n                    location: extend({\r\n                        rowspan: 1,\r\n                        colspan: 1\r\n                    }, location)\r\n                })\r\n            });\r\n            return result\r\n        }, [])\r\n    },\r\n    _occupyCells: function(itemCell, itemInfo) {\r\n        if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\r\n            return\r\n        }\r\n        extend(itemCell, itemInfo);\r\n        this._markSpanningCell(itemCell)\r\n    },\r\n    _isItemCellOccupied: function(itemCell, itemInfo) {\r\n        if (!typeUtils.isEmptyObject(itemCell.item)) {\r\n            return true\r\n        }\r\n        var result = false;\r\n        this._loopOverSpanning(itemInfo.location, function(cell) {\r\n            result = result || !typeUtils.isEmptyObject(cell.item)\r\n        });\r\n        return result\r\n    },\r\n    _loopOverSpanning: function(location, callback) {\r\n        var rowEnd = location.row + location.rowspan - 1;\r\n        var colEnd = location.col + location.colspan - 1;\r\n        var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\r\n        var boundColEnd = Math.min(colEnd, this._cols.length - 1);\r\n        location.rowspan -= rowEnd - boundRowEnd;\r\n        location.colspan -= colEnd - boundColEnd;\r\n        for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\r\n            for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\r\n                if (rowIndex !== location.row || colIndex !== location.col) {\r\n                    callback(this._grid[rowIndex][colIndex])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _markSpanningCell: function(itemCell) {\r\n        this._loopOverSpanning(itemCell.location, function(cell) {\r\n            extend(cell, {\r\n                item: itemCell.item,\r\n                spanningCell: itemCell\r\n            })\r\n        })\r\n    },\r\n    _linkNodeToItem: function() {\r\n        iteratorUtils.each(this._itemElements(), function(_, itemNode) {\r\n            var $item = $(itemNode),\r\n                item = $item.data(BOX_ITEM_DATA_KEY);\r\n            if (!item.box) {\r\n                item.node = $item.children()\r\n            }\r\n        })\r\n    },\r\n    _layoutItems: function() {\r\n        var rowsCount = this._grid.length;\r\n        var colsCount = rowsCount && this._grid[0].length;\r\n        if (!rowsCount && !colsCount) {\r\n            return\r\n        }\r\n        var result = this._layoutBlock({\r\n            direction: \"col\",\r\n            row: {\r\n                start: 0,\r\n                end: rowsCount - 1\r\n            },\r\n            col: {\r\n                start: 0,\r\n                end: colsCount - 1\r\n            }\r\n        });\r\n        var rootBox = this._prepareBoxConfig(result.box || {\r\n            direction: \"row\",\r\n            items: [extend(result, {\r\n                ratio: 1\r\n            })]\r\n        });\r\n        extend(rootBox, this._rootBoxConfig(rootBox.items));\r\n        this._$root = $(\"<div>\").appendTo(this._itemContainer());\r\n        this._createComponent(this._$root, Box, rootBox)\r\n    },\r\n    _rootBoxConfig: function(items) {\r\n        var rootItems = iteratorUtils.each(items, function(index, item) {\r\n            this._needApplyAutoBaseSize(item) && extend(item, {\r\n                baseSize: \"auto\"\r\n            })\r\n        }.bind(this));\r\n        return extend({\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            items: rootItems,\r\n            itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onItemHold: this._createActionByOption(\"onItemHold\"),\r\n            onItemClick: this._createActionByOption(\"onItemClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\r\n            onItemRendered: this._createActionByOption(\"onItemRendered\")\r\n        }, {\r\n            _layoutStrategy: this.option(\"_layoutStrategy\")\r\n        })\r\n    },\r\n    _needApplyAutoBaseSize: function(item) {\r\n        return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize)\r\n    },\r\n    _prepareBoxConfig: function(config) {\r\n        return extend(config || {}, {\r\n            crossAlign: \"stretch\",\r\n            onItemStateChanged: this.option(\"onItemStateChanged\")\r\n        })\r\n    },\r\n    _layoutBlock: function(options) {\r\n        if (this._isSingleItem(options)) {\r\n            return this._itemByCell(options.row.start, options.col.start)\r\n        }\r\n        return this._layoutDirection(options)\r\n    },\r\n    _isSingleItem: function(options) {\r\n        var firstCellLocation = this._grid[options.row.start][options.col.start].location;\r\n        var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\r\n        var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\r\n        return isItemRowSpanned && isItemColSpanned\r\n    },\r\n    _itemByCell: function(rowIndex, colIndex) {\r\n        var itemCell = this._grid[rowIndex][colIndex];\r\n        return itemCell.spanningCell ? null : itemCell.item\r\n    },\r\n    _layoutDirection: function(options) {\r\n        var items = [];\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var block;\r\n        while (block = this._nextBlock(options)) {\r\n            if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\r\n                throw errors.Error(\"E1025\")\r\n            }\r\n            var item = this._layoutBlock({\r\n                direction: crossDirection,\r\n                row: block.row,\r\n                col: block.col,\r\n                prevBlockOptions: options\r\n            });\r\n            if (item) {\r\n                extend(item, this._blockSize(block, crossDirection));\r\n                items.push(item)\r\n            }\r\n            options[crossDirection].start = block[crossDirection].end + 1\r\n        }\r\n        return {\r\n            box: this._prepareBoxConfig({\r\n                direction: direction,\r\n                items: items\r\n            })\r\n        }\r\n    },\r\n    _isBlockIndivisible: function(options, block) {\r\n        return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end\r\n    },\r\n    _crossDirection: function(direction) {\r\n        return \"col\" === direction ? \"row\" : \"col\"\r\n    },\r\n    _nextBlock: function(options) {\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var startIndex = options[direction].start;\r\n        var endIndex = options[direction].end;\r\n        var crossStartIndex = options[crossDirection].start;\r\n        if (crossStartIndex > options[crossDirection].end) {\r\n            return null\r\n        }\r\n        var crossSpan = 1;\r\n        for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\r\n            var lineCrossSpan = 1;\r\n            for (var index = startIndex; index <= endIndex; index++) {\r\n                var cell = this._cellByDirection(direction, index, crossIndex);\r\n                lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"])\r\n            }\r\n            var lineCrossEndIndex = crossIndex + lineCrossSpan;\r\n            var crossEndIndex = crossStartIndex + crossSpan;\r\n            if (lineCrossEndIndex > crossEndIndex) {\r\n                crossSpan += lineCrossEndIndex - crossEndIndex\r\n            }\r\n        }\r\n        var result = {};\r\n        result[direction] = {\r\n            start: startIndex,\r\n            end: endIndex\r\n        };\r\n        result[crossDirection] = {\r\n            start: crossStartIndex,\r\n            end: crossStartIndex + crossSpan - 1\r\n        };\r\n        return result\r\n    },\r\n    _cellByDirection: function(direction, index, crossIndex) {\r\n        return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex]\r\n    },\r\n    _blockSize: function(block, direction) {\r\n        var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\r\n        var result = {\r\n            ratio: 0,\r\n            baseSize: 0,\r\n            minSize: 0,\r\n            maxSize: 0\r\n        };\r\n        for (var index = block[direction].start; index <= block[direction].end; index++) {\r\n            var sizeConfig = sizeConfigs[index];\r\n            result.ratio += sizeConfig.ratio;\r\n            result.baseSize += sizeConfig.baseSize;\r\n            result.minSize += sizeConfig.minSize;\r\n            result.maxSize += sizeConfig.maxSize\r\n        }\r\n        result.minSize = result.minSize ? result.minSize : \"auto\";\r\n        result.maxSize = result.maxSize ? result.maxSize : \"auto\";\r\n        this._isSingleColumnScreen() && (result.baseSize = \"auto\");\r\n        return result\r\n    },\r\n    _update: function() {\r\n        var $existingRoot = this._$root;\r\n        this._renderItems();\r\n        $existingRoot && $existingRoot.detach();\r\n        this._saveAssistantRoot($existingRoot);\r\n        this._layoutChangedAction();\r\n        this._updateRootBox()\r\n    },\r\n    _saveAssistantRoot: function($root) {\r\n        this._assistantRoots = this._assistantRoots || [];\r\n        this._assistantRoots.push($root)\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._clearItemNodeTemplates();\r\n        this._cleanUnusedRoots();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _cleanUnusedRoots: function() {\r\n        if (!this._assistantRoots) {\r\n            return\r\n        }\r\n        iteratorUtils.each(this._assistantRoots, function(_, item) {\r\n            $(item).remove()\r\n        })\r\n    },\r\n    _clearItemNodeTemplates: function() {\r\n        iteratorUtils.each(this.option(\"items\"), function() {\r\n            delete this.node\r\n        })\r\n    },\r\n    _toggleVisibility: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._updateRootBox()\r\n        }\r\n    },\r\n    _attachClickEvent: commonUtils.noop,\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"rows\":\r\n            case \"cols\":\r\n            case \"screenByWidth\":\r\n            case \"_layoutStrategy\":\r\n            case \"singleColumnScreen\":\r\n                this._clearItemNodeTemplates();\r\n                this._invalidate();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._update();\r\n                break;\r\n            case \"onLayoutChanged\":\r\n                this._initLayoutChangedAction();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._clearItemNodeTemplates();\r\n                this.callBase(args);\r\n                break;\r\n            case \"currentScreenFactor\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\r\n            this._update()\r\n        }\r\n    },\r\n    repaint: function() {\r\n        this._update()\r\n    }\r\n});\r\nregisterComponent(\"dxResponsiveBox\", ResponsiveBox);\r\nmodule.exports = ResponsiveBox;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 836:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/tab_panel.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    support = __webpack_require__(51),\r\n    extend = __webpack_require__(3).extend,\r\n    devices = __webpack_require__(14),\r\n    registerComponent = __webpack_require__(16),\r\n    MultiView = __webpack_require__(837),\r\n    Tabs = __webpack_require__(838),\r\n    iconUtils = __webpack_require__(81),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    BindableTemplate = __webpack_require__(61),\r\n    windowUtils = __webpack_require__(9);\r\nvar TABPANEL_CLASS = \"dx-tabpanel\",\r\n    TABPANEL_TABS_CLASS = \"dx-tabpanel-tabs\",\r\n    TABPANEL_CONTAINER_CLASS = \"dx-tabpanel-container\",\r\n    TABS_ITEM_TEXT_CLASS = \"dx-tab-text\";\r\nvar TabPanel = MultiView.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            itemTitleTemplate: \"title\",\r\n            hoverStateEnabled: true,\r\n            showNavButtons: false,\r\n            scrollByContent: true,\r\n            scrollingEnabled: true,\r\n            onTitleClick: null,\r\n            onTitleHold: null,\r\n            onTitleRendered: null\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return !support.touch\r\n            },\r\n            options: {\r\n                swipeEnabled: false\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                animationEnabled: false\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TABPANEL_CLASS);\r\n        this.setAria(\"role\", \"tabpanel\")\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._createTitleActions();\r\n        this._renderLayout()\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.title = new BindableTemplate(function($container, data) {\r\n            $container.text(data.title || String(data));\r\n            var $iconElement = iconUtils.getImageContainer(data.icon);\r\n            $container.wrapInner($(\"<span>\").addClass(TABS_ITEM_TEXT_CLASS));\r\n            $iconElement && $iconElement.prependTo($container)\r\n        }, [\"title\", \"html\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\r\n    },\r\n    _createTitleActions: function() {\r\n        this._createTitleClickAction();\r\n        this._createTitleHoldAction();\r\n        this._createTitleRenderedAction()\r\n    },\r\n    _createTitleClickAction: function() {\r\n        this._titleClickAction = this._createActionByOption(\"onTitleClick\")\r\n    },\r\n    _createTitleHoldAction: function() {\r\n        this._titleHoldAction = this._createActionByOption(\"onTitleHold\")\r\n    },\r\n    _createTitleRenderedAction: function() {\r\n        this._titleRenderedAction = this._createActionByOption(\"onTitleRendered\")\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        if (this.option(\"templatesRenderAsynchronously\")) {\r\n            this._resizeEventTimer = setTimeout(function() {\r\n                that._updateLayout()\r\n            }, 0)\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        if (this._tabs) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        this._$tabContainer = $(\"<div>\").addClass(TABPANEL_TABS_CLASS).appendTo($element);\r\n        var $tabs = $(\"<div>\").appendTo(this._$tabContainer);\r\n        this._tabs = this._createComponent($tabs, Tabs, this._tabConfig());\r\n        this._$container = $(\"<div>\").addClass(TABPANEL_CONTAINER_CLASS).appendTo($element);\r\n        this._$container.append(this._$wrapper);\r\n        this._updateLayout()\r\n    },\r\n    _updateLayout: function() {\r\n        if (windowUtils.hasWindow()) {\r\n            var tabsHeight = this._$tabContainer.outerHeight();\r\n            this._$container.css({\r\n                marginTop: -tabsHeight,\r\n                paddingTop: tabsHeight\r\n            })\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function() {\r\n        if (!this._tabs) {\r\n            return\r\n        }\r\n        var tabs = this._tabs,\r\n            tabItems = tabs.itemElements(),\r\n            $activeTab = $(tabItems[tabs.option(\"selectedIndex\")]),\r\n            id = this.getFocusedItemId();\r\n        this.setAria(\"controls\", void 0, $(tabItems));\r\n        this.setAria(\"controls\", id, $activeTab)\r\n    },\r\n    _tabConfig: function() {\r\n        return {\r\n            selectOnFocus: true,\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            repaintChangesOnly: this.option(\"repaintChangesOnly\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            selectedIndex: this.option(\"selectedIndex\"),\r\n            onItemClick: this._titleClickAction.bind(this),\r\n            onItemHold: this._titleHoldAction.bind(this),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onSelectionChanged: function(e) {\r\n                this.option(\"selectedIndex\", e.component.option(\"selectedIndex\"));\r\n                this._refreshActiveDescendant()\r\n            }.bind(this),\r\n            onItemRendered: this._titleRenderedAction.bind(this),\r\n            itemTemplate: this._getTemplateByOption(\"itemTitleTemplate\"),\r\n            items: this.option(\"items\"),\r\n            noDataText: null,\r\n            scrollingEnabled: this.option(\"scrollingEnabled\"),\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            showNavButtons: this.option(\"showNavButtons\"),\r\n            itemTemplateProperty: \"tabTemplate\",\r\n            loopItemFocus: this.option(\"loop\"),\r\n            selectionRequired: true,\r\n            onOptionChanged: function(args) {\r\n                if (\"focusedElement\" === args.name) {\r\n                    if (args.value) {\r\n                        var $value = $(args.value);\r\n                        var $newItem = this._itemElements().eq($value.index());\r\n                        this.option(\"focusedElement\", getPublicElement($newItem))\r\n                    } else {\r\n                        this.option(\"focusedElement\", args.value)\r\n                    }\r\n                }\r\n            }.bind(this),\r\n            onFocusIn: function(args) {\r\n                this._focusInHandler(args.event)\r\n            }.bind(this),\r\n            onFocusOut: function(args) {\r\n                this._focusOutHandler(args.event)\r\n            }.bind(this)\r\n        }\r\n    },\r\n    _renderFocusTarget: function() {\r\n        this._focusTarget().attr(\"tabIndex\", -1);\r\n        this._refreshActiveDescendant()\r\n    },\r\n    _updateFocusState: function(e, isFocused) {\r\n        this.callBase(e, isFocused);\r\n        if (e.target === this._tabs._focusTarget().get(0)) {\r\n            this._toggleFocusClass(isFocused, this._focusTarget())\r\n        }\r\n    },\r\n    _setTabsOption: function(name, value) {\r\n        if (this._tabs) {\r\n            this._tabs.option(name, value)\r\n        }\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._tabs._dimensionChanged();\r\n            this._updateLayout()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name,\r\n            value = args.value,\r\n            fullName = args.fullName;\r\n        switch (name) {\r\n            case \"dataSource\":\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._setTabsOption(fullName, value);\r\n                this._updateLayout();\r\n                if (!this.option(\"repaintChangesOnly\")) {\r\n                    this._tabs.repaint()\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"selectedIndex\":\r\n            case \"selectedItem\":\r\n            case \"itemHoldTimeout\":\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setTabsOption(fullName, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"scrollingEnabled\":\r\n            case \"scrollByContent\":\r\n            case \"showNavButtons\":\r\n                this._setTabsOption(fullName, value);\r\n                break;\r\n            case \"focusedElement\":\r\n                var id = value ? $(value).index() : value;\r\n                var newItem = value ? this._tabs._itemElements().eq(id) : value;\r\n                this._setTabsOption(\"focusedElement\", getPublicElement(newItem));\r\n                this.callBase(args);\r\n                break;\r\n            case \"itemTitleTemplate\":\r\n                this._setTabsOption(\"itemTemplate\", this._getTemplateByOption(\"itemTitleTemplate\"));\r\n                break;\r\n            case \"onTitleClick\":\r\n                this._createTitleClickAction();\r\n                this._setTabsOption(\"onItemClick\", this._titleClickAction.bind(this));\r\n                break;\r\n            case \"onTitleHold\":\r\n                this._createTitleHoldAction();\r\n                this._setTabsOption(\"onItemHold\", this._titleHoldAction.bind(this));\r\n                break;\r\n            case \"onTitleRendered\":\r\n                this._createTitleRenderedAction();\r\n                this._setTabsOption(\"onItemRendered\", this._titleRenderedAction.bind(this));\r\n                break;\r\n            case \"loop\":\r\n                this._setTabsOption(\"loopItemFocus\", value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        clearTimeout(this._resizeEventTimer);\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxTabPanel\", TabPanel);\r\nmodule.exports = TabPanel;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 837:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/multi_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    fx = __webpack_require__(32),\r\n    translator = __webpack_require__(19),\r\n    mathUtils = __webpack_require__(60),\r\n    extend = __webpack_require__(3).extend,\r\n    noop = __webpack_require__(6).noop,\r\n    domUtils = __webpack_require__(13),\r\n    isDefined = __webpack_require__(4).isDefined,\r\n    devices = __webpack_require__(14),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    registerComponent = __webpack_require__(16),\r\n    CollectionWidget = __webpack_require__(209).default,\r\n    Swipeable = __webpack_require__(341),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar MULTIVIEW_CLASS = \"dx-multiview\",\r\n    MULTIVIEW_WRAPPER_CLASS = \"dx-multiview-wrapper\",\r\n    MULTIVIEW_ITEM_CONTAINER_CLASS = \"dx-multiview-item-container\",\r\n    MULTIVIEW_ITEM_CLASS = \"dx-multiview-item\",\r\n    MULTIVIEW_ITEM_HIDDEN_CLASS = \"dx-multiview-item-hidden\",\r\n    MULTIVIEW_ITEM_DATA_KEY = \"dxMultiViewItemData\",\r\n    MULTIVIEW_ANIMATION_DURATION = 200;\r\nvar toNumber = function(value) {\r\n    return +value\r\n};\r\nvar position = function($element) {\r\n    return translator.locate($element).left\r\n};\r\nvar move = function($element, position) {\r\n    translator.move($element, {\r\n        left: position\r\n    })\r\n};\r\nvar animation = {\r\n    moveTo: function($element, position, duration, completeAction) {\r\n        fx.animate($element, {\r\n            type: \"slide\",\r\n            to: {\r\n                left: position\r\n            },\r\n            duration: duration,\r\n            complete: completeAction\r\n        })\r\n    },\r\n    complete: function($element) {\r\n        fx.stop($element, true)\r\n    }\r\n};\r\nvar MultiView = CollectionWidget.inherit({\r\n    _activeStateUnit: \".\" + MULTIVIEW_ITEM_CLASS,\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            pageUp: noop,\r\n            pageDown: noop\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            selectedIndex: 0,\r\n            swipeEnabled: true,\r\n            animationEnabled: true,\r\n            loop: false,\r\n            deferRendering: true,\r\n            _itemAttributes: {\r\n                role: \"tabpanel\"\r\n            },\r\n            loopItemFocus: false,\r\n            selectOnFocus: true,\r\n            selectionMode: \"single\",\r\n            selectionRequired: true,\r\n            selectionByClick: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _itemClass: function() {\r\n        return MULTIVIEW_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return MULTIVIEW_ITEM_DATA_KEY\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$itemContainer\r\n    },\r\n    _itemElements: function() {\r\n        return this._itemContainer().children(this._itemSelector())\r\n    },\r\n    _itemWidth: function() {\r\n        if (!this._itemWidthValue) {\r\n            this._itemWidthValue = this._$wrapper.width()\r\n        }\r\n        return this._itemWidthValue\r\n    },\r\n    _clearItemWidthCache: function() {\r\n        delete this._itemWidthValue\r\n    },\r\n    _itemsCount: function() {\r\n        return this.option(\"items\").length\r\n    },\r\n    _normalizeIndex: function(index) {\r\n        var count = this._itemsCount();\r\n        if (index < 0) {\r\n            index += count\r\n        }\r\n        if (index >= count) {\r\n            index -= count\r\n        }\r\n        return index\r\n    },\r\n    _getRTLSignCorrection: function() {\r\n        return this.option(\"rtlEnabled\") ? -1 : 1\r\n    },\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var $element = this.$element();\r\n        $element.addClass(MULTIVIEW_CLASS);\r\n        this._$wrapper = $(\"<div>\").addClass(MULTIVIEW_WRAPPER_CLASS);\r\n        this._$wrapper.appendTo($element);\r\n        this._$itemContainer = $(\"<div>\").addClass(MULTIVIEW_ITEM_CONTAINER_CLASS);\r\n        this._$itemContainer.appendTo(this._$wrapper);\r\n        this.option(\"loopItemFocus\", this.option(\"loop\"));\r\n        this._initSwipeable()\r\n    },\r\n    _initMarkup: function() {\r\n        this._deferredItems = [];\r\n        this.callBase()\r\n    },\r\n    _renderItemContent: function(args) {\r\n        var renderContentDeferred = new Deferred;\r\n        var that = this,\r\n            callBase = this.callBase;\r\n        var deferred = new Deferred;\r\n        deferred.done(function() {\r\n            var $itemContent = callBase.call(that, args);\r\n            renderContentDeferred.resolve($itemContent)\r\n        });\r\n        this._deferredItems[args.index] = deferred;\r\n        this.option(\"deferRendering\") || deferred.resolve();\r\n        return renderContentDeferred.promise()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var selectedItemIndices = this._getSelectedItemIndices();\r\n        this._updateItemsPosition(selectedItemIndices[0]);\r\n        this._updateItemsVisibility(selectedItemIndices[0])\r\n    },\r\n    _renderSelection: function(addedSelection) {\r\n        this._updateItemsVisibility(addedSelection[0])\r\n    },\r\n    _updateItems: function(selectedIndex, newIndex) {\r\n        this._updateItemsPosition(selectedIndex, newIndex);\r\n        this._updateItemsVisibility(selectedIndex, newIndex)\r\n    },\r\n    _updateItemsPosition: function(selectedIndex, newIndex) {\r\n        var $itemElements = this._itemElements(),\r\n            positionSign = -this._animationDirection(newIndex, selectedIndex),\r\n            $selectedItem = $itemElements.eq(selectedIndex);\r\n        move($selectedItem, 0);\r\n        move($itemElements.eq(newIndex), 100 * positionSign + \"%\")\r\n    },\r\n    _updateItemsVisibility: function(selectedIndex, newIndex) {\r\n        var $itemElements = this._itemElements();\r\n        $itemElements.each(function(itemIndex, item) {\r\n            var $item = $(item),\r\n                isHidden = itemIndex !== selectedIndex && itemIndex !== newIndex;\r\n            if (!isHidden) {\r\n                this._renderSpecificItem(itemIndex)\r\n            }\r\n            $item.toggleClass(MULTIVIEW_ITEM_HIDDEN_CLASS, isHidden);\r\n            this.setAria(\"hidden\", isHidden || void 0, $item)\r\n        }.bind(this))\r\n    },\r\n    _renderSpecificItem: function(index) {\r\n        var $item = this._itemElements().eq(index),\r\n            hasItemContent = $item.find(this._itemContentClass()).length > 0;\r\n        if (isDefined(index) && !hasItemContent) {\r\n            this._deferredItems[index].resolve();\r\n            domUtils.triggerResizeEvent($item)\r\n        }\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        this.callBase($item, item);\r\n        this._updateItemsVisibility(this.option(\"selectedIndex\"))\r\n    },\r\n    _setAriaSelected: noop,\r\n    _updateSelection: function(addedSelection, removedSelection) {\r\n        var newIndex = addedSelection[0],\r\n            prevIndex = removedSelection[0];\r\n        animation.complete(this._$itemContainer);\r\n        this._updateItems(prevIndex, newIndex);\r\n        var animationDirection = this._animationDirection(newIndex, prevIndex);\r\n        this._animateItemContainer(animationDirection * this._itemWidth(), function() {\r\n            move(this._$itemContainer, 0);\r\n            this._updateItems(newIndex);\r\n            this._$itemContainer.width()\r\n        }.bind(this))\r\n    },\r\n    _animateItemContainer: function(position, completeCallback) {\r\n        var duration = this.option(\"animationEnabled\") ? MULTIVIEW_ANIMATION_DURATION : 0;\r\n        animation.moveTo(this._$itemContainer, position, duration, completeCallback)\r\n    },\r\n    _animationDirection: function(newIndex, prevIndex) {\r\n        var containerPosition = position(this._$itemContainer),\r\n            indexDifference = (prevIndex - newIndex) * this._getRTLSignCorrection() * this._getItemFocusLoopSignCorrection(),\r\n            isSwipePresent = 0 !== containerPosition,\r\n            directionSignVariable = isSwipePresent ? containerPosition : indexDifference;\r\n        return mathUtils.sign(directionSignVariable)\r\n    },\r\n    _initSwipeable: function() {\r\n        this._createComponent(this.$element(), Swipeable, {\r\n            disabled: !this.option(\"swipeEnabled\"),\r\n            elastic: false,\r\n            itemSizeFunc: this._itemWidth.bind(this),\r\n            onStart: function(args) {\r\n                this._swipeStartHandler(args.event)\r\n            }.bind(this),\r\n            onUpdated: function(args) {\r\n                this._swipeUpdateHandler(args.event)\r\n            }.bind(this),\r\n            onEnd: function(args) {\r\n                this._swipeEndHandler(args.event)\r\n            }.bind(this)\r\n        })\r\n    },\r\n    _swipeStartHandler: function(e) {\r\n        animation.complete(this._$itemContainer);\r\n        var selectedIndex = this.option(\"selectedIndex\"),\r\n            loop = this.option(\"loop\"),\r\n            lastIndex = this._itemsCount() - 1,\r\n            rtl = this.option(\"rtlEnabled\");\r\n        e.maxLeftOffset = toNumber(loop || (rtl ? selectedIndex > 0 : selectedIndex < lastIndex));\r\n        e.maxRightOffset = toNumber(loop || (rtl ? selectedIndex < lastIndex : selectedIndex > 0));\r\n        this._swipeDirection = null\r\n    },\r\n    _swipeUpdateHandler: function(e) {\r\n        var offset = e.offset,\r\n            swipeDirection = mathUtils.sign(offset) * this._getRTLSignCorrection();\r\n        move(this._$itemContainer, offset * this._itemWidth());\r\n        if (swipeDirection !== this._swipeDirection) {\r\n            this._swipeDirection = swipeDirection;\r\n            var selectedIndex = this.option(\"selectedIndex\"),\r\n                newIndex = this._normalizeIndex(selectedIndex - swipeDirection);\r\n            this._updateItems(selectedIndex, newIndex)\r\n        }\r\n    },\r\n    _swipeEndHandler: function(e) {\r\n        var targetOffset = e.targetOffset * this._getRTLSignCorrection();\r\n        if (targetOffset) {\r\n            this.option(\"selectedIndex\", this._normalizeIndex(this.option(\"selectedIndex\") - targetOffset));\r\n            var $selectedElement = this.itemElements().filter(\".dx-item-selected\");\r\n            this.option(\"focusStateEnabled\") && this.option(\"focusedElement\", getPublicElement($selectedElement))\r\n        } else {\r\n            this._animateItemContainer(0, noop)\r\n        }\r\n    },\r\n    _getItemFocusLoopSignCorrection: function() {\r\n        return this._itemFocusLooped ? -1 : 1\r\n    },\r\n    _moveFocus: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = false\r\n    },\r\n    _prevItem: function($items) {\r\n        var $result = this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = $result.is($items.last());\r\n        return $result\r\n    },\r\n    _nextItem: function($items) {\r\n        var $result = this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = $result.is($items.first());\r\n        return $result\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._clearItemWidthCache()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"loop\":\r\n                this.option(\"loopItemFocus\", value);\r\n                break;\r\n            case \"animationEnabled\":\r\n                break;\r\n            case \"swipeEnabled\":\r\n                Swipeable.getInstance(this.$element()).option(\"disabled\", !value);\r\n                break;\r\n            case \"deferRendering\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxMultiView\", MultiView);\r\nmodule.exports = MultiView;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 838:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/tabs.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    devices = __webpack_require__(14),\r\n    registerComponent = __webpack_require__(16),\r\n    Button = __webpack_require__(42),\r\n    inkRipple = __webpack_require__(100),\r\n    eventUtils = __webpack_require__(8),\r\n    extend = __webpack_require__(3).extend,\r\n    isPlainObject = __webpack_require__(4).isPlainObject,\r\n    pointerEvents = __webpack_require__(31),\r\n    TabsItem = __webpack_require__(839),\r\n    themes = __webpack_require__(22),\r\n    holdEvent = __webpack_require__(203),\r\n    Scrollable = __webpack_require__(141),\r\n    CollectionWidget = __webpack_require__(209).default,\r\n    iconUtils = __webpack_require__(81),\r\n    BindableTemplate = __webpack_require__(61);\r\nvar TABS_CLASS = \"dx-tabs\",\r\n    TABS_WRAPPER_CLASS = \"dx-tabs-wrapper\",\r\n    TABS_EXPANDED_CLASS = \"dx-tabs-expanded\",\r\n    TABS_SCROLLABLE_CLASS = \"dx-tabs-scrollable\",\r\n    TABS_NAV_BUTTONS_CLASS = \"dx-tabs-nav-buttons\",\r\n    OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\",\r\n    TABS_ITEM_CLASS = \"dx-tab\",\r\n    TABS_ITEM_SELECTED_CLASS = \"dx-tab-selected\",\r\n    TABS_NAV_BUTTON_CLASS = \"dx-tabs-nav-button\",\r\n    TABS_LEFT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-left\",\r\n    TABS_RIGHT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-right\",\r\n    TABS_ITEM_TEXT_CLASS = \"dx-tab-text\",\r\n    TABS_ITEM_DATA_KEY = \"dxTabData\",\r\n    BUTTON_NEXT_ICON = \"chevronnext\",\r\n    BUTTON_PREV_ICON = \"chevronprev\",\r\n    FEEDBACK_HIDE_TIMEOUT = 100,\r\n    FEEDBACK_DURATION_INTERVAL = 5,\r\n    FEEDBACK_SCROLL_TIMEOUT = 300,\r\n    TAB_OFFSET = 30;\r\nvar Tabs = CollectionWidget.inherit({\r\n    _activeStateUnit: \".\" + TABS_ITEM_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            showNavButtons: true,\r\n            scrollByContent: true,\r\n            scrollingEnabled: true,\r\n            selectionMode: \"single\",\r\n            activeStateEnabled: true,\r\n            selectionRequired: false,\r\n            selectOnFocus: true,\r\n            loopItemFocus: false,\r\n            useInkRipple: false,\r\n            badgeExpr: function(data) {\r\n                return data ? data.badge : void 0\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = themes.current();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"generic\" !== devices.real().platform\r\n            },\r\n            options: {\r\n                showNavButtons: false\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                scrollByContent: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isAndroid5(themeName)\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isMaterial(themeName)\r\n            },\r\n            options: {\r\n                useInkRipple: true,\r\n                selectOnFocus: false\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.setAria(\"role\", \"tablist\");\r\n        this.$element().addClass(TABS_CLASS);\r\n        this._renderWrapper();\r\n        this._renderMultiple();\r\n        this._feedbackHideTimeout = FEEDBACK_HIDE_TIMEOUT\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.item = new BindableTemplate(function($container, data) {\r\n            if (isPlainObject(data)) {\r\n                this._prepareDefaultItemTemplate(data, $container)\r\n            } else {\r\n                $container.text(String(data))\r\n            }\r\n            var $iconElement = iconUtils.getImageContainer(data.icon);\r\n            $container.wrapInner($(\"<span>\").addClass(TABS_ITEM_TEXT_CLASS));\r\n            $iconElement && $iconElement.prependTo($container)\r\n        }.bind(this), [\"text\", \"html\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\r\n    },\r\n    _itemClass: function() {\r\n        return TABS_ITEM_CLASS\r\n    },\r\n    _selectedItemClass: function() {\r\n        return TABS_ITEM_SELECTED_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return TABS_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.setAria(\"role\", \"tab\", this.itemElements());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.$element().addClass(OVERFLOW_HIDDEN_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderScrolling()\r\n    },\r\n    _renderScrolling: function() {\r\n        this.$element().removeClass(TABS_EXPANDED_CLASS);\r\n        this.$element().removeClass(OVERFLOW_HIDDEN_CLASS);\r\n        if (this._allowScrolling()) {\r\n            if (!this._scrollable) {\r\n                this._renderScrollable();\r\n                this._renderNavButtons()\r\n            }\r\n            this._scrollable.update();\r\n            this._updateNavButtonsVisibility();\r\n            if (this.option(\"rtlEnabled\")) {\r\n                this._scrollable.scrollTo({\r\n                    left: this._scrollable.scrollWidth() - this._scrollable.clientWidth()\r\n                })\r\n            }\r\n            this._scrollToItem(this.option(\"selectedItem\"))\r\n        }\r\n        if (!this._allowScrolling()) {\r\n            this._cleanScrolling();\r\n            this.$element().removeClass(TABS_NAV_BUTTONS_CLASS).addClass(TABS_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _cleanNavButtons: function() {\r\n        if (!this._leftButton || !this._rightButton) {\r\n            return\r\n        }\r\n        this._leftButton.$element().remove();\r\n        this._rightButton.$element().remove();\r\n        this._leftButton = null;\r\n        this._rightButton = null\r\n    },\r\n    _cleanScrolling: function() {\r\n        if (!this._scrollable) {\r\n            return\r\n        }\r\n        this._$wrapper.appendTo(this.$element());\r\n        this._scrollable.$element().remove();\r\n        this._scrollable = null;\r\n        this._cleanNavButtons()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _renderMultiple: function() {\r\n        if (\"multiple\" === this.option(\"selectionMode\")) {\r\n            this.option(\"selectOnFocus\", false)\r\n        }\r\n    },\r\n    _renderWrapper: function() {\r\n        this._$wrapper = $(\"<div>\").addClass(TABS_WRAPPER_CLASS);\r\n        this.$element().append(this._$wrapper)\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$wrapper\r\n    },\r\n    _renderScrollable: function() {\r\n        var $itemContainer = this.$element().wrapInner($(\"<div>\").addClass(TABS_SCROLLABLE_CLASS)).children();\r\n        this._scrollable = this._createComponent($itemContainer, Scrollable, {\r\n            direction: \"horizontal\",\r\n            showScrollbar: false,\r\n            useKeyboard: false,\r\n            useNative: false,\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            onScroll: this._updateNavButtonsVisibility.bind(this)\r\n        });\r\n        this.$element().append(this._scrollable.$element())\r\n    },\r\n    _scrollToItem: function(itemData) {\r\n        if (!this._scrollable) {\r\n            return\r\n        }\r\n        var $item = this._editStrategy.getItemElement(itemData);\r\n        this._scrollable.scrollToElement($item)\r\n    },\r\n    _allowScrolling: function() {\r\n        if (!this.option(\"scrollingEnabled\")) {\r\n            return false\r\n        }\r\n        var tabItemsWidth = this._getSummaryItemsWidth(this._getAvailableItems(), true);\r\n        return tabItemsWidth - 1 > this.$element().width()\r\n    },\r\n    _renderNavButtons: function() {\r\n        this.$element().toggleClass(TABS_NAV_BUTTONS_CLASS, this.option(\"showNavButtons\"));\r\n        if (!this.option(\"showNavButtons\")) {\r\n            return\r\n        }\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this._leftButton = this._createNavButton(-TAB_OFFSET, rtlEnabled ? BUTTON_NEXT_ICON : BUTTON_PREV_ICON);\r\n        var $leftButton = this._leftButton.$element();\r\n        $leftButton.addClass(TABS_LEFT_NAV_BUTTON_CLASS);\r\n        this.$element().prepend($leftButton);\r\n        this._rightButton = this._createNavButton(TAB_OFFSET, rtlEnabled ? BUTTON_PREV_ICON : BUTTON_NEXT_ICON);\r\n        var $rightButton = this._rightButton.$element();\r\n        $rightButton.addClass(TABS_RIGHT_NAV_BUTTON_CLASS);\r\n        this.$element().append($rightButton)\r\n    },\r\n    _updateNavButtonsVisibility: function() {\r\n        this._leftButton && this._leftButton.option(\"disabled\", this._scrollable.scrollLeft() <= 0);\r\n        this._rightButton && this._rightButton.option(\"disabled\", this._scrollable.scrollLeft() >= Math.round(this._scrollable.scrollWidth() - this._scrollable.clientWidth()))\r\n    },\r\n    _updateScrollPosition: function(offset, duration) {\r\n        this._scrollable.update();\r\n        this._scrollable.scrollBy(offset / duration)\r\n    },\r\n    _createNavButton: function(offset, icon) {\r\n        var that = this;\r\n        var holdAction = that._createAction(function() {\r\n                that._holdInterval = setInterval(function() {\r\n                    that._updateScrollPosition(offset, FEEDBACK_DURATION_INTERVAL)\r\n                }, FEEDBACK_DURATION_INTERVAL)\r\n            }),\r\n            holdEventName = eventUtils.addNamespace(holdEvent.name, \"dxNavButton\"),\r\n            pointerUpEventName = eventUtils.addNamespace(pointerEvents.up, \"dxNavButton\"),\r\n            pointerOutEventName = eventUtils.addNamespace(pointerEvents.out, \"dxNavButton\");\r\n        var navButton = this._createComponent($(\"<div>\").addClass(TABS_NAV_BUTTON_CLASS), Button, {\r\n            focusStateEnabled: false,\r\n            icon: icon,\r\n            onClick: function() {\r\n                that._updateScrollPosition(offset, 1)\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $navButton = navButton.$element();\r\n        eventsEngine.on($navButton, holdEventName, {\r\n            timeout: FEEDBACK_SCROLL_TIMEOUT\r\n        }, function(e) {\r\n            holdAction({\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        eventsEngine.on($navButton, pointerUpEventName, function() {\r\n            that._clearInterval()\r\n        });\r\n        eventsEngine.on($navButton, pointerOutEventName, function() {\r\n            that._clearInterval()\r\n        });\r\n        return navButton\r\n    },\r\n    _clearInterval: function() {\r\n        if (this._holdInterval) {\r\n            clearInterval(this._holdInterval)\r\n        }\r\n    },\r\n    _renderSelection: function(addedSelection) {\r\n        this._scrollable && this._scrollable.scrollToElement(this.itemElements().eq(addedSelection[0]), {\r\n            left: 1,\r\n            right: 1\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this.option(\"scrollingEnabled\")) {\r\n            this._renderScrolling()\r\n        }\r\n    },\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _clean: function() {\r\n        this._cleanScrolling();\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useInkRipple\":\r\n            case \"scrollingEnabled\":\r\n            case \"showNavButtons\":\r\n                this._invalidate();\r\n                break;\r\n            case \"scrollByContent\":\r\n                this._scrollable && this._scrollable.option(args.name, args.value);\r\n                break;\r\n            case \"selectionMode\":\r\n                this._renderMultiple();\r\n                this.callBase(args);\r\n                break;\r\n            case \"badgeExpr\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nTabs.ItemClass = TabsItem;\r\nregisterComponent(\"dxTabs\", Tabs);\r\nmodule.exports = Tabs;\r\nmodule.exports.getTabsExpandedClass = TABS_EXPANDED_CLASS;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 839:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/tabs/item.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    CollectionWidgetItem = __webpack_require__(205);\r\nvar TABS_ITEM_BADGE_CLASS = \"dx-tabs-item-badge\",\r\n    BADGE_CLASS = \"dx-badge\";\r\nvar TabsItem = CollectionWidgetItem.inherit({\r\n    _renderWatchers: function() {\r\n        this.callBase();\r\n        this._startWatcher(\"badge\", this._renderBadge.bind(this))\r\n    },\r\n    _renderBadge: function(badge) {\r\n        this._$element.children(\".\" + BADGE_CLASS).remove();\r\n        if (!badge) {\r\n            return\r\n        }\r\n        var $badge = $(\"<div>\").addClass(TABS_ITEM_BADGE_CLASS).addClass(BADGE_CLASS).text(badge);\r\n        this._$element.append($badge)\r\n    }\r\n});\r\nmodule.exports = TabsItem;\r\n\n\n/***/ }),\n\n/***/ 840:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/validation_group.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    registerComponent = __webpack_require__(16),\r\n    DOMComponent = __webpack_require__(104),\r\n    ValidationSummary = __webpack_require__(806),\r\n    ValidationEngine = __webpack_require__(340),\r\n    Validator = __webpack_require__(778);\r\nvar VALIDATION_ENGINE_CLASS = \"dx-validationgroup\";\r\nvar ValidationGroup = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return this.callBase()\r\n    },\r\n    _init: function() {\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        var $element = this.$element();\r\n        $element.addClass(VALIDATION_ENGINE_CLASS);\r\n        $element.find(\".dx-validator\").each(function(_, validatorContainer) {\r\n            Validator.getInstance($(validatorContainer))._initGroupRegistration()\r\n        });\r\n        $element.find(\".dx-validationsummary\").each(function(_, summaryContainer) {\r\n            ValidationSummary.getInstance($(summaryContainer))._initGroupRegistration()\r\n        });\r\n        this.callBase()\r\n    },\r\n    validate: function() {\r\n        return ValidationEngine.validateGroup(this)\r\n    },\r\n    reset: function() {\r\n        return ValidationEngine.resetGroup(this)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        ValidationEngine.removeGroup(this);\r\n        this.$element().removeClass(VALIDATION_ENGINE_CLASS);\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxValidationGroup\", ValidationGroup);\r\nmodule.exports = ValidationGroup;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 863:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar form_1 = __webpack_require__(818);\nvar prop_types_1 = __webpack_require__(36);\nvar component_1 = __webpack_require__(39);\nvar nested_option_1 = __webpack_require__(80);\nvar Form = /** @class */ (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = form_1.default;\n        _this._defaults = {\n            defaultFormData: \"formData\"\n        };\n        return _this;\n    }\n    Object.defineProperty(Form.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Form;\n}(component_1.Component));\nexports.Form = Form;\nForm.propTypes = {\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    alignItemLabels: prop_types_1.PropTypes.bool,\n    alignItemLabelsInAllGroups: prop_types_1.PropTypes.bool,\n    colCount: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.oneOf([\n            \"auto\"\n        ])\n    ]),\n    colCountByScreen: prop_types_1.PropTypes.object,\n    customizeItem: prop_types_1.PropTypes.func,\n    disabled: prop_types_1.PropTypes.bool,\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    formData: prop_types_1.PropTypes.object,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    items: prop_types_1.PropTypes.array,\n    labelLocation: prop_types_1.PropTypes.oneOf([\n        \"left\",\n        \"right\",\n        \"top\"\n    ]),\n    minColWidth: prop_types_1.PropTypes.number,\n    onContentReady: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onEditorEnterKey: prop_types_1.PropTypes.func,\n    onFieldDataChanged: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    optionalMark: prop_types_1.PropTypes.string,\n    readOnly: prop_types_1.PropTypes.bool,\n    requiredMark: prop_types_1.PropTypes.string,\n    requiredMessage: prop_types_1.PropTypes.string,\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    screenByWidth: prop_types_1.PropTypes.func,\n    scrollingEnabled: prop_types_1.PropTypes.bool,\n    showColonAfterLabel: prop_types_1.PropTypes.bool,\n    showOptionalMark: prop_types_1.PropTypes.bool,\n    showRequiredMark: prop_types_1.PropTypes.bool,\n    showValidationSummary: prop_types_1.PropTypes.bool,\n    tabIndex: prop_types_1.PropTypes.number,\n    validationGroup: prop_types_1.PropTypes.string,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Form\nvar ButtonItem = /** @class */ (function (_super) {\n    __extends(ButtonItem, _super);\n    function ButtonItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ButtonItem.OptionName = \"items\";\n    ButtonItem.IsCollectionItem = true;\n    ButtonItem.PredefinedProps = {\n        itemType: \"button\"\n    };\n    return ButtonItem;\n}(nested_option_1.default));\nexports.ButtonItem = ButtonItem;\n// owners:\n// ButtonItem\nvar ButtonOptions = /** @class */ (function (_super) {\n    __extends(ButtonOptions, _super);\n    function ButtonOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ButtonOptions.OptionName = \"buttonOptions\";\n    ButtonOptions.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    return ButtonOptions;\n}(nested_option_1.default));\nexports.ButtonOptions = ButtonOptions;\n// owners:\n// Form\nvar ColCountByScreen = /** @class */ (function (_super) {\n    __extends(ColCountByScreen, _super);\n    function ColCountByScreen() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColCountByScreen.OptionName = \"colCountByScreen\";\n    return ColCountByScreen;\n}(nested_option_1.default));\nexports.ColCountByScreen = ColCountByScreen;\n// owners:\n// SimpleItem\nvar CompareRule = /** @class */ (function (_super) {\n    __extends(CompareRule, _super);\n    function CompareRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CompareRule.OptionName = \"validationRules\";\n    CompareRule.IsCollectionItem = true;\n    CompareRule.PredefinedProps = {\n        type: \"compare\"\n    };\n    return CompareRule;\n}(nested_option_1.default));\nexports.CompareRule = CompareRule;\n// owners:\n// SimpleItem\nvar CustomRule = /** @class */ (function (_super) {\n    __extends(CustomRule, _super);\n    function CustomRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CustomRule.OptionName = \"validationRules\";\n    CustomRule.IsCollectionItem = true;\n    CustomRule.PredefinedProps = {\n        type: \"custom\"\n    };\n    return CustomRule;\n}(nested_option_1.default));\nexports.CustomRule = CustomRule;\n// owners:\n// SimpleItem\nvar EmailRule = /** @class */ (function (_super) {\n    __extends(EmailRule, _super);\n    function EmailRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmailRule.OptionName = \"validationRules\";\n    EmailRule.IsCollectionItem = true;\n    EmailRule.PredefinedProps = {\n        type: \"email\"\n    };\n    return EmailRule;\n}(nested_option_1.default));\nexports.EmailRule = EmailRule;\n// owners:\n// Form\nvar EmptyItem = /** @class */ (function (_super) {\n    __extends(EmptyItem, _super);\n    function EmptyItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmptyItem.OptionName = \"items\";\n    EmptyItem.IsCollectionItem = true;\n    EmptyItem.PredefinedProps = {\n        itemType: \"empty\"\n    };\n    return EmptyItem;\n}(nested_option_1.default));\nexports.EmptyItem = EmptyItem;\n// owners:\n// Form\nvar GroupItem = /** @class */ (function (_super) {\n    __extends(GroupItem, _super);\n    function GroupItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GroupItem.OptionName = \"items\";\n    GroupItem.IsCollectionItem = true;\n    GroupItem.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    GroupItem.PredefinedProps = {\n        itemType: \"group\"\n    };\n    return GroupItem;\n}(nested_option_1.default));\nexports.GroupItem = GroupItem;\n// owners:\n// Form\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Item.OptionName = \"items\";\n    Item.IsCollectionItem = true;\n    Item.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    Item.PredefinedProps = {\n        itemType: \"simple\"\n    };\n    return Item;\n}(nested_option_1.default));\nexports.Item = Item;\n// owners:\n// SimpleItem\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Label.OptionName = \"label\";\n    return Label;\n}(nested_option_1.default));\nexports.Label = Label;\n// owners:\n// SimpleItem\nvar NumericRule = /** @class */ (function (_super) {\n    __extends(NumericRule, _super);\n    function NumericRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericRule.OptionName = \"validationRules\";\n    NumericRule.IsCollectionItem = true;\n    NumericRule.PredefinedProps = {\n        type: \"numeric\"\n    };\n    return NumericRule;\n}(nested_option_1.default));\nexports.NumericRule = NumericRule;\n// owners:\n// SimpleItem\nvar PatternRule = /** @class */ (function (_super) {\n    __extends(PatternRule, _super);\n    function PatternRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PatternRule.OptionName = \"validationRules\";\n    PatternRule.IsCollectionItem = true;\n    PatternRule.PredefinedProps = {\n        type: \"pattern\"\n    };\n    return PatternRule;\n}(nested_option_1.default));\nexports.PatternRule = PatternRule;\n// owners:\n// SimpleItem\nvar RangeRule = /** @class */ (function (_super) {\n    __extends(RangeRule, _super);\n    function RangeRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RangeRule.OptionName = \"validationRules\";\n    RangeRule.IsCollectionItem = true;\n    RangeRule.PredefinedProps = {\n        type: \"range\"\n    };\n    return RangeRule;\n}(nested_option_1.default));\nexports.RangeRule = RangeRule;\n// owners:\n// SimpleItem\nvar RequiredRule = /** @class */ (function (_super) {\n    __extends(RequiredRule, _super);\n    function RequiredRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RequiredRule.OptionName = \"validationRules\";\n    RequiredRule.IsCollectionItem = true;\n    RequiredRule.PredefinedProps = {\n        type: \"required\"\n    };\n    return RequiredRule;\n}(nested_option_1.default));\nexports.RequiredRule = RequiredRule;\n// owners:\n// Form\nvar SimpleItem = /** @class */ (function (_super) {\n    __extends(SimpleItem, _super);\n    function SimpleItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SimpleItem.OptionName = \"items\";\n    SimpleItem.IsCollectionItem = true;\n    SimpleItem.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    SimpleItem.PredefinedProps = {\n        itemType: \"simple\"\n    };\n    return SimpleItem;\n}(nested_option_1.default));\nexports.SimpleItem = SimpleItem;\n// owners:\n// SimpleItem\nvar StringLengthRule = /** @class */ (function (_super) {\n    __extends(StringLengthRule, _super);\n    function StringLengthRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StringLengthRule.OptionName = \"validationRules\";\n    StringLengthRule.IsCollectionItem = true;\n    StringLengthRule.PredefinedProps = {\n        type: \"stringLength\"\n    };\n    return StringLengthRule;\n}(nested_option_1.default));\nexports.StringLengthRule = StringLengthRule;\n// owners:\n// TabbedItem\nvar Tab = /** @class */ (function (_super) {\n    __extends(Tab, _super);\n    function Tab() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Tab.OptionName = \"tabs\";\n    Tab.IsCollectionItem = true;\n    Tab.TemplateProps = [{\n            tmplOption: \"tabTemplate\",\n            render: \"tabRender\",\n            component: \"tabComponent\"\n        }, {\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    return Tab;\n}(nested_option_1.default));\nexports.Tab = Tab;\n// owners:\n// Form\nvar TabbedItem = /** @class */ (function (_super) {\n    __extends(TabbedItem, _super);\n    function TabbedItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TabbedItem.OptionName = \"items\";\n    TabbedItem.IsCollectionItem = true;\n    TabbedItem.PredefinedProps = {\n        itemType: \"tabbed\"\n    };\n    return TabbedItem;\n}(nested_option_1.default));\nexports.TabbedItem = TabbedItem;\n// owners:\n// TabbedItem\nvar TabPanelOptions = /** @class */ (function (_super) {\n    __extends(TabPanelOptions, _super);\n    function TabPanelOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TabPanelOptions.OptionName = \"tabPanelOptions\";\n    TabPanelOptions.DefaultsProps = {\n        defaultItems: \"items\",\n        defaultSelectedIndex: \"selectedIndex\",\n        defaultSelectedItem: \"selectedItem\",\n        defaultSelectedItemKeys: \"selectedItemKeys\",\n        defaultSelectedItems: \"selectedItems\"\n    };\n    TabPanelOptions.TemplateProps = [{\n            tmplOption: \"itemTemplate\",\n            render: \"itemRender\",\n            component: \"itemComponent\"\n        }, {\n            tmplOption: \"itemTitleTemplate\",\n            render: \"itemTitleRender\",\n            component: \"itemTitleComponent\"\n        }];\n    return TabPanelOptions;\n}(nested_option_1.default));\nexports.TabPanelOptions = TabPanelOptions;\n// owners:\n// SimpleItem\nvar ValidationRule = /** @class */ (function (_super) {\n    __extends(ValidationRule, _super);\n    function ValidationRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ValidationRule.OptionName = \"validationRules\";\n    ValidationRule.IsCollectionItem = true;\n    ValidationRule.PredefinedProps = {\n        type: \"required\"\n    };\n    return ValidationRule;\n}(nested_option_1.default));\nexports.ValidationRule = ValidationRule;\nexports.default = Form;\n\n\n/***/ }),\n\n/***/ 969:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-vue/form' file instead */\n__export(__webpack_require__(863));\nvar form_1 = __webpack_require__(863);\nexports.default = form_1.default;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.chunk.js","/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\nimport * as tslib_1 from \"tslib\";\nimport { Template } from \"devextreme-react/core/template\";\nimport { Form } from \"devextreme-react/ui/form\";\nimport * as React from \"react\";\nimport getDevice, { getDeviceValue } from \"../utils/device\";\nimport AppPlayerComponent from \"./app-player-component\";\nimport { createWithStyleComponent } from \"./with-style\";\nimport { ThemeScope } from \"./theme-scope\";\nimport { createSelector } from \"reselect\";\n//#endregion\nvar defaultLabelLocations = { desktop: \"left\", tablet: \"left\", phone: \"top\" }, WithStyle = createWithStyleComponent({\n    main: {\n        flexDirection: \"column\"\n    }\n});\nvar ReactForm = /** @class */ (function (_super) {\n    tslib_1.__extends(ReactForm, _super);\n    function ReactForm() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.itemsSelector = createSelector([\n            function () { return getDevice(); },\n            function (args) { return args.items; }\n        ], function (deviceType, items) {\n            var originalItems = {}, formItems = ReactForm.mapItems(items, deviceType, originalItems);\n            return {\n                originalItems: originalItems,\n                items: formItems\n            };\n        });\n        _this.colCountSelector = createSelector([\n            function (args) { return args.colCount; }\n        ], function (colCount) { return getDeviceValue(colCount); });\n        _this.labelLocationSelector = createSelector([\n            function () { return getDevice(); },\n            function (args) { return args.labelLocation; }\n        ], function (deviceType, labelLocation) { return getDeviceValue(labelLocation) || defaultLabelLocations[deviceType]; });\n        return _this;\n    }\n    ReactForm.prototype.render = function () {\n        var form = tslib_1.__assign({}, this.props, this.itemsSelector(this.props), { labelLocation: this.labelLocationSelector(this.props), colCount: this.colCountSelector(this.props) });\n        return (React.createElement(ThemeScope.Provider, { value: \"form\" },\n            React.createElement(WithStyle, { className: form.className }, function (_a) {\n                var main = _a.main;\n                return (React.createElement(Form, tslib_1.__assign({}, form, { className: main }),\n                    React.createElement(Template, { name: \"item\", component: ReactForm.componentTemplate(form.originalItems) })));\n            })));\n    };\n    ReactForm.mapItems = function (items, deviceType, originalItemsMap) {\n        var result = items.map(function (item) {\n            if ((item.itemType === \"group\") || (item[\"items\"]) && !item[\"type\"]) {\n                return tslib_1.__assign({}, item, { items: ReactForm.mapItems(item.items, deviceType, originalItemsMap) });\n            }\n            else if ((item.itemType === \"tabbed\") && item.tabs) {\n                return tslib_1.__assign({}, item, { tabs: ReactForm.mapItems(item.tabs, deviceType, originalItemsMap) });\n            }\n            else {\n                var originalItemKey = Object.keys(originalItemsMap).length;\n                originalItemsMap[originalItemKey] = item;\n                return {\n                    label: {\n                        text: item.title,\n                    },\n                    template: \"item\",\n                    editorOptions: tslib_1.__assign({}, item, { originalItemKey: originalItemKey }),\n                    visible: item.visible\n                };\n            }\n        });\n        return result;\n    };\n    ReactForm.defaultProps = { items: [] };\n    ReactForm.componentTemplate = function (originalItemsMap) { return function (item) {\n        return (React.createElement(AppPlayerComponent, tslib_1.__assign({}, originalItemsMap[item.editorOptions.originalItemKey])));\n    }; };\n    return ReactForm;\n}(React.Component));\nexport { ReactForm };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./additional_modules/app-player-react/dist/widgets/form-widget.js\n// module id = 715\n// module chunks = 3","/**\r\n * DevExtreme (localization/date.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar dependencyInjector = require(\"../core/utils/dependency_injector\"),\r\n    isString = require(\"../core/utils/type\").isString,\r\n    iteratorUtils = require(\"../core/utils/iterator\"),\r\n    inArray = require(\"../core/utils/array\").inArray,\r\n    getLDMLDateFormatter = require(\"./ldml/date.formatter\").getFormatter,\r\n    getLDMLDateFormat = require(\"./ldml/date.format\").getFormat,\r\n    getLDMLDateParser = require(\"./ldml/date.parser\").getParser,\r\n    defaultDateNames = require(\"./default_date_names\"),\r\n    numberLocalization = require(\"./number\"),\r\n    errors = require(\"../core/errors\");\r\nrequire(\"./core\");\r\nvar FORMATS_TO_PATTERN_MAP = {\r\n    shortdate: \"M/d/y\",\r\n    shorttime: \"h:mm a\",\r\n    longdate: \"EEEE, MMMM d, y\",\r\n    longtime: \"h:mm:ss a\",\r\n    monthandday: \"MMMM d\",\r\n    monthandyear: \"MMMM y\",\r\n    quarterandyear: \"QQQ y\",\r\n    day: \"d\",\r\n    year: \"y\",\r\n    shortdateshorttime: \"M/d/y, h:mm a\",\r\n    mediumdatemediumtime: \"MMMM d, h:mm a\",\r\n    longdatelongtime: \"EEEE, MMMM d, y, h:mm:ss a\",\r\n    month: \"LLLL\",\r\n    shortyear: \"yy\",\r\n    dayofweek: \"EEEE\",\r\n    quarter: \"QQQ\",\r\n    hour: \"HH\",\r\n    minute: \"mm\",\r\n    second: \"ss\",\r\n    millisecond: \"SSS\",\r\n    \"datetime-local\": \"yyyy-MM-ddTHH':'mm':'ss\"\r\n};\r\nvar possiblePartPatterns = {\r\n    year: [\"y\", \"yy\", \"yyyy\"],\r\n    day: [\"d\", \"dd\"],\r\n    month: [\"M\", \"MM\", \"MMM\", \"MMMM\"],\r\n    hours: [\"H\", \"HH\", \"h\", \"hh\", \"ah\"],\r\n    minutes: [\"m\", \"mm\"],\r\n    seconds: [\"s\", \"ss\"],\r\n    milliseconds: [\"S\", \"SS\", \"SSS\"]\r\n};\r\nvar dateLocalization = dependencyInjector({\r\n    _getPatternByFormat: function(format) {\r\n        return FORMATS_TO_PATTERN_MAP[format.toLowerCase()]\r\n    },\r\n    _expandPattern: function(pattern) {\r\n        return this._getPatternByFormat(pattern) || pattern\r\n    },\r\n    formatUsesMonthName: function(format) {\r\n        return this._expandPattern(format).indexOf(\"MMMM\") !== -1\r\n    },\r\n    formatUsesDayName: function(format) {\r\n        return this._expandPattern(format).indexOf(\"EEEE\") !== -1\r\n    },\r\n    getFormatParts: function(format) {\r\n        var pattern = this._getPatternByFormat(format) || format,\r\n            result = [];\r\n        iteratorUtils.each(pattern.split(/\\W+/), function(_, formatPart) {\r\n            iteratorUtils.each(possiblePartPatterns, function(partName, possiblePatterns) {\r\n                if (inArray(formatPart, possiblePatterns) > -1) {\r\n                    result.push(partName)\r\n                }\r\n            })\r\n        });\r\n        return result\r\n    },\r\n    getMonthNames: function(format) {\r\n        return defaultDateNames.getMonthNames(format)\r\n    },\r\n    getDayNames: function(format) {\r\n        return defaultDateNames.getDayNames(format)\r\n    },\r\n    getQuarterNames: function(format) {\r\n        return defaultDateNames.getQuarterNames(format)\r\n    },\r\n    getPeriodNames: function(format) {\r\n        return defaultDateNames.getPeriodNames(format)\r\n    },\r\n    getTimeSeparator: function() {\r\n        return \":\"\r\n    },\r\n    is24HourFormat: function(format) {\r\n        var amTime = new Date(2017, 0, 20, 11, 0, 0, 0),\r\n            pmTime = new Date(2017, 0, 20, 23, 0, 0, 0),\r\n            amTimeFormatted = this.format(amTime, format),\r\n            pmTimeFormatted = this.format(pmTime, format);\r\n        for (var i = 0; i < amTimeFormatted.length; i++) {\r\n            if (amTimeFormatted[i] !== pmTimeFormatted[i]) {\r\n                return !isNaN(parseInt(amTimeFormatted[i]))\r\n            }\r\n        }\r\n    },\r\n    format: function(date, _format) {\r\n        if (!date) {\r\n            return\r\n        }\r\n        if (!_format) {\r\n            return date\r\n        }\r\n        var formatter;\r\n        if (\"function\" === typeof _format) {\r\n            formatter = _format\r\n        } else {\r\n            if (_format.formatter) {\r\n                formatter = _format.formatter\r\n            } else {\r\n                _format = _format.type || _format;\r\n                if (isString(_format)) {\r\n                    _format = FORMATS_TO_PATTERN_MAP[_format.toLowerCase()] || _format;\r\n                    return numberLocalization.convertDigits(getLDMLDateFormatter(_format, this)(date))\r\n                }\r\n            }\r\n        }\r\n        if (!formatter) {\r\n            return\r\n        }\r\n        return formatter(date)\r\n    },\r\n    parse: function(text, format) {\r\n        var result, ldmlFormat, formatter, that = this;\r\n        if (!text) {\r\n            return\r\n        }\r\n        if (!format) {\r\n            return this.parse(text, \"shortdate\")\r\n        }\r\n        if (format.parser) {\r\n            return format.parser(text)\r\n        }\r\n        if (\"string\" === typeof format && !FORMATS_TO_PATTERN_MAP[format.toLowerCase()]) {\r\n            ldmlFormat = format\r\n        } else {\r\n            formatter = function(value) {\r\n                var text = that.format(value, format);\r\n                return numberLocalization.convertDigits(text, true)\r\n            };\r\n            try {\r\n                ldmlFormat = getLDMLDateFormat(formatter)\r\n            } catch (e) {}\r\n        }\r\n        if (ldmlFormat) {\r\n            text = numberLocalization.convertDigits(text, true);\r\n            return getLDMLDateParser(ldmlFormat, this)(text)\r\n        }\r\n        errors.log(\"W0012\");\r\n        result = new Date(text);\r\n        if (!result || isNaN(result.getTime())) {\r\n            return\r\n        }\r\n        return result\r\n    },\r\n    firstDayOfWeekIndex: function() {\r\n        return 0\r\n    }\r\n});\r\nmodule.exports = dateLocalization;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/localization/date.js\n// module id = 732\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_utils.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = require(\"../../core/renderer\"),\r\n    dateSerialization = require(\"../../core/utils/date_serialization\"),\r\n    isDate = require(\"../../core/utils/type\").isDate,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    dateLocalization = require(\"../../localization/date\");\r\nvar dateComponents = function() {\r\n    return [\"year\", \"day\", \"month\", \"day\"]\r\n};\r\nvar ONE_MINUTE = 6e4;\r\nvar ONE_DAY = 60 * ONE_MINUTE * 24;\r\nvar ONE_YEAR = 365 * ONE_DAY;\r\nvar getStringFormat = function(format) {\r\n    var formatType = \"undefined\" === typeof format ? \"undefined\" : _typeof(format);\r\n    if (\"string\" === formatType) {\r\n        return \"format\"\r\n    }\r\n    if (\"object\" === formatType && void 0 !== format.type) {\r\n        return format.type\r\n    }\r\n    return null\r\n};\r\nvar dateUtils = {\r\n    SUPPORTED_FORMATS: [\"date\", \"time\", \"datetime\"],\r\n    DATE_COMPONENT_TEXT_FORMATTER: function(value, name) {\r\n        var $container = $(\"<div>\").addClass(\"dx-dateview-formatter-container\");\r\n        $(\"<span>\").text(value).addClass(\"dx-dateview-value-formatter\").appendTo($container);\r\n        $(\"<span>\").text(name).addClass(\"dx-dateview-name-formatter\").appendTo($container);\r\n        return $container\r\n    },\r\n    ONE_MINUTE: ONE_MINUTE,\r\n    ONE_DAY: ONE_DAY,\r\n    ONE_YEAR: ONE_YEAR,\r\n    MIN_DATEVIEW_DEFAULT_DATE: new Date(1900, 0, 1),\r\n    MAX_DATEVIEW_DEFAULT_DATE: function() {\r\n        var newDate = new Date;\r\n        return new Date(newDate.getFullYear() + 50, newDate.getMonth(), newDate.getDate(), 23, 59, 59)\r\n    }(),\r\n    FORMATS_INFO: {\r\n        date: {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-dd\"\r\n            },\r\n            components: dateComponents()\r\n        },\r\n        time: {\r\n            getStandardPattern: function() {\r\n                return \"HH:mm\"\r\n            },\r\n            components: [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"]\r\n        },\r\n        datetime: {\r\n            getStandardPattern: function() {\r\n                var standardPattern;\r\n                ! function() {\r\n                    var androidFormatPattern = \"yyyy-MM-ddTHH:mmZ\",\r\n                        testDateString = \"2000-01-01T01:01Z\";\r\n                    var $input = $(\"<input>\").attr(\"type\", \"datetime\");\r\n                    $input.val(testDateString);\r\n                    if ($input.val()) {\r\n                        standardPattern = androidFormatPattern\r\n                    }\r\n                }();\r\n                if (!standardPattern) {\r\n                    standardPattern = \"yyyy-MM-ddTHH:mm:ssZ\"\r\n                }\r\n                dateUtils.FORMATS_INFO.datetime.getStandardPattern = function() {\r\n                    return standardPattern\r\n                };\r\n                return standardPattern\r\n            },\r\n            components: dateComponents().concat([\"hours\", \"minutes\", \"seconds\", \"milliseconds\"])\r\n        },\r\n        \"datetime-local\": {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-ddTHH:mm:ss\"\r\n            },\r\n            components: dateComponents().concat([\"hours\", \"minutes\", \"seconds\"])\r\n        }\r\n    },\r\n    FORMATS_MAP: {\r\n        date: \"shortdate\",\r\n        time: \"shorttime\",\r\n        datetime: \"shortdateshorttime\"\r\n    },\r\n    SUBMIT_FORMATS_MAP: {\r\n        date: \"date\",\r\n        time: \"time\",\r\n        datetime: \"datetime-local\"\r\n    },\r\n    toStandardDateFormat: function(date, type) {\r\n        var pattern = dateUtils.FORMATS_INFO[type].getStandardPattern();\r\n        return dateSerialization.serializeDate(date, pattern)\r\n    },\r\n    fromStandardDateFormat: function(text) {\r\n        var date = dateSerialization.dateParser(text);\r\n        return isDate(date) ? date : void 0\r\n    },\r\n    getMaxMonthDay: function(year, month) {\r\n        return new Date(year, month + 1, 0).getDate()\r\n    },\r\n    mergeDates: function(oldValue, newValue, format) {\r\n        if (!newValue) {\r\n            return newValue || null\r\n        }\r\n        if (!oldValue || isNaN(oldValue.getTime())) {\r\n            var now = new Date(null);\r\n            oldValue = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n        }\r\n        var result = new Date(oldValue.valueOf());\r\n        var formatInfo = dateUtils.FORMATS_INFO[format];\r\n        each(formatInfo.components, function() {\r\n            var componentInfo = dateUtils.DATE_COMPONENTS_INFO[this];\r\n            result[componentInfo.setter](newValue[componentInfo.getter]())\r\n        });\r\n        return result\r\n    },\r\n    getLongestCaptionIndex: function(captionArray) {\r\n        var i, longestIndex = 0,\r\n            longestCaptionLength = 0;\r\n        for (i = 0; i < captionArray.length; ++i) {\r\n            if (captionArray[i].length > longestCaptionLength) {\r\n                longestIndex = i;\r\n                longestCaptionLength = captionArray[i].length\r\n            }\r\n        }\r\n        return longestIndex\r\n    },\r\n    formatUsesMonthName: function(format) {\r\n        return dateLocalization.formatUsesMonthName(format)\r\n    },\r\n    formatUsesDayName: function(format) {\r\n        return dateLocalization.formatUsesDayName(format)\r\n    },\r\n    getLongestDate: function(format, monthNames, dayNames) {\r\n        var stringFormat = getStringFormat(format),\r\n            month = 9;\r\n        if (!stringFormat || dateUtils.formatUsesMonthName(stringFormat)) {\r\n            month = dateUtils.getLongestCaptionIndex(monthNames)\r\n        }\r\n        var longestDate = new Date(1888, month, 21, 23, 59, 59, 999);\r\n        if (!stringFormat || dateUtils.formatUsesDayName(stringFormat)) {\r\n            var date = longestDate.getDate() - longestDate.getDay() + dateUtils.getLongestCaptionIndex(dayNames);\r\n            longestDate.setDate(date)\r\n        }\r\n        return longestDate\r\n    },\r\n    normalizeTime: function(date) {\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0)\r\n    }\r\n};\r\ndateUtils.DATE_COMPONENTS_INFO = {\r\n    year: {\r\n        getter: \"getFullYear\",\r\n        setter: \"setFullYear\",\r\n        formatter: function(value, showNames, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setFullYear(value);\r\n            return dateLocalization.format(formatDate, \"yyyy\")\r\n        },\r\n        startValue: void 0,\r\n        endValue: void 0\r\n    },\r\n    day: {\r\n        getter: \"getDate\",\r\n        setter: \"setDate\",\r\n        formatter: function(value, showNames, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setDate(value);\r\n            if (!showNames) {\r\n                return dateLocalization.format(formatDate, \"d\")\r\n            }\r\n            return dateUtils.DATE_COMPONENT_TEXT_FORMATTER(value, dateLocalization.getDayNames()[formatDate.getDay()])\r\n        },\r\n        startValue: 1,\r\n        endValue: void 0\r\n    },\r\n    month: {\r\n        getter: \"getMonth\",\r\n        setter: \"setMonth\",\r\n        formatter: function(value, showNames) {\r\n            var monthName = dateLocalization.getMonthNames()[value];\r\n            return showNames ? dateUtils.DATE_COMPONENT_TEXT_FORMATTER(value + 1, monthName) : monthName\r\n        },\r\n        startValue: 0,\r\n        endValue: 11\r\n    },\r\n    hours: {\r\n        getter: \"getHours\",\r\n        setter: \"setHours\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, value), \"hour\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 23\r\n    },\r\n    minutes: {\r\n        getter: \"getMinutes\",\r\n        setter: \"setMinutes\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, value), \"minute\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    seconds: {\r\n        getter: \"getSeconds\",\r\n        setter: \"setSeconds\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, 0, value), \"second\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    milliseconds: {\r\n        getter: \"getMilliseconds\",\r\n        setter: \"setMilliseconds\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, 0, 0, value), \"millisecond\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 999\r\n    }\r\n};\r\nmodule.exports = dateUtils;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_utils.js\n// module id = 734\n// module chunks = 1 3 4","/**\r\n * DevExtreme (core/utils/date.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar typeUtils = require(\"./type\"),\r\n    adjust = require(\"./math\").adjust,\r\n    each = require(\"./iterator\").each,\r\n    camelize = require(\"./inflector\").camelize,\r\n    isObject = typeUtils.isObject,\r\n    isString = typeUtils.isString,\r\n    isDate = typeUtils.isDate,\r\n    isDefined = typeUtils.isDefined;\r\nvar dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"];\r\nvar toMilliseconds = function toMilliseconds(value) {\r\n    switch (value) {\r\n        case \"millisecond\":\r\n            return 1;\r\n        case \"second\":\r\n            return 1e3 * toMilliseconds(\"millisecond\");\r\n        case \"minute\":\r\n            return 60 * toMilliseconds(\"second\");\r\n        case \"hour\":\r\n            return 60 * toMilliseconds(\"minute\");\r\n        case \"day\":\r\n            return 24 * toMilliseconds(\"hour\");\r\n        case \"week\":\r\n            return 7 * toMilliseconds(\"day\");\r\n        case \"month\":\r\n            return 30 * toMilliseconds(\"day\");\r\n        case \"quarter\":\r\n            return 3 * toMilliseconds(\"month\");\r\n        case \"year\":\r\n            return 365 * toMilliseconds(\"day\");\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar getDatesInterval = function(startDate, endDate, intervalUnit) {\r\n    var delta = endDate.getTime() - startDate.getTime(),\r\n        millisecondCount = toMilliseconds(intervalUnit) || 1;\r\n    return Math.floor(delta / millisecondCount)\r\n};\r\nvar getNextDateUnit = function(unit, withWeeks) {\r\n    var interval = getDateUnitInterval(unit);\r\n    switch (interval) {\r\n        case \"millisecond\":\r\n            return \"second\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"day\":\r\n            return withWeeks ? \"week\" : \"month\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"month\":\r\n            return \"quarter\";\r\n        case \"quarter\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"year\";\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar convertMillisecondsToDateUnits = function(value) {\r\n    var i, dateUnitCount, dateUnitInterval, dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\"],\r\n        result = {};\r\n    for (i = dateUnitIntervals.length - 1; i >= 0; i--) {\r\n        dateUnitInterval = dateUnitIntervals[i];\r\n        dateUnitCount = Math.floor(value / toMilliseconds(dateUnitInterval));\r\n        if (dateUnitCount > 0) {\r\n            result[dateUnitInterval + \"s\"] = dateUnitCount;\r\n            value -= convertDateUnitToMilliseconds(dateUnitInterval, dateUnitCount)\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar dateToMilliseconds = function(tickInterval) {\r\n    var milliseconds = 0;\r\n    if (isObject(tickInterval)) {\r\n        each(tickInterval, function(key, value) {\r\n            milliseconds += convertDateUnitToMilliseconds(key.substr(0, key.length - 1), value)\r\n        })\r\n    }\r\n    if (isString(tickInterval)) {\r\n        milliseconds = convertDateUnitToMilliseconds(tickInterval, 1)\r\n    }\r\n    return milliseconds\r\n};\r\nvar convertDateUnitToMilliseconds = function(dateUnit, count) {\r\n    return toMilliseconds(dateUnit) * count\r\n};\r\nvar getDateUnitInterval = function(tickInterval) {\r\n    var i, maxInterval = -1;\r\n    if (isString(tickInterval)) {\r\n        return tickInterval\r\n    }\r\n    if (isObject(tickInterval)) {\r\n        each(tickInterval, function(key, value) {\r\n            for (i = 0; i < dateUnitIntervals.length; i++) {\r\n                if (value && (key === dateUnitIntervals[i] + \"s\" || key === dateUnitIntervals[i]) && maxInterval < i) {\r\n                    maxInterval = i\r\n                }\r\n            }\r\n        });\r\n        return dateUnitIntervals[maxInterval]\r\n    }\r\n    return \"\"\r\n};\r\nvar tickIntervalToFormatMap = {\r\n    millisecond: \"millisecond\",\r\n    second: \"longtime\",\r\n    minute: \"shorttime\",\r\n    hour: \"shorttime\",\r\n    day: \"day\",\r\n    week: \"day\",\r\n    month: \"month\",\r\n    quarter: \"quarter\",\r\n    year: \"year\"\r\n};\r\n\r\nfunction getDateFormatByTickInterval(tickInterval) {\r\n    return tickIntervalToFormatMap[getDateUnitInterval(tickInterval)] || \"\"\r\n}\r\nvar getQuarter = function(month) {\r\n    return Math.floor(month / 3)\r\n};\r\nvar getFirstQuarterMonth = function(month) {\r\n    return 3 * getQuarter(month)\r\n};\r\nvar correctDateWithUnitBeginning = function(date, dateInterval, withCorrection, firstDayOfWeek) {\r\n    date = new Date(date.getTime());\r\n    var firstQuarterMonth, month, oldDate = new Date(date.getTime()),\r\n        dateUnitInterval = getDateUnitInterval(dateInterval);\r\n    switch (dateUnitInterval) {\r\n        case \"second\":\r\n            date = new Date(1e3 * Math.floor(oldDate.getTime() / 1e3));\r\n            break;\r\n        case \"minute\":\r\n            date = new Date(6e4 * Math.floor(oldDate.getTime() / 6e4));\r\n            break;\r\n        case \"hour\":\r\n            date = new Date(36e5 * Math.floor(oldDate.getTime() / 36e5));\r\n            break;\r\n        case \"year\":\r\n            date.setMonth(0);\r\n        case \"month\":\r\n            date.setDate(1);\r\n        case \"day\":\r\n            date.setHours(0, 0, 0, 0);\r\n            break;\r\n        case \"week\":\r\n            date = getFirstWeekDate(date, firstDayOfWeek || 0);\r\n            date.setHours(0, 0, 0, 0);\r\n            break;\r\n        case \"quarter\":\r\n            firstQuarterMonth = getFirstQuarterMonth(date.getMonth());\r\n            month = date.getMonth();\r\n            date.setDate(1);\r\n            date.setHours(0, 0, 0, 0);\r\n            if (month !== firstQuarterMonth) {\r\n                date.setMonth(firstQuarterMonth)\r\n            }\r\n    }\r\n    if (withCorrection && \"hour\" !== dateUnitInterval && \"minute\" !== dateUnitInterval && \"second\" !== dateUnitInterval) {\r\n        fixTimezoneGap(oldDate, date)\r\n    }\r\n    return date\r\n};\r\nvar trimTime = function(date) {\r\n    return dateUtils.correctDateWithUnitBeginning(date, \"day\")\r\n};\r\nvar getDatesDifferences = function(date1, date2) {\r\n    var differences, counter = 0;\r\n    differences = {\r\n        year: date1.getFullYear() !== date2.getFullYear(),\r\n        month: date1.getMonth() !== date2.getMonth(),\r\n        day: date1.getDate() !== date2.getDate(),\r\n        hour: date1.getHours() !== date2.getHours(),\r\n        minute: date1.getMinutes() !== date2.getMinutes(),\r\n        second: date1.getSeconds() !== date2.getSeconds(),\r\n        millisecond: date1.getMilliseconds() !== date2.getMilliseconds()\r\n    };\r\n    each(differences, function(key, value) {\r\n        if (value) {\r\n            counter++\r\n        }\r\n    });\r\n    if (0 === counter && 0 !== getTimezonesDifference(date1, date2)) {\r\n        differences.hour = true;\r\n        counter++\r\n    }\r\n    differences.count = counter;\r\n    return differences\r\n};\r\n\r\nfunction addDateInterval(value, interval, dir) {\r\n    var result = new Date(value.getTime()),\r\n        intervalObject = isString(interval) ? getDateIntervalByString(interval.toLowerCase()) : interval;\r\n    if (intervalObject.years) {\r\n        result.setFullYear(result.getFullYear() + intervalObject.years * dir)\r\n    }\r\n    if (intervalObject.quarters) {\r\n        result.setMonth(result.getMonth() + 3 * intervalObject.quarters * dir)\r\n    }\r\n    if (intervalObject.months) {\r\n        result.setMonth(result.getMonth() + intervalObject.months * dir)\r\n    }\r\n    if (intervalObject.weeks) {\r\n        result.setDate(result.getDate() + 7 * intervalObject.weeks * dir)\r\n    }\r\n    if (intervalObject.days) {\r\n        result.setDate(result.getDate() + intervalObject.days * dir)\r\n    }\r\n    if (intervalObject.hours) {\r\n        result.setTime(result.getTime() + 36e5 * intervalObject.hours * dir)\r\n    }\r\n    if (intervalObject.minutes) {\r\n        result.setTime(result.getTime() + 6e4 * intervalObject.minutes * dir)\r\n    }\r\n    if (intervalObject.seconds) {\r\n        result.setTime(result.getTime() + 1e3 * intervalObject.seconds * dir)\r\n    }\r\n    if (intervalObject.milliseconds) {\r\n        result.setTime(result.getTime() + intervalObject.milliseconds * dir)\r\n    }\r\n    return result\r\n}\r\nvar addInterval = function(value, interval, isNegative) {\r\n    var dir = isNegative ? -1 : 1;\r\n    return isDate(value) ? addDateInterval(value, interval, dir) : adjust(value + interval * dir, interval)\r\n};\r\nvar getSequenceByInterval = function(min, max, interval) {\r\n    var cur, intervals = [];\r\n    intervals.push(isDate(min) ? new Date(min.getTime()) : min);\r\n    cur = min;\r\n    while (cur < max) {\r\n        cur = addInterval(cur, interval);\r\n        intervals.push(cur)\r\n    }\r\n    return intervals\r\n};\r\nvar getViewFirstCellDate = function(viewType, date) {\r\n    if (\"month\" === viewType) {\r\n        return new Date(date.getFullYear(), date.getMonth(), 1)\r\n    }\r\n    if (\"year\" === viewType) {\r\n        return new Date(date.getFullYear(), 0, date.getDate())\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        return new Date(getFirstYearInDecade(date), date.getMonth(), date.getDate())\r\n    }\r\n    if (\"century\" === viewType) {\r\n        return new Date(getFirstDecadeInCentury(date), date.getMonth(), date.getDate())\r\n    }\r\n};\r\nvar getViewLastCellDate = function(viewType, date) {\r\n    if (\"month\" === viewType) {\r\n        return new Date(date.getFullYear(), date.getMonth(), getLastMonthDay(date))\r\n    }\r\n    if (\"year\" === viewType) {\r\n        return new Date(date.getFullYear(), 11, date.getDate())\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        return new Date(getFirstYearInDecade(date) + 9, date.getMonth(), date.getDate())\r\n    }\r\n    if (\"century\" === viewType) {\r\n        return new Date(getFirstDecadeInCentury(date) + 90, date.getMonth(), date.getDate())\r\n    }\r\n};\r\nvar getViewMinBoundaryDate = function(viewType, date) {\r\n    var resultDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    if (\"month\" === viewType) {\r\n        return resultDate\r\n    }\r\n    resultDate.setMonth(0);\r\n    if (\"year\" === viewType) {\r\n        return resultDate\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        resultDate.setFullYear(getFirstYearInDecade(date))\r\n    }\r\n    if (\"century\" === viewType) {\r\n        resultDate.setFullYear(getFirstDecadeInCentury(date))\r\n    }\r\n    return resultDate\r\n};\r\nvar getViewMaxBoundaryDate = function(viewType, date) {\r\n    var resultDate = new Date(date);\r\n    resultDate.setDate(getLastMonthDay(date));\r\n    if (\"month\" === viewType) {\r\n        return resultDate\r\n    }\r\n    resultDate.setMonth(11);\r\n    resultDate.setDate(getLastMonthDay(resultDate));\r\n    if (\"year\" === viewType) {\r\n        return resultDate\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        resultDate.setFullYear(getFirstYearInDecade(date) + 9)\r\n    }\r\n    if (\"century\" === viewType) {\r\n        resultDate.setFullYear(getFirstDecadeInCentury(date) + 99)\r\n    }\r\n    return resultDate\r\n};\r\nvar getLastMonthDay = function(date) {\r\n    var resultDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return resultDate.getDate()\r\n};\r\nvar sameView = function(view, date1, date2) {\r\n    return dateUtils[camelize(\"same \" + view)](date1, date2)\r\n};\r\nvar getViewUp = function(typeView) {\r\n    switch (typeView) {\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"decade\";\r\n        case \"decade\":\r\n            return \"century\"\r\n    }\r\n};\r\nvar getViewDown = function(typeView) {\r\n    switch (typeView) {\r\n        case \"century\":\r\n            return \"decade\";\r\n        case \"decade\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"month\"\r\n    }\r\n};\r\nvar getDifferenceInMonth = function(typeView) {\r\n    var difference = 1;\r\n    if (\"year\" === typeView) {\r\n        difference = 12\r\n    }\r\n    if (\"decade\" === typeView) {\r\n        difference = 120\r\n    }\r\n    if (\"century\" === typeView) {\r\n        difference = 1200\r\n    }\r\n    return difference\r\n};\r\nvar getDifferenceInMonthForCells = function(typeView) {\r\n    var difference = 1;\r\n    if (\"decade\" === typeView) {\r\n        difference = 12\r\n    }\r\n    if (\"century\" === typeView) {\r\n        difference = 120\r\n    }\r\n    return difference\r\n};\r\nvar getDateIntervalByString = function(intervalString) {\r\n    var result = {};\r\n    switch (intervalString) {\r\n        case \"year\":\r\n            result.years = 1;\r\n            break;\r\n        case \"month\":\r\n            result.months = 1;\r\n            break;\r\n        case \"quarter\":\r\n            result.months = 3;\r\n            break;\r\n        case \"week\":\r\n            result.weeks = 1;\r\n            break;\r\n        case \"day\":\r\n            result.days = 1;\r\n            break;\r\n        case \"hour\":\r\n            result.hours = 1;\r\n            break;\r\n        case \"minute\":\r\n            result.minutes = 1;\r\n            break;\r\n        case \"second\":\r\n            result.seconds = 1;\r\n            break;\r\n        case \"millisecond\":\r\n            result.milliseconds = 1\r\n    }\r\n    return result\r\n};\r\nvar sameDate = function(date1, date2) {\r\n    return sameMonthAndYear(date1, date2) && date1.getDate() === date2.getDate()\r\n};\r\nvar sameMonthAndYear = function(date1, date2) {\r\n    return sameYear(date1, date2) && date1.getMonth() === date2.getMonth()\r\n};\r\nvar sameYear = function(date1, date2) {\r\n    return date1 && date2 && date1.getFullYear() === date2.getFullYear()\r\n};\r\nvar sameDecade = function(date1, date2) {\r\n    if (!isDefined(date1) || !isDefined(date2)) {\r\n        return\r\n    }\r\n    var startDecadeDate1 = date1.getFullYear() - date1.getFullYear() % 10,\r\n        startDecadeDate2 = date2.getFullYear() - date2.getFullYear() % 10;\r\n    return date1 && date2 && startDecadeDate1 === startDecadeDate2\r\n};\r\nvar sameCentury = function(date1, date2) {\r\n    if (!isDefined(date1) || !isDefined(date2)) {\r\n        return\r\n    }\r\n    var startCenturyDate1 = date1.getFullYear() - date1.getFullYear() % 100,\r\n        startCenturyDate2 = date2.getFullYear() - date2.getFullYear() % 100;\r\n    return date1 && date2 && startCenturyDate1 === startCenturyDate2\r\n};\r\nvar getFirstDecadeInCentury = function(date) {\r\n    return date && date.getFullYear() - date.getFullYear() % 100\r\n};\r\nvar getFirstYearInDecade = function(date) {\r\n    return date && date.getFullYear() - date.getFullYear() % 10\r\n};\r\nvar getShortDateFormat = function() {\r\n    return \"yyyy/MM/dd\"\r\n};\r\nvar getFirstMonthDate = function(date) {\r\n    if (!isDefined(date)) {\r\n        return\r\n    }\r\n    var newDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    return newDate\r\n};\r\nvar getLastMonthDate = function(date) {\r\n    if (!isDefined(date)) {\r\n        return\r\n    }\r\n    var newDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return newDate\r\n};\r\nvar getFirstWeekDate = function(date, firstDayOfWeek) {\r\n    var delta = (date.getDay() - firstDayOfWeek + 7) % 7;\r\n    var result = new Date(date);\r\n    result.setDate(date.getDate() - delta);\r\n    return result\r\n};\r\nvar normalizeDateByWeek = function(date, currentDate) {\r\n    var differenceInDays = dateUtils.getDatesInterval(date, currentDate, \"day\"),\r\n        resultDate = new Date(date);\r\n    if (differenceInDays >= 6) {\r\n        resultDate = new Date(resultDate.setDate(resultDate.getDate() + 7))\r\n    }\r\n    return resultDate\r\n};\r\nvar dateInRange = function(date, min, max, format) {\r\n    if (\"date\" === format) {\r\n        min = min && dateUtils.correctDateWithUnitBeginning(min, \"day\");\r\n        max = max && dateUtils.correctDateWithUnitBeginning(max, \"day\");\r\n        date = date && dateUtils.correctDateWithUnitBeginning(date, \"day\")\r\n    }\r\n    return normalizeDate(date, min, max) === date\r\n};\r\nvar normalizeDate = function(date, min, max) {\r\n    var normalizedDate = date;\r\n    if (!isDefined(date)) {\r\n        return date\r\n    }\r\n    if (isDefined(min) && date < min) {\r\n        normalizedDate = min\r\n    }\r\n    if (isDefined(max) && date > max) {\r\n        normalizedDate = max\r\n    }\r\n    return normalizedDate\r\n};\r\nvar fixTimezoneGap = function(oldDate, newDate) {\r\n    if (!isDefined(oldDate)) {\r\n        return\r\n    }\r\n    var sign, trial, diff = newDate.getHours() - oldDate.getHours();\r\n    if (0 === diff) {\r\n        return\r\n    }\r\n    sign = 1 === diff || diff === -23 ? -1 : 1;\r\n    trial = new Date(newDate.getTime() + 36e5 * sign);\r\n    if (sign > 0 || trial.getDate() === newDate.getDate()) {\r\n        newDate.setTime(trial.getTime())\r\n    }\r\n};\r\nvar roundToHour = function(date) {\r\n    date.setHours(date.getHours() + 1);\r\n    date.setMinutes(0);\r\n    return date\r\n};\r\nvar getTimezonesDifference = function(min, max) {\r\n    return 60 * (max.getTimezoneOffset() - min.getTimezoneOffset()) * 1e3\r\n};\r\nvar makeDate = function(date) {\r\n    return new Date(date)\r\n};\r\nvar getDatesOfInterval = function(startDate, endDate, step) {\r\n    var currentDate = new Date(startDate.getTime()),\r\n        result = [];\r\n    while (currentDate < endDate) {\r\n        result.push(new Date(currentDate.getTime()));\r\n        currentDate = this.addInterval(currentDate, step)\r\n    }\r\n    return result\r\n};\r\nvar dateUtils = {\r\n    dateUnitIntervals: dateUnitIntervals,\r\n    convertMillisecondsToDateUnits: convertMillisecondsToDateUnits,\r\n    dateToMilliseconds: dateToMilliseconds,\r\n    getNextDateUnit: getNextDateUnit,\r\n    convertDateUnitToMilliseconds: convertDateUnitToMilliseconds,\r\n    getDateUnitInterval: getDateUnitInterval,\r\n    getDateFormatByTickInterval: getDateFormatByTickInterval,\r\n    getDatesDifferences: getDatesDifferences,\r\n    correctDateWithUnitBeginning: correctDateWithUnitBeginning,\r\n    trimTime: trimTime,\r\n    addDateInterval: addDateInterval,\r\n    addInterval: addInterval,\r\n    getSequenceByInterval: getSequenceByInterval,\r\n    getDateIntervalByString: getDateIntervalByString,\r\n    sameDate: sameDate,\r\n    sameMonthAndYear: sameMonthAndYear,\r\n    sameMonth: sameMonthAndYear,\r\n    sameYear: sameYear,\r\n    sameDecade: sameDecade,\r\n    sameCentury: sameCentury,\r\n    sameView: sameView,\r\n    getDifferenceInMonth: getDifferenceInMonth,\r\n    getDifferenceInMonthForCells: getDifferenceInMonthForCells,\r\n    getFirstYearInDecade: getFirstYearInDecade,\r\n    getFirstDecadeInCentury: getFirstDecadeInCentury,\r\n    getShortDateFormat: getShortDateFormat,\r\n    getViewFirstCellDate: getViewFirstCellDate,\r\n    getViewLastCellDate: getViewLastCellDate,\r\n    getViewDown: getViewDown,\r\n    getViewUp: getViewUp,\r\n    getLastMonthDay: getLastMonthDay,\r\n    getLastMonthDate: getLastMonthDate,\r\n    getFirstMonthDate: getFirstMonthDate,\r\n    getFirstWeekDate: getFirstWeekDate,\r\n    normalizeDateByWeek: normalizeDateByWeek,\r\n    getQuarter: getQuarter,\r\n    getFirstQuarterMonth: getFirstQuarterMonth,\r\n    dateInRange: dateInRange,\r\n    roundToHour: roundToHour,\r\n    normalizeDate: normalizeDate,\r\n    getViewMinBoundaryDate: getViewMinBoundaryDate,\r\n    getViewMaxBoundaryDate: getViewMaxBoundaryDate,\r\n    fixTimezoneGap: fixTimezoneGap,\r\n    getTimezonesDifference: getTimezonesDifference,\r\n    makeDate: makeDate,\r\n    getDatesInterval: getDatesInterval,\r\n    getDatesOfInterval: getDatesOfInterval\r\n};\r\nmodule.exports = dateUtils;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/core/utils/date.js\n// module id = 737\n// module chunks = 1 3 4","/**\r\n * DevExtreme (core/utils/date_serialization.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar config = require(\"../config\"),\r\n    getLDMLFormatter = require(\"../../localization/ldml/date.formatter\").getFormatter,\r\n    defaultDateNames = require(\"../../localization/default_date_names\"),\r\n    typeUtils = require(\"./type\"),\r\n    isString = typeUtils.isString,\r\n    isDate = typeUtils.isDate,\r\n    isNumber = typeUtils.isNumeric;\r\nvar NUMBER_SERIALIZATION_FORMAT = \"number\",\r\n    DATE_SERIALIZATION_FORMAT = \"yyyy/MM/dd\",\r\n    DATETIME_SERIALIZATION_FORMAT = \"yyyy/MM/dd HH:mm:ss\";\r\nvar ISO8601_PATTERN = /^(\\d{4,})(-)?(\\d{2})(-)?(\\d{2})(?:T(\\d{2})(:)?(\\d{2})?(:)?(\\d{2}(?:\\.(\\d{1,3})\\d*)?)?)?(Z|([\\+\\-])(\\d{2})(:)?(\\d{2})?)?$/;\r\nvar ISO8601_TIME_PATTERN = /^(\\d{2}):(\\d{2})(:(\\d{2}))?$/;\r\nvar ISO8601_PATTERN_PARTS = [\"\", \"yyyy\", \"\", \"MM\", \"\", \"dd\", \"THH\", \"\", \"mm\", \"\", \"ss\", \".SSS\"];\r\nvar MILLISECOND_LENGHT = 3;\r\nvar dateParser = function(text, skipISO8601Parsing) {\r\n    var result;\r\n    var parsedValue;\r\n    if (isString(text) && !skipISO8601Parsing) {\r\n        result = parseISO8601String(text)\r\n    }\r\n    if (!result) {\r\n        parsedValue = !isDate(text) && Date.parse(text);\r\n        result = isNumber(parsedValue) ? new Date(parsedValue) : text\r\n    }\r\n    return result\r\n};\r\nvar parseISO8601String = function(text) {\r\n    var parts = text.match(ISO8601_PATTERN);\r\n    var timePart = function(part) {\r\n        return +part || 0\r\n    };\r\n    if (!parts) {\r\n        parts = text.match(ISO8601_TIME_PATTERN);\r\n        if (parts) {\r\n            return new Date(0, 0, 0, timePart(parts[1]), timePart(parts[2]), timePart(parts[4]))\r\n        }\r\n        return\r\n    }\r\n    var year = parts[1],\r\n        month = --parts[3],\r\n        day = parts[5],\r\n        timeZoneHour = 0,\r\n        timeZoneMinute = 0;\r\n    timeZoneHour = timePart(parts[14]);\r\n    timeZoneMinute = timePart(parts[16]);\r\n    if (\"-\" === parts[13]) {\r\n        timeZoneHour = -timeZoneHour;\r\n        timeZoneMinute = -timeZoneMinute\r\n    }\r\n    var hour = timePart(parts[6]) - timeZoneHour,\r\n        minute = timePart(parts[8]) - timeZoneMinute,\r\n        second = timePart(parts[10]),\r\n        parseMilliseconds = function(part) {\r\n            part = part || \"\";\r\n            return timePart(part) * Math.pow(10, MILLISECOND_LENGHT - part.length)\r\n        },\r\n        millisecond = parseMilliseconds(parts[11]);\r\n    if (!!parts[12]) {\r\n        return new Date(Date.UTC(year, month, day, hour, minute, second, millisecond))\r\n    }\r\n    return new Date(year, month, day, hour, minute, second, millisecond)\r\n};\r\nvar getIso8601Format = function(text, useUtc) {\r\n    var parts = text.match(ISO8601_PATTERN),\r\n        result = \"\";\r\n    if (!parts) {\r\n        parts = text.match(ISO8601_TIME_PATTERN);\r\n        if (parts) {\r\n            return parts[3] ? \"HH:mm:ss\" : \"HH:mm\"\r\n        }\r\n        return\r\n    }\r\n    for (var i = 1; i < ISO8601_PATTERN_PARTS.length; i++) {\r\n        if (parts[i]) {\r\n            result += ISO8601_PATTERN_PARTS[i] || parts[i]\r\n        }\r\n    }\r\n    if (\"Z\" === parts[12]) {\r\n        result += \"'Z'\"\r\n    }\r\n    if (parts[14]) {\r\n        if (parts[15]) {\r\n            result += \"xxx\"\r\n        } else {\r\n            if (parts[16]) {\r\n                result += \"xx\"\r\n            } else {\r\n                result += \"x\"\r\n            }\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar deserializeDate = function(value) {\r\n    if (\"number\" === typeof value) {\r\n        return new Date(value)\r\n    }\r\n    return dateParser(value, !config().forceIsoDateParsing)\r\n};\r\nvar serializeDate = function(value, serializationFormat) {\r\n    if (!serializationFormat) {\r\n        return value\r\n    }\r\n    if (!isDate(value)) {\r\n        return null\r\n    }\r\n    if (serializationFormat === NUMBER_SERIALIZATION_FORMAT) {\r\n        return value && value.valueOf ? value.valueOf() : null\r\n    }\r\n    return getLDMLFormatter(serializationFormat, defaultDateNames)(value)\r\n};\r\nvar getDateSerializationFormat = function(value) {\r\n    if (\"number\" === typeof value) {\r\n        return NUMBER_SERIALIZATION_FORMAT\r\n    } else {\r\n        if (isString(value)) {\r\n            var format;\r\n            if (config().forceIsoDateParsing) {\r\n                format = getIso8601Format(value)\r\n            }\r\n            if (format) {\r\n                return format\r\n            } else {\r\n                if (value.indexOf(\":\") >= 0) {\r\n                    return DATETIME_SERIALIZATION_FORMAT\r\n                } else {\r\n                    return DATE_SERIALIZATION_FORMAT\r\n                }\r\n            }\r\n        } else {\r\n            if (value) {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n};\r\nmodule.exports = {\r\n    dateParser: dateParser,\r\n    deserializeDate: deserializeDate,\r\n    serializeDate: serializeDate,\r\n    getDateSerializationFormat: getDateSerializationFormat\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/core/utils/date_serialization.js\n// module id = 738\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_editor.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    AsyncTemplateMixin = require(\"../shared/async_template_mixin\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    focused = require(\"../widget/selectors\").focused,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    isDefined = require(\"../../core/utils/type\").isDefined,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    errors = require(\"../widget/ui.errors\"),\r\n    positionUtils = require(\"../../animation/position\"),\r\n    getDefaultAlignment = require(\"../../core/utils/position\").getDefaultAlignment,\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    Button = require(\"../button\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    TextBox = require(\"../text_box\"),\r\n    clickEvent = require(\"../../events/click\"),\r\n    FunctionTemplate = require(\"../widget/function_template\"),\r\n    Popup = require(\"../popup\");\r\nvar DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\",\r\n    DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS = \"dx-dropdowneditor-input-wrapper\",\r\n    DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\",\r\n    DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\",\r\n    DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\",\r\n    DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\",\r\n    DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\",\r\n    DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\",\r\n    DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\r\nvar DropDownEditor = TextBox.inherit({\r\n    _supportedKeys: function() {\r\n        var homeEndHandler = function(e) {\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        return extend({}, this.callBase(), {\r\n            tab: function(e) {\r\n                if (!this.option(\"opened\")) {\r\n                    return\r\n                }\r\n                if (\"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this.close();\r\n                    return\r\n                }\r\n                var $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\r\n                $focusableElement && eventsEngine.trigger($focusableElement, \"focus\");\r\n                e.preventDefault()\r\n            },\r\n            escape: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault()\r\n                }\r\n                this.close()\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this.close();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this._validatedOpening();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            enter: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._valueChangeEventHandler(e)\r\n                }\r\n                return true\r\n            },\r\n            home: homeEndHandler,\r\n            end: homeEndHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            onOpened: null,\r\n            onClosed: null,\r\n            opened: false,\r\n            acceptCustomValue: true,\r\n            applyValueMode: \"instantly\",\r\n            deferRendering: true,\r\n            activeStateEnabled: true,\r\n            dropDownButtonTemplate: \"dropDownButton\",\r\n            fieldTemplate: null,\r\n            contentTemplate: null,\r\n            openOnFieldClick: false,\r\n            showDropDownButton: true,\r\n            popupPosition: this._getDefaultPopupPosition(),\r\n            onPopupInitialized: null,\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            cancelButtonText: messageLocalization.format(\"Cancel\"),\r\n            buttonsLocation: \"default\",\r\n            showPopupTitle: false\r\n        })\r\n    },\r\n    _getDefaultPopupPosition: function() {\r\n        var position = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        return {\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            },\r\n            my: position + \" top\",\r\n            at: position + \" bottom\",\r\n            collision: \"flip flip\"\r\n        }\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                var isGeneric = \"generic\" === _device.platform,\r\n                    isWin10 = \"win\" === _device.platform && _device.version && 10 === _device.version[0];\r\n                return isGeneric || isWin10\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element().find(\".\" + DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initVisibilityActions();\r\n        this._initPopupInitializedAction()\r\n    },\r\n    _initVisibilityActions: function() {\r\n        this._openAction = this._createActionByOption(\"onOpened\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._closeAction = this._createActionByOption(\"onClosed\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initPopupInitializedAction: function() {\r\n        this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\", \"designMode\"]\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_EDITOR_CLASS);\r\n        this.setAria(\"role\", \"combobox\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderOpenHandler();\r\n        this._renderOpenedState()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._createPopup()\r\n        }\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this.$element().wrapInner($(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS));\r\n        this._$container = this.$element().children().eq(0);\r\n        this.setAria({\r\n            haspopup: \"true\",\r\n            autocomplete: \"list\"\r\n        })\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _cleanFocusState: function() {\r\n        this.callBase();\r\n        if (this.option(\"fieldTemplate\")) {\r\n            eventsEngine.off(this._input(), \"focusin focusout beforeactivate\")\r\n        }\r\n    },\r\n    _renderField: function() {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            return\r\n        }\r\n        this._renderTemplatedField(fieldTemplate, this._fieldRenderData())\r\n    },\r\n    _renderTemplatedField: function(fieldTemplate, data) {\r\n        var _this = this;\r\n        var isFocused = focused(this._input());\r\n        this._resetFocus(isFocused);\r\n        var $container = this._$container;\r\n        $container.empty();\r\n        this._$dropDownButton = null;\r\n        this._$clearButton = null;\r\n        fieldTemplate.render({\r\n            model: data,\r\n            container: domUtils.getPublicElement($container),\r\n            onRendered: function() {\r\n                if (!_this._input().length) {\r\n                    throw errors.Error(\"E1010\")\r\n                }\r\n                _this._refreshEvents();\r\n                _this._refreshValueChangeEvent();\r\n                _this._renderFocusState();\r\n                isFocused && eventsEngine.trigger(_this._input(), \"focus\")\r\n            }\r\n        })\r\n    },\r\n    _resetFocus: function(isFocused) {\r\n        this._cleanFocusState();\r\n        isFocused && eventsEngine.trigger(this._input(), \"focusout\")\r\n    },\r\n    _fieldRenderData: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _renderInputAddons: function() {\r\n        this._renderField();\r\n        this.callBase();\r\n        this._renderDropDownButton()\r\n    },\r\n    _renderDropDownButton: function() {\r\n        if (this._$dropDownButton) {\r\n            this._$dropDownButton.remove();\r\n            this._$dropDownButton = null\r\n        }\r\n        var showDropDownButton = this.option(\"showDropDownButton\");\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, showDropDownButton);\r\n        if (!showDropDownButton) {\r\n            return\r\n        }\r\n        this._$dropDownButton = this._createDropDownButton();\r\n        this._attachDropDownButtonClickHandler()\r\n    },\r\n    _attachDropDownButtonClickHandler: function() {\r\n        if (this.option(\"showDropDownButton\") && !this.option(\"openOnFieldClick\")) {\r\n            this._$dropDownButton.dxButton(\"option\", \"onClick\", this._openHandler.bind(this))\r\n        }\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.dropDownButton = new FunctionTemplate(function(options) {\r\n            var $icon = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_ICON);\r\n            $(options.container).append($icon)\r\n        }, this)\r\n    },\r\n    _createDropDownButton: function() {\r\n        var $button = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS).prependTo(this._buttonsContainer());\r\n        this._createComponent($button, Button, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            disabled: this.option(\"readOnly\"),\r\n            useInkRipple: false,\r\n            template: this._getTemplateByOption(\"dropDownButtonTemplate\")\r\n        });\r\n        $button.removeClass(\"dx-button\");\r\n        eventsEngine.on($button, \"mousedown\", function(e) {\r\n            e.preventDefault()\r\n        });\r\n        return $button\r\n    },\r\n    _renderOpenHandler: function() {\r\n        var that = this,\r\n            $inputWrapper = that._inputWrapper(),\r\n            eventName = eventUtils.addNamespace(clickEvent.name, that.NAME),\r\n            openOnFieldClick = that.option(\"openOnFieldClick\");\r\n        eventsEngine.off($inputWrapper, eventName);\r\n        eventsEngine.on($inputWrapper, eventName, that._getInputClickHandler(openOnFieldClick));\r\n        that.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\r\n        if (openOnFieldClick) {\r\n            that._openOnFieldClickAction = that._createAction(that._openHandler.bind(that))\r\n        }\r\n    },\r\n    _getInputClickHandler: function(openOnFieldClick) {\r\n        var that = this;\r\n        return openOnFieldClick ? function(e) {\r\n            that._executeOpenAction(e)\r\n        } : function(e) {\r\n            that._focusInput()\r\n        }\r\n    },\r\n    _openHandler: function() {\r\n        this._toggleOpenState()\r\n    },\r\n    _executeOpenAction: function(e) {\r\n        this._openOnFieldClickAction({\r\n            event: e\r\n        })\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusInput: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"focusStateEnabled\") && !focused(this._input())) {\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        }\r\n        return true\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (!this._focusInput()) {\r\n            return\r\n        }\r\n        if (!this.option(\"readOnly\")) {\r\n            isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n            this.option(\"opened\", isVisible)\r\n        }\r\n    },\r\n    _renderOpenedState: function() {\r\n        var opened = this.option(\"opened\");\r\n        if (opened) {\r\n            this._createPopup()\r\n        }\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\r\n        this._setPopupOption(\"visible\", opened);\r\n        this.setAria({\r\n            expanded: opened,\r\n            owns: (opened || void 0) && this._popupContentId\r\n        })\r\n    },\r\n    _createPopup: function() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        this._$popup = $(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).addClass(this.option(\"customOverlayCssClass\")).appendTo(this.$element());\r\n        this._renderPopup();\r\n        this._renderPopupContent()\r\n    },\r\n    _renderPopup: function() {\r\n        this._popup = this._createComponent(this._$popup, Popup, this._popupConfig());\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this)\r\n        });\r\n        this._popup.option(\"onContentReady\", this._contentReadyHandler.bind(this));\r\n        this._contentReadyHandler();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, this._popup.$content())\r\n    },\r\n    _contentReadyHandler: commonUtils.noop,\r\n    _popupConfig: function() {\r\n        return {\r\n            onInitialized: this._popupInitializedHandler(),\r\n            position: extend(this.option(\"popupPosition\"), { of: this.$element()\r\n            }),\r\n            showTitle: this.option(\"showPopupTitle\"),\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            shading: false,\r\n            closeOnTargetScroll: true,\r\n            closeOnOutsideClick: this._closeOutsideDropDownHandler.bind(this),\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            deferRendering: false,\r\n            focusStateEnabled: false,\r\n            showCloseButton: false,\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            onPositioned: this._popupPositionedHandler.bind(this),\r\n            fullScreen: false\r\n        }\r\n    },\r\n    _popupInitializedHandler: function() {\r\n        if (!this.option(\"onPopupInitialized\")) {\r\n            return\r\n        }\r\n        return function(e) {\r\n            this._popupInitializedAction({\r\n                popup: e.component\r\n            })\r\n        }.bind(this)\r\n    },\r\n    _popupPositionedHandler: function(e) {\r\n        e.position && this._popup.overlayContent().toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, e.position.v.flip)\r\n    },\r\n    _popupShowingHandler: commonUtils.noop,\r\n    _popupHidingHandler: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    _popupShownHandler: function() {\r\n        this._openAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this._closeAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _getValidationMessagePosition: function() {\r\n        var positionRequest = \"below\";\r\n        if (this._popup && this._popup.option(\"visible\")) {\r\n            var myTop = positionUtils.setup(this.$element()).top,\r\n                popupTop = positionUtils.setup(this._popup.$content()).top;\r\n            positionRequest = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"below\" : \"above\"\r\n        }\r\n        return this.callBase(positionRequest)\r\n    },\r\n    _renderPopupContent: function() {\r\n        var contentTemplate = this._getTemplateByOption(\"contentTemplate\");\r\n        if (!(contentTemplate && this.option(\"contentTemplate\"))) {\r\n            return\r\n        }\r\n        var $popupContent = this._popup.$content(),\r\n            templateData = {\r\n                value: this._fieldRenderData(),\r\n                component: this\r\n            };\r\n        $popupContent.empty();\r\n        contentTemplate.render({\r\n            container: domUtils.getPublicElement($popupContent),\r\n            model: templateData\r\n        })\r\n    },\r\n    _closeOutsideDropDownHandler: function(e) {\r\n        var $target = $(e.target);\r\n        var isInputClicked = !!$target.closest(this.$element()).length;\r\n        var isDropDownButtonClicked = !!$target.closest(this._$dropDownButton).length;\r\n        var isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\r\n        return isOutsideClick\r\n    },\r\n    _clean: function() {\r\n        delete this._$dropDownButton;\r\n        delete this._openOnFieldClickAction;\r\n        if (this._$popup) {\r\n            this._$popup.remove();\r\n            delete this._$popup;\r\n            delete this._popup\r\n        }\r\n        this.callBase()\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _validatedOpening: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._toggleOpenState(true)\r\n        }\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        return \"useButtons\" === this.option(\"applyValueMode\") ? this._popupToolbarItemsConfig() : []\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-done.dx-button\")\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-cancel.dx-button\")\r\n    },\r\n    _popupElementTabHandler: function(e) {\r\n        var $element = $(e.currentTarget);\r\n        if (e.shiftKey && $element.is(this._getFirstPopupElement()) || !e.shiftKey && $element.is(this._getLastPopupElement())) {\r\n            eventsEngine.trigger(this._input(), \"focus\");\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _popupElementEscHandler: function() {\r\n        eventsEngine.trigger(this._input(), \"focus\");\r\n        this.close()\r\n    },\r\n    _popupButtonInitializedHandler: function(e) {\r\n        e.component.registerKeyHandler(\"tab\", this._popupElementTabHandler.bind(this));\r\n        e.component.registerKeyHandler(\"escape\", this._popupElementEscHandler.bind(this))\r\n    },\r\n    _popupToolbarItemsConfig: function() {\r\n        var buttonsConfig = [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }, {\r\n            shortcut: \"cancel\",\r\n            options: {\r\n                onClick: this._cancelButtonHandler.bind(this),\r\n                text: this.option(\"cancelButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }];\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    },\r\n    _applyButtonsLocation: function(buttonsConfig) {\r\n        var buttonsLocation = this.option(\"buttonsLocation\"),\r\n            resultConfig = buttonsConfig;\r\n        if (\"default\" !== buttonsLocation) {\r\n            var position = commonUtils.splitPair(buttonsLocation);\r\n            each(resultConfig, function(_, element) {\r\n                extend(element, {\r\n                    toolbar: position[0],\r\n                    location: position[1]\r\n                })\r\n            })\r\n        }\r\n        return resultConfig\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this.callBase();\r\n        this._$dropDownButton && this._$dropDownButton.dxButton(\"option\", \"disabled\", this.option(\"readOnly\"))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"opened\":\r\n                this._renderOpenedState();\r\n                break;\r\n            case \"onOpened\":\r\n            case \"onClosed\":\r\n                this._initVisibilityActions();\r\n                break;\r\n            case \"onPopupInitialized\":\r\n                this._initPopupInitializedAction();\r\n                break;\r\n            case \"fieldTemplate\":\r\n                if (isDefined(args.value)) {\r\n                    this._renderInputAddons()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"showDropDownButton\":\r\n            case \"contentTemplate\":\r\n            case \"acceptCustomValue\":\r\n            case \"openOnFieldClick\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dropDownButtonTemplate\":\r\n                this._renderDropDownButton();\r\n                break;\r\n            case \"popupPosition\":\r\n            case \"deferRendering\":\r\n                break;\r\n            case \"applyValueMode\":\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n            case \"buttonsLocation\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"showPopupTitle\":\r\n                this._setPopupOption(\"showTitle\", args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    open: function() {\r\n        this.option(\"opened\", true)\r\n    },\r\n    close: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    field: function() {\r\n        return getPublicElement(this._input())\r\n    },\r\n    content: function() {\r\n        return this._popup ? this._popup.content() : null\r\n    }\r\n}).include(AsyncTemplateMixin);\r\nregisterComponent(\"dxDropDownEditor\", DropDownEditor);\r\nmodule.exports = DropDownEditor;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/drop_down_editor/ui.drop_down_editor.js\n// module id = 742\n// module chunks = 1 3 4 5 9 10","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    Class = require(\"../../core/class\"),\r\n    dateLocalization = require(\"../../localization/date\");\r\nvar abstract = Class.abstract;\r\nvar DateBoxStrategy = Class.inherit({\r\n    ctor: function(dateBox) {\r\n        this.dateBox = dateBox\r\n    },\r\n    widgetOption: function() {\r\n        return this._widget && this._widget.option.apply(this._widget, arguments)\r\n    },\r\n    _renderWidget: function(element) {\r\n        element = element || $(\"<div>\");\r\n        this._widget = this._createWidget(element);\r\n        this._widget.$element().appendTo(this._getWidgetContainer())\r\n    },\r\n    _createWidget: function(element) {\r\n        var widgetName = this._getWidgetName();\r\n        var widgetOptions = this._getWidgetOptions();\r\n        return this.dateBox._createComponent(element, widgetName, widgetOptions)\r\n    },\r\n    _getWidgetOptions: abstract,\r\n    _getWidgetName: abstract,\r\n    getDefaultOptions: function() {\r\n        return {\r\n            mode: \"text\"\r\n        }\r\n    },\r\n    getDisplayFormat: abstract,\r\n    supportedKeys: noop,\r\n    attachKeyboardEvents: function(keyboardProcessor) {\r\n        this._widgetKeyboardProcessor = keyboardProcessor.attachChildProcessor()\r\n    },\r\n    getParsedText: function(text, format) {\r\n        var value = dateLocalization.parse(text, format);\r\n        return value ? value : dateLocalization.parse(text)\r\n    },\r\n    renderInputMinMax: noop,\r\n    renderOpenedState: function() {\r\n        this._updateValue()\r\n    },\r\n    popupConfig: abstract,\r\n    renderPopupContent: function() {\r\n        var popup = this._getPopup();\r\n        this._renderWidget();\r\n        var $popupContent = popup.$content().parent();\r\n        eventsEngine.off($popupContent, \"mousedown\");\r\n        eventsEngine.on($popupContent, \"mousedown\", this._preventFocusOnPopup.bind(this))\r\n    },\r\n    getFirstPopupElement: noop,\r\n    getLastPopupElement: noop,\r\n    _preventFocusOnPopup: function(e) {\r\n        e.preventDefault()\r\n    },\r\n    _getWidgetContainer: function() {\r\n        return this._getPopup().$content()\r\n    },\r\n    _getPopup: function() {\r\n        return this.dateBox._popup\r\n    },\r\n    popupShowingHandler: noop,\r\n    popupHiddenHandler: noop,\r\n    _updateValue: function() {\r\n        this._widget && this._widget.option(\"value\", this.dateBoxValue())\r\n    },\r\n    _valueChangedHandler: function(args) {\r\n        if (this.dateBox.option(\"opened\") && \"instantly\" === this.dateBox.option(\"applyValueMode\")) {\r\n            this.dateBoxValue(args.value)\r\n        }\r\n    },\r\n    useCurrentDateByDefault: noop,\r\n    textChangedHandler: noop,\r\n    renderValue: function() {\r\n        if (this.dateBox.option(\"opened\")) {\r\n            this._updateValue()\r\n        }\r\n    },\r\n    getValue: function() {\r\n        return this._widget.option(\"value\")\r\n    },\r\n    isAdaptivityChanged: function() {\r\n        return false\r\n    },\r\n    dispose: function() {\r\n        var popup = this._getPopup();\r\n        if (popup) {\r\n            popup.$content().empty()\r\n        }\r\n    },\r\n    dateBoxValue: function() {\r\n        if (arguments.length) {\r\n            return this.dateBox.dateValue.apply(this.dateBox, arguments)\r\n        } else {\r\n            return this.dateBox.dateOption.apply(this.dateBox, [\"value\"])\r\n        }\r\n    }\r\n});\r\nmodule.exports = DateBoxStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.strategy.js\n// module id = 743\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/number_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./number_box/number_box\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box.js\n// module id = 745\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/shared/async_template_mixin.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = {\r\n    _waitAsyncTemplates: function(callback) {\r\n        if (this._options.templatesRenderAsynchronously) {\r\n            this._asyncTemplatesTimers = this._asyncTemplatesTimers || [];\r\n            var timer = setTimeout(function() {\r\n                callback.call(this);\r\n                clearTimeout(timer)\r\n            }.bind(this));\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback.call(this)\r\n        }\r\n    },\r\n    _cleanAsyncTemplatesTimer: function() {\r\n        var timers = this._asyncTemplatesTimers || [];\r\n        for (var i = 0; i < timers.length; i++) {\r\n            clearTimeout(timers[i])\r\n        }\r\n        delete this._asyncTemplatesTimers\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/shared/async_template_mixin.js\n// module id = 748\n// module chunks = 1 3 4 5 9 10","/**\r\n * DevExtreme (ui/editor/ui.data_expression.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = require(\"../../core/renderer\"),\r\n    variableWrapper = require(\"../../core/utils/variable_wrapper\"),\r\n    dataCoreUtils = require(\"../../core/utils/data\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    FunctionTemplate = require(\"../widget/function_template\"),\r\n    DataHelperMixin = require(\"../../data_helper\"),\r\n    DataSourceModule = require(\"../../data/data_source/data_source\"),\r\n    ArrayStore = require(\"../../data/array_store\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nvar DataExpressionMixin = extend(DataHelperMixin, {\r\n    _dataExpressionDefaultOptions: function() {\r\n        return {\r\n            items: [],\r\n            dataSource: null,\r\n            itemTemplate: \"item\",\r\n            value: null,\r\n            valueExpr: \"this\",\r\n            displayExpr: void 0\r\n        }\r\n    },\r\n    _initDataExpressions: function() {\r\n        this._compileValueGetter();\r\n        this._compileDisplayGetter();\r\n        this._initDynamicTemplates();\r\n        this._initDataSource();\r\n        this._itemsToDataSource()\r\n    },\r\n    _itemsToDataSource: function() {\r\n        if (!this.option(\"dataSource\")) {\r\n            this._dataSource = new DataSourceModule.DataSource({\r\n                store: new ArrayStore(this.option(\"items\")),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _compileDisplayGetter: function() {\r\n        this._displayGetter = dataCoreUtils.compileGetter(this._displayGetterExpr())\r\n    },\r\n    _displayGetterExpr: function() {\r\n        return this.option(\"displayExpr\")\r\n    },\r\n    _compileValueGetter: function() {\r\n        this._valueGetter = dataCoreUtils.compileGetter(this._valueGetterExpr())\r\n    },\r\n    _valueGetterExpr: function() {\r\n        return this.option(\"valueExpr\") || \"this\"\r\n    },\r\n    _loadValue: function(value) {\r\n        var deferred = new Deferred;\r\n        value = this._unwrappedValue(value);\r\n        if (!typeUtils.isDefined(value)) {\r\n            return deferred.reject().promise()\r\n        }\r\n        this._loadSingle(this._valueGetterExpr(), value).done(function(item) {\r\n            this._isValueEquals(this._valueGetter(item), value) ? deferred.resolve(item) : deferred.reject()\r\n        }.bind(this)).fail(function() {\r\n            deferred.reject()\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    _getCurrentValue: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _unwrappedValue: function(value) {\r\n        value = typeUtils.isDefined(value) ? value : this._getCurrentValue();\r\n        if (value && this._dataSource && \"this\" === this._valueGetterExpr()) {\r\n            value = this._getItemKey(value)\r\n        }\r\n        return variableWrapper.unwrap(value)\r\n    },\r\n    _getItemKey: function(value) {\r\n        var key = this._dataSource.key();\r\n        if (Array.isArray(key)) {\r\n            var result = {};\r\n            for (var i = 0, n = key.length; i < n; i++) {\r\n                result[key[i]] = value[key[i]]\r\n            }\r\n            return result\r\n        }\r\n        if (key && \"object\" === (\"undefined\" === typeof value ? \"undefined\" : _typeof(value))) {\r\n            value = value[key]\r\n        }\r\n        return value\r\n    },\r\n    _isValueEquals: function(value1, value2) {\r\n        var dataSourceKey = this._dataSource && this._dataSource.key();\r\n        var isDefined = typeUtils.isDefined;\r\n        var result = this._compareValues(value1, value2);\r\n        if (!result && dataSourceKey && isDefined(value1) && isDefined(value2)) {\r\n            if (Array.isArray(dataSourceKey)) {\r\n                result = this._compareByCompositeKey(value1, value2, dataSourceKey)\r\n            } else {\r\n                result = this._compareByKey(value1, value2, dataSourceKey)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _compareByCompositeKey: function(value1, value2, key) {\r\n        var isObject = typeUtils.isObject;\r\n        if (!isObject(value1) || !isObject(value2)) {\r\n            return false\r\n        }\r\n        for (var i = 0, n = key.length; i < n; i++) {\r\n            if (value1[key[i]] !== value2[key[i]]) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _compareByKey: function(value1, value2, key) {\r\n        var ensureDefined = commonUtils.ensureDefined;\r\n        var unwrapObservable = variableWrapper.unwrap;\r\n        var valueKey1 = ensureDefined(unwrapObservable(value1[key]), value1);\r\n        var valueKey2 = ensureDefined(unwrapObservable(value2[key]), value2);\r\n        return this._compareValues(valueKey1, valueKey2)\r\n    },\r\n    _compareValues: function(value1, value2) {\r\n        return dataCoreUtils.toComparable(value1, true) === dataCoreUtils.toComparable(value2, true)\r\n    },\r\n    _initDynamicTemplates: function() {\r\n        if (this._displayGetterExpr()) {\r\n            this._originalItemTemplate = this._defaultTemplates.item;\r\n            this._defaultTemplates.item = new FunctionTemplate(function(options) {\r\n                return $(\"<div>\").text(this._displayGetter(options.model)).html()\r\n            }.bind(this))\r\n        } else {\r\n            if (this._originalItemTemplate) {\r\n                this._defaultTemplates.item = this._originalItemTemplate\r\n            }\r\n        }\r\n    },\r\n    _setCollectionWidgetItemTemplate: function() {\r\n        this._initDynamicTemplates();\r\n        this._setCollectionWidgetOption(\"itemTemplate\", this._getTemplateByOption(\"itemTemplate\"))\r\n    },\r\n    _dataExpressionOptionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"items\":\r\n                this._itemsToDataSource();\r\n                this._setCollectionWidgetOption(\"items\");\r\n                break;\r\n            case \"dataSource\":\r\n                this._initDataSource();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._setCollectionWidgetItemTemplate();\r\n                break;\r\n            case \"valueExpr\":\r\n                this._compileValueGetter();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setCollectionWidgetItemTemplate()\r\n        }\r\n    }\r\n});\r\nmodule.exports = DataExpressionMixin;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/editor/ui.data_expression.js\n// module id = 749\n// module chunks = 1 3 4 9 10 11","/**\r\n * DevExtreme (ui/box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    Class = require(\"../core/class\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    noop = require(\"../core/utils/common\").noop,\r\n    windowUtils = require(\"../core/utils/window\"),\r\n    inflector = require(\"../core/utils/inflector\"),\r\n    isDefined = require(\"../core/utils/type\").isDefined,\r\n    styleUtils = require(\"../core/utils/style\"),\r\n    each = require(\"../core/utils/iterator\").each,\r\n    browser = require(\"../core/utils/browser\"),\r\n    CollectionWidgetItem = require(\"./collection/item\"),\r\n    devices = require(\"../core/devices\"),\r\n    CollectionWidget = require(\"./collection/ui.collection_widget.edit\");\r\nvar BOX_CLASS = \"dx-box\",\r\n    BOX_SELECTOR = \".dx-box\",\r\n    BOX_ITEM_CLASS = \"dx-box-item\",\r\n    BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\r\nvar MINSIZE_MAP = {\r\n    row: \"minWidth\",\r\n    col: \"minHeight\"\r\n};\r\nvar MAXSIZE_MAP = {\r\n    row: \"maxWidth\",\r\n    col: \"maxHeight\"\r\n};\r\nvar SHRINK = 1;\r\nvar FLEX_JUSTIFY_CONTENT_MAP = {\r\n    start: \"flex-start\",\r\n    end: \"flex-end\",\r\n    center: \"center\",\r\n    \"space-between\": \"space-between\",\r\n    \"space-around\": \"space-around\"\r\n};\r\nvar FLEX_ALIGN_ITEMS_MAP = {\r\n    start: \"flex-start\",\r\n    end: \"flex-end\",\r\n    center: \"center\",\r\n    stretch: \"stretch\"\r\n};\r\nvar FLEX_DIRECTION_MAP = {\r\n    row: \"row\",\r\n    col: \"column\"\r\n};\r\nvar BoxItem = CollectionWidgetItem.inherit({\r\n    _renderVisible: function(value, oldValue) {\r\n        this.callBase(value);\r\n        if (isDefined(oldValue)) {\r\n            this._options.fireItemStateChangedAction({\r\n                name: \"visible\",\r\n                state: value,\r\n                oldState: oldValue\r\n            })\r\n        }\r\n    }\r\n});\r\nvar setFlexProp = function(element, prop, value) {\r\n    value = styleUtils.normalizeStyleProp(prop, value);\r\n    element.style[styleUtils.styleProp(prop)] = value;\r\n    if (!windowUtils.hasWindow()) {\r\n        if (\"\" === value || !isDefined(value)) {\r\n            return\r\n        }\r\n        var cssName = inflector.dasherize(prop);\r\n        var styleExpr = cssName + \": \" + value + \";\";\r\n        if (!element.attributes.style) {\r\n            element.setAttribute(\"style\", styleExpr)\r\n        } else {\r\n            if (element.attributes.style.value.indexOf(styleExpr) < 0) {\r\n                element.attributes.style.value += \" \" + styleExpr\r\n            }\r\n        }\r\n    }\r\n};\r\nvar FlexLayoutStrategy = Class.inherit({\r\n    ctor: function($element, option) {\r\n        this._$element = $element;\r\n        this._option = option\r\n    },\r\n    renderBox: function() {\r\n        this._$element.css({\r\n            display: styleUtils.stylePropPrefix(\"flexDirection\") + \"flex\"\r\n        });\r\n        setFlexProp(this._$element.get(0), \"flexDirection\", FLEX_DIRECTION_MAP[this._option(\"direction\")])\r\n    },\r\n    renderAlign: function() {\r\n        this._$element.css({\r\n            justifyContent: this._normalizedAlign()\r\n        })\r\n    },\r\n    _normalizedAlign: function() {\r\n        var align = this._option(\"align\");\r\n        return align in FLEX_JUSTIFY_CONTENT_MAP ? FLEX_JUSTIFY_CONTENT_MAP[align] : align\r\n    },\r\n    renderCrossAlign: function() {\r\n        this._$element.css({\r\n            alignItems: this._normalizedCrossAlign()\r\n        })\r\n    },\r\n    _normalizedCrossAlign: function() {\r\n        var crossAlign = this._option(\"crossAlign\");\r\n        return crossAlign in FLEX_ALIGN_ITEMS_MAP ? FLEX_ALIGN_ITEMS_MAP[crossAlign] : crossAlign\r\n    },\r\n    renderItems: function($items) {\r\n        var flexPropPrefix = styleUtils.stylePropPrefix(\"flexDirection\");\r\n        var direction = this._option(\"direction\");\r\n        each($items, function() {\r\n            var $item = $(this);\r\n            var item = $item.data(BOX_ITEM_DATA_KEY);\r\n            $item.css({\r\n                display: flexPropPrefix + \"flex\"\r\n            }).css(MAXSIZE_MAP[direction], item.maxSize || \"none\").css(MINSIZE_MAP[direction], item.minSize || \"0\");\r\n            setFlexProp($item.get(0), \"flexBasis\", item.baseSize || 0);\r\n            setFlexProp($item.get(0), \"flexGrow\", item.ratio);\r\n            setFlexProp($item.get(0), \"flexShrink\", isDefined(item.shrink) ? item.shrink : SHRINK);\r\n            $item.children().each(function(_, itemContent) {\r\n                $(itemContent).css({\r\n                    width: \"auto\",\r\n                    height: \"auto\",\r\n                    display: styleUtils.stylePropPrefix(\"flexDirection\") + \"flex\",\r\n                    flexBasis: 0\r\n                });\r\n                setFlexProp(itemContent, \"flexGrow\", 1);\r\n                setFlexProp(itemContent, \"flexDirection\", $(itemContent)[0].style.flexDirection || \"column\")\r\n            })\r\n        })\r\n    },\r\n    initSize: noop,\r\n    update: noop\r\n});\r\nvar BOX_EVENTNAMESPACE = \"dxBox\",\r\n    UPDATE_EVENT = \"dxupdate.\" + BOX_EVENTNAMESPACE,\r\n    FALLBACK_BOX_ITEM = \"dx-box-fallback-item\";\r\nvar FALLBACK_WRAP_MAP = {\r\n    row: \"nowrap\",\r\n    col: \"normal\"\r\n};\r\nvar FALLBACK_MAIN_SIZE_MAP = {\r\n    row: \"width\",\r\n    col: \"height\"\r\n};\r\nvar FALLBACK_CROSS_SIZE_MAP = {\r\n    row: \"height\",\r\n    col: \"width\"\r\n};\r\nvar FALLBACK_PRE_MARGIN_MAP = {\r\n    row: \"marginLeft\",\r\n    col: \"marginTop\"\r\n};\r\nvar FALLBACK_POST_MARGIN_MAP = {\r\n    row: \"marginRight\",\r\n    col: \"marginBottom\"\r\n};\r\nvar FALLBACK_CROSS_PRE_MARGIN_MAP = {\r\n    row: \"marginTop\",\r\n    col: \"marginLeft\"\r\n};\r\nvar FALLBACK_CROSS_POST_MARGIN_MAP = {\r\n    row: \"marginBottom\",\r\n    col: \"marginRight\"\r\n};\r\nvar MARGINS_RTL_FLIP_MAP = {\r\n    marginLeft: \"marginRight\",\r\n    marginRight: \"marginLeft\"\r\n};\r\nvar FallbackLayoutStrategy = Class.inherit({\r\n    ctor: function($element, option) {\r\n        this._$element = $element;\r\n        this._option = option\r\n    },\r\n    renderBox: function() {\r\n        this._$element.css({\r\n            fontSize: 0,\r\n            whiteSpace: FALLBACK_WRAP_MAP[this._option(\"direction\")],\r\n            verticalAlign: \"top\"\r\n        });\r\n        eventsEngine.off(this._$element, UPDATE_EVENT);\r\n        eventsEngine.on(this._$element, UPDATE_EVENT, this.update.bind(this))\r\n    },\r\n    renderAlign: function() {\r\n        var $items = this._$items;\r\n        if (!$items) {\r\n            return\r\n        }\r\n        var align = this._option(\"align\"),\r\n            shift = 0,\r\n            totalItemSize = this.totalItemSize,\r\n            direction = this._option(\"direction\"),\r\n            boxSize = this._$element[FALLBACK_MAIN_SIZE_MAP[direction]](),\r\n            freeSpace = boxSize - totalItemSize;\r\n        this._setItemsMargins($items, direction, 0);\r\n        switch (align) {\r\n            case \"start\":\r\n                break;\r\n            case \"end\":\r\n                shift = freeSpace;\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift);\r\n                break;\r\n            case \"center\":\r\n                shift = .5 * freeSpace;\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift);\r\n                $items.last().css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), shift);\r\n                break;\r\n            case \"space-between\":\r\n                shift = .5 * freeSpace / ($items.length - 1);\r\n                this._setItemsMargins($items, direction, shift);\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), 0);\r\n                $items.last().css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), 0);\r\n                break;\r\n            case \"space-around\":\r\n                shift = .5 * freeSpace / $items.length;\r\n                this._setItemsMargins($items, direction, shift)\r\n        }\r\n    },\r\n    _setItemsMargins: function($items, direction, shift) {\r\n        $items.css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift).css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), shift)\r\n    },\r\n    renderCrossAlign: function() {\r\n        var $items = this._$items;\r\n        if (!$items) {\r\n            return\r\n        }\r\n        var crossAlign = this._option(\"crossAlign\"),\r\n            direction = this._option(\"direction\"),\r\n            size = this._$element[FALLBACK_CROSS_SIZE_MAP[direction]]();\r\n        var that = this;\r\n        switch (crossAlign) {\r\n            case \"start\":\r\n                break;\r\n            case \"end\":\r\n                each($items, function() {\r\n                    var $item = $(this),\r\n                        itemSize = $item[FALLBACK_CROSS_SIZE_MAP[direction]](),\r\n                        shift = size - itemSize;\r\n                    $item.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), shift)\r\n                });\r\n                break;\r\n            case \"center\":\r\n                each($items, function() {\r\n                    var $item = $(this),\r\n                        itemSize = $item[FALLBACK_CROSS_SIZE_MAP[direction]](),\r\n                        shift = .5 * (size - itemSize);\r\n                    $item.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), shift).css(that._chooseMarginSide(FALLBACK_CROSS_POST_MARGIN_MAP[direction]), shift)\r\n                });\r\n                break;\r\n            case \"stretch\":\r\n                $items.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), 0).css(that._chooseMarginSide(FALLBACK_CROSS_POST_MARGIN_MAP[direction]), 0).css(FALLBACK_CROSS_SIZE_MAP[direction], \"100%\")\r\n        }\r\n    },\r\n    _chooseMarginSide: function(value) {\r\n        if (!this._option(\"rtlEnabled\")) {\r\n            return value\r\n        }\r\n        return MARGINS_RTL_FLIP_MAP[value] || value\r\n    },\r\n    renderItems: function($items) {\r\n        this._$items = $items;\r\n        var direction = this._option(\"direction\"),\r\n            totalRatio = 0,\r\n            totalWeightedShrink = 0,\r\n            totalBaseSize = 0;\r\n        each($items, function(_, item) {\r\n            var $item = $(item);\r\n            $item.css({\r\n                display: \"inline-block\",\r\n                verticalAlign: \"top\"\r\n            });\r\n            $item[FALLBACK_MAIN_SIZE_MAP[direction]](\"auto\");\r\n            $item.removeClass(FALLBACK_BOX_ITEM);\r\n            var itemData = $item.data(BOX_ITEM_DATA_KEY),\r\n                ratio = itemData.ratio || 0,\r\n                size = this._baseSize($item),\r\n                shrink = isDefined(itemData.shrink) ? itemData.shrink : SHRINK;\r\n            totalRatio += ratio;\r\n            totalWeightedShrink += shrink * size;\r\n            totalBaseSize += size\r\n        }.bind(this));\r\n        var freeSpaceSize = this._boxSize() - totalBaseSize;\r\n        var itemSize = function($item) {\r\n            var itemData = $item.data(BOX_ITEM_DATA_KEY),\r\n                size = this._baseSize($item),\r\n                factor = freeSpaceSize >= 0 ? itemData.ratio || 0 : (isDefined(itemData.shrink) ? itemData.shrink : SHRINK) * size,\r\n                totalFactor = freeSpaceSize >= 0 ? totalRatio : totalWeightedShrink,\r\n                shift = totalFactor ? Math.round(freeSpaceSize * factor / totalFactor) : 0;\r\n            return size + shift\r\n        }.bind(this);\r\n        var totalItemSize = 0;\r\n        each($items, function(_, item) {\r\n            var $item = $(item),\r\n                itemData = $(item).data(BOX_ITEM_DATA_KEY),\r\n                size = itemSize($item);\r\n            totalItemSize += size;\r\n            $item.css(MAXSIZE_MAP[direction], itemData.maxSize || \"none\").css(MINSIZE_MAP[direction], itemData.minSize || \"0\").css(FALLBACK_MAIN_SIZE_MAP[direction], size);\r\n            $item.addClass(FALLBACK_BOX_ITEM)\r\n        });\r\n        this.totalItemSize = totalItemSize\r\n    },\r\n    _baseSize: function(item) {\r\n        var itemData = $(item).data(BOX_ITEM_DATA_KEY);\r\n        return null == itemData.baseSize ? 0 : \"auto\" === itemData.baseSize ? this._contentSize(item) : this._parseSize(itemData.baseSize)\r\n    },\r\n    _contentSize: function(item) {\r\n        return $(item)[FALLBACK_MAIN_SIZE_MAP[this._option(\"direction\")]]()\r\n    },\r\n    _parseSize: function(size) {\r\n        return String(size).match(/.+%$/) ? .01 * parseFloat(size) * this._boxSizeValue : size\r\n    },\r\n    _boxSize: function(value) {\r\n        if (!arguments.length) {\r\n            this._boxSizeValue = this._boxSizeValue || this._totalBaseSize();\r\n            return this._boxSizeValue\r\n        }\r\n        this._boxSizeValue = value\r\n    },\r\n    _totalBaseSize: function() {\r\n        var result = 0;\r\n        each(this._$items, function(_, item) {\r\n            result += this._baseSize(item)\r\n        }.bind(this));\r\n        return result\r\n    },\r\n    initSize: function() {\r\n        this._boxSize(this._$element[FALLBACK_MAIN_SIZE_MAP[this._option(\"direction\")]]())\r\n    },\r\n    update: function() {\r\n        if (!this._$items || this._$element.is(\":hidden\")) {\r\n            return\r\n        }\r\n        this._$items.detach();\r\n        this.initSize();\r\n        this._$element.append(this._$items);\r\n        this.renderItems(this._$items);\r\n        this.renderAlign();\r\n        this.renderCrossAlign();\r\n        var element = this._$element.get(0);\r\n        this._$items.find(BOX_SELECTOR).each(function() {\r\n            if (element === $(this).parent().closest(BOX_SELECTOR).get(0)) {\r\n                eventsEngine.triggerHandler(this, UPDATE_EVENT)\r\n            }\r\n        })\r\n    }\r\n});\r\nvar Box = CollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            direction: \"row\",\r\n            align: \"start\",\r\n            crossAlign: \"stretch\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            _layoutStrategy: \"flex\",\r\n            _queue: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function device() {\r\n                var device = devices.real();\r\n                var isOldAndroid = \"android\" === device.platform && (device.version[0] < 4 || 4 === device.version[0] && device.version[1] < 4),\r\n                    isOldIos = \"ios\" === device.platform && device.version[0] < 7;\r\n                return \"win\" === device.platform || browser.msie || isOldAndroid || isOldIos\r\n            },\r\n            options: {\r\n                _layoutStrategy: \"fallback\"\r\n            }\r\n        }])\r\n    },\r\n    _itemClass: function() {\r\n        return BOX_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    },\r\n    _itemElements: function() {\r\n        return this._itemContainer().children(this._itemSelector())\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(BOX_CLASS + \"-\" + this.option(\"_layoutStrategy\"));\r\n        this._initLayout();\r\n        this._initBoxQueue()\r\n    },\r\n    _initLayout: function() {\r\n        this._layout = \"fallback\" === this.option(\"_layoutStrategy\") ? new FallbackLayoutStrategy(this.$element(), this.option.bind(this)) : new FlexLayoutStrategy(this.$element(), this.option.bind(this))\r\n    },\r\n    _initBoxQueue: function() {\r\n        this._queue = this.option(\"_queue\") || []\r\n    },\r\n    _queueIsNotEmpty: function() {\r\n        return this.option(\"_queue\") ? false : !!this._queue.length\r\n    },\r\n    _pushItemToQueue: function($item, config) {\r\n        this._queue.push({\r\n            $item: $item,\r\n            config: config\r\n        })\r\n    },\r\n    _shiftItemFromQueue: function() {\r\n        return this._queue.shift()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(BOX_CLASS);\r\n        this._layout.renderBox();\r\n        this.callBase();\r\n        this._renderAlign();\r\n        this._renderActions()\r\n    },\r\n    _renderActions: function() {\r\n        this._onItemStateChanged = this._createActionByOption(\"onItemStateChanged\")\r\n    },\r\n    _renderAlign: function() {\r\n        this._layout.renderAlign();\r\n        this._layout.renderCrossAlign()\r\n    },\r\n    _renderItems: function(items) {\r\n        this._layout.initSize();\r\n        this.callBase(items);\r\n        while (this._queueIsNotEmpty()) {\r\n            var item = this._shiftItemFromQueue();\r\n            this._createComponent(item.$item, Box, extend({\r\n                _layoutStrategy: this.option(\"_layoutStrategy\"),\r\n                itemTemplate: this.option(\"itemTemplate\"),\r\n                itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n                onItemHold: this.option(\"onItemHold\"),\r\n                onItemClick: this.option(\"onItemClick\"),\r\n                onItemContextMenu: this.option(\"onItemContextMenu\"),\r\n                onItemRendered: this.option(\"onItemRendered\"),\r\n                _queue: this._queue\r\n            }, item.config))\r\n        }\r\n        this._layout.renderItems(this._itemElements());\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = setTimeout(function() {\r\n            if (!this._isUpdated) {\r\n                this._layout.update()\r\n            }\r\n            this._isUpdated = false;\r\n            this._updateTimer = null\r\n        }.bind(this))\r\n    },\r\n    _renderItemContent: function(args) {\r\n        var $itemNode = args.itemData && args.itemData.node;\r\n        if ($itemNode) {\r\n            return this._renderItemContentByNode(args, $itemNode)\r\n        }\r\n        return this.callBase(args)\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        var boxConfig = args.itemData.box;\r\n        if (!boxConfig) {\r\n            return\r\n        }\r\n        this._pushItemToQueue(args.itemContent, boxConfig)\r\n    },\r\n    _createItemByTemplate: function(itemTemplate, args) {\r\n        if (args.itemData.box) {\r\n            return itemTemplate.source ? itemTemplate.source() : $()\r\n        }\r\n        return this.callBase(itemTemplate, args)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this._updateTimer) {\r\n            return\r\n        }\r\n        this._isUpdated = true;\r\n        this._layout.update()\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _itemOptionChanged: function(item, property, value, oldValue) {\r\n        if (\"visible\" === property) {\r\n            this._onItemStateChanged({\r\n                name: property,\r\n                state: value,\r\n                oldState: false !== oldValue\r\n            })\r\n        }\r\n        this.callBase(item, property, value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"_layoutStrategy\":\r\n            case \"_queue\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            case \"align\":\r\n                this._layout.renderAlign();\r\n                break;\r\n            case \"crossAlign\":\r\n                this._layout.renderCrossAlign();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _itemOptions: function() {\r\n        var that = this,\r\n            options = this.callBase();\r\n        options.fireItemStateChangedAction = function(e) {\r\n            that._onItemStateChanged(e)\r\n        };\r\n        return options\r\n    },\r\n    repaint: function() {\r\n        this._dimensionChanged()\r\n    }\r\n});\r\nBox.ItemClass = BoxItem;\r\nregisterComponent(\"dxBox\", Box);\r\nmodule.exports = Box;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/box.js\n// module id = 750\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/number_box/number_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar registerComponent = require(\"../../core/component_registrator\"),\r\n    NumberBoxMask = require(\"./number_box.mask\");\r\nregisterComponent(\"dxNumberBox\", NumberBoxMask);\r\nmodule.exports = NumberBoxMask;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.js\n// module id = 753\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/number_box/number_box.mask.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar eventsEngine = require(\"../../events/core/events_engine\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    isNumeric = require(\"../../core/utils/type\").isNumeric,\r\n    browser = require(\"../../core/utils/browser\"),\r\n    fitIntoRange = require(\"../../core/utils/math\").fitIntoRange,\r\n    inRange = require(\"../../core/utils/math\").inRange,\r\n    escapeRegExp = require(\"../../core/utils/common\").escapeRegExp,\r\n    number = require(\"../../localization/number\"),\r\n    maskCaret = require(\"./number_box.caret\"),\r\n    getLDMLFormat = require(\"../../localization/ldml/number\").getFormat,\r\n    NumberBoxBase = require(\"./number_box.base\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    typeUtils = require(\"../../core/utils/type\");\r\nvar NUMBER_FORMATTER_NAMESPACE = \"dxNumberFormatter\",\r\n    MOVE_FORWARD = 1,\r\n    MOVE_BACKWARD = -1,\r\n    MINUS = \"-\",\r\n    NUMPUD_MINUS_KEY_IE = \"Subtract\",\r\n    INPUT_EVENT = \"input\";\r\nvar ensureDefined = function(value, defaultValue) {\r\n    return void 0 === value ? defaultValue : value\r\n};\r\nvar NumberBoxMask = NumberBoxBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            useMaskBehavior: true,\r\n            format: null\r\n        })\r\n    },\r\n    _isDeleteKey: function(key) {\r\n        return \"Delete\" === key || \"Del\" === key\r\n    },\r\n    _supportedKeys: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        return extend(this.callBase(), {\r\n            minus: that._revertSign.bind(that),\r\n            del: that._removeHandler.bind(that),\r\n            backspace: that._removeHandler.bind(that),\r\n            leftArrow: that._arrowHandler.bind(that, MOVE_BACKWARD),\r\n            rightArrow: that._arrowHandler.bind(that, MOVE_FORWARD),\r\n            home: that._moveCaretToBoundary.bind(that, MOVE_FORWARD),\r\n            enter: that._updateFormattedValue.bind(that),\r\n            end: that._moveCaretToBoundary.bind(that, MOVE_BACKWARD)\r\n        })\r\n    },\r\n    _focusInHandler: function(e) {\r\n        this.callBase(e);\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            return\r\n        }\r\n        if (browser.msie) {\r\n            clearTimeout(this._ieCaretTimeout);\r\n            this._ieCaretTimeout = setTimeout(this._moveCaretToBoundary.bind(this, MOVE_BACKWARD, e))\r\n        } else {\r\n            this._moveCaretToBoundary(MOVE_BACKWARD, e)\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this._focusOutOccurs = true;\r\n        if (this._useMaskBehavior()) {\r\n            this._updateFormattedValue()\r\n        }\r\n        this.callBase(e);\r\n        this._focusOutOccurs = false\r\n    },\r\n    _updateFormattedValue: function() {\r\n        this._parsedValue = this._tryParse(this._getInputVal(), this._caret());\r\n        this._adjustParsedValue();\r\n        this._setTextByParsedValue();\r\n        if (this._isValueDirty()) {\r\n            this._isDirty = false;\r\n            eventsEngine.trigger(this._input(), \"change\")\r\n        }\r\n    },\r\n    _isValueDirty: function() {\r\n        return this._isDirty || this._parsedValue !== this.option(\"value\")\r\n    },\r\n    _arrowHandler: function(step, e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this._getInputVal(),\r\n            format = this._getFormatPattern(),\r\n            nextCaret = maskCaret.getCaretWithOffset(this._caret(), step);\r\n        if (!maskCaret.isCaretInBoundaries(nextCaret, text, format)) {\r\n            nextCaret = step === MOVE_FORWARD ? nextCaret.end : nextCaret.start;\r\n            e.preventDefault();\r\n            this._caret(maskCaret.getCaretInBoundaries(nextCaret, text, format))\r\n        }\r\n    },\r\n    _moveCaretToBoundary: function(direction, e) {\r\n        if (!this._useMaskBehavior() || e.shiftKey) {\r\n            return\r\n        }\r\n        var boundaries = maskCaret.getCaretBoundaries(this._getInputVal(), this._getFormatPattern()),\r\n            newCaret = maskCaret.getCaretWithOffset(direction === MOVE_FORWARD ? boundaries.start : boundaries.end, 0);\r\n        this._caret(newCaret);\r\n        e && e.preventDefault()\r\n    },\r\n    _shouldMoveCaret: function(text, caret) {\r\n        var decimalSeparator = number.getDecimalSeparator(),\r\n            isDecimalSeparatorNext = text.charAt(caret.end) === decimalSeparator,\r\n            isZeroNext = \"0\" === text.charAt(caret.end),\r\n            moveToFloat = this._lastKey === decimalSeparator && isDecimalSeparatorNext,\r\n            zeroToZeroReplace = \"0\" === this._lastKey && isZeroNext;\r\n        return moveToFloat || zeroToZeroReplace\r\n    },\r\n    _getInputVal: function() {\r\n        return number.convertDigits(this._input().val(), true)\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        this._lastKey = number.convertDigits(e.originalEvent.key, true);\r\n        if (!this._shouldHandleKey(e.originalEvent)) {\r\n            return this.callBase(e)\r\n        }\r\n        var text = this._getInputVal(),\r\n            caret = this._caret();\r\n        var enteredChar = this._lastKey === MINUS ? \"\" : this._lastKey,\r\n            newValue = this._tryParse(text, caret, enteredChar);\r\n        if (void 0 === newValue) {\r\n            if (this._lastKey !== MINUS) {\r\n                e.originalEvent.preventDefault()\r\n            }\r\n            if (this._shouldMoveCaret(text, caret)) {\r\n                this._moveCaret(1)\r\n            }\r\n        } else {\r\n            this._parsedValue = newValue\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _removeHandler: function(e) {\r\n        var caret = this._caret(),\r\n            text = this._getInputVal(),\r\n            start = caret.start,\r\n            end = caret.end;\r\n        this._lastKey = e.key;\r\n        if (caret.start === caret.end) {\r\n            this._isDeleteKey(e.key) ? end++ : start--\r\n        }\r\n        var char = text.slice(start, end);\r\n        if (this._isStub(char)) {\r\n            this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n            if (this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0)) {\r\n                this._revertSign(e);\r\n                this._setTextByParsedValue()\r\n            }\r\n            e.preventDefault();\r\n            return\r\n        }\r\n        var decimalSeparator = number.getDecimalSeparator();\r\n        if (char === decimalSeparator) {\r\n            var decimalSeparatorIndex = text.indexOf(decimalSeparator);\r\n            if (this._isNonStubAfter(decimalSeparatorIndex + 1)) {\r\n                this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n                e.preventDefault()\r\n            }\r\n            return\r\n        }\r\n        if (end - start < text.length) {\r\n            var editedText = this._replaceSelectedText(text, {\r\n                    start: start,\r\n                    end: end\r\n                }, \"\"),\r\n                noDigits = editedText.search(/[0-9]/) < 0;\r\n            if (noDigits && this._isValueInRange(0)) {\r\n                this._parsedValue = this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0) ? -0 : 0;\r\n                return\r\n            }\r\n        }\r\n        var valueAfterRemoving = this._tryParse(text, {\r\n            start: start,\r\n            end: end\r\n        }, \"\");\r\n        if (void 0 === valueAfterRemoving) {\r\n            e.preventDefault()\r\n        } else {\r\n            this._parsedValue = valueAfterRemoving\r\n        }\r\n    },\r\n    _isPercentFormat: function() {\r\n        var format = this._getFormatPattern(),\r\n            noEscapedFormat = format.replace(/'[^']+'/g, \"\");\r\n        return noEscapedFormat.indexOf(\"%\") !== -1\r\n    },\r\n    _parse: function(text, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomParser = typeUtils.isFunction(formatOption.formatter),\r\n            parser = isCustomParser ? formatOption.parser : number.parse;\r\n        return parser(text, format)\r\n    },\r\n    _format: function(value, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomFormatter = typeUtils.isFunction(formatOption.formatter),\r\n            formatter = isCustomFormatter ? formatOption.formatter : number.format;\r\n        return formatter(value, format)\r\n    },\r\n    _getFormatPattern: function() {\r\n        var format = this.option(\"format\"),\r\n            isLDMLPattern = \"string\" === typeof format && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        if (isLDMLPattern) {\r\n            return format\r\n        } else {\r\n            return getLDMLFormat(function(value) {\r\n                return this._format(value, format)\r\n            }.bind(this))\r\n        }\r\n    },\r\n    _getFormatForSign: function(text) {\r\n        var format = this._getFormatPattern(),\r\n            signParts = format.split(\";\"),\r\n            sign = number.getSign(text, format);\r\n        signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n        return sign < 0 ? signParts[1] : signParts[0]\r\n    },\r\n    _removeStubs: function(text, excludeComma) {\r\n        var format = this._getFormatForSign(text),\r\n            thousandsSeparator = number.getThousandsSeparator(),\r\n            stubs = format.replace(/[#0.,]/g, \"\"),\r\n            regExp = new RegExp(\"[-\" + escapeRegExp((excludeComma ? \"\" : thousandsSeparator) + stubs) + \"]\", \"g\");\r\n        return text.replace(regExp, \"\")\r\n    },\r\n    _truncateToPrecision: function(value, decimalSeparator, maxPrecision) {\r\n        if (typeUtils.isDefined(value)) {\r\n            var strValue = value.toString(),\r\n                decimalSeparatorIndex = strValue.indexOf(decimalSeparator);\r\n            if (strValue && decimalSeparatorIndex > -1) {\r\n                var parsedValue = parseFloat(strValue.substr(0, decimalSeparatorIndex + maxPrecision + 1));\r\n                return isNaN(parsedValue) ? value : parsedValue\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _tryParse: function(text, selection, char) {\r\n        var editedText = this._replaceSelectedText(text, selection, char),\r\n            format = this._getFormatPattern(),\r\n            isTextSelected = selection.start !== selection.end,\r\n            parsed = this._parse(editedText, format),\r\n            maxPrecision = this._getPrecisionLimits(format, editedText).max,\r\n            isValueChanged = parsed !== this._parsedValue,\r\n            decimalSeparator = number.getDecimalSeparator();\r\n        var isDecimalPointRestricted = char === decimalSeparator && 0 === maxPrecision,\r\n            isUselessCharRestricted = !isTextSelected && !isValueChanged && char !== MINUS && !this._isValueIncomplete(editedText) && this._isStub(char);\r\n        if (isDecimalPointRestricted || isUselessCharRestricted) {\r\n            return\r\n        }\r\n        if (\"\" === editedText) {\r\n            parsed = 0\r\n        }\r\n        if (isNaN(parsed)) {\r\n            return\r\n        }\r\n        var value = null === parsed ? this._parsedValue : parsed;\r\n        parsed = this._truncateToPrecision(value, decimalSeparator, maxPrecision);\r\n        return this._isPercentFormat() ? parsed && parsed / 100 : parsed\r\n    },\r\n    _isValueIncomplete: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        var caret = this._caret(),\r\n            point = number.getDecimalSeparator(),\r\n            pointIndex = text.indexOf(point),\r\n            isCaretOnFloat = pointIndex > 0 && pointIndex < caret.start,\r\n            textParts = this._removeStubs(text, true).split(point);\r\n        if (!isCaretOnFloat || 2 !== textParts.length) {\r\n            return false\r\n        }\r\n        var floatLength = textParts[1].length,\r\n            precision = this._getPrecisionLimits(this._getFormatPattern(), text),\r\n            isPrecisionInRange = inRange(floatLength, precision.min, precision.max),\r\n            endsWithZero = \"0\" === textParts[1].charAt(floatLength - 1);\r\n        return isPrecisionInRange && (endsWithZero || !floatLength)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        var min = ensureDefined(this.option(\"min\"), -(1 / 0)),\r\n            max = ensureDefined(this.option(\"max\"), 1 / 0);\r\n        return inRange(value, min, max)\r\n    },\r\n    _setInputText: function(text) {\r\n        var newCaret = maskCaret.getCaretAfterFormat(this._getInputVal(), text, this._caret(), this._getFormatPattern()),\r\n            newValue = number.convertDigits(text);\r\n        if (this._formattedValue !== newValue) {\r\n            this._isDirty = true\r\n        }\r\n        this._input().val(newValue);\r\n        this._toggleEmptinessEventHandler();\r\n        this._formattedValue = text;\r\n        if (!this._focusOutOccurs) {\r\n            this._caret(newCaret)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return !!this.option(\"format\") && this.option(\"useMaskBehavior\")\r\n    },\r\n    _renderInputType: function() {\r\n        var isNumberType = \"number\" === this.option(\"mode\");\r\n        if (this._useMaskBehavior() && isNumberType) {\r\n            this._setInputType(\"tel\")\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isChar: function(str) {\r\n        return \"string\" === typeof str && 1 === str.length\r\n    },\r\n    _moveCaret: function(offset) {\r\n        if (!offset) {\r\n            return\r\n        }\r\n        var newCaret = maskCaret.getCaretWithOffset(this._caret(), offset),\r\n            adjustedCaret = maskCaret.getCaretInBoundaries(newCaret, this._getInputVal(), this._getFormatPattern());\r\n        this._caret(adjustedCaret)\r\n    },\r\n    _shouldHandleKey: function(e) {\r\n        var isSpecialChar = e.ctrlKey || e.shiftKey || e.altKey || !this._isChar(e.key),\r\n            isMinusKey = e.key === MINUS,\r\n            useMaskBehavior = this._useMaskBehavior();\r\n        return useMaskBehavior && !isSpecialChar && !isMinusKey\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderFormatter()\r\n    },\r\n    _renderFormatter: function() {\r\n        this._clearCache();\r\n        this._detachFormatterEvents();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachFormatterEvents()\r\n        }\r\n    },\r\n    _detachFormatterEvents: function() {\r\n        eventsEngine.off(this._input(), \".\" + NUMBER_FORMATTER_NAMESPACE)\r\n    },\r\n    _attachFormatterEvents: function() {\r\n        var $input = this._input();\r\n        eventsEngine.on($input, eventUtils.addNamespace(INPUT_EVENT, NUMBER_FORMATTER_NAMESPACE), this._formatValue.bind(this));\r\n        eventsEngine.on($input, eventUtils.addNamespace(\"dxclick\", NUMBER_FORMATTER_NAMESPACE), function() {\r\n            this._caret(maskCaret.getCaretInBoundaries(this._caret(), this._getInputVal(), this._getFormatPattern()))\r\n        }.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n    },\r\n    _isNonStubAfter: function(index, text) {\r\n        text = (text || this._getInputVal()).slice(index);\r\n        return text && !this._isStub(text, true)\r\n    },\r\n    _isStub: function(str, isString) {\r\n        var escapedDecimalSeparator = escapeRegExp(number.getDecimalSeparator()),\r\n            regExpString = \"^[^0-9\" + escapedDecimalSeparator + \"]+$\",\r\n            stubRegExp = new RegExp(regExpString, \"g\");\r\n        return stubRegExp.test(str) && (isString || this._isChar(str))\r\n    },\r\n    _parseValue: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        return this._parsedValue\r\n    },\r\n    _getPrecisionLimits: function(text) {\r\n        var currentFormat = this._getFormatForSign(text),\r\n            floatPart = (currentFormat.split(\".\")[1] || \"\").replace(/[^#0]/g, \"\"),\r\n            minPrecision = floatPart.replace(/^(0*)#*/, \"$1\").length,\r\n            maxPrecision = floatPart.length;\r\n        return {\r\n            min: minPrecision,\r\n            max: maxPrecision\r\n        }\r\n    },\r\n    _revertSign: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            if (e.key === MINUS || e.key === NUMPUD_MINUS_KEY_IE) {\r\n                this._applyRevertedSign(e, caret, true);\r\n                return\r\n            } else {\r\n                this._caret(maskCaret.getCaretInBoundaries(0, this._getInputVal(), this._getFormatPattern()))\r\n            }\r\n        }\r\n        this._applyRevertedSign(e, caret)\r\n    },\r\n    _applyRevertedSign: function(e, caret, preserveSelectedText) {\r\n        var newValue = -1 * ensureDefined(this._parsedValue, null);\r\n        if (this._isValueInRange(newValue)) {\r\n            this._parsedValue = newValue;\r\n            if (preserveSelectedText) {\r\n                var format = this._getFormatPattern(),\r\n                    previousText = this._getInputVal();\r\n                this._setTextByParsedValue();\r\n                e.preventDefault();\r\n                var currentText = this._getInputVal(),\r\n                    offset = maskCaret.getCaretOffset(previousText, currentText, format);\r\n                caret = maskCaret.getCaretWithOffset(caret, offset);\r\n                var caretInBoundaries = maskCaret.getCaretInBoundaries(caret, currentText, format);\r\n                if (browser.msie) {\r\n                    clearTimeout(this._ieCaretTimeout);\r\n                    this._ieCaretTimeout = setTimeout(this._caret.bind(this, caretInBoundaries))\r\n                } else {\r\n                    this._caret(caretInBoundaries)\r\n                }\r\n            }\r\n            if (e.key === NUMPUD_MINUS_KEY_IE) {\r\n                eventsEngine.trigger(this._input(), INPUT_EVENT)\r\n            }\r\n        }\r\n    },\r\n    _removeMinusFromText: function(text, caret) {\r\n        var isMinusPressed = this._lastKey === MINUS && text.charAt(caret.start - 1) === MINUS;\r\n        return isMinusPressed ? this._replaceSelectedText(text, {\r\n            start: caret.start - 1,\r\n            end: caret.start\r\n        }, \"\") : text\r\n    },\r\n    _setTextByParsedValue: function() {\r\n        var format = this._getFormatPattern(),\r\n            parsed = this._parseValue(),\r\n            formatted = this._format(parsed, format) || \"\";\r\n        this._setInputText(formatted)\r\n    },\r\n    _formatValue: function() {\r\n        var text = this._getInputVal(),\r\n            caret = this._caret(),\r\n            textWithoutMinus = this._removeMinusFromText(text, caret),\r\n            wasMinusRemoved = textWithoutMinus !== text;\r\n        this._isDirty = false;\r\n        text = textWithoutMinus;\r\n        if (this._isValueIncomplete(textWithoutMinus)) {\r\n            this._formattedValue = text;\r\n            if (wasMinusRemoved) {\r\n                this._setTextByParsedValue()\r\n            }\r\n            return\r\n        }\r\n        var textWasChanged = this._formattedValue !== text;\r\n        if (textWasChanged) {\r\n            var value = this._tryParse(text, caret, \"\");\r\n            if (typeUtils.isDefined(value)) {\r\n                this._parsedValue = value\r\n            }\r\n        }\r\n        this._setTextByParsedValue()\r\n    },\r\n    _renderDisplayText: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._toggleEmptinessEventHandler()\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._parsedValue = this.option(\"value\");\r\n            this._setTextByParsedValue()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _adjustParsedValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var clearedText = this._removeStubs(this._getInputVal()),\r\n            parsedValue = clearedText ? this._parseValue() : null;\r\n        if (!isNumeric(parsedValue)) {\r\n            this._parsedValue = parsedValue;\r\n            return\r\n        }\r\n        this._parsedValue = fitIntoRange(parsedValue, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(e)\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this._lastKey = null;\r\n        this._adjustParsedValue();\r\n        this.option(\"value\", this._parsedValue)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"format\":\r\n            case \"useMaskBehavior\":\r\n                this._renderFormatter();\r\n                this._renderValue();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._adjustParsedValue();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionValuesEqual: function(name, oldValue, newValue) {\r\n        if (\"value\" === name && 0 === oldValue && 0 === newValue) {\r\n            return 1 / oldValue === 1 / newValue\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _clearCache: function() {\r\n        delete this._formattedValue;\r\n        delete this._lastKey;\r\n        delete this._parsedValue;\r\n        delete this._isDirty;\r\n        delete this._focusOutOccurs;\r\n        clearTimeout(this._ieCaretTimeout);\r\n        delete this._ieCaretTimeout\r\n    },\r\n    _clean: function() {\r\n        this._clearCache();\r\n        this.callBase()\r\n    }\r\n});\r\nmodule.exports = NumberBoxMask;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.mask.js\n// module id = 754\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/number_box/number_box.caret.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar fitIntoRange = require(\"../../core/utils/math\").fitIntoRange,\r\n    escapeRegExp = require(\"../../core/utils/common\").escapeRegExp,\r\n    number = require(\"../../localization/number\");\r\nvar getCaretBoundaries = function(text, format) {\r\n    var signParts = format.split(\";\"),\r\n        sign = number.getSign(text, format);\r\n    signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n    format = sign < 0 ? signParts[1] : signParts[0];\r\n    var clearedFormat = format.replace(/'([^']*)'/g, \"$1\"),\r\n        result = /^([^#0\\.,]*)([#0\\.,]*)([^#0\\.,]*)$/.exec(clearedFormat);\r\n    var startBorder = result[1].length,\r\n        endBorder = text.length - result[3].length;\r\n    return {\r\n        start: startBorder,\r\n        end: endBorder\r\n    }\r\n};\r\nvar _getDigitCountBeforeIndex = function(index, text) {\r\n    var decimalSeparator = number.getDecimalSeparator(),\r\n        regExp = new RegExp(\"[^0-9\" + escapeRegExp(decimalSeparator) + \"]\", \"g\"),\r\n        textBeforePosition = text.slice(0, index);\r\n    return textBeforePosition.replace(regExp, \"\").length\r\n};\r\nvar _reverseText = function(text) {\r\n    return text.split(\"\").reverse().join(\"\")\r\n};\r\nvar _getDigitPositionByIndex = function(digitIndex, text) {\r\n    if (!digitIndex) {\r\n        return -1\r\n    }\r\n    var regExp = /[0-9]/g,\r\n        counter = 1,\r\n        index = null,\r\n        result = regExp.exec(text);\r\n    while (result) {\r\n        index = result.index;\r\n        if (!digitIndex || counter >= digitIndex) {\r\n            return index\r\n        }\r\n        counter++;\r\n        result = regExp.exec(text)\r\n    }\r\n    return null === index ? text.length : index\r\n};\r\nvar getCaretWithOffset = function(caret, offset) {\r\n    if (void 0 === caret.start) {\r\n        caret = {\r\n            start: caret,\r\n            end: caret\r\n        }\r\n    }\r\n    return {\r\n        start: caret.start + offset,\r\n        end: caret.end + offset\r\n    }\r\n};\r\nvar getCaretAfterFormat = function(text, formatted, caret, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var point = number.getDecimalSeparator(),\r\n        pointPosition = text.indexOf(point),\r\n        newPointPosition = formatted.indexOf(point),\r\n        textParts = text.split(point),\r\n        formattedParts = formatted.split(point),\r\n        isCaretOnFloat = pointPosition !== -1 && caret.start > pointPosition;\r\n    if (isCaretOnFloat) {\r\n        var relativeIndex = caret.start - pointPosition - 1,\r\n            digitsBefore = _getDigitCountBeforeIndex(relativeIndex, textParts[1]),\r\n            newPosition = formattedParts[1] ? newPointPosition + 1 + _getDigitPositionByIndex(digitsBefore, formattedParts[1]) + 1 : formatted.length;\r\n        return getCaretInBoundaries(newPosition, formatted, format)\r\n    } else {\r\n        var positionFromEnd = textParts[0].length - caret.start,\r\n            digitsFromEnd = _getDigitCountBeforeIndex(positionFromEnd, _reverseText(textParts[0])),\r\n            newPositionFromEnd = _getDigitPositionByIndex(digitsFromEnd, _reverseText(formattedParts[0])),\r\n            newPositionFromBegin = formattedParts[0].length - (newPositionFromEnd + 1);\r\n        return getCaretInBoundaries(newPositionFromBegin, formatted, format)\r\n    }\r\n};\r\nvar isCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretInBoundaries(caret, text, format);\r\n    return caret.start >= boundaries.start && caret.end <= boundaries.end\r\n};\r\nvar getCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretBoundaries(text, format),\r\n        adjustedCaret = {\r\n            start: fitIntoRange(caret.start, boundaries.start, boundaries.end),\r\n            end: fitIntoRange(caret.end, boundaries.start, boundaries.end)\r\n        };\r\n    return adjustedCaret\r\n};\r\nvar getCaretOffset = function(previousText, newText, format) {\r\n    var previousBoundaries = getCaretBoundaries(previousText, format),\r\n        newBoundaries = getCaretBoundaries(newText, format);\r\n    return newBoundaries.start - previousBoundaries.start\r\n};\r\nexports.getCaretBoundaries = getCaretBoundaries;\r\nexports.isCaretInBoundaries = isCaretInBoundaries;\r\nexports.getCaretWithOffset = getCaretWithOffset;\r\nexports.getCaretInBoundaries = getCaretInBoundaries;\r\nexports.getCaretAfterFormat = getCaretAfterFormat;\r\nexports.getCaretOffset = getCaretOffset;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.caret.js\n// module id = 755\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    mathUtils = require(\"../../core/utils/math\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    focused = require(\"../widget/selectors\").focused,\r\n    devices = require(\"../../core/devices\"),\r\n    TextEditor = require(\"../text_box/ui.text_editor\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    wheelEvent = require(\"../../events/core/wheel\"),\r\n    SpinButton = require(\"./number_box.spin\"),\r\n    messageLocalization = require(\"../../localization/message\");\r\nvar math = Math;\r\nvar WIDGET_CLASS = \"dx-numberbox\",\r\n    SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\",\r\n    SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\r\nvar FIREFOX_CONTROL_KEYS = [\"Tab\", \"Del\", \"Delete\", \"Backspace\", \"Left\", \"ArrowLeft\", \"Right\", \"ArrowRight\", \"Home\", \"End\", \"Enter\"];\r\nvar NumberBoxBase = TextEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinUpChangeHandler(e)\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinDownChangeHandler(e)\r\n            },\r\n            enter: function() {}\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            step: 1,\r\n            showSpinButtons: false,\r\n            useLargeSpinButtons: true,\r\n            mode: \"text\",\r\n            invalidValueMessage: messageLocalization.format(\"dxNumberBox-invalidValueMessage\")\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return devices.real().generic && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                useLargeSpinButtons: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"generic\" !== devices.real().platform\r\n            },\r\n            options: {\r\n                mode: \"number\"\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\r\n        this.setAria(\"role\", \"spinbutton\");\r\n        this._renderMouseWheelHandler()\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        this._$submitElement.val(commonUtils.applyServerDecimalSeparator(value))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        var ch = e.key || String.fromCharCode(e.which),\r\n            validCharRegExp = /[\\d.,eE\\-+]|Subtract/,\r\n            isInputCharValid = validCharRegExp.test(ch);\r\n        if (!isInputCharValid) {\r\n            if (e.metaKey || e.ctrlKey || e.key && inArray(e.key, FIREFOX_CONTROL_KEYS) >= 0) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n        this._keyPressed = true\r\n    },\r\n    _renderMouseWheelHandler: function() {\r\n        var eventName = eventUtils.addNamespace(wheelEvent.name, this.NAME);\r\n        var mouseWheelAction = this._createAction(function(e) {\r\n            this._mouseWheelHandler(e.event)\r\n        }.bind(this));\r\n        eventsEngine.off(this._input(), eventName);\r\n        eventsEngine.on(this._input(), eventName, function(e) {\r\n            mouseWheelAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _mouseWheelHandler: function(dxEvent) {\r\n        if (!focused(this._input())) {\r\n            return\r\n        }\r\n        dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent);\r\n        dxEvent.preventDefault();\r\n        dxEvent.stopPropagation()\r\n    },\r\n    _renderValue: function() {\r\n        var inputValue = this._input().val();\r\n        if (!inputValue.length || Number(inputValue) !== this.option(\"value\")) {\r\n            this._forceValueRender();\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        var value = this.option(\"value\");\r\n        this._renderInputAddons();\r\n        this.setAria(\"valuenow\", value);\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _renderValueEventName: function() {\r\n        return this.callBase() + \" keypress\"\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        if (this._$spinUp) {\r\n            SpinButton.getInstance(this._$spinUp).option(\"disabled\", value)\r\n        }\r\n        if (this._$spinDown) {\r\n            SpinButton.getInstance(this._$spinDown).option(\"disabled\", value)\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _forceValueRender: function() {\r\n        var value = this.option(\"value\"),\r\n            number = Number(value),\r\n            formattedValue = isNaN(number) ? \"\" : this._applyValueFormat(value);\r\n        this._renderDisplayText(formattedValue)\r\n    },\r\n    _applyValueFormat: function(value) {\r\n        return this.option(\"valueFormat\")(value)\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().prop({\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            step: this.option(\"step\")\r\n        });\r\n        this.setAria({\r\n            valuemin: this.option(\"min\") || \"undefined\",\r\n            valuemax: this.option(\"max\") || \"undefined\"\r\n        })\r\n    },\r\n    _renderInputAddons: function() {\r\n        this.callBase();\r\n        this._renderSpinButtons()\r\n    },\r\n    _renderSpinButtons: function() {\r\n        var spinButtonsVisible = this.option(\"showSpinButtons\");\r\n        this.$element().toggleClass(SPIN_CLASS, spinButtonsVisible);\r\n        this._toggleTouchFriendlyClass();\r\n        if (!spinButtonsVisible) {\r\n            this._$spinContainer && this._$spinContainer.remove();\r\n            this._$spinContainer = null;\r\n            return\r\n        }\r\n        if (!this._$spinContainer) {\r\n            this._$spinContainer = this._createSpinButtons()\r\n        }\r\n        this._$spinContainer.prependTo(this._buttonsContainer())\r\n    },\r\n    _toggleTouchFriendlyClass: function() {\r\n        this.$element().toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, this.option(\"showSpinButtons\") && this.option(\"useLargeSpinButtons\"))\r\n    },\r\n    _createSpinButtons: function() {\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME);\r\n        var pointerDownAction = this._createAction(this._spinButtonsPointerDownHandler.bind(this));\r\n        var $spinContainer = $(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\r\n        eventsEngine.off($spinContainer, eventName);\r\n        eventsEngine.on($spinContainer, eventName, function(e) {\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        this._$spinUp = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinUp, SpinButton, {\r\n            direction: \"up\",\r\n            onChange: this._spinUpChangeHandler.bind(this)\r\n        });\r\n        this._$spinDown = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinDown, SpinButton, {\r\n            direction: \"down\",\r\n            onChange: this._spinDownChangeHandler.bind(this)\r\n        });\r\n        return $spinContainer\r\n    },\r\n    _spinButtonsPointerDownHandler: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"useLargeSpinButtons\") && domAdapter.getActiveElement() !== $input[0]) {\r\n            eventsEngine.trigger($input, \"focus\")\r\n        }\r\n    },\r\n    _spinUpChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(1, e.event || e)\r\n        }\r\n    },\r\n    _spinDownChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(-1, e.event || e)\r\n        }\r\n    },\r\n    _spinValueChange: function(sign, dxEvent) {\r\n        var value = parseFloat(this._normalizeInputValue()) || 0,\r\n            step = parseFloat(this.option(\"step\"));\r\n        value = this._correctRounding(value, step * sign);\r\n        var min = this.option(\"min\"),\r\n            max = this.option(\"max\");\r\n        if (void 0 !== min) {\r\n            value = Math.max(min, value)\r\n        }\r\n        if (void 0 !== max) {\r\n            value = Math.min(max, value)\r\n        }\r\n        this._saveValueChangeEvent(dxEvent);\r\n        this.option(\"value\", value)\r\n    },\r\n    _correctRounding: function(value, step) {\r\n        var regex = /[,.](.*)/;\r\n        var isFloatValue = regex.test(value),\r\n            isFloatStep = regex.test(step);\r\n        if (isFloatValue || isFloatStep) {\r\n            var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0,\r\n                stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0,\r\n                accuracy = math.max(valueAccuracy, stepAccuracy);\r\n            value = this._round(value + step, accuracy);\r\n            return value\r\n        }\r\n        return value + step\r\n    },\r\n    _round: function(value, precision) {\r\n        precision = precision || 0;\r\n        var multiplier = Math.pow(10, precision);\r\n        value *= multiplier;\r\n        value = Math.round(value) / multiplier;\r\n        return value\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        this.callBase();\r\n        eventsEngine.on(this._input(), \"focusout\", this._forceRefreshInputValue.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (\"number\" === this.option(\"mode\")) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            formattedValue = this._applyValueFormat(this.option(\"value\"));\r\n        $input.val(null);\r\n        $input.val(formattedValue)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var $input = this._input(),\r\n            inputValue = this._normalizeText(),\r\n            value = this._parseValue(inputValue),\r\n            valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\r\n        if (this._isValueValid() && !this._validateValue(value)) {\r\n            $input.val(this._applyValueFormat(value));\r\n            return\r\n        }\r\n        if (valueHasDigits) {\r\n            this.callBase(e, isNaN(value) ? null : value)\r\n        }\r\n        this._applyValueBoundaries(inputValue, value);\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        })\r\n    },\r\n    _applyValueBoundaries: function(inputValue, parsedValue) {\r\n        var isValueIncomplete = this._isValueIncomplete(inputValue),\r\n            isValueCorrect = this._isValueInRange(inputValue);\r\n        if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\r\n            if (Number(inputValue) !== parsedValue) {\r\n                this._input().val(this._applyValueFormat(parsedValue))\r\n            }\r\n        }\r\n    },\r\n    _replaceCommaWithPoint: function(value) {\r\n        return value.replace(\",\", \".\")\r\n    },\r\n    _inputIsInvalid: function() {\r\n        var isNumberMode = \"number\" === this.option(\"mode\");\r\n        var validityState = this._input().get(0).validity;\r\n        return isNumberMode && validityState && validityState.badInput\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        if (this._inputIsInvalid()) {\r\n            return\r\n        }\r\n        this.callBase(text)\r\n    },\r\n    _isValueIncomplete: function(value) {\r\n        var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\r\n        return incompleteRegex.test(value)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        return mathUtils.inRange(value, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _isNumber: function(value) {\r\n        return null !== this._parseValue(value)\r\n    },\r\n    _validateValue: function(value) {\r\n        var inputValue = this._normalizeText(),\r\n            isValueValid = this._isValueValid(),\r\n            isValid = true,\r\n            isNumber = this._isNumber(inputValue);\r\n        if (isNaN(Number(value))) {\r\n            isValid = false\r\n        }\r\n        if (!value && isValueValid) {\r\n            isValid = true\r\n        } else {\r\n            if (!isNumber && !isValueValid) {\r\n                isValid = false\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"invalidValueMessage\")\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _normalizeInputValue: function() {\r\n        return this._parseValue(this._normalizeText())\r\n    },\r\n    _normalizeText: function() {\r\n        var value = this._input().val().trim();\r\n        return this._replaceCommaWithPoint(value)\r\n    },\r\n    _parseValue: function(value) {\r\n        var number = parseFloat(value);\r\n        if (isNaN(number)) {\r\n            return null\r\n        }\r\n        return mathUtils.fitIntoRange(number, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    reset: function() {\r\n        this.option(\"value\", null)\r\n    },\r\n    _clean: function() {\r\n        delete this._$spinContainer;\r\n        delete this._$spinUp;\r\n        delete this._$spinDown;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._validateValue(args.value);\r\n                this._setSubmitValue(args.value);\r\n                this.callBase(args);\r\n                this._resumeValueChangeAction();\r\n                break;\r\n            case \"step\":\r\n                this._renderProps();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._renderProps();\r\n                this.option(\"value\", this._parseValue(this.option(\"value\")));\r\n                break;\r\n            case \"showSpinButtons\":\r\n                this._renderInputAddons();\r\n                break;\r\n            case \"useLargeSpinButtons\":\r\n                this._toggleTouchFriendlyClass();\r\n                break;\r\n            case \"invalidValueMessage\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = NumberBoxBase;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.base.js\n// module id = 756\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/number_box/number_box.spin.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Widget = require(\"../widget/ui.widget\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    feedbackEvents = require(\"../../events/core/emitter.feedback\"),\r\n    holdEvent = require(\"../../events/hold\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nvar SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\",\r\n    SPIN_HOLD_DELAY = 100,\r\n    NUMBER_BOX = \"dxNumberBox\",\r\n    POINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, NUMBER_BOX),\r\n    POINTERCANCEL_EVENT_NAME = eventUtils.addNamespace(pointerEvents.cancel, NUMBER_BOX);\r\nvar SpinButton = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            direction: \"up\",\r\n            onChange: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        var direction = SPIN_CLASS + \"-\" + this.option(\"direction\");\r\n        this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\r\n        this._spinIcon = $(\"<div>\").addClass(direction + \"-icon\").appendTo(this.$element())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME),\r\n            $element = this.$element();\r\n        eventsEngine.off($element, eventName);\r\n        eventsEngine.on($element, eventName, this._spinDownHandler.bind(this));\r\n        this._spinChangeHandler = this._createActionByOption(\"onChange\")\r\n    },\r\n    _spinDownHandler: function(e) {\r\n        e.preventDefault();\r\n        this._clearTimer();\r\n        eventsEngine.on(this.$element(), holdEvent.name, function() {\r\n            this._feedBackDeferred = new Deferred;\r\n            feedbackEvents.lock(this._feedBackDeferred);\r\n            this._spinChangeHandler({\r\n                event: e\r\n            });\r\n            this._holdTimer = setInterval(this._spinChangeHandler, SPIN_HOLD_DELAY, {\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\r\n        eventsEngine.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\r\n        this._spinChangeHandler({\r\n            event: e\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this._clearTimer();\r\n        this.callBase()\r\n    },\r\n    _clearTimer: function() {\r\n        eventsEngine.off(this.$element(), holdEvent.name);\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.off(document, POINTERUP_EVENT_NAME);\r\n        eventsEngine.off(document, POINTERCANCEL_EVENT_NAME);\r\n        if (this._feedBackDeferred) {\r\n            this._feedBackDeferred.resolve()\r\n        }\r\n        if (this._holdTimer) {\r\n            clearInterval(this._holdTimer)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onChange\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = SpinButton;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.spin.js\n// module id = 757\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (localization/ldml/date.format.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar ARABIC_COMMA = \"،\",\r\n    FORMAT_SEPARATORS = \" .,:;/\\\\<>()-[]\" + ARABIC_COMMA,\r\n    ARABIC_ZERO_CODE = 1632;\r\nvar checkDigit = function(char) {\r\n    var code = char && char.charCodeAt(0);\r\n    return char >= \"0\" && char <= \"9\" || code >= ARABIC_ZERO_CODE && code < ARABIC_ZERO_CODE + 10\r\n};\r\nvar checkPatternContinue = function(text, index, isDigit) {\r\n    var char = text[index],\r\n        prevChar = text[index - 1],\r\n        nextChar = text[index + 1];\r\n    if (!isDigit) {\r\n        if (\".\" === char || \" \" === char && \".\" === prevChar) {\r\n            return true\r\n        }\r\n        if (\"-\" === char && !checkDigit(nextChar)) {\r\n            return true\r\n        }\r\n    }\r\n    return FORMAT_SEPARATORS.indexOf(char) < 0 && isDigit === checkDigit(char)\r\n};\r\nvar getPatternStartIndex = function(defaultPattern, index) {\r\n    if (!checkDigit(defaultPattern[index])) {\r\n        while (index > 0 && !checkDigit(defaultPattern[index - 1]) && (\".\" === defaultPattern[index - 1] || FORMAT_SEPARATORS.indexOf(defaultPattern[index - 1]) < 0)) {\r\n            index--\r\n        }\r\n    }\r\n    return index\r\n};\r\nvar getDifference = function(defaultPattern, patterns, processedIndexes, isDigit) {\r\n    var i = 0,\r\n        result = [];\r\n    var patternsFilter = function(pattern) {\r\n        return defaultPattern[i] !== pattern[i] && (void 0 === isDigit || checkDigit(defaultPattern[i]) === isDigit)\r\n    };\r\n    if (!Array.isArray(patterns)) {\r\n        patterns = [patterns]\r\n    }\r\n    for (i = 0; i < defaultPattern.length; i++) {\r\n        if (processedIndexes.indexOf(i) < 0 && patterns.filter(patternsFilter).length) {\r\n            i = getPatternStartIndex(defaultPattern, i);\r\n            do {\r\n                isDigit = checkDigit(defaultPattern[i]);\r\n                if (!result.length && !isDigit && checkDigit(patterns[0][i])) {\r\n                    break\r\n                }\r\n                result.push(i);\r\n                processedIndexes.unshift(i);\r\n                i++\r\n            } while (defaultPattern[i] && checkPatternContinue(defaultPattern, i, isDigit));\r\n            break\r\n        }\r\n    }\r\n    if (1 === result.length && (\"0\" === defaultPattern[processedIndexes[0] - 1] || \"٠\" === defaultPattern[processedIndexes[0] - 1])) {\r\n        processedIndexes.unshift(processedIndexes[0] - 1)\r\n    }\r\n    return result\r\n};\r\nvar replaceCharsCore = function(pattern, indexes, char, patternPositions) {\r\n    var baseCharIndex = indexes[0];\r\n    var patternIndex = baseCharIndex < patternPositions.length ? patternPositions[baseCharIndex] : baseCharIndex;\r\n    indexes.forEach(function(_, index) {\r\n        pattern = pattern.substr(0, patternIndex + index) + (char.length > 1 ? char[index] : char) + pattern.substr(patternIndex + index + 1)\r\n    });\r\n    if (1 === indexes.length) {\r\n        pattern = pattern.replace(\"0\" + char, char + char);\r\n        pattern = pattern.replace(\"٠\" + char, char + char)\r\n    }\r\n    return pattern\r\n};\r\nvar replaceChars = function(pattern, indexes, char, patternPositions) {\r\n    var i, index, patternIndex;\r\n    if (!checkDigit(pattern[indexes[0]] || \"0\")) {\r\n        var letterCount = Math.max(indexes.length <= 3 ? 3 : 4, char.length);\r\n        while (indexes.length > letterCount) {\r\n            index = indexes.pop();\r\n            patternIndex = patternPositions[index];\r\n            patternPositions[index] = -1;\r\n            for (i = index + 1; i < patternPositions.length; i++) {\r\n                patternPositions[i]--\r\n            }\r\n            pattern = pattern.substr(0, patternIndex) + pattern.substr(patternIndex + 1)\r\n        }\r\n        index = indexes[indexes.length - 1] + 1, patternIndex = index < patternPositions.length ? patternPositions[index] : index;\r\n        while (indexes.length < letterCount) {\r\n            indexes.push(indexes[indexes.length - 1] + 1);\r\n            for (i = index; i < patternPositions.length; i++) {\r\n                patternPositions[i]++\r\n            }\r\n            pattern = pattern.substr(0, patternIndex) + \" \" + pattern.substr(patternIndex)\r\n        }\r\n    }\r\n    pattern = replaceCharsCore(pattern, indexes, char, patternPositions);\r\n    return pattern\r\n};\r\nvar formatValue = function(value, formatter) {\r\n    if (Array.isArray(value)) {\r\n        return value.map(function(value) {\r\n            return (formatter(value) || \"\").toString()\r\n        })\r\n    }\r\n    return (formatter(value) || \"\").toString()\r\n};\r\nvar ESCAPE_CHARS_REGEXP = /[a-zA-Z]/g;\r\nvar escapeChars = function(pattern, defaultPattern, processedIndexes, patternPositions) {\r\n    var escapeIndexes = defaultPattern.split(\"\").map(function(char, index) {\r\n        if (processedIndexes.indexOf(index) < 0 && (char.match(ESCAPE_CHARS_REGEXP) || \"'\" === char)) {\r\n            return patternPositions[index]\r\n        }\r\n        return -1\r\n    });\r\n    pattern = pattern.split(\"\").map(function(char, index) {\r\n        var result = char,\r\n            isCurrentCharEscaped = escapeIndexes.indexOf(index) >= 0,\r\n            isPrevCharEscaped = index > 0 && escapeIndexes.indexOf(index - 1) >= 0,\r\n            isNextCharEscaped = escapeIndexes.indexOf(index + 1) >= 0;\r\n        if (isCurrentCharEscaped) {\r\n            if (!isPrevCharEscaped) {\r\n                result = \"'\" + result\r\n            }\r\n            if (!isNextCharEscaped) {\r\n                result += \"'\"\r\n            }\r\n        }\r\n        return result\r\n    }).join(\"\");\r\n    return pattern\r\n};\r\nvar getFormat = function(formatter) {\r\n    var processedIndexes = [],\r\n        defaultPattern = formatValue(new Date(2009, 8, 8, 6, 5, 4), formatter),\r\n        patternPositions = defaultPattern.split(\"\").map(function(_, index) {\r\n            return index\r\n        }),\r\n        result = defaultPattern,\r\n        replacedPatterns = {},\r\n        datePatterns = [{\r\n            date: new Date(2009, 8, 8, 6, 5, 4, 100),\r\n            pattern: \"S\"\r\n        }, {\r\n            date: new Date(2009, 8, 8, 6, 5, 2),\r\n            pattern: \"s\"\r\n        }, {\r\n            date: new Date(2009, 8, 8, 6, 2, 4),\r\n            pattern: \"m\"\r\n        }, {\r\n            date: new Date(2009, 8, 8, 18, 5, 4),\r\n            pattern: \"H\",\r\n            isDigit: true\r\n        }, {\r\n            date: new Date(2009, 8, 8, 2, 5, 4),\r\n            pattern: \"h\",\r\n            isDigit: true\r\n        }, {\r\n            date: new Date(2009, 8, 8, 18, 5, 4),\r\n            pattern: \"a\",\r\n            isDigit: false\r\n        }, {\r\n            date: new Date(2009, 8, 1, 6, 5, 4),\r\n            pattern: \"d\"\r\n        }, {\r\n            date: [new Date(2009, 8, 2, 6, 5, 4), new Date(2009, 8, 3, 6, 5, 4), new Date(2009, 8, 4, 6, 5, 4)],\r\n            pattern: \"E\"\r\n        }, {\r\n            date: new Date(2009, 9, 6, 6, 5, 4),\r\n            pattern: \"M\"\r\n        }, {\r\n            date: new Date(1998, 8, 8, 6, 5, 4),\r\n            pattern: \"y\"\r\n        }];\r\n    if (!result) {\r\n        return\r\n    }\r\n    datePatterns.forEach(function(test) {\r\n        var diff = getDifference(defaultPattern, formatValue(test.date, formatter), processedIndexes, test.isDigit),\r\n            pattern = \"M\" === test.pattern && !replacedPatterns.d ? \"L\" : test.pattern;\r\n        result = replaceChars(result, diff, pattern, patternPositions);\r\n        replacedPatterns[pattern] = diff.length\r\n    });\r\n    result = escapeChars(result, defaultPattern, processedIndexes, patternPositions);\r\n    if (processedIndexes.length) {\r\n        return result\r\n    }\r\n};\r\nexports.getFormat = getFormat;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/localization/ldml/date.format.js\n// module id = 758\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/select_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    commonUtils = require(\"../core/utils/common\"),\r\n    typeUtils = require(\"../core/utils/type\"),\r\n    isDefined = typeUtils.isDefined,\r\n    isPromise = typeUtils.isPromise,\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    inArray = require(\"../core/utils/array\").inArray,\r\n    each = require(\"../core/utils/iterator\").each,\r\n    deferredUtils = require(\"../core/utils/deferred\"),\r\n    getPublicElement = require(\"../core/utils/dom\").getPublicElement,\r\n    Deferred = deferredUtils.Deferred,\r\n    errors = require(\"../core/errors\"),\r\n    inkRipple = require(\"./widget/utils.ink_ripple\"),\r\n    messageLocalization = require(\"../localization/message\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    eventUtils = require(\"../events/utils\"),\r\n    dataQuery = require(\"../data/query\"),\r\n    DropDownList = require(\"./drop_down_editor/ui.drop_down_list\"),\r\n    themes = require(\"./themes\"),\r\n    clickEvent = require(\"../events/click\");\r\nvar DISABLED_STATE_SELECTOR = \".dx-state-disabled\",\r\n    SELECTBOX_CLASS = \"dx-selectbox\",\r\n    SELECTBOX_POPUP_CLASS = \"dx-selectbox-popup\",\r\n    SELECTBOX_CONTAINER_CLASS = \"dx-selectbox-container\",\r\n    SELECTBOX_POPUP_WRAPPER_CLASS = \"dx-selectbox-popup-wrapper\";\r\nvar SelectBox = DropDownList.inherit({\r\n    _supportedKeys: function() {\r\n        var that = this,\r\n            parent = this.callBase(),\r\n            clearSelectBox = function(e) {\r\n                var isEditable = this._isEditable();\r\n                if (!isEditable) {\r\n                    if (this.option(\"showClearButton\")) {\r\n                        e.preventDefault();\r\n                        this.reset()\r\n                    }\r\n                } else {\r\n                    if (this._valueSubstituted()) {\r\n                        this._preventFiltering = true\r\n                    }\r\n                }\r\n                this._preventSubstitution = true\r\n            };\r\n        var searchIfNeeded = function() {\r\n            if (that.option(\"searchEnabled\") && that._valueSubstituted()) {\r\n                that._searchHandler()\r\n            }\r\n        };\r\n        return extend({}, parent, {\r\n            tab: function() {\r\n                if (this.option(\"opened\") && \"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this._cleanInputSelection()\r\n                }\r\n                if (this._wasSearch()) {\r\n                    this._clearFilter()\r\n                }\r\n                parent.tab.apply(this, arguments)\r\n            },\r\n            upArrow: function() {\r\n                if (parent.upArrow.apply(this, arguments)) {\r\n                    if (!this.option(\"opened\")) {\r\n                        this._setNextValue(-1)\r\n                    }\r\n                    return true\r\n                }\r\n            },\r\n            downArrow: function() {\r\n                if (parent.downArrow.apply(this, arguments)) {\r\n                    if (!this.option(\"opened\")) {\r\n                        this._setNextValue(1)\r\n                    }\r\n                    return true\r\n                }\r\n            },\r\n            leftArrow: function() {\r\n                searchIfNeeded();\r\n                parent.leftArrow.apply(this, arguments)\r\n            },\r\n            rightArrow: function() {\r\n                searchIfNeeded();\r\n                parent.rightArrow.apply(this, arguments)\r\n            },\r\n            home: function() {\r\n                searchIfNeeded();\r\n                parent.home.apply(this, arguments)\r\n            },\r\n            end: function() {\r\n                searchIfNeeded();\r\n                parent.end.apply(this, arguments)\r\n            },\r\n            escape: function() {\r\n                parent.escape.apply(this, arguments);\r\n                this._cancelEditing()\r\n            },\r\n            enter: function(e) {\r\n                if (\"\" === this._input().val() && this.option(\"value\") && this.option(\"allowClearing\")) {\r\n                    this.option({\r\n                        selectedItem: null,\r\n                        value: null\r\n                    });\r\n                    this.close()\r\n                } else {\r\n                    if (this.option(\"acceptCustomValue\")) {\r\n                        e.preventDefault();\r\n                        return this.option(\"opened\")\r\n                    }\r\n                    if (parent.enter.apply(this, arguments)) {\r\n                        return this.option(\"opened\")\r\n                    }\r\n                }\r\n            },\r\n            space: function(e) {\r\n                var isOpened = this.option(\"opened\"),\r\n                    isSearchEnabled = this.option(\"searchEnabled\"),\r\n                    acceptCustomValue = this.option(\"acceptCustomValue\");\r\n                if (!isOpened || isSearchEnabled || acceptCustomValue) {\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                this._valueChangeEventHandler(e);\r\n                return true\r\n            },\r\n            backspace: clearSelectBox,\r\n            del: clearSelectBox\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            placeholder: messageLocalization.format(\"Select\"),\r\n            fieldTemplate: null,\r\n            valueChangeEvent: \"change\",\r\n            acceptCustomValue: false,\r\n            onCustomItemCreating: function(e) {\r\n                if (!isDefined(e.customItem)) {\r\n                    e.customItem = e.text\r\n                }\r\n            },\r\n            showSelectionControls: false,\r\n            autocompletionEnabled: true,\r\n            allowClearing: true,\r\n            tooltipEnabled: false,\r\n            openOnFieldClick: true,\r\n            showDropDownButton: true,\r\n            displayCustomValue: false,\r\n            _isAdaptablePopupPosition: false,\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = themes.current();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isWin8(themeName)\r\n            },\r\n            options: {\r\n                _isAdaptablePopupPosition: true,\r\n                popupPosition: {\r\n                    at: \"left top\",\r\n                    offset: {\r\n                        h: 0,\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isAndroid5(themeName)\r\n            },\r\n            options: {\r\n                _isAdaptablePopupPosition: true,\r\n                popupPosition: {\r\n                    offset: {\r\n                        h: -16,\r\n                        v: -8\r\n                    }\r\n                },\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initCustomItemCreatingAction()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(SELECTBOX_CLASS);\r\n        this._renderTooltip();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.callBase();\r\n        this._$container.addClass(SELECTBOX_CONTAINER_CLASS)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple || this._isEditable()) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: this._inputWrapper(),\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _createPopup: function() {\r\n        this.callBase();\r\n        this._popup.$element().addClass(SELECTBOX_POPUP_CLASS)\r\n    },\r\n    _popupWrapperClass: function() {\r\n        return this.callBase() + \" \" + SELECTBOX_POPUP_WRAPPER_CLASS\r\n    },\r\n    _cancelEditing: function() {\r\n        if (!this.option(\"searchEnabled\") && this._list) {\r\n            this._focusListElement(null);\r\n            this._updateField(this.option(\"selectedItem\"))\r\n        }\r\n    },\r\n    _closeOutsideDropDownHandler: function(e) {\r\n        this._cancelEditing();\r\n        return this.callBase(e)\r\n    },\r\n    _renderOpenedState: function() {\r\n        this.callBase();\r\n        if (this.option(\"opened\")) {\r\n            this._scrollToSelectedItem();\r\n            this._focusSelectedElement()\r\n        }\r\n    },\r\n    _focusSelectedElement: function() {\r\n        var searchValue = this._searchValue();\r\n        if (!searchValue) {\r\n            this._focusListElement(null);\r\n            return\r\n        }\r\n        var $listItems = this._list._itemElements(),\r\n            index = inArray(this.option(\"selectedItem\"), this.option(\"items\")),\r\n            focusedElement = index >= 0 && !this._isCustomItemSelected() ? $listItems.eq(index) : null;\r\n        this._focusListElement(focusedElement)\r\n    },\r\n    _renderFocusedElement: function() {\r\n        if (!this._list) {\r\n            return\r\n        }\r\n        var searchValue = this._searchValue();\r\n        if (!searchValue || this.option(\"acceptCustomValue\")) {\r\n            this._focusListElement(null);\r\n            return\r\n        }\r\n        var $listItems = this._list._itemElements(),\r\n            focusedElement = $listItems.not(DISABLED_STATE_SELECTOR).eq(0);\r\n        this._focusListElement(focusedElement)\r\n    },\r\n    _focusListElement: function(element) {\r\n        this._preventInputValueRender = true;\r\n        this._list.option(\"focusedElement\", getPublicElement(element));\r\n        delete this._preventInputValueRender\r\n    },\r\n    _scrollToSelectedItem: function() {\r\n        this._list && this._list.scrollToItem(this._list.option(\"selectedItem\"))\r\n    },\r\n    _listContentReadyHandler: function() {\r\n        this.callBase();\r\n        var isPaginate = this._dataSource && this._dataSource.paginate();\r\n        if (isPaginate && this._needPopupRepaint()) {\r\n            return\r\n        }\r\n        this._scrollToSelectedItem()\r\n    },\r\n    _renderValue: function() {\r\n        this._renderInputValue();\r\n        this._setSubmitValue()\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.option(\"value\"),\r\n            submitValue = \"this\" === this.option(\"valueExpr\") ? this._displayGetter(value) : value;\r\n        this._$submitElement.val(submitValue)\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _renderInputValue: function() {\r\n        return this.callBase().always(function() {\r\n            this._renderInputValueAsync()\r\n        }.bind(this))\r\n    },\r\n    _renderInputValueAsync: function() {\r\n        this._renderTooltip();\r\n        this._renderInputValueImpl();\r\n        this._refreshSelected()\r\n    },\r\n    _renderInputValueImpl: function() {\r\n        this._renderInputAddons()\r\n    },\r\n    _fitIntoRange: function(value, start, end) {\r\n        if (value > end) {\r\n            return start\r\n        }\r\n        if (value < start) {\r\n            return end\r\n        }\r\n        return value\r\n    },\r\n    _setNextValue: function(step) {\r\n        var dataSourceIsLoaded = this._dataSource.isLoaded() ? (new Deferred).resolve() : this._dataSource.load();\r\n        dataSourceIsLoaded.done(function() {\r\n            var item = this._calcNextItem(step),\r\n                value = this._valueGetter(item);\r\n            this._setValue(value)\r\n        }.bind(this))\r\n    },\r\n    _calcNextItem: function(step) {\r\n        var items = this._items();\r\n        var nextIndex = this._fitIntoRange(this._getSelectedIndex() + step, 0, items.length - 1);\r\n        return items[nextIndex]\r\n    },\r\n    _items: function() {\r\n        var items = this._getPlainItems(!this._list && this._dataSource.items());\r\n        var availableItems = new dataQuery(items).filter(\"disabled\", \"<>\", true).toArray();\r\n        return availableItems\r\n    },\r\n    _getSelectedIndex: function() {\r\n        var items = this._items();\r\n        var selectedItem = this.option(\"selectedItem\");\r\n        var result = -1;\r\n        each(items, function(index, item) {\r\n            if (this._isValueEquals(item, selectedItem)) {\r\n                result = index;\r\n                return false\r\n            }\r\n        }.bind(this));\r\n        return result\r\n    },\r\n    _setSelectedItem: function(item) {\r\n        var isUnknownItem = !this._isCustomValueAllowed() && void 0 === item;\r\n        this.callBase(isUnknownItem ? null : item)\r\n    },\r\n    _isCustomValueAllowed: function() {\r\n        return this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _displayValue: function(item) {\r\n        item = !isDefined(item) && this._isCustomValueAllowed() ? this.option(\"value\") : item;\r\n        return this.callBase(item)\r\n    },\r\n    _listConfig: function() {\r\n        var result = extend(this.callBase(), {\r\n            pageLoadMode: \"scrollBottom\",\r\n            onSelectionChanged: this._getSelectionChangeHandler(),\r\n            selectedItem: this.option(\"selectedItem\"),\r\n            onFocusedItemChanged: this._listFocusedItemChangeHandler.bind(this)\r\n        });\r\n        if (this.option(\"showSelectionControls\")) {\r\n            extend(result, {\r\n                showSelectionControls: true,\r\n                selectionByClick: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _listFocusedItemChangeHandler: function(e) {\r\n        if (this._preventInputValueRender) {\r\n            return\r\n        }\r\n        var list = e.component,\r\n            focusedElement = $(list.option(\"focusedElement\")),\r\n            focusedItem = list._getItemData(focusedElement);\r\n        this._updateField(focusedItem)\r\n    },\r\n    _updateField: function(item) {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            this._renderDisplayText(this._displayGetter(item));\r\n            return\r\n        }\r\n        this._renderInputAddons()\r\n    },\r\n    _getSelectionChangeHandler: function() {\r\n        return this.option(\"showSelectionControls\") ? this._selectionChangeHandler.bind(this) : commonUtils.noop\r\n    },\r\n    _selectionChangeHandler: function(e) {\r\n        each(e.addedItems || [], function(_, addedItem) {\r\n            this._setValue(this._valueGetter(addedItem))\r\n        }.bind(this))\r\n    },\r\n    _getActualSearchValue: function() {\r\n        return this._dataSource.searchValue()\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n        if (!isVisible) {\r\n            this._restoreInputText()\r\n        }\r\n        if (this._wasSearch() && isVisible) {\r\n            this._wasSearch(false);\r\n            if (this.option(\"showDataBeforeSearch\") || 0 === this.option(\"minSearchLength\")) {\r\n                if (this._searchTimer) {\r\n                    return\r\n                }\r\n                var searchValue = this._getActualSearchValue();\r\n                searchValue && this._wasSearch(true);\r\n                this._filterDataSource(searchValue || null)\r\n            } else {\r\n                this._setListOption(\"items\", [])\r\n            }\r\n        }\r\n        if (isVisible) {\r\n            this._scrollToSelectedItem()\r\n        }\r\n        this.callBase(isVisible)\r\n    },\r\n    _renderTooltip: function() {\r\n        if (this.option(\"tooltipEnabled\")) {\r\n            this.$element().attr(\"title\", this.option(\"displayValue\"))\r\n        }\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this._setPopupOption(\"width\")\r\n    },\r\n    _restoreInputText: function() {\r\n        this._loadItemDeferred && this._loadItemDeferred.always(function() {\r\n            if (this.option(\"acceptCustomValue\")) {\r\n                return\r\n            }\r\n            if (this.option(\"searchEnabled\")) {\r\n                if (!this._searchValue() && this.option(\"allowClearing\")) {\r\n                    this._clearTextValue();\r\n                    return\r\n                }\r\n            }\r\n            var oldSelectedItem = this.option(\"selectedItem\");\r\n            if ((this._displayGetter(oldSelectedItem) || \"\").toString() === this._searchValue()) {\r\n                return\r\n            }\r\n            this._renderInputValue().always(function(selectedItem) {\r\n                var newSelectedItem = commonUtils.ensureDefined(selectedItem, oldSelectedItem);\r\n                this._setSelectedItem(newSelectedItem);\r\n                this._updateField(newSelectedItem);\r\n                this._clearFilter()\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this.callBase(e);\r\n        this._restoreInputText()\r\n    },\r\n    _clearTextValue: function() {\r\n        this.option(\"value\", null)\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        if (this._isEditable()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isEditable: function() {\r\n        return this.option(\"acceptCustomValue\") || this.option(\"searchEnabled\")\r\n    },\r\n    _fieldRenderData: function() {\r\n        var $listFocused = this._list && this.option(\"opened\") && $(this._list.option(\"focusedElement\"));\r\n        if ($listFocused && $listFocused.length) {\r\n            return this._list._getItemData($listFocused)\r\n        }\r\n        return this.option(\"selectedItem\")\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this._isEditable() || this.option(\"readOnly\")\r\n    },\r\n    _isSelectedValue: function(value) {\r\n        return this._isValueEquals(value, this.option(\"value\"))\r\n    },\r\n    _shouldCloseOnItemClick: function() {\r\n        return !(this.option(\"showSelectionControls\") && \"single\" !== this.option(\"selectionMode\"))\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        var previousValue = this._getCurrentValue();\r\n        this._focusListElement($(e.itemElement));\r\n        this._saveValueChangeEvent(e.event);\r\n        if (this._shouldClearFilter()) {\r\n            this._clearFilter()\r\n        }\r\n        this._completeSelection(this._valueGetter(e.itemData));\r\n        if (this._shouldCloseOnItemClick()) {\r\n            this.option(\"opened\", false)\r\n        }\r\n        if (this.option(\"searchEnabled\") && previousValue === this._valueGetter(e.itemData)) {\r\n            this._updateField(e.itemData)\r\n        }\r\n    },\r\n    _shouldClearFilter: function() {\r\n        return this._wasSearch()\r\n    },\r\n    _completeSelection: function(value) {\r\n        this._setValue(value)\r\n    },\r\n    _loadItem: function(value, cache) {\r\n        var that = this,\r\n            deferred = new Deferred;\r\n        this.callBase(value, cache).done(function(item) {\r\n            deferred.resolve(item)\r\n        }.bind(this)).fail(function() {\r\n            var selectedItem = that.option(\"selectedItem\");\r\n            if (that.option(\"acceptCustomValue\") && value === that._valueGetter(selectedItem)) {\r\n                deferred.resolve(selectedItem)\r\n            } else {\r\n                deferred.reject()\r\n            }\r\n        }.bind(this));\r\n        return deferred.promise()\r\n    },\r\n    _loadInputValue: function(value, callback) {\r\n        this._loadItemDeferred = this._loadItem(value).always(callback);\r\n        return this._loadItemDeferred\r\n    },\r\n    _isCustomItemSelected: function() {\r\n        var selectedItem = this.option(\"selectedItem\"),\r\n            searchValue = this._searchValue(),\r\n            selectedItemText = this._displayGetter(selectedItem);\r\n        return !selectedItemText || searchValue !== selectedItemText.toString()\r\n    },\r\n    _valueChangeEventHandler: function() {\r\n        if (this.option(\"acceptCustomValue\") && this._isCustomItemSelected()) {\r\n            this._customItemAddedHandler()\r\n        }\r\n    },\r\n    _initCustomItemCreatingAction: function() {\r\n        this._customItemCreatingAction = this._createActionByOption(\"onCustomItemCreating\")\r\n    },\r\n    _createCustomItem: function(text) {\r\n        var params = {\r\n                text: text\r\n            },\r\n            actionResult = this._customItemCreatingAction(params),\r\n            item = commonUtils.ensureDefined(actionResult, params.customItem);\r\n        if (isDefined(actionResult)) {\r\n            errors.log(\"W0015\", \"onCustomItemCreating\", \"customItem\")\r\n        }\r\n        return item\r\n    },\r\n    _customItemAddedHandler: function() {\r\n        var searchValue = this._searchValue(),\r\n            item = this._createCustomItem(searchValue);\r\n        if (void 0 === item) {\r\n            this._renderValue();\r\n            throw errors.Error(\"E0121\")\r\n        }\r\n        if (isPromise(item)) {\r\n            deferredUtils.fromPromise(item).done(this._setCustomItem.bind(this)).fail(this._setCustomItem.bind(this, null))\r\n        } else {\r\n            this._setCustomItem(item)\r\n        }\r\n    },\r\n    _setCustomItem: function(item) {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        item = item || null;\r\n        this.option(\"selectedItem\", item);\r\n        this._setValue(this._valueGetter(item));\r\n        this._renderDisplayText(this._displayGetter(item));\r\n        if (null === item && this._wasSearch()) {\r\n            this._filterDataSource(null)\r\n        }\r\n    },\r\n    _createClearButton: function() {\r\n        var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\r\n        var $clearButton = this.callBase();\r\n        eventsEngine.on($clearButton, eventName, function() {\r\n            return false\r\n        });\r\n        return $clearButton\r\n    },\r\n    _wasSearch: function(value) {\r\n        if (!arguments.length) {\r\n            return this._wasSearchValue\r\n        }\r\n        this._wasSearchValue = value\r\n    },\r\n    _searchHandler: function(e) {\r\n        if (this._preventFiltering) {\r\n            delete this._preventFiltering;\r\n            return\r\n        }\r\n        if (this._needPassDataSourceToList()) {\r\n            this._wasSearch(true)\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _dataSourceFiltered: function(searchValue) {\r\n        this.callBase();\r\n        if (null !== searchValue) {\r\n            this._renderInputSubstitution();\r\n            this._renderFocusedElement()\r\n        }\r\n    },\r\n    _valueSubstituted: function() {\r\n        var input = this._input().get(0),\r\n            isAllSelected = 0 === input.selectionStart && input.selectionEnd === this._searchValue().length,\r\n            inputHasSelection = input.selectionStart !== input.selectionEnd;\r\n        return this._wasSearch() && inputHasSelection && !isAllSelected\r\n    },\r\n    _shouldSubstitutionBeRendered: function() {\r\n        return this.option(\"autocompletionEnabled\") && !this._preventSubstitution && this.option(\"searchEnabled\") && !this.option(\"acceptCustomValue\") && \"startswith\" === this.option(\"searchMode\")\r\n    },\r\n    _renderInputSubstitution: function() {\r\n        if (!this._shouldSubstitutionBeRendered()) {\r\n            delete this._preventSubstitution;\r\n            return\r\n        }\r\n        var item = this._list && this._getPlainItems(this._list.option(\"items\"))[0];\r\n        if (!item) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            valueLength = $input.val().length;\r\n        if (0 === valueLength) {\r\n            return\r\n        }\r\n        var inputElement = $input.get(0),\r\n            displayValue = this._displayGetter(item).toString();\r\n        inputElement.value = displayValue;\r\n        this._caret({\r\n            start: valueLength,\r\n            end: displayValue.length\r\n        })\r\n    },\r\n    _cleanInputSelection: function() {\r\n        var inputElement = this._input().get(0),\r\n            endPosition = inputElement.value.length;\r\n        inputElement.selectionStart = endPosition;\r\n        inputElement.selectionEnd = endPosition\r\n    },\r\n    _dispose: function() {\r\n        this._renderInputValueAsync = commonUtils.noop;\r\n        delete this._loadItemDeferred;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"_isAdaptablePopupPosition\":\r\n            case \"autocompletionEnabled\":\r\n                break;\r\n            case \"onCustomItemCreating\":\r\n                this._initCustomItemCreatingAction();\r\n                break;\r\n            case \"tooltipEnabled\":\r\n                this._renderTooltip();\r\n                break;\r\n            case \"displayCustomValue\":\r\n            case \"acceptCustomValue\":\r\n            case \"showSelectionControls\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"selectedItem\":\r\n                if (args.previousValue !== args.value) {\r\n                    this.callBase(args)\r\n                }\r\n                break;\r\n            case \"allowClearing\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxSelectBox\", SelectBox);\r\nmodule.exports = SelectBox;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/select_box.js\n// module id = 759\n// module chunks = 1 3 4 9","/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_list.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = require(\"../../core/renderer\"),\r\n    window = require(\"../../core/utils/window\").getWindow(),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    DropDownEditor = require(\"./ui.drop_down_editor\"),\r\n    List = require(\"../list\"),\r\n    errors = require(\"../widget/ui.errors\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    devices = require(\"../../core/devices\"),\r\n    DataExpressionMixin = require(\"../editor/ui.data_expression\"),\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    themes = require(\"../themes\"),\r\n    ChildDefaultTemplate = require(\"../widget/child_default_template\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nvar LIST_ITEM_SELECTOR = \".dx-list-item\",\r\n    LIST_ITEM_DATA_KEY = \"dxListItemData\",\r\n    DROPDOWNLIST_POPUP_WRAPPER_CLASS = \"dx-dropdownlist-popup-wrapper\",\r\n    SKIP_GESTURE_EVENT_CLASS = \"dx-skip-gesture-event\",\r\n    SEARCH_EVENT = \"input\",\r\n    SEARCH_MODES = [\"startswith\", \"contains\", \"endwith\", \"notcontains\"];\r\nvar DropDownList = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        var parent = this.callBase();\r\n        return extend({}, parent, {\r\n            tab: function(e) {\r\n                if (this.option(\"opened\") && \"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this._saveValueChangeEvent(e);\r\n                    var $focusedItem = $(this._list.option(\"focusedElement\"));\r\n                    $focusedItem.length && this._setSelectedElement($focusedItem)\r\n                }\r\n                parent.tab.apply(this, arguments)\r\n            },\r\n            space: commonUtils.noop,\r\n            home: commonUtils.noop,\r\n            end: commonUtils.noop\r\n        })\r\n    },\r\n    _setSelectedElement: function($element) {\r\n        var value = this._valueGetter(this._list._getItemData($element));\r\n        this._setValue(value)\r\n    },\r\n    _setValue: function(value) {\r\n        this.option(\"value\", value)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), extend(DataExpressionMixin._dataExpressionDefaultOptions(), {\r\n            displayValue: void 0,\r\n            searchEnabled: false,\r\n            searchMode: \"contains\",\r\n            searchTimeout: 500,\r\n            minSearchLength: 0,\r\n            searchExpr: null,\r\n            valueChangeEvent: \"input change keyup\",\r\n            selectedItem: null,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            onSelectionChanged: null,\r\n            onItemClick: commonUtils.noop,\r\n            showDataBeforeSearch: false,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            popupPosition: {\r\n                my: \"left top\",\r\n                at: \"left bottom\",\r\n                offset: {\r\n                    h: 0,\r\n                    v: 0\r\n                },\r\n                collision: \"flip\"\r\n            },\r\n            popupWidthExtension: 0\r\n        }))\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: -6\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                popupWidthExtension: 32\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: -1\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom center\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            value: true,\r\n            selectedItem: true,\r\n            displayValue: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initDataExpressions();\r\n        this._initActions();\r\n        this._setListDataSource();\r\n        this._validateSearchMode();\r\n        this._clearSelectedItem();\r\n        this._initItems()\r\n    },\r\n    _initItems: function() {\r\n        var items = this.option().items;\r\n        if (items && !items.length && this._dataSource) {\r\n            this.option().items = this._dataSource.items()\r\n        }\r\n    },\r\n    _initActions: function() {\r\n        this._initContentReadyAction();\r\n        this._initSelectionChangedAction();\r\n        this._initItemClickAction()\r\n    },\r\n    _initContentReadyAction: function() {\r\n        this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initSelectionChangedAction: function() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initItemClickAction: function() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.item = new ChildDefaultTemplate(\"item\", this)\r\n    },\r\n    _saveFocusOnWidget: function(e) {\r\n        if (this._list && this._list.initialOption(\"focusStateEnabled\")) {\r\n            this._focusInput()\r\n        }\r\n    },\r\n    _createPopup: function() {\r\n        this.callBase();\r\n        this._popup._wrapper().addClass(this._popupWrapperClass());\r\n        var $popupContent = this._popup.$content();\r\n        eventsEngine.off($popupContent, \"mouseup\");\r\n        eventsEngine.on($popupContent, \"mouseup\", this._saveFocusOnWidget.bind(this))\r\n    },\r\n    _popupWrapperClass: function() {\r\n        return DROPDOWNLIST_POPUP_WRAPPER_CLASS\r\n    },\r\n    _renderInputValue: function() {\r\n        var value = this._getCurrentValue();\r\n        return this._loadInputValue(value, this._setSelectedItem.bind(this)).always(this.callBase.bind(this, value))\r\n    },\r\n    _loadInputValue: function(value, callback) {\r\n        return this._loadItem(value).always(callback)\r\n    },\r\n    _loadItem: function(value, cache) {\r\n        var plainItems, selectedItem;\r\n        if (cache && \"object\" !== (\"undefined\" === typeof value ? \"undefined\" : _typeof(value))) {\r\n            if (!cache.itemByValue) {\r\n                cache.itemByValue = {};\r\n                plainItems = this._getPlainItems();\r\n                plainItems.forEach(function(item) {\r\n                    cache.itemByValue[this._valueGetter(item)] = item\r\n                }, this)\r\n            }\r\n            selectedItem = cache.itemByValue[value]\r\n        }\r\n        if (!selectedItem) {\r\n            plainItems = this._getPlainItems();\r\n            selectedItem = commonUtils.grep(plainItems, function(item) {\r\n                return this._isValueEquals(this._valueGetter(item), value)\r\n            }.bind(this))[0]\r\n        }\r\n        return void 0 !== selectedItem ? (new Deferred).resolve(selectedItem).promise() : this._loadValue(value)\r\n    },\r\n    _getPlainItems: function(items) {\r\n        var plainItems = [];\r\n        items = items || this.option(\"items\") || [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            if (items[i] && items[i].items) {\r\n                plainItems = plainItems.concat(items[i].items)\r\n            } else {\r\n                plainItems.push(items[i])\r\n            }\r\n        }\r\n        return plainItems\r\n    },\r\n    _setSelectedItem: function(item) {\r\n        var displayValue = this._displayValue(item);\r\n        this.option(\"selectedItem\", commonUtils.ensureDefined(item, null));\r\n        this.option(\"displayValue\", displayValue)\r\n    },\r\n    _displayValue: function(item) {\r\n        return this._displayGetter(item)\r\n    },\r\n    _refreshSelected: function() {\r\n        var cache = {};\r\n        this._listItemElements().each(function(_, itemElement) {\r\n            var $itemElement = $(itemElement);\r\n            var itemValue = this._valueGetter($itemElement.data(LIST_ITEM_DATA_KEY));\r\n            var isItemSelected = this._isSelectedValue(itemValue, cache);\r\n            if (isItemSelected) {\r\n                this._list.selectItem($itemElement)\r\n            } else {\r\n                this._list.unselectItem($itemElement)\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _popupShownHandler: function() {\r\n        this.callBase();\r\n        this._setFocusPolicy()\r\n    },\r\n    _setFocusPolicy: function() {\r\n        if (!this.option(\"focusStateEnabled\") || !this._list) {\r\n            return\r\n        }\r\n        this._list.option(\"focusedElement\", null)\r\n    },\r\n    _isSelectedValue: function(value) {\r\n        return this._isValueEquals(value, this.option(\"value\"))\r\n    },\r\n    _validateSearchMode: function() {\r\n        var searchMode = this.option(\"searchMode\"),\r\n            normalizedSearchMode = searchMode.toLowerCase();\r\n        if (inArray(normalizedSearchMode, SEARCH_MODES) < 0) {\r\n            throw errors.Error(\"E1019\", searchMode)\r\n        }\r\n    },\r\n    _clearSelectedItem: function() {\r\n        this.option(\"selectedItem\", null)\r\n    },\r\n    _processDataSourceChanging: function() {\r\n        this._setListDataSource();\r\n        this._renderInputValue().fail(function() {\r\n            if (this._isCustomValueAllowed()) {\r\n                return\r\n            }\r\n            this._clearSelectedItem()\r\n        }.bind(this))\r\n    },\r\n    _isCustomValueAllowed: function() {\r\n        return this.option(\"displayCustomValue\")\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._clearFilter();\r\n        this._clearSelectedItem()\r\n    },\r\n    _listItemElements: function() {\r\n        return this._$list ? this._$list.find(LIST_ITEM_SELECTOR) : $()\r\n    },\r\n    _popupConfig: function() {\r\n        var that = this;\r\n        return extend(this.callBase(), {\r\n            templatesRenderAsynchronously: false,\r\n            width: this.option(\"width\"),\r\n            onShowing: function() {\r\n                that.$element().addClass(SKIP_GESTURE_EVENT_CLASS)\r\n            },\r\n            onHidden: function() {\r\n                that.$element().removeClass(SKIP_GESTURE_EVENT_CLASS)\r\n            },\r\n            height: \"auto\",\r\n            maxHeight: this._getMaxHeight.bind(this)\r\n        })\r\n    },\r\n    _renderPopupContent: function() {\r\n        this._renderList()\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._childKeyboardProcessor = this._keyboardProcessor.attachChildProcessor();\r\n        this._setListOption(\"_keyboardProcessor\", this._childKeyboardProcessor)\r\n    },\r\n    _fireContentReadyAction: commonUtils.noop,\r\n    _setAriaTargetForList: function() {\r\n        this._list._getAriaTarget = this._getAriaTarget.bind(this);\r\n        this._list.setAria(\"role\", \"combobox\")\r\n    },\r\n    _renderList: function() {\r\n        this._listId = \"dx-\" + (new Guid)._value;\r\n        var $list = this._$list = $(\"<div>\").attr(\"id\", this._listId).appendTo(this._popup.$content());\r\n        this._list = this._createComponent($list, List, this._listConfig());\r\n        this._refreshList();\r\n        this._setAriaTargetForList();\r\n        this._renderPreventBlur(this._$list)\r\n    },\r\n    _renderPreventBlur: function($target) {\r\n        var eventName = eventUtils.addNamespace(\"mousedown\", \"dxDropDownList\");\r\n        eventsEngine.off($target, eventName);\r\n        eventsEngine.on($target, eventName, function(e) {\r\n            e.preventDefault()\r\n        }.bind(this))\r\n    },\r\n    _renderOpenedState: function() {\r\n        this.callBase();\r\n        var opened = this.option(\"opened\") || void 0;\r\n        this.setAria({\r\n            activedescendant: opened && this._list.getFocusedItemId(),\r\n            owns: opened && this._listId\r\n        })\r\n    },\r\n    _refreshList: function() {\r\n        if (this._list && this._shouldRefreshDataSource()) {\r\n            this._setListDataSource()\r\n        }\r\n    },\r\n    _shouldRefreshDataSource: function() {\r\n        var dataSourceProvided = !!this._list.option(\"dataSource\");\r\n        return dataSourceProvided !== this._needPassDataSourceToList()\r\n    },\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    },\r\n    _getListKeyExpr: function() {\r\n        var valueExpr = this.option(\"valueExpr\"),\r\n            isValueExprField = typeUtils.isString(valueExpr) && \"this\" !== valueExpr;\r\n        return isValueExprField ? valueExpr : null\r\n    },\r\n    _listConfig: function() {\r\n        var options = {\r\n            selectionMode: \"single\",\r\n            _templates: this.option(\"_templates\"),\r\n            templateProvider: this.option(\"templateProvider\"),\r\n            noDataText: this.option(\"noDataText\"),\r\n            grouped: this.option(\"grouped\"),\r\n            onContentReady: this._listContentReadyHandler.bind(this),\r\n            itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\r\n            indicateLoading: false,\r\n            keyExpr: this._getListKeyExpr(),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            tabIndex: null,\r\n            onItemClick: this._listItemClickAction.bind(this),\r\n            dataSource: this._getDataSource(),\r\n            _keyboardProcessor: this._childKeyboardProcessor,\r\n            hoverStateEnabled: this._isDesktopDevice() ? this.option(\"hoverStateEnabled\") : false,\r\n            focusStateEnabled: this._isDesktopDevice() ? this.option(\"focusStateEnabled\") : false\r\n        };\r\n        return options\r\n    },\r\n    _getDataSource: function() {\r\n        return this._needPassDataSourceToList() ? this._dataSource : null\r\n    },\r\n    _dataSourceOptions: function() {\r\n        return {\r\n            paginate: false\r\n        }\r\n    },\r\n    _dataSourceFromUrlLoadMode: function() {\r\n        return \"raw\"\r\n    },\r\n    _listContentReadyHandler: function() {\r\n        this._list = this._list || this._$list.dxList(\"instance\");\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._refreshSelected()\r\n        }\r\n        this._dimensionChanged();\r\n        this._contentReadyAction()\r\n    },\r\n    _setListOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_list\", arguments)\r\n    },\r\n    _listItemClickAction: function(e) {\r\n        this._listItemClickHandler(e);\r\n        this._itemClickAction(e)\r\n    },\r\n    _listItemClickHandler: commonUtils.noop,\r\n    _setListDataSource: function() {\r\n        if (!this._list) {\r\n            return\r\n        }\r\n        this._setListOption(\"dataSource\", this._getDataSource());\r\n        if (!this._needPassDataSourceToList()) {\r\n            this._setListOption(\"items\", [])\r\n        }\r\n    },\r\n    _needPassDataSourceToList: function() {\r\n        return this.option(\"showDataBeforeSearch\") || this._isMinSearchLengthExceeded()\r\n    },\r\n    _isMinSearchLengthExceeded: function() {\r\n        return this._searchValue().toString().length >= this.option(\"minSearchLength\")\r\n    },\r\n    _searchValue: function() {\r\n        return this._input().val() || \"\"\r\n    },\r\n    _getSearchEvent: function() {\r\n        return eventUtils.addNamespace(SEARCH_EVENT, this.NAME + \"Search\")\r\n    },\r\n    _getSetFocusPolicyEvent: function() {\r\n        return eventUtils.addNamespace(\"input\", this.NAME + \"FocusPolicy\")\r\n    },\r\n    _renderEvents: function() {\r\n        this.callBase();\r\n        eventsEngine.on(this._input(), this._getSetFocusPolicyEvent(), this._setFocusPolicy.bind(this));\r\n        if (this._shouldRenderSearchEvent()) {\r\n            eventsEngine.on(this._input(), this._getSearchEvent(), this._searchHandler.bind(this))\r\n        }\r\n    },\r\n    _shouldRenderSearchEvent: function() {\r\n        return this.option(\"searchEnabled\")\r\n    },\r\n    _refreshEvents: function() {\r\n        eventsEngine.off(this._input(), this._getSearchEvent());\r\n        eventsEngine.off(this._input(), this._getSetFocusPolicyEvent());\r\n        this.callBase()\r\n    },\r\n    _searchHandler: function() {\r\n        if (!this._isMinSearchLengthExceeded()) {\r\n            this._searchCanceled();\r\n            return\r\n        }\r\n        var searchTimeout = this.option(\"searchTimeout\");\r\n        if (searchTimeout) {\r\n            this._clearSearchTimer();\r\n            this._searchTimer = setTimeout(this._searchDataSource.bind(this), searchTimeout)\r\n        } else {\r\n            this._searchDataSource()\r\n        }\r\n    },\r\n    _searchCanceled: function() {\r\n        this._clearSearchTimer();\r\n        if (this._needPassDataSourceToList()) {\r\n            this._filterDataSource(null)\r\n        }\r\n        this._refreshList()\r\n    },\r\n    _searchDataSource: function() {\r\n        this._filterDataSource(this._searchValue())\r\n    },\r\n    _filterDataSource: function(searchValue) {\r\n        this._clearSearchTimer();\r\n        var dataSource = this._dataSource;\r\n        dataSource.searchExpr(this.option(\"searchExpr\") || this._displayGetterExpr());\r\n        dataSource.searchOperation(this.option(\"searchMode\"));\r\n        dataSource.searchValue(searchValue);\r\n        return dataSource.load().done(this._dataSourceFiltered.bind(this, searchValue))\r\n    },\r\n    _clearFilter: function() {\r\n        var dataSource = this._dataSource;\r\n        dataSource && dataSource.searchValue() && dataSource.searchValue(null)\r\n    },\r\n    _dataSourceFiltered: function() {\r\n        this._refreshList();\r\n        this._refreshPopupVisibility()\r\n    },\r\n    _refreshPopupVisibility: function() {\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this.option(\"opened\", this._hasItemsToShow());\r\n        if (this.option(\"opened\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dataSourceChangedHandler: function(newItems) {\r\n        if (0 === this._dataSource.pageIndex()) {\r\n            this.option().items = newItems\r\n        } else {\r\n            this.option().items = this.option().items.concat(newItems)\r\n        }\r\n    },\r\n    _hasItemsToShow: function() {\r\n        var resultItems = this._dataSource && this._dataSource.items() || [];\r\n        var resultAmount = resultItems.length;\r\n        var isMinSearchLengthExceeded = this._needPassDataSourceToList();\r\n        return !!(isMinSearchLengthExceeded && resultAmount)\r\n    },\r\n    _clearSearchTimer: function() {\r\n        clearTimeout(this._searchTimer);\r\n        delete this._searchTimer\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this._dimensionChanged()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._popup && this._updatePopupDimensions()\r\n    },\r\n    _updatePopupDimensions: function() {\r\n        this._updatePopupWidth();\r\n        this._updatePopupHeight()\r\n    },\r\n    _updatePopupWidth: function() {\r\n        this._setPopupOption(\"width\", this.$element().outerWidth() + this.option(\"popupWidthExtension\"))\r\n    },\r\n    _needPopupRepaint: function() {\r\n        if (!this._dataSource) {\r\n            return false\r\n        }\r\n        var currentPageIndex = this._dataSource.pageIndex(),\r\n            needRepaint = typeUtils.isDefined(this._pageIndex) && currentPageIndex <= this._pageIndex;\r\n        this._pageIndex = currentPageIndex;\r\n        return needRepaint\r\n    },\r\n    _updatePopupHeight: function() {\r\n        if (this._needPopupRepaint()) {\r\n            this._popup.repaint()\r\n        }\r\n        this._list && this._list.updateDimensions()\r\n    },\r\n    _getMaxHeight: function() {\r\n        var $element = this.$element(),\r\n            offset = $element.offset(),\r\n            windowHeight = $(window).height(),\r\n            maxHeight = Math.max(offset.top, windowHeight - offset.top - $element.outerHeight());\r\n        return Math.min(.5 * windowHeight, maxHeight)\r\n    },\r\n    _clean: function() {\r\n        if (this._list) {\r\n            delete this._list\r\n        }\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        this._clearSearchTimer();\r\n        this.callBase()\r\n    },\r\n    _setCollectionWidgetOption: function() {\r\n        this._setListOption.apply(this, arguments)\r\n    },\r\n    _optionChanged: function(args) {\r\n        this._dataExpressionOptionChanged(args);\r\n        switch (args.name) {\r\n            case \"hoverStateEnabled\":\r\n            case \"focusStateEnabled\":\r\n                this._isDesktopDevice() && this._setListOption(args.name, args.value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                if (!this.option(\"dataSource\")) {\r\n                    this._processDataSourceChanging()\r\n                }\r\n                break;\r\n            case \"dataSource\":\r\n                this._processDataSourceChanging();\r\n                break;\r\n            case \"valueExpr\":\r\n                this._renderValue();\r\n                this._setListOption(\"keyExpr\", this._getListKeyExpr());\r\n                break;\r\n            case \"displayExpr\":\r\n                this._renderValue();\r\n                break;\r\n            case \"searchMode\":\r\n                this._validateSearchMode();\r\n                break;\r\n            case \"minSearchLength\":\r\n                this._refreshList();\r\n                break;\r\n            case \"searchEnabled\":\r\n            case \"showDataBeforeSearch\":\r\n            case \"searchExpr\":\r\n                this._invalidate();\r\n                break;\r\n            case \"onContentReady\":\r\n                this._initContentReadyAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._initSelectionChangedAction();\r\n                break;\r\n            case \"onItemClick\":\r\n                this._initItemClickAction();\r\n                break;\r\n            case \"grouped\":\r\n            case \"groupTemplate\":\r\n            case \"noDataText\":\r\n                this._setListOption(args.name);\r\n                break;\r\n            case \"displayValue\":\r\n                this.option(\"text\", args.value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"searchTimeout\":\r\n            case \"popupWidthExtension\":\r\n                break;\r\n            case \"selectedItem\":\r\n                this._selectionChangedAction({\r\n                    selectedItem: args.value\r\n                });\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataExpressionMixin);\r\nregisterComponent(\"dxDropDownList\", DropDownList);\r\nmodule.exports = DropDownList;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/drop_down_editor/ui.drop_down_list.js\n// module id = 760\n// module chunks = 1 3 4 9 10","/**\r\n * DevExtreme (localization/ldml/date.parser.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar escapeRegExp = require(\"../../core/utils/common\").escapeRegExp;\r\nvar FORMAT_TYPES = {\r\n    3: \"abbreviated\",\r\n    4: \"wide\",\r\n    5: \"narrow\"\r\n};\r\nvar monthRegExpGenerator = function(count, dateParts) {\r\n    if (count > 2) {\r\n        return Object.keys(FORMAT_TYPES).map(function(count) {\r\n            return [\"format\", \"standalone\"].map(function(type) {\r\n                return dateParts.getMonthNames(FORMAT_TYPES[count], type).join(\"|\")\r\n            }).join(\"|\")\r\n        }).join(\"|\")\r\n    }\r\n    return \"0?[1-9]|1[012]\"\r\n};\r\nvar PATTERN_REGEXPS = {\r\n    y: function(count) {\r\n        return \"[0-9]+\"\r\n    },\r\n    M: monthRegExpGenerator,\r\n    L: monthRegExpGenerator,\r\n    Q: function(count, dateParts) {\r\n        if (count > 2) {\r\n            return dateParts.getQuarterNames(FORMAT_TYPES[count], \"format\").join(\"|\")\r\n        }\r\n        return \"0?[1-4]\"\r\n    },\r\n    E: function(count, dateParts) {\r\n        return \"\\\\D*\"\r\n    },\r\n    a: function(count, dateParts) {\r\n        return dateParts.getPeriodNames(FORMAT_TYPES[count < 3 ? 3 : count], \"format\").join(\"|\")\r\n    },\r\n    d: function(count) {\r\n        return \"0?[1-9]|[12][0-9]|3[01]\"\r\n    },\r\n    H: function(count) {\r\n        return \"0?[0-9]|1[0-9]|2[0-3]\"\r\n    },\r\n    h: function(count) {\r\n        return \"0?[1-9]|1[012]\"\r\n    },\r\n    m: function(count) {\r\n        return \"0?[0-9]|[1-5][0-9]\"\r\n    },\r\n    s: function(count) {\r\n        return \"0?[0-9]|[1-5][0-9]\"\r\n    },\r\n    S: function(count) {\r\n        return \"[0-9]{1,\" + count + \"}\"\r\n    }\r\n};\r\nvar parseNumber = Number;\r\nvar caseInsensitiveIndexOf = function(array, value) {\r\n    return array.map(function(item) {\r\n        return item.toLowerCase()\r\n    }).indexOf(value.toLowerCase())\r\n};\r\nvar monthPatternParser = function(text, count, dateParts) {\r\n    if (count > 2) {\r\n        return [\"format\", \"standalone\"].map(function(type) {\r\n            return Object.keys(FORMAT_TYPES).map(function(count) {\r\n                var monthNames = dateParts.getMonthNames(FORMAT_TYPES[count], type);\r\n                return caseInsensitiveIndexOf(monthNames, text)\r\n            })\r\n        }).reduce(function(a, b) {\r\n            return a.concat(b)\r\n        }).filter(function(index) {\r\n            return index >= 0\r\n        })[0]\r\n    }\r\n    return parseNumber(text) - 1\r\n};\r\nvar PATTERN_PARSERS = {\r\n    y: function(text, count) {\r\n        var year = parseNumber(text);\r\n        if (2 === count) {\r\n            return year < 30 ? 2e3 + year : 1900 + year\r\n        }\r\n        return year\r\n    },\r\n    M: monthPatternParser,\r\n    L: monthPatternParser,\r\n    Q: function(text, count, dateParts) {\r\n        if (count > 2) {\r\n            return dateParts.getQuarterNames(FORMAT_TYPES[count], \"format\").indexOf(text)\r\n        }\r\n        return parseNumber(text) - 1\r\n    },\r\n    E: function(text, count, dateParts) {\r\n        var dayNames = dateParts.getDayNames(FORMAT_TYPES[count < 3 ? 3 : count], \"format\");\r\n        return caseInsensitiveIndexOf(dayNames, text)\r\n    },\r\n    a: function(text, count, dateParts) {\r\n        var periodNames = dateParts.getPeriodNames(FORMAT_TYPES[count < 3 ? 3 : count], \"format\");\r\n        return caseInsensitiveIndexOf(periodNames, text)\r\n    },\r\n    d: parseNumber,\r\n    H: parseNumber,\r\n    h: parseNumber,\r\n    m: parseNumber,\r\n    s: parseNumber,\r\n    S: function(text, count) {\r\n        count = Math.max(count, 3);\r\n        text = text.slice(0, 3);\r\n        while (count < 3) {\r\n            text += \"0\";\r\n            count++\r\n        }\r\n        return parseNumber(text)\r\n    }\r\n};\r\nvar ORDERED_PATTERNS = [\"y\", \"M\", \"d\", \"h\", \"m\", \"s\", \"S\"];\r\nvar PATTERN_SETTERS = {\r\n    y: \"setFullYear\",\r\n    M: \"setMonth\",\r\n    L: \"setMonth\",\r\n    a: function(date, value) {\r\n        var hours = date.getHours();\r\n        if (!value && 12 === hours) {\r\n            date.setHours(0)\r\n        } else {\r\n            if (value && 12 !== hours) {\r\n                date.setHours(hours + 12)\r\n            }\r\n        }\r\n    },\r\n    d: \"setDate\",\r\n    H: \"setHours\",\r\n    h: \"setHours\",\r\n    m: \"setMinutes\",\r\n    s: \"setSeconds\",\r\n    S: \"setMilliseconds\"\r\n};\r\nvar getSameCharCount = function(text, index) {\r\n    var char = text[index],\r\n        count = 0;\r\n    do {\r\n        index++;\r\n        count++\r\n    } while (text[index] === char);\r\n    return count\r\n};\r\nvar createPattern = function(char, count) {\r\n    var result = \"\";\r\n    for (var i = 0; i < count; i++) {\r\n        result += char\r\n    }\r\n    return result\r\n};\r\nvar getRegExpInfo = function(format, dateParts) {\r\n    var isEscaping, regexpText = \"\",\r\n        patterns = [];\r\n    for (var i = 0; i < format.length; i++) {\r\n        var char = format[i],\r\n            isEscapeChar = \"'\" === char,\r\n            regexpPart = PATTERN_REGEXPS[char];\r\n        if (isEscapeChar) {\r\n            isEscaping = !isEscaping;\r\n            if (\"'\" !== format[i - 1]) {\r\n                continue\r\n            }\r\n        }\r\n        if (regexpPart && !isEscaping) {\r\n            var count = getSameCharCount(format, i),\r\n                pattern = createPattern(char, count);\r\n            patterns.push(pattern);\r\n            regexpText += \"(\" + regexpPart(count, dateParts) + \")\";\r\n            i += count - 1\r\n        } else {\r\n            char = escapeRegExp(char);\r\n            patterns.push(char);\r\n            regexpText += \"(\" + char + \")\"\r\n        }\r\n    }\r\n    return {\r\n        patterns: patterns,\r\n        regexp: new RegExp(\"^\" + regexpText + \"$\", \"i\")\r\n    }\r\n};\r\nvar getPatternSetters = function() {\r\n    return PATTERN_SETTERS\r\n};\r\nvar setPatternPart = function(date, pattern, text, dateParts) {\r\n    var patternChar = pattern[0],\r\n        partSetter = PATTERN_SETTERS[patternChar],\r\n        partParser = PATTERN_PARSERS[patternChar];\r\n    if (partSetter && partParser) {\r\n        var value = partParser(text, pattern.length, dateParts);\r\n        if (date[partSetter]) {\r\n            date[partSetter](value)\r\n        } else {\r\n            partSetter(date, value)\r\n        }\r\n    }\r\n};\r\nvar setPatternPartFromNow = function(date, pattern, now) {\r\n    var setterName = PATTERN_SETTERS[pattern],\r\n        getterName = \"g\" + setterName.substr(1);\r\n    date[setterName](now[getterName]())\r\n};\r\nvar getShortPatterns = function(fullPatterns) {\r\n    return fullPatterns.map(function(pattern) {\r\n        return \"H\" === pattern[0] ? \"h\" : pattern[0]\r\n    })\r\n};\r\nvar getMaxOrderedPatternIndex = function(patterns) {\r\n    var indexes = patterns.map(function(pattern) {\r\n        return ORDERED_PATTERNS.indexOf(pattern)\r\n    });\r\n    return Math.max.apply(Math, indexes)\r\n};\r\nvar getOrderedFormatPatterns = function(formatPatterns) {\r\n    var otherPatterns = formatPatterns.filter(function(pattern) {\r\n        return ORDERED_PATTERNS.indexOf(pattern) < 0\r\n    });\r\n    return ORDERED_PATTERNS.concat(otherPatterns)\r\n};\r\nvar getParser = function(format, dateParts) {\r\n    var regExpInfo = getRegExpInfo(format, dateParts);\r\n    return function(text) {\r\n        var regExpResult = regExpInfo.regexp.exec(text);\r\n        if (regExpResult) {\r\n            var now = new Date,\r\n                date = new Date(now.getFullYear(), 0, 1),\r\n                formatPatterns = getShortPatterns(regExpInfo.patterns),\r\n                maxPatternIndex = getMaxOrderedPatternIndex(formatPatterns),\r\n                orderedFormatPatterns = getOrderedFormatPatterns(formatPatterns);\r\n            orderedFormatPatterns.forEach(function(pattern, index) {\r\n                if (index < ORDERED_PATTERNS.length && index > maxPatternIndex) {\r\n                    return\r\n                }\r\n                var patternIndex = formatPatterns.indexOf(pattern);\r\n                if (patternIndex >= 0) {\r\n                    setPatternPart(date, regExpInfo.patterns[patternIndex], regExpResult[patternIndex + 1], dateParts)\r\n                } else {\r\n                    setPatternPartFromNow(date, pattern, now)\r\n                }\r\n            });\r\n            return date\r\n        }\r\n        return null\r\n    }\r\n};\r\nexports.getParser = getParser;\r\nexports.getRegExpInfo = getRegExpInfo;\r\nexports.getPatternSetters = getPatternSetters;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/localization/ldml/date.parser.js\n// module id = 764\n// module chunks = 1 3 4","/**\r\n * DevExtreme (localization/ldml/date.formatter.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction leftPad(text, length) {\r\n    while (text.length < length) {\r\n        text = \"0\" + text\r\n    }\r\n    return text\r\n}\r\nvar FORMAT_TYPES = {\r\n    3: \"abbreviated\",\r\n    4: \"wide\",\r\n    5: \"narrow\"\r\n};\r\nvar LDML_FORMATTERS = {\r\n    y: function(date, count, useUtc) {\r\n        var year = date[useUtc ? \"getUTCFullYear\" : \"getFullYear\"]();\r\n        if (2 === count) {\r\n            year %= 100\r\n        }\r\n        return leftPad(year.toString(), count)\r\n    },\r\n    M: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getMonthNames(formatType, \"format\")[month]\r\n        }\r\n        return leftPad((month + 1).toString(), Math.min(count, 2))\r\n    },\r\n    L: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getMonthNames(formatType, \"standalone\")[month]\r\n        }\r\n        return leftPad((month + 1).toString(), Math.min(count, 2))\r\n    },\r\n    Q: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var quarter = Math.floor(month / 3);\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getQuarterNames(formatType)[quarter]\r\n        }\r\n        return leftPad((quarter + 1).toString(), Math.min(count, 2))\r\n    },\r\n    E: function(date, count, useUtc, dateParts) {\r\n        var day = date[useUtc ? \"getUTCDay\" : \"getDay\"]();\r\n        var formatType = FORMAT_TYPES[count < 3 ? 3 : count];\r\n        return dateParts.getDayNames(formatType)[day]\r\n    },\r\n    a: function(date, count, useUtc, dateParts) {\r\n        var hours = date[useUtc ? \"getUTCHours\" : \"getHours\"](),\r\n            period = hours < 12 ? 0 : 1,\r\n            formatType = FORMAT_TYPES[count];\r\n        return dateParts.getPeriodNames(formatType)[period]\r\n    },\r\n    d: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCDate\" : \"getDate\"]().toString(), Math.min(count, 2))\r\n    },\r\n    H: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCHours\" : \"getHours\"]().toString(), Math.min(count, 2))\r\n    },\r\n    h: function(date, count, useUtc) {\r\n        var hours = date[useUtc ? \"getUTCHours\" : \"getHours\"]();\r\n        return leftPad((hours % 12 || 12).toString(), Math.min(count, 2))\r\n    },\r\n    m: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCMinutes\" : \"getMinutes\"]().toString(), Math.min(count, 2))\r\n    },\r\n    s: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCSeconds\" : \"getSeconds\"]().toString(), Math.min(count, 2))\r\n    },\r\n    S: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCMilliseconds\" : \"getMilliseconds\"]().toString(), 3).substr(0, count)\r\n    },\r\n    x: function(date, count, useUtc) {\r\n        var timezoneOffset = useUtc ? 0 : date.getTimezoneOffset(),\r\n            signPart = timezoneOffset > 0 ? \"-\" : \"+\",\r\n            timezoneOffsetAbs = Math.abs(timezoneOffset),\r\n            hours = Math.floor(timezoneOffsetAbs / 60),\r\n            minutes = timezoneOffsetAbs % 60,\r\n            hoursPart = leftPad(hours.toString(), 2),\r\n            minutesPart = leftPad(minutes.toString(), 2);\r\n        return signPart + hoursPart + (count >= 3 ? \":\" : \"\") + (count > 1 || minutes ? minutesPart : \"\")\r\n    },\r\n    X: function(date, count, useUtc) {\r\n        if (useUtc || !date.getTimezoneOffset()) {\r\n            return \"Z\"\r\n        }\r\n        return LDML_FORMATTERS.x(date, count, useUtc)\r\n    },\r\n    Z: function(date, count, useUtc) {\r\n        return LDML_FORMATTERS.X(date, count >= 5 ? 3 : 2, useUtc)\r\n    }\r\n};\r\nvar getFormatter = function(format, dateParts) {\r\n    return function(date) {\r\n        var charIndex, formatter, char, isCurrentCharEqualsNext, charCount = 0,\r\n            separator = \"'\",\r\n            isEscaping = false,\r\n            result = \"\";\r\n        if (!date) {\r\n            return null\r\n        }\r\n        if (!format) {\r\n            return date\r\n        }\r\n        var useUtc = \"Z\" === format[format.length - 1] || \"'Z'\" === format.slice(-3);\r\n        for (charIndex = 0; charIndex < format.length; charIndex++) {\r\n            char = format[charIndex];\r\n            formatter = LDML_FORMATTERS[char];\r\n            isCurrentCharEqualsNext = char === format[charIndex + 1];\r\n            charCount++;\r\n            if (!isCurrentCharEqualsNext) {\r\n                if (formatter && !isEscaping) {\r\n                    result += formatter(date, charCount, useUtc, dateParts)\r\n                }\r\n                charCount = 0\r\n            }\r\n            if (char === separator && !isCurrentCharEqualsNext) {\r\n                isEscaping = !isEscaping\r\n            } else {\r\n                if (isEscaping || !formatter) {\r\n                    result += char\r\n                }\r\n            }\r\n            if (char === separator && isCurrentCharEqualsNext) {\r\n                charIndex++\r\n            }\r\n        }\r\n        return result\r\n    }\r\n};\r\nmodule.exports.getFormatter = getFormatter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/localization/ldml/date.formatter.js\n// module id = 765\n// module chunks = 1 3 4","/**\r\n * DevExtreme (localization/default_date_names.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar iteratorUtils = require(\"../core/utils/iterator\");\r\nvar MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n    DAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n    PERIODS = [\"AM\", \"PM\"],\r\n    QUARTERS = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\r\nvar cutCaptions = function(captions, format) {\r\n    var lengthByFormat = {\r\n        abbreviated: 3,\r\n        \"short\": 2,\r\n        narrow: 1\r\n    };\r\n    return iteratorUtils.map(captions, function(caption) {\r\n        return caption.substr(0, lengthByFormat[format])\r\n    })\r\n};\r\nmodule.exports = {\r\n    getMonthNames: function(format) {\r\n        return cutCaptions(MONTHS, format)\r\n    },\r\n    getDayNames: function(format) {\r\n        return cutCaptions(DAYS, format)\r\n    },\r\n    getQuarterNames: function(format) {\r\n        return QUARTERS\r\n    },\r\n    getPeriodNames: function(format) {\r\n        return PERIODS\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/localization/default_date_names.js\n// module id = 766\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.calendar.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Calendar = require(\"../calendar\"),\r\n    DateBoxStrategy = require(\"./ui.date_box.strategy\"),\r\n    dateUtils = require(\"../../core/utils/date\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    isFunction = require(\"../../core/utils/type\").isFunction,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    messageLocalization = require(\"../../localization/message\");\r\nvar CalendarStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"Calendar\",\r\n    supportedKeys: function() {\r\n        return {\r\n            rightArrow: function() {\r\n                if (this.option(\"opened\")) {\r\n                    return true\r\n                }\r\n            },\r\n            leftArrow: function() {\r\n                if (this.option(\"opened\")) {\r\n                    return true\r\n                }\r\n            },\r\n            enter: function(e) {\r\n                if (this.dateBox.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    if (this._widget.option(\"zoomLevel\") === this._widget.option(\"maxZoomLevel\")) {\r\n                        var contouredDate = this._widget._view.option(\"contouredDate\");\r\n                        contouredDate && this.dateBoxValue(contouredDate, e);\r\n                        this.dateBox.close();\r\n                        this.dateBox._valueChangeEventHandler(e)\r\n                    } else {\r\n                        return true\r\n                    }\r\n                } else {\r\n                    this.dateBox._valueChangeEventHandler(e)\r\n                }\r\n            }.bind(this)\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shortdate\"\r\n    },\r\n    _getWidgetName: function() {\r\n        return Calendar\r\n    },\r\n    _getWidgetOptions: function() {\r\n        var disabledDates = this.dateBox.option(\"disabledDates\");\r\n        return extend(this.dateBox.option(\"calendarOptions\"), {\r\n            value: this.dateBoxValue() || null,\r\n            dateSerializationFormat: null,\r\n            _keyboardProcessor: this._widgetKeyboardProcessor,\r\n            min: this.dateBox.dateOption(\"min\"),\r\n            max: this.dateBox.dateOption(\"max\"),\r\n            onValueChanged: this._valueChangedHandler.bind(this),\r\n            onCellClick: this._cellClickHandler.bind(this),\r\n            tabIndex: null,\r\n            disabledDates: isFunction(disabledDates) ? this._injectComponent(disabledDates.bind(this.dateBox)) : disabledDates,\r\n            onContouredChanged: this._refreshActiveDescendant.bind(this),\r\n            hasFocus: function() {\r\n                return true\r\n            }\r\n        })\r\n    },\r\n    _injectComponent: function(func) {\r\n        var that = this;\r\n        return function(params) {\r\n            extend(params, {\r\n                component: that.dateBox\r\n            });\r\n            return func(params)\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function(e) {\r\n        this.dateBox.setAria(\"activedescendant\", e.actionValue)\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var toolbarItems = _popupConfig.toolbarItems,\r\n            buttonsLocation = this.dateBox.option(\"buttonsLocation\");\r\n        var position = [];\r\n        if (\"default\" !== buttonsLocation) {\r\n            position = commonUtils.splitPair(buttonsLocation)\r\n        } else {\r\n            position = [\"bottom\", \"center\"]\r\n        }\r\n        if (\"useButtons\" === this.dateBox.option(\"applyValueMode\")) {\r\n            toolbarItems.unshift({\r\n                widget: \"dxButton\",\r\n                toolbar: position[0],\r\n                location: \"after\" === position[1] ? \"before\" : position[1],\r\n                options: {\r\n                    onClick: function() {\r\n                        this._widget._toTodayView()\r\n                    }.bind(this),\r\n                    text: messageLocalization.format(\"dxCalendar-todayButtonText\"),\r\n                    type: \"today\"\r\n                }\r\n            })\r\n        }\r\n        return extend(true, _popupConfig, {\r\n            toolbarItems: toolbarItems,\r\n            position: {\r\n                collision: \"flipfit flip\"\r\n            }\r\n        })\r\n    },\r\n    _valueChangedHandler: function(e) {\r\n        var dateBox = this.dateBox,\r\n            value = e.value,\r\n            prevValue = e.previousValue;\r\n        if (dateUtils.sameDate(value, prevValue)) {\r\n            return\r\n        }\r\n        if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\r\n            this.dateBoxValue(this.getValue(), e.event)\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._widget.option(\"value\", this.dateBoxValue())\r\n    },\r\n    textChangedHandler: function() {\r\n        if (this.dateBox.option(\"opened\") && this._widget) {\r\n            this._updateValue(true)\r\n        }\r\n    },\r\n    _cellClickHandler: function(e) {\r\n        var dateBox = this.dateBox;\r\n        if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\r\n            dateBox.option(\"opened\", false);\r\n            this.dateBoxValue(this.getValue(), e.event)\r\n        }\r\n    }\r\n});\r\nmodule.exports = CalendarStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.strategy.calendar.js\n// module id = 767\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/validator.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar dataUtils = require(\"../core/element_data\"),\r\n    Callbacks = require(\"../core/utils/callbacks\"),\r\n    errors = require(\"./widget/ui.errors\"),\r\n    DOMComponent = require(\"../core/dom_component\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    map = require(\"../core/utils/iterator\").map,\r\n    ValidationMixin = require(\"./validation/validation_mixin\"),\r\n    ValidationEngine = require(\"./validation_engine\"),\r\n    DefaultAdapter = require(\"./validation/default_adapter\"),\r\n    registerComponent = require(\"../core/component_registrator\");\r\nvar VALIDATOR_CLASS = \"dx-validator\";\r\nvar Validator = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            validationRules: []\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initGroupRegistration();\r\n        this.focused = Callbacks();\r\n        this._initAdapter()\r\n    },\r\n    _initGroupRegistration: function() {\r\n        var group = this._findGroup();\r\n        if (!this._groupWasInit) {\r\n            this.on(\"disposing\", function(args) {\r\n                ValidationEngine.removeRegisteredValidator(args.component._validationGroup, args.component)\r\n            })\r\n        }\r\n        if (!this._groupWasInit || this._validationGroup !== group) {\r\n            ValidationEngine.removeRegisteredValidator(this._validationGroup, this);\r\n            this._groupWasInit = true;\r\n            this._validationGroup = group;\r\n            ValidationEngine.registerValidatorInGroup(group, this)\r\n        }\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _initAdapter: function() {\r\n        var that = this,\r\n            element = that.$element()[0],\r\n            dxStandardEditor = dataUtils.data(element, \"dx-validation-target\"),\r\n            adapter = that.option(\"adapter\");\r\n        if (!adapter) {\r\n            if (dxStandardEditor) {\r\n                adapter = new DefaultAdapter(dxStandardEditor, this);\r\n                adapter.validationRequestsCallbacks.add(function() {\r\n                    that.validate()\r\n                });\r\n                this.option(\"adapter\", adapter);\r\n                return\r\n            }\r\n            throw errors.Error(\"E0120\")\r\n        }\r\n        var callbacks = adapter.validationRequestsCallbacks;\r\n        if (callbacks) {\r\n            if (Array.isArray(callbacks)) {\r\n                callbacks.push(function() {\r\n                    that.validate()\r\n                })\r\n            } else {\r\n                errors.log(\"W0014\", \"validationRequestsCallbacks\", \"jQuery.Callbacks\", \"17.2\", \"Use the array instead\");\r\n                callbacks.add(function() {\r\n                    that.validate()\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(VALIDATOR_CLASS);\r\n        this.callBase()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._initGroupRegistration()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"validationGroup\":\r\n                this._initGroupRegistration();\r\n                return;\r\n            case \"validationRules\":\r\n                this._resetValidationRules();\r\n                void 0 !== this.option(\"isValid\") && this.validate();\r\n                return;\r\n            case \"adapter\":\r\n                this._initAdapter();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getValidationRules: function() {\r\n        if (!this._validationRules) {\r\n            this._validationRules = map(this.option(\"validationRules\"), function(rule) {\r\n                return extend({}, rule, {\r\n                    validator: this\r\n                })\r\n            }.bind(this))\r\n        }\r\n        return this._validationRules\r\n    },\r\n    _resetValidationRules: function() {\r\n        delete this._validationRules\r\n    },\r\n    validate: function() {\r\n        var result, that = this,\r\n            adapter = that.option(\"adapter\"),\r\n            name = that.option(\"name\"),\r\n            bypass = adapter.bypass && adapter.bypass(),\r\n            value = adapter.getValue(),\r\n            currentError = adapter.getCurrentValidationError && adapter.getCurrentValidationError(),\r\n            rules = this._getValidationRules();\r\n        if (bypass) {\r\n            result = {\r\n                isValid: true\r\n            }\r\n        } else {\r\n            if (currentError && currentError.editorSpecific) {\r\n                currentError.validator = this;\r\n                result = {\r\n                    isValid: false,\r\n                    brokenRule: currentError\r\n                }\r\n            } else {\r\n                result = ValidationEngine.validate(value, rules, name)\r\n            }\r\n        }\r\n        this._applyValidationResult(result, adapter);\r\n        return result\r\n    },\r\n    reset: function() {\r\n        var that = this,\r\n            adapter = that.option(\"adapter\"),\r\n            result = {\r\n                isValid: true,\r\n                brokenRule: null\r\n            };\r\n        adapter.reset();\r\n        this._resetValidationRules();\r\n        this._applyValidationResult(result, adapter)\r\n    },\r\n    _applyValidationResult: function(result, adapter) {\r\n        var validatedAction = this._createActionByOption(\"onValidated\");\r\n        result.validator = this;\r\n        adapter.applyValidationResults && adapter.applyValidationResults(result);\r\n        this.option({\r\n            isValid: result.isValid\r\n        });\r\n        validatedAction(result)\r\n    },\r\n    focus: function() {\r\n        var adapter = this.option(\"adapter\");\r\n        adapter && adapter.focus && adapter.focus()\r\n    }\r\n}).include(ValidationMixin);\r\nregisterComponent(\"dxValidator\", Validator);\r\nmodule.exports = Validator;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/validator.js\n// module id = 778\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/date_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./date_box/ui.date_box\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box.js\n// module id = 779\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar registerComponent = require(\"../../core/component_registrator\"),\r\n    DateBoxMask = require(\"./ui.date_box.mask\");\r\nregisterComponent(\"dxDateBox\", DateBoxMask);\r\nmodule.exports = DateBoxMask;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.js\n// module id = 790\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.mask.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _utils = require(\"../../events/utils\");\r\nvar _utils2 = _interopRequireDefault(_utils);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _wheel = require(\"../../events/core/wheel\");\r\nvar _wheel2 = _interopRequireDefault(_wheel);\r\nvar _uiDate_boxMask = require(\"./ui.date_box.mask.parts\");\r\nvar _date = require(\"../../localization/date\");\r\nvar _date2 = _interopRequireDefault(_date);\r\nvar _date3 = require(\"../../localization/ldml/date.format\");\r\nvar _uiDate_box = require(\"./ui.date_box.base\");\r\nvar _uiDate_box2 = _interopRequireDefault(_uiDate_box);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MASK_EVENT_NAMESPACE = \"dateBoxMask\",\r\n    FORWARD = 1,\r\n    BACKWARD = -1;\r\nvar DateBoxMask = _uiDate_box2.default.inherit({\r\n    _supportedKeys: function(e) {\r\n        if (!this._useMaskBehavior() || this.option(\"opened\") || e.altKey) {\r\n            return this.callBase(e)\r\n        }\r\n        var that = this;\r\n        return (0, _extend.extend)(this.callBase(e), {\r\n            del: that._revertPart.bind(that, FORWARD),\r\n            backspace: that._revertPart.bind(that, BACKWARD),\r\n            home: that._selectFirstPart.bind(that),\r\n            end: that._selectLastPart.bind(that),\r\n            escape: that._revertChanges.bind(that),\r\n            enter: that._fireChangeEvent.bind(that),\r\n            leftArrow: that._selectNextPart.bind(that, BACKWARD),\r\n            rightArrow: that._selectNextPart.bind(that, FORWARD),\r\n            upArrow: that._partIncrease.bind(that, FORWARD),\r\n            downArrow: that._partIncrease.bind(that, BACKWARD)\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            useMaskBehavior: false,\r\n            advanceCaret: true\r\n        })\r\n    },\r\n    _isSingleCharKey: function(e) {\r\n        var key = e.originalEvent.key;\r\n        return \"string\" === typeof key && 1 === key.length && !e.ctrl && !e.alt\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        var key = e.originalEvent.key;\r\n        var result = this.callBase(e);\r\n        if (!this._useMaskBehavior() || !this._isSingleCharKey(e)) {\r\n            return result\r\n        }\r\n        this._setNewDateIfEmpty();\r\n        isNaN(parseInt(key)) ? this._searchString(key) : this._searchNumber(key);\r\n        e.originalEvent.preventDefault();\r\n        return result\r\n    },\r\n    _getFormatPattern: function() {\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\")),\r\n            isLDMLPattern = \"string\" === typeof format && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        if (isLDMLPattern) {\r\n            return format\r\n        } else {\r\n            return (0, _date3.getFormat)(function(value) {\r\n                return _date2.default.format(value, format)\r\n            })\r\n        }\r\n    },\r\n    _setNewDateIfEmpty: function() {\r\n        if (!this._maskValue) {\r\n            this._maskValue = new Date;\r\n            this._renderDateParts()\r\n        }\r\n    },\r\n    _searchNumber: function(char) {\r\n        this._searchValue += char;\r\n        var limits = this._getActivePartLimits(),\r\n            getter = this._getActivePartProp(\"getter\"),\r\n            newValue = parseInt(this._searchValue);\r\n        if (\"getMonth\" === getter) {\r\n            newValue--\r\n        }\r\n        if (!(0, _math.inRange)(newValue, limits.min, limits.max)) {\r\n            this._searchValue = char;\r\n            newValue = parseInt(char)\r\n        }\r\n        this._setActivePartValue(newValue);\r\n        if (this.option(\"advanceCaret\")) {\r\n            if (parseInt(this._searchValue + \"0\") > limits.max) {\r\n                this._selectNextPart(FORWARD)\r\n            }\r\n        }\r\n    },\r\n    _searchString: function(char) {\r\n        if (!isNaN(parseInt(this._getActivePartProp(\"text\")))) {\r\n            return\r\n        }\r\n        var limits = this._getActivePartProp(\"limits\")(this._maskValue),\r\n            startString = this._searchValue + char.toLowerCase(),\r\n            endLimit = limits.max - limits.min;\r\n        for (var i = 0; i <= endLimit; i++) {\r\n            this._partIncrease(1);\r\n            if (0 === this._getActivePartProp(\"text\").toLowerCase().indexOf(startString)) {\r\n                this._searchValue = startString;\r\n                return\r\n            }\r\n        }\r\n        this._revertPart(0);\r\n        if (this._searchValue) {\r\n            this._clearSearchValue();\r\n            this._searchString(char)\r\n        }\r\n    },\r\n    _clearSearchValue: function() {\r\n        this._searchValue = \"\"\r\n    },\r\n    _revertPart: function(direction, e) {\r\n        var value = this.dateOption(\"value\");\r\n        var caret = this._caret();\r\n        var isAllSelected = caret.end - caret.start === this.option(\"text\").length;\r\n        if (value && !isAllSelected) {\r\n            var actual = this._getActivePartValue(value);\r\n            this._setActivePartValue(actual);\r\n            this._selectNextPart(direction, e)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return this.option(\"useMaskBehavior\") && \"text\" === this.option(\"mode\")\r\n    },\r\n    _renderMask: function() {\r\n        this.callBase();\r\n        this._detachMaskEvents();\r\n        this._clearState();\r\n        if (this._useMaskBehavior()) {\r\n            this._activePartIndex = 0;\r\n            this._attachMaskEvents();\r\n            this._loadMaskValue();\r\n            this._renderDateParts()\r\n        }\r\n    },\r\n    _renderDateParts: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this.option(\"text\") || this._getDisplayedText(this._maskValue);\r\n        if (text) {\r\n            this._dateParts = (0, _uiDate_boxMask.renderDateParts)(text, this._getFormatPattern());\r\n            this._selectNextPart(0)\r\n        }\r\n    },\r\n    _detachMaskEvents: function() {\r\n        _events_engine2.default.off(this._input(), \".\" + MASK_EVENT_NAMESPACE)\r\n    },\r\n    _attachMaskEvents: function() {\r\n        var _this = this;\r\n        _events_engine2.default.on(this._input(), _utils2.default.addNamespace(\"dxclick\", MASK_EVENT_NAMESPACE), this._maskClickHandler.bind(this));\r\n        _events_engine2.default.on(this._input(), _utils2.default.addNamespace(\"paste\", MASK_EVENT_NAMESPACE), this._maskPasteHandler.bind(this));\r\n        _events_engine2.default.on(this._input(), _utils2.default.addNamespace(\"drop\", MASK_EVENT_NAMESPACE), function(e) {\r\n            _this._renderDisplayText(_this._getDisplayedText(_this._maskValue));\r\n            _this._selectNextPart(0, e)\r\n        });\r\n        _events_engine2.default.on(this._input(), _utils2.default.addNamespace(_wheel2.default.name, MASK_EVENT_NAMESPACE), this._mouseWheelHandler.bind(this))\r\n    },\r\n    _selectLastPart: function(e) {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = this._dateParts.length;\r\n            this._selectNextPart(BACKWARD, e)\r\n        }\r\n    },\r\n    _selectFirstPart: function(e) {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = -1;\r\n            this._selectNextPart(FORWARD, e)\r\n        }\r\n    },\r\n    _mouseWheelHandler: function(e) {\r\n        this._partIncrease(e.delta > 0 ? FORWARD : BACKWARD, e)\r\n    },\r\n    _selectNextPart: function(step, e) {\r\n        if (!this.option(\"text\")) {\r\n            return\r\n        }\r\n        var index = (0, _math.fitIntoRange)(this._activePartIndex + step, 0, this._dateParts.length - 1);\r\n        if (this._dateParts[index].isStub) {\r\n            var isBoundaryIndex = 0 === index && step < 0 || index === this._dateParts.length - 1 && step > 0;\r\n            if (!isBoundaryIndex) {\r\n                this._selectNextPart(step >= 0 ? step + 1 : step - 1, e);\r\n                return\r\n            } else {\r\n                index = this._activePartIndex\r\n            }\r\n        }\r\n        this._activePartIndex = index;\r\n        this._caret(this._getActivePartProp(\"caret\"));\r\n        if (0 !== step) {\r\n            this._clearSearchValue()\r\n        }\r\n        e && e.preventDefault()\r\n    },\r\n    _getActivePartLimits: function() {\r\n        var limitFunction = this._getActivePartProp(\"limits\");\r\n        return limitFunction(this._maskValue)\r\n    },\r\n    _getActivePartValue: function(dateValue) {\r\n        dateValue = dateValue || this._maskValue;\r\n        var getter = this._getActivePartProp(\"getter\");\r\n        return (0, _type.isFunction)(getter) ? getter(dateValue) : dateValue[getter]()\r\n    },\r\n    _setActivePartValue: function(value, dateValue) {\r\n        dateValue = dateValue || this._maskValue;\r\n        var setter = this._getActivePartProp(\"setter\"),\r\n            limits = this._getActivePartLimits();\r\n        value = (0, _math.fitIntoRange)(value, limits.min, limits.max);\r\n        (0, _type.isFunction)(setter) ? setter(dateValue, value): dateValue[setter](value);\r\n        this._renderDisplayText(this._getDisplayedText(dateValue));\r\n        this._renderDateParts()\r\n    },\r\n    _getActivePartProp: function(property) {\r\n        if (!this._dateParts || !this._dateParts[this._activePartIndex]) {\r\n            return\r\n        }\r\n        return this._dateParts[this._activePartIndex][property]\r\n    },\r\n    _loadMaskValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        this._maskValue = value && new Date(value)\r\n    },\r\n    _saveMaskValue: function() {\r\n        var value = this._maskValue && new Date(this._maskValue);\r\n        this.dateOption(\"value\", value)\r\n    },\r\n    _revertChanges: function() {\r\n        this._loadMaskValue();\r\n        this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n        this._renderDateParts()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this.callBase(text);\r\n        if (this._useMaskBehavior()) {\r\n            this.option(\"text\", text)\r\n        }\r\n    },\r\n    _partIncrease: function(step, e) {\r\n        this._setNewDateIfEmpty();\r\n        var limits = this._getActivePartLimits(),\r\n            newValue = step + this._getActivePartValue();\r\n        newValue = newValue > limits.max ? limits.min : newValue;\r\n        newValue = newValue < limits.min ? limits.max : newValue;\r\n        this._setActivePartValue(newValue);\r\n        e && e.preventDefault()\r\n    },\r\n    _maskClickHandler: function() {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = (0, _uiDate_boxMask.getDatePartIndexByPosition)(this._dateParts, this._caret().start);\r\n            this._caret(this._getActivePartProp(\"caret\"))\r\n        }\r\n    },\r\n    _maskPasteHandler: function(e) {\r\n        var newText = this._replaceSelectedText(this.option(\"text\"), this._caret(), (0, _dom.clipboardText)(e));\r\n        var date = _date2.default.parse(newText, this._getFormatPattern());\r\n        if (date) {\r\n            this._renderDateParts();\r\n            this._maskValue = date;\r\n            this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n            this._selectNextPart(0, e)\r\n        } else {\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _isValueDirty: function() {\r\n        var value = this.dateOption(\"value\");\r\n        return (this._maskValue && this._maskValue.getTime()) !== (value && value.getTime())\r\n    },\r\n    _fireChangeEvent: function() {\r\n        this._clearSearchValue();\r\n        this._selectNextPart(FORWARD);\r\n        if (this._isValueDirty()) {\r\n            _events_engine2.default.trigger(this._input(), \"change\")\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this.callBase(e);\r\n        if (this._useMaskBehavior()) {\r\n            this._fireChangeEvent()\r\n        }\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (this._useMaskBehavior()) {\r\n            this._saveValueChangeEvent(e);\r\n            if (!this.option(\"text\")) {\r\n                this._maskValue = null\r\n            }\r\n            this._saveMaskValue()\r\n        } else {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useMaskBehavior\":\r\n                this._renderMask();\r\n                break;\r\n            case \"displayFormat\":\r\n            case \"mode\":\r\n                this.callBase(args);\r\n                this._renderMask();\r\n                break;\r\n            case \"value\":\r\n                this._loadMaskValue();\r\n                this.callBase(args);\r\n                this._renderDateParts();\r\n                break;\r\n            case \"advanceCaret\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clearState: function() {\r\n        this._clearSearchValue();\r\n        delete this._dateParts;\r\n        delete this._activePartIndex;\r\n        delete this._maskValue\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._clearState();\r\n        this._activePartIndex = 0\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._detachMaskEvents();\r\n        this._clearState()\r\n    }\r\n});\r\nmodule.exports = DateBoxMask;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.mask.js\n// module id = 791\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.mask.parts.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports.renderDateParts = exports.getDatePartIndexByPosition = void 0;\r\nvar _date = require(\"../../localization/ldml/date.parser\");\r\nvar _date2 = require(\"../../localization/date\");\r\nvar _date3 = _interopRequireDefault(_date2);\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PATTERN_GETTERS = {\r\n    a: function(date) {\r\n        return date.getHours() < 12 ? 0 : 1\r\n    },\r\n    E: \"getDay\",\r\n    y: \"getFullYear\",\r\n    M: \"getMonth\",\r\n    L: \"getMonth\",\r\n    d: \"getDate\",\r\n    H: \"getHours\",\r\n    h: \"getHours\",\r\n    m: \"getMinutes\",\r\n    s: \"getSeconds\",\r\n    S: \"getMilliseconds\"\r\n};\r\nvar PATTERN_SETTERS = (0, _extend.extend)({}, (0, _date.getPatternSetters)(), {\r\n    a: function(date, value) {\r\n        var hours = date.getHours(),\r\n            current = hours >= 12;\r\n        if (current === value) {\r\n            return\r\n        }\r\n        date.setHours((hours + 12) % 24)\r\n    },\r\n    M: function(date, value) {\r\n        var day = date.getDate();\r\n        date.setMonth(value, 1);\r\n        var dayLimits = getLimits(\"getDate\", date),\r\n            newDay = (0, _math.fitIntoRange)(day, dayLimits.min, dayLimits.max);\r\n        date.setDate(newDay)\r\n    },\r\n    E: function(date, value) {\r\n        if (value < 0) {\r\n            return\r\n        }\r\n        date.setDate(date.getDate() - date.getDay() + value)\r\n    },\r\n    y: function(date, value) {\r\n        var currentYear = date.getFullYear();\r\n        if (value < 100) {\r\n            date.setFullYear(currentYear - currentYear % 100 + value)\r\n        } else {\r\n            date.setFullYear(value)\r\n        }\r\n    }\r\n});\r\nvar getPatternGetter = function(patternChar) {\r\n    var unsupportedCharGetter = function() {\r\n        return patternChar\r\n    };\r\n    return PATTERN_GETTERS[patternChar] || unsupportedCharGetter\r\n};\r\nvar renderDateParts = function(text, format) {\r\n    var regExpInfo = (0, _date.getRegExpInfo)(format, _date3.default),\r\n        result = regExpInfo.regexp.exec(text);\r\n    var start = 0,\r\n        end = 0,\r\n        sections = [];\r\n    for (var i = 1; i < result.length; i++) {\r\n        start = end;\r\n        end = start + result[i].length;\r\n        var pattern = regExpInfo.patterns[i - 1],\r\n            getter = getPatternGetter(pattern[0]);\r\n        sections.push({\r\n            index: i - 1,\r\n            isStub: pattern === (0, _common.escapeRegExp)(result[i]),\r\n            caret: {\r\n                start: start,\r\n                end: end\r\n            },\r\n            pattern: pattern,\r\n            text: result[i],\r\n            limits: getLimits.bind(void 0, getter),\r\n            setter: PATTERN_SETTERS[pattern[0]] || _common.noop,\r\n            getter: getter\r\n        })\r\n    }\r\n    return sections\r\n};\r\nvar getLimits = function(getter, date) {\r\n    var limits = {\r\n        getFullYear: {\r\n            min: 0,\r\n            max: 9999\r\n        },\r\n        getMonth: {\r\n            min: 0,\r\n            max: 11\r\n        },\r\n        getDate: {\r\n            min: 1,\r\n            max: new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\r\n        },\r\n        getDay: {\r\n            min: 0,\r\n            max: 6\r\n        },\r\n        getHours: {\r\n            min: 0,\r\n            max: 23\r\n        },\r\n        getMinutes: {\r\n            min: 0,\r\n            max: 59\r\n        },\r\n        getAmPm: {\r\n            min: 0,\r\n            max: 1\r\n        }\r\n    };\r\n    return limits[getter] || limits.getAmPm\r\n};\r\nvar getDatePartIndexByPosition = function(dateParts, position) {\r\n    for (var i = 0; i < dateParts.length; i++) {\r\n        var caretInGroup = dateParts[i].caret.end >= position;\r\n        if (!dateParts[i].isStub && caretInGroup) {\r\n            return i\r\n        }\r\n    }\r\n    return null\r\n};\r\nexports.getDatePartIndexByPosition = getDatePartIndexByPosition;\r\nexports.renderDateParts = renderDateParts;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.mask.parts.js\n// module id = 792\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.base.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    windowUtils = require(\"../../core/utils/window\"),\r\n    window = windowUtils.getWindow(),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    compareVersions = require(\"../../core/utils/version\").compare,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    support = require(\"../../core/utils/support\"),\r\n    devices = require(\"../../core/devices\"),\r\n    config = require(\"../../core/config\"),\r\n    dateUtils = require(\"../../core/utils/date\"),\r\n    uiDateUtils = require(\"./ui.date_utils\"),\r\n    dateSerialization = require(\"../../core/utils/date_serialization\"),\r\n    DropDownEditor = require(\"../drop_down_editor/ui.drop_down_editor\"),\r\n    dateLocalization = require(\"../../localization/date\"),\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    DATEBOX_CLASS = \"dx-datebox\",\r\n    DX_AUTO_WIDTH_CLASS = \"dx-auto-width\",\r\n    DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\r\nvar PICKER_TYPE = {\r\n    calendar: \"calendar\",\r\n    rollers: \"rollers\",\r\n    list: \"list\",\r\n    \"native\": \"native\"\r\n};\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar STRATEGY_NAME = {\r\n    calendar: \"Calendar\",\r\n    dateView: \"DateView\",\r\n    \"native\": \"Native\",\r\n    calendarWithTime: \"CalendarWithTime\",\r\n    list: \"List\"\r\n};\r\nvar STRATEGY_CLASSES = {\r\n    Calendar: require(\"./ui.date_box.strategy.calendar\"),\r\n    DateView: require(\"./ui.date_box.strategy.date_view\"),\r\n    Native: require(\"./ui.date_box.strategy.native\"),\r\n    CalendarWithTime: require(\"./ui.date_box.strategy.calendar_with_time\"),\r\n    List: require(\"./ui.date_box.strategy.list\")\r\n};\r\nvar isRealWidthSet = function($element) {\r\n    var explicitWidth = $element[0].style.width;\r\n    if (explicitWidth && \"auto\" !== explicitWidth && \"inherit\" !== explicitWidth) {\r\n        return true\r\n    }\r\n    return false\r\n};\r\nvar calculateWidth = function(value, $input, $element) {\r\n    var IE_ROUNDING_ERROR = 10;\r\n    var NATIVE_BUTTONS_WIDTH = 48;\r\n    var $longestValueElement = $(\"<div>\").text(value).css({\r\n        fontStyle: $input.css(\"fontStyle\"),\r\n        fontVariant: $input.css(\"fontVariant\"),\r\n        fontWeight: $input.css(\"fontWeight\"),\r\n        fontSize: $input.css(\"fontSize\"),\r\n        fontFamily: $input.css(\"fontFamily\"),\r\n        letterSpacing: $input.css(\"letterSpacing\"),\r\n        border: $input.css(\"border\"),\r\n        visibility: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        position: \"absolute\",\r\n        \"float\": \"left\"\r\n    });\r\n    $longestValueElement.appendTo($element);\r\n    var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width),\r\n        rightPadding = parseFloat(window.getComputedStyle($input.get(0)).paddingRight),\r\n        leftPadding = parseFloat(window.getComputedStyle($input.get(0)).paddingLeft);\r\n    var width = elementWidth + rightPadding + leftPadding + IE_ROUNDING_ERROR + (\"text\" !== $input.prop(\"type\") ? NATIVE_BUTTONS_WIDTH : 0);\r\n    $longestValueElement.remove();\r\n    return width\r\n};\r\nvar DateBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), this._strategy.supportedKeys())\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        extend(this._deprecatedOptions, {\r\n            maxZoomLevel: {\r\n                since: \"18.1\",\r\n                alias: \"calendarOptions.maxZoomLevel\"\r\n            },\r\n            minZoomLevel: {\r\n                since: \"18.1\",\r\n                alias: \"calendarOptions.minZoomLevel\"\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            type: \"date\",\r\n            showAnalogClock: true,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            displayFormat: null,\r\n            interval: 30,\r\n            disabledDates: null,\r\n            maxZoomLevel: \"month\",\r\n            minZoomLevel: \"century\",\r\n            pickerType: PICKER_TYPE.calendar,\r\n            invalidDateMessage: messageLocalization.format(\"dxDateBox-validation-datetime\"),\r\n            dateOutOfRangeMessage: messageLocalization.format(\"validation-range\"),\r\n            applyButtonText: messageLocalization.format(\"Done\"),\r\n            adaptivityEnabled: false,\r\n            calendarOptions: {}\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                showPopupTitle: true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                var realDevice = devices.real(),\r\n                    platform = realDevice.platform;\r\n                return \"ios\" === platform || \"android\" === platform\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.native\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function(_device2) {\r\n                return \"win\" === _device2.platform && _device2.version && 10 === _device2.version[0]\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom center\"\r\n            }\r\n        }, {\r\n            device: function(currentDevice) {\r\n                var realDevice = devices.real(),\r\n                    platform = realDevice.platform,\r\n                    version = realDevice.version,\r\n                    isPhone = realDevice.phone;\r\n                return \"generic\" === platform && \"desktop\" !== currentDevice.deviceType || \"win\" === platform && isPhone || \"android\" === platform && compareVersions(version, [4, 4]) < 0\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.rollers\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\",\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        this._userOptions = extend({}, options);\r\n        this.callBase(options);\r\n        this._updatePickerOptions()\r\n    },\r\n    _updatePickerOptions: function() {\r\n        var pickerType = this.option(\"pickerType\");\r\n        var type = this.option(\"type\");\r\n        if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\r\n            pickerType = PICKER_TYPE.calendar\r\n        }\r\n        if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\r\n            pickerType = PICKER_TYPE.list\r\n        }\r\n        this.option(\"showDropDownButton\", \"generic\" !== devices.real().platform || pickerType !== PICKER_TYPE.native);\r\n        this._pickerType = pickerType\r\n    },\r\n    _init: function() {\r\n        this._initStrategy();\r\n        this.option(extend({}, this._strategy.getDefaultOptions(), this._userOptions));\r\n        delete this._userOptions;\r\n        this.callBase()\r\n    },\r\n    _toLowerCaseFirstLetter: function(string) {\r\n        return string.charAt(0).toLowerCase() + string.substr(1)\r\n    },\r\n    _initStrategy: function() {\r\n        var strategyName = this._getStrategyName(this._getFormatType()),\r\n            strategy = STRATEGY_CLASSES[strategyName];\r\n        if (!(this._strategy && this._strategy.NAME === strategyName)) {\r\n            this._strategy = new strategy(this)\r\n        }\r\n    },\r\n    _getFormatType: function() {\r\n        var currentType = this.option(\"type\");\r\n        var isTime = /h|m|s/g.test(currentType),\r\n            isDate = /d|M|Y/g.test(currentType);\r\n        var type = \"\";\r\n        if (isDate) {\r\n            type += TYPE.date\r\n        }\r\n        if (isTime) {\r\n            type += TYPE.time\r\n        }\r\n        return type\r\n    },\r\n    _getStrategyName: function(type) {\r\n        var pickerType = this._pickerType;\r\n        if (pickerType === PICKER_TYPE.rollers) {\r\n            return STRATEGY_NAME.dateView\r\n        } else {\r\n            if (pickerType === PICKER_TYPE.native) {\r\n                return STRATEGY_NAME.native\r\n            }\r\n        }\r\n        if (type === TYPE.date) {\r\n            return STRATEGY_NAME.calendar\r\n        }\r\n        if (type === TYPE.datetime) {\r\n            return STRATEGY_NAME.calendarWithTime\r\n        }\r\n        return STRATEGY_NAME.list\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(DATEBOX_CLASS);\r\n        this._renderSubmitElement();\r\n        this.callBase();\r\n        this._refreshFormatClass();\r\n        this._refreshPickerTypeClass();\r\n        this._strategy.renderInputMinMax(this._input())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._updateSize()\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"))\r\n    },\r\n    _refreshFormatClass: function() {\r\n        var $element = this.$element();\r\n        each(TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"))\r\n    },\r\n    _refreshPickerTypeClass: function() {\r\n        var $element = this.$element();\r\n        each(PICKER_TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _updateSize: function() {\r\n        var $element = this.$element(),\r\n            widthOption = this.option(\"width\"),\r\n            isWidthSet = typeUtils.isDefined(widthOption) || isRealWidthSet($element) && !this._isSizeUpdatable,\r\n            pickerType = this._pickerType,\r\n            shouldCalculateWidth = pickerType !== PICKER_TYPE.rollers && \"generic\" === devices.current().platform;\r\n        if (!windowUtils.hasWindow() || isWidthSet || !(shouldCalculateWidth && $element.is(\":visible\"))) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            format = this._strategy.getDisplayFormat(this.option(\"displayFormat\")),\r\n            longestValue = dateLocalization.format(uiDateUtils.getLongestDate(format, dateLocalization.getMonthNames(), dateLocalization.getDayNames()), format);\r\n        $element.width(calculateWidth(longestValue, $input, this.$element()));\r\n        this._isSizeUpdatable = true\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._strategy.attachKeyboardEvents(this._keyboardProcessor)\r\n    },\r\n    _renderPopup: function() {\r\n        this.callBase();\r\n        this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS);\r\n        this._renderPopupWrapper()\r\n    },\r\n    _popupConfig: function() {\r\n        var popupConfig = this.callBase();\r\n        return extend(this._strategy.popupConfig(popupConfig), {\r\n            title: this._getPopupTitle(),\r\n            dragEnabled: false\r\n        })\r\n    },\r\n    _renderPopupWrapper: function() {\r\n        if (!this._popup) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        var classPostfixes = extend({}, TYPE, PICKER_TYPE);\r\n        each(classPostfixes, function(_, item) {\r\n            $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item)\r\n        }.bind(this));\r\n        this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _renderPopupContent: function() {\r\n        this.callBase();\r\n        this._strategy.renderPopupContent()\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._strategy.getFirstPopupElement() || this.callBase()\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._strategy.getLastPopupElement() || this.callBase()\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupShowingHandler()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupHiddenHandler()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateSize()\r\n        }\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        this.option(\"text\", \"\");\r\n        this.callBase(e)\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return this.callBase() || this._pickerType === PICKER_TYPE.rollers\r\n    },\r\n    _clearButtonVisibility: function() {\r\n        return this.callBase() && !this._isNativeType()\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.dateOption(\"value\"),\r\n            dateSerializationFormat = this.option(\"dateSerializationFormat\");\r\n        this.option(\"text\", this._getDisplayedText(value));\r\n        var submitFormat = uiDateUtils.SUBMIT_FORMATS_MAP[this.option(\"type\")];\r\n        var submitValue = dateSerializationFormat ? dateSerialization.serializeDate(value, dateSerializationFormat) : uiDateUtils.toStandardDateFormat(value, submitFormat);\r\n        this._$submitElement.val(submitValue);\r\n        this._strategy.renderValue();\r\n        this.callBase();\r\n        this._validateValue(value)\r\n    },\r\n    _getDisplayedText: function(value) {\r\n        var displayedText, mode = this.option(\"mode\");\r\n        if (\"text\" === mode) {\r\n            var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n            displayedText = dateLocalization.format(value, displayFormat)\r\n        } else {\r\n            var format = this._getFormatByMode(mode);\r\n            if (format) {\r\n                displayedText = dateLocalization.format(value, format)\r\n            } else {\r\n                displayedText = uiDateUtils.toStandardDateFormat(value, mode)\r\n            }\r\n        }\r\n        return displayedText\r\n    },\r\n    _getFormatByMode: function(mode) {\r\n        return support.inputType(mode) ? null : uiDateUtils.FORMATS_MAP[mode]\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var text = this.option(\"text\"),\r\n            parsedDate = this._getParsedDate(text),\r\n            value = this.dateOption(\"value\") || this._getDateByDefault(),\r\n            type = this.option(\"type\"),\r\n            newValue = uiDateUtils.mergeDates(value, parsedDate, type),\r\n            date = parsedDate && \"time\" === type ? newValue : parsedDate;\r\n        if (this._validateValue(date)) {\r\n            var displayedText = this._getDisplayedText(newValue);\r\n            if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\r\n                this._renderValue()\r\n            } else {\r\n                this.dateValue(newValue, e)\r\n            }\r\n        }\r\n        this.validationRequest.fire({\r\n            value: newValue,\r\n            editor: this\r\n        })\r\n    },\r\n    _getDateByDefault: function() {\r\n        return this._strategy.useCurrentDateByDefault() && new Date\r\n    },\r\n    _getParsedDate: function(text) {\r\n        var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var parsedText = this._strategy.getParsedText(text, displayFormat);\r\n        return typeUtils.isDefined(parsedText) ? parsedText : void 0\r\n    },\r\n    _validateValue: function(value) {\r\n        var text = this.option(\"text\"),\r\n            hasText = !!text && null !== value,\r\n            isDate = !!value && typeUtils.isDate(value) && !isNaN(value.getTime()),\r\n            isDateInRange = isDate && dateUtils.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\")),\r\n            isValid = !hasText || !hasText && !value || isDateInRange,\r\n            validationMessage = \"\";\r\n        if (!isDate) {\r\n            validationMessage = this.option(\"invalidDateMessage\")\r\n        } else {\r\n            if (!isDateInRange) {\r\n                validationMessage = this.option(\"dateOutOfRangeMessage\")\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: validationMessage\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _isValueChanged: function(newValue) {\r\n        var oldValue = this.dateOption(\"value\"),\r\n            oldTime = oldValue && oldValue.getTime(),\r\n            newTime = newValue && newValue.getTime();\r\n        return oldTime !== newTime\r\n    },\r\n    _isTextChanged: function(newValue) {\r\n        var oldText = this.dateOption(\"text\"),\r\n            newText = newValue && this._getDisplayedText(newValue) || \"\";\r\n        return oldText !== newText\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().attr(\"autocomplete\", \"off\")\r\n    },\r\n    _renderOpenedState: function() {\r\n        if (!this._isNativeType()) {\r\n            this.callBase()\r\n        }\r\n        if (this._strategy.isAdaptivityChanged()) {\r\n            this._refreshStrategy()\r\n        }\r\n        this._strategy.renderOpenedState()\r\n    },\r\n    _getPopupTitle: function() {\r\n        var placeholder = this.option(\"placeholder\");\r\n        if (placeholder) {\r\n            return placeholder\r\n        }\r\n        var type = this.option(\"type\");\r\n        if (type === TYPE.time) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleTime\")\r\n        }\r\n        if (type === TYPE.date || type === TYPE.datetime) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleDate\")\r\n        }\r\n        return \"\"\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._popup && this._popup.option(\"title\", this._getPopupTitle());\r\n        this.callBase()\r\n    },\r\n    _refreshStrategy: function() {\r\n        this._strategy.dispose();\r\n        this._initStrategy();\r\n        this.option(this._strategy.getDefaultOptions());\r\n        this._refresh()\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.dateValue(this._strategy.getValue());\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        this._strategy && this._strategy.dispose();\r\n        this.callBase()\r\n    },\r\n    _isNativeType: function() {\r\n        return this._pickerType === PICKER_TYPE.native\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showClearButton\":\r\n                this.callBase.apply(this, arguments);\r\n                this._updateSize();\r\n                break;\r\n            case \"pickerType\":\r\n                this._updatePickerOptions({\r\n                    pickerType: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshPickerTypeClass();\r\n                this._invalidate();\r\n                break;\r\n            case \"type\":\r\n                this._updatePickerOptions({\r\n                    format: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshFormatClass();\r\n                this._renderPopupWrapper();\r\n                this._updateSize();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._validateValue(this.dateOption(\"value\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"readOnly\":\r\n            case \"interval\":\r\n            case \"disabledDates\":\r\n            case \"calendarOptions\":\r\n            case \"minZoomLevel\":\r\n            case \"maxZoomLevel\":\r\n                this._invalidate();\r\n                break;\r\n            case \"displayFormat\":\r\n                this._updateValue();\r\n                break;\r\n            case \"formatWidthCalculator\":\r\n                break;\r\n            case \"closeOnValueChange\":\r\n                var applyValueMode = args.value ? \"instantly\" : \"useButtons\";\r\n                this.option(\"applyValueMode\", applyValueMode);\r\n                break;\r\n            case \"applyValueMode\":\r\n                this._suppressDeprecatedWarnings();\r\n                this.option(\"closeOnValueChange\", \"instantly\" === args.value);\r\n                this._resumeDeprecatedWarnings();\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"text\":\r\n                this._strategy.textChangedHandler(args.value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"isValid\":\r\n                this.callBase.apply(this, arguments);\r\n                this._updateSize();\r\n                break;\r\n            case \"showDropDownButton\":\r\n            case \"invalidDateMessage\":\r\n            case \"dateOutOfRangeMessage\":\r\n            case \"adaptivityEnabled\":\r\n            case \"showAnalogClock\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getSerializationFormat: function() {\r\n        var value = this.option(\"value\");\r\n        if (this.option(\"dateSerializationFormat\") && config().forceIsoDateParsing) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if (typeUtils.isNumeric(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!typeUtils.isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    },\r\n    dateValue: function(value, dxEvent) {\r\n        if (this._isValueChanged(value) && dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        } else {\r\n            if (this._isTextChanged(value)) {\r\n                this._updateValue();\r\n                this._validateValue(value)\r\n            }\r\n        }\r\n        return this.dateOption(\"value\", value)\r\n    },\r\n    dateOption: function(optionName, value) {\r\n        if (1 === arguments.length) {\r\n            return dateSerialization.deserializeDate(this.option(optionName))\r\n        }\r\n        var serializationFormat = this._getSerializationFormat();\r\n        this.option(optionName, dateSerialization.serializeDate(value, serializationFormat))\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._updateValue()\r\n    }\r\n});\r\nregisterComponent(\"dxDateBox\", DateBox);\r\nmodule.exports = DateBox;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.base.js\n// module id = 793\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/calendar.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./calendar/ui.calendar\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/calendar.js\n// module id = 794\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/calendar/ui.calendar.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    Button = require(\"../button\"),\r\n    Editor = require(\"../editor/editor\"),\r\n    Swipeable = require(\"../../events/gesture/swipeable\"),\r\n    Navigator = require(\"./ui.calendar.navigator\"),\r\n    Views = require(\"./ui.calendar.views\"),\r\n    translator = require(\"../../animation/translator\"),\r\n    browser = require(\"../../core/utils/browser\"),\r\n    dateUtils = require(\"../../core/utils/date\"),\r\n    dateSerialization = require(\"../../core/utils/date_serialization\"),\r\n    devices = require(\"../../core/devices\"),\r\n    config = require(\"../../core/config\"),\r\n    fx = require(\"../../animation/fx\"),\r\n    windowUtils = require(\"../../core/utils/window\"),\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    FunctionTemplate = require(\"../widget/function_template\");\r\nvar CALENDAR_CLASS = \"dx-calendar\",\r\n    CALENDAR_BODY_CLASS = \"dx-calendar-body\",\r\n    CALENDAR_CELL_CLASS = \"dx-calendar-cell\",\r\n    CALENDAR_FOOTER_CLASS = \"dx-calendar-footer\",\r\n    CALENDAR_TODAY_BUTTON_CLASS = \"dx-calendar-today-button\",\r\n    CALENDAR_HAS_FOOTER_CLASS = \"dx-calendar-with-footer\",\r\n    CALENDAR_VIEWS_WRAPPER_CLASS = \"dx-calendar-views-wrapper\",\r\n    CALENDAR_VIEW_CLASS = \"dx-calendar-view\",\r\n    FOCUSED_STATE_CLASS = \"dx-state-focused\",\r\n    ANIMATION_DURATION_SHOW_VIEW = 250,\r\n    POP_ANIMATION_FROM = .6,\r\n    POP_ANIMATION_TO = 1,\r\n    CALENDAR_INPUT_STANDARD_PATTERN = \"yyyy-MM-dd\",\r\n    CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\",\r\n    LEVEL_COMPARE_MAP = {\r\n        month: 3,\r\n        year: 2,\r\n        decade: 1,\r\n        century: 0\r\n    };\r\nvar Calendar = Editor.inherit({\r\n    _activeStateUnit: \".\" + CALENDAR_CELL_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            currentDate: new Date,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: new Date(1e3, 0),\r\n            max: new Date(3e3, 0),\r\n            firstDayOfWeek: void 0,\r\n            zoomLevel: \"month\",\r\n            maxZoomLevel: \"month\",\r\n            minZoomLevel: \"century\",\r\n            showTodayButton: false,\r\n            cellTemplate: \"cell\",\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            onContouredChanged: null,\r\n            hasFocus: function(element) {\r\n                return element.hasClass(FOCUSED_STATE_CLASS)\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            rightArrow: function(e) {\r\n                e.preventDefault();\r\n                if (e.ctrlKey) {\r\n                    this._waitRenderView(1)\r\n                } else {\r\n                    this._moveCurrentDate(1 * this._getRtlCorrection())\r\n                }\r\n            },\r\n            leftArrow: function(e) {\r\n                e.preventDefault();\r\n                if (e.ctrlKey) {\r\n                    this._waitRenderView(-1)\r\n                } else {\r\n                    this._moveCurrentDate(-1 * this._getRtlCorrection())\r\n                }\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                if (e.ctrlKey) {\r\n                    this._navigateUp()\r\n                } else {\r\n                    if (fx.isAnimating(this._view.$element())) {\r\n                        return\r\n                    }\r\n                    this._moveCurrentDate(-1 * this._view.option(\"colCount\"))\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                if (e.ctrlKey) {\r\n                    this._navigateDown()\r\n                } else {\r\n                    if (fx.isAnimating(this._view.$element())) {\r\n                        return\r\n                    }\r\n                    this._moveCurrentDate(1 * this._view.option(\"colCount\"))\r\n                }\r\n            },\r\n            home: function(e) {\r\n                e.preventDefault();\r\n                var zoomLevel = this.option(\"zoomLevel\");\r\n                var currentDate = this.option(\"currentDate\");\r\n                var min = this._dateOption(\"min\");\r\n                var date = dateUtils.sameView(zoomLevel, currentDate, min) ? min : dateUtils.getViewFirstCellDate(zoomLevel, currentDate);\r\n                this._moveToClosestAvailableDate(date, 1)\r\n            },\r\n            end: function(e) {\r\n                e.preventDefault();\r\n                var zoomLevel = this.option(\"zoomLevel\");\r\n                var currentDate = this.option(\"currentDate\");\r\n                var max = this._dateOption(\"max\");\r\n                var date = dateUtils.sameView(zoomLevel, currentDate, max) ? max : dateUtils.getViewLastCellDate(zoomLevel, currentDate);\r\n                this._moveToClosestAvailableDate(date, -1)\r\n            },\r\n            pageUp: function(e) {\r\n                e.preventDefault();\r\n                this._waitRenderView(-1)\r\n            },\r\n            pageDown: function(e) {\r\n                e.preventDefault();\r\n                this._waitRenderView(1)\r\n            },\r\n            tab: noop,\r\n            enter: function(e) {\r\n                if (!this._isMaxZoomLevel()) {\r\n                    this._navigateDown()\r\n                } else {\r\n                    var value = this._updateTimeComponent(this.option(\"currentDate\"));\r\n                    this._dateValue(value, e)\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getSerializationFormat: function(optionName) {\r\n        var value = this.option(optionName || \"value\");\r\n        if (this.option(\"dateSerializationFormat\")) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if (typeUtils.isNumeric(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!typeUtils.isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    },\r\n    _convertToDate: function(value, optionName) {\r\n        return dateSerialization.deserializeDate(value)\r\n    },\r\n    _dateValue: function(value, dxEvent) {\r\n        if (dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        }\r\n        this._dateOption(\"value\", value)\r\n    },\r\n    _dateOption: function(optionName, optionValue) {\r\n        if (1 === arguments.length) {\r\n            return this._convertToDate(this.option(optionName), optionName)\r\n        }\r\n        var serializationFormat = this._getSerializationFormat(optionName);\r\n        this.option(optionName, dateSerialization.serializeDate(optionValue, serializationFormat))\r\n    },\r\n    _moveCurrentDate: function(offset, baseDate) {\r\n        var newDate, currentDate = baseDate || new Date(this.option(\"currentDate\")),\r\n            maxDate = this.option(\"max\"),\r\n            minDate = this.option(\"min\"),\r\n            zoomLevel = this.option(\"zoomLevel\"),\r\n            isAvailableDateFound = false;\r\n        while (!isAvailableDateFound) {\r\n            newDate = new Date(currentDate);\r\n            switch (zoomLevel) {\r\n                case \"month\":\r\n                    newDate.setDate(currentDate.getDate() + offset);\r\n                    break;\r\n                case \"year\":\r\n                    newDate.setMonth(currentDate.getMonth() + offset);\r\n                    break;\r\n                case \"decade\":\r\n                    newDate.setFullYear(currentDate.getFullYear() + offset);\r\n                    break;\r\n                case \"century\":\r\n                    newDate.setFullYear(currentDate.getFullYear() + 10 * offset)\r\n            }\r\n            var offsetCorrection = 2 * offset / Math.abs(offset);\r\n            if (Math.abs(offset) > 1 && !dateUtils.sameView(zoomLevel, currentDate, newDate)) {\r\n                if (\"decade\" === zoomLevel) {\r\n                    newDate.setFullYear(currentDate.getFullYear() + offset - offsetCorrection)\r\n                }\r\n                if (\"century\" === zoomLevel) {\r\n                    newDate.setFullYear(currentDate.getFullYear() + 10 * (offset - offsetCorrection))\r\n                }\r\n            }\r\n            if (this._view.isDateDisabled(newDate) && newDate <= new Date(maxDate) && newDate >= new Date(minDate)) {\r\n                currentDate = newDate\r\n            } else {\r\n                isAvailableDateFound = true\r\n            }\r\n        }\r\n        this.option(\"currentDate\", newDate)\r\n    },\r\n    _moveToClosestAvailableDate: function(baseDate, offset) {\r\n        if (this._view.isDateDisabled(baseDate)) {\r\n            this._moveCurrentDate(offset, baseDate)\r\n        } else {\r\n            this.option(\"currentDate\", baseDate)\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._correctZoomLevel();\r\n        this._initCurrentDate();\r\n        this._initActions()\r\n    },\r\n    _correctZoomLevel: function() {\r\n        var minZoomLevel = this.option(\"minZoomLevel\"),\r\n            maxZoomLevel = this.option(\"maxZoomLevel\"),\r\n            zoomLevel = this.option(\"zoomLevel\");\r\n        if (LEVEL_COMPARE_MAP[maxZoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\r\n            return\r\n        }\r\n        if (LEVEL_COMPARE_MAP[zoomLevel] > LEVEL_COMPARE_MAP[maxZoomLevel]) {\r\n            this.option(\"zoomLevel\", maxZoomLevel)\r\n        } else {\r\n            if (LEVEL_COMPARE_MAP[zoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\r\n                this.option(\"zoomLevel\", minZoomLevel)\r\n            }\r\n        }\r\n    },\r\n    _initCurrentDate: function() {\r\n        var currentDate = this._getNormalizedDate(this._dateOption(\"value\")) || this._getNormalizedDate(this.option(\"currentDate\"));\r\n        this.option(\"currentDate\", currentDate)\r\n    },\r\n    _getNormalizedDate: function(date) {\r\n        date = dateUtils.normalizeDate(date, this._getMinDate(), this._getMaxDate());\r\n        return typeUtils.isDefined(date) ? new Date(date) : date\r\n    },\r\n    _initActions: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\");\r\n        this._onContouredChanged = this._createActionByOption(\"onContouredChanged\")\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.cell = new FunctionTemplate(function(options) {\r\n            var data = options.model;\r\n            $(options.container).append($(\"<span>\").text(data && data.text || String(data)))\r\n        }, this)\r\n    },\r\n    _updateCurrentDate: function(date) {\r\n        if (fx.isAnimating(this._$viewsWrapper)) {\r\n            fx.stop(this._$viewsWrapper, true)\r\n        }\r\n        var min = this._getMinDate(),\r\n            max = this._getMaxDate();\r\n        if (min > max) {\r\n            this.option(\"currentDate\", new Date);\r\n            return\r\n        }\r\n        var normalizedDate = this._getNormalizedDate(date);\r\n        if (date.getTime() !== normalizedDate.getTime()) {\r\n            this.option(\"currentDate\", new Date(normalizedDate));\r\n            return\r\n        }\r\n        var offset = this._getViewsOffset(this._view.option(\"date\"), normalizedDate);\r\n        if (0 !== offset && !this._isMaxZoomLevel() && this._isOtherViewCellClicked) {\r\n            offset = 0\r\n        }\r\n        if (this._view && 0 !== offset && !this._suppressNavigation) {\r\n            this._navigate(offset, normalizedDate)\r\n        } else {\r\n            this._renderNavigator();\r\n            this._setViewContoured(normalizedDate);\r\n            this._updateAriaId(normalizedDate)\r\n        }\r\n    },\r\n    _setViewContoured: function(date) {\r\n        if (this.option(\"hasFocus\")(this._focusTarget())) {\r\n            this._view.option(\"contouredDate\", date)\r\n        }\r\n    },\r\n    _getMinDate: function() {\r\n        if (this.min) {\r\n            return this.min\r\n        }\r\n        this.min = this._dateOption(\"min\") || new Date(1e3, 0);\r\n        return this.min\r\n    },\r\n    _getMaxDate: function() {\r\n        if (this.max) {\r\n            return this.max\r\n        }\r\n        this.max = this._dateOption(\"max\") || new Date(3e3, 0);\r\n        return this.max\r\n    },\r\n    _getViewsOffset: function(startDate, endDate) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (\"month\" === zoomLevel) {\r\n            return this._getMonthsOffset(startDate, endDate)\r\n        }\r\n        var zoomCorrection;\r\n        switch (zoomLevel) {\r\n            case \"century\":\r\n                zoomCorrection = 100;\r\n                break;\r\n            case \"decade\":\r\n                zoomCorrection = 10;\r\n                break;\r\n            default:\r\n                zoomCorrection = 1\r\n        }\r\n        return parseInt(endDate.getFullYear() / zoomCorrection) - parseInt(startDate.getFullYear() / zoomCorrection)\r\n    },\r\n    _getMonthsOffset: function(startDate, endDate) {\r\n        var yearOffset = endDate.getFullYear() - startDate.getFullYear(),\r\n            monthOffset = endDate.getMonth() - startDate.getMonth();\r\n        return 12 * yearOffset + monthOffset\r\n    },\r\n    _waitRenderView: function(offset) {\r\n        if (this._alreadyViewRender) {\r\n            return\r\n        }\r\n        this._alreadyViewRender = true;\r\n        var date = this._getDateByOffset(offset * this._getRtlCorrection());\r\n        this._moveToClosestAvailableDate(date, offset);\r\n        setTimeout(function() {\r\n            this._alreadyViewRender = false\r\n        }.bind(this))\r\n    },\r\n    _getRtlCorrection: function() {\r\n        return this.option(\"rtlEnabled\") ? -1 : 1\r\n    },\r\n    _getDateByOffset: function(offset, date) {\r\n        date = new Date(date || this.option(\"currentDate\"));\r\n        var currentDay = date.getDate();\r\n        var difference = dateUtils.getDifferenceInMonth(this.option(\"zoomLevel\")) * offset;\r\n        date.setDate(1);\r\n        date.setMonth(date.getMonth() + difference);\r\n        var lastDay = dateUtils.getLastMonthDate(date).getDate();\r\n        date.setDate(currentDay > lastDay ? lastDay : currentDay);\r\n        return date\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.callBase();\r\n        var $element = this.$element();\r\n        $element.addClass(CALENDAR_CLASS);\r\n        this._renderBody();\r\n        $element.append(this.$body);\r\n        this._renderViews();\r\n        this._renderNavigator();\r\n        $element.append(this._navigator.$element());\r\n        this._renderSwipeable();\r\n        this._renderFooter();\r\n        this.setAria({\r\n            role: \"listbox\",\r\n            label: messageLocalization.format(\"dxCalendar-ariaWidgetName\")\r\n        });\r\n        this._updateAriaSelected();\r\n        this._updateAriaId();\r\n        if (this._view.isDateDisabled(this.option(\"currentDate\"))) {\r\n            this._moveCurrentDate(1)\r\n        }\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._setViewContoured(this.option(\"currentDate\"))\r\n    },\r\n    _renderBody: function() {\r\n        if (!this._$viewsWrapper) {\r\n            this.$body = $(\"<div>\").addClass(CALENDAR_BODY_CLASS);\r\n            this._$viewsWrapper = $(\"<div>\").addClass(CALENDAR_VIEWS_WRAPPER_CLASS);\r\n            this.$body.append(this._$viewsWrapper)\r\n        }\r\n    },\r\n    _renderViews: function() {\r\n        this.$element().addClass(CALENDAR_VIEW_CLASS + \"-\" + this.option(\"zoomLevel\"));\r\n        var currentDate = this.option(\"currentDate\");\r\n        this._view = this._renderSpecificView(currentDate);\r\n        this._view.option(\"_keyboardProcessor\", this._viewKeyboardProcessor);\r\n        if (windowUtils.hasWindow()) {\r\n            var beforeDate = this._getDateByOffset(-1, currentDate);\r\n            this._beforeView = this._isViewAvailable(beforeDate) ? this._renderSpecificView(beforeDate) : null;\r\n            var afterDate = this._getDateByOffset(1, currentDate);\r\n            afterDate.setDate(1);\r\n            this._afterView = this._isViewAvailable(afterDate) ? this._renderSpecificView(afterDate) : null\r\n        }\r\n        this._translateViews()\r\n    },\r\n    _renderSpecificView: function(date) {\r\n        var specificView = Views[this.option(\"zoomLevel\")],\r\n            $view = $(\"<div>\").appendTo(this._$viewsWrapper),\r\n            config = this._viewConfig(date);\r\n        return new specificView($view, config)\r\n    },\r\n    _viewConfig: function(date) {\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        disabledDates = typeUtils.isFunction(disabledDates) ? this._injectComponent(disabledDates.bind(this)) : disabledDates;\r\n        return {\r\n            date: date,\r\n            min: this._getMinDate(),\r\n            max: this._getMaxDate(),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            value: this._dateOption(\"value\"),\r\n            rtl: this.option(\"rtlEnabled\"),\r\n            disabled: this.option(\"disabled\") || config().designMode,\r\n            tabIndex: void 0,\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            disabledDates: disabledDates,\r\n            onCellClick: this._cellClickHandler.bind(this),\r\n            cellTemplate: this._getTemplateByOption(\"cellTemplate\"),\r\n            allowValueSelection: this._isMaxZoomLevel()\r\n        }\r\n    },\r\n    _injectComponent: function(func) {\r\n        var that = this;\r\n        return function(params) {\r\n            extend(params, {\r\n                component: that\r\n            });\r\n            return func(params)\r\n        }\r\n    },\r\n    _isViewAvailable: function(date) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var min = dateUtils.getViewMinBoundaryDate(zoomLevel, this._getMinDate());\r\n        var max = dateUtils.getViewMaxBoundaryDate(zoomLevel, this._getMaxDate());\r\n        return dateUtils.dateInRange(date, min, max)\r\n    },\r\n    _translateViews: function() {\r\n        translator.move(this._view.$element(), {\r\n            left: 0,\r\n            top: 0\r\n        });\r\n        this._beforeView && translator.move(this._beforeView.$element(), {\r\n            left: this._getViewPosition(-1),\r\n            top: 0\r\n        });\r\n        this._afterView && translator.move(this._afterView.$element(), {\r\n            left: this._getViewPosition(1),\r\n            top: 0\r\n        })\r\n    },\r\n    _getViewPosition: function(coefficient) {\r\n        var rtlCorrection = this.option(\"rtlEnabled\") && !browser.msie ? -1 : 1;\r\n        return 100 * coefficient * rtlCorrection + \"%\"\r\n    },\r\n    _cellClickHandler: function(e) {\r\n        var zoomLevel = this.option(\"zoomLevel\"),\r\n            nextView = dateUtils.getViewDown(zoomLevel);\r\n        var isMaxZoomLevel = this._isMaxZoomLevel();\r\n        if (nextView && !isMaxZoomLevel) {\r\n            this._navigateDown(e.event.currentTarget)\r\n        } else {\r\n            var newValue = this._updateTimeComponent(e.value);\r\n            this._dateValue(newValue, e.event);\r\n            this._cellClickAction(e)\r\n        }\r\n    },\r\n    _updateTimeComponent: function(date) {\r\n        var result = new Date(date);\r\n        var currentValue = this._dateOption(\"value\");\r\n        if (currentValue) {\r\n            result.setHours(currentValue.getHours());\r\n            result.setMinutes(currentValue.getMinutes());\r\n            result.setSeconds(currentValue.getSeconds());\r\n            result.setMilliseconds(currentValue.getMilliseconds())\r\n        }\r\n        return result\r\n    },\r\n    _isMaxZoomLevel: function() {\r\n        return this.option(\"zoomLevel\") === this.option(\"maxZoomLevel\")\r\n    },\r\n    _navigateDown: function(cell) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (this._isMaxZoomLevel()) {\r\n            return\r\n        }\r\n        var nextView = dateUtils.getViewDown(zoomLevel);\r\n        if (!nextView) {\r\n            return\r\n        }\r\n        var newCurrentDate = this._view.option(\"contouredDate\") || this._view.option(\"date\");\r\n        if (cell) {\r\n            newCurrentDate = $(cell).data(CALENDAR_DATE_VALUE_KEY)\r\n        }\r\n        this._isOtherViewCellClicked = true;\r\n        this.option(\"currentDate\", newCurrentDate);\r\n        this.option(\"zoomLevel\", nextView);\r\n        this._isOtherViewCellClicked = false;\r\n        this._renderNavigator();\r\n        this._animateShowView();\r\n        this._setViewContoured(this._getNormalizedDate(newCurrentDate))\r\n    },\r\n    _renderNavigator: function() {\r\n        if (!this._navigator) {\r\n            this._navigator = new Navigator($(\"<div>\"), this._navigatorConfig())\r\n        }\r\n        this._navigator.option(\"text\", this._view.getNavigatorCaption());\r\n        this._updateButtonsVisibility()\r\n    },\r\n    _navigatorConfig: function() {\r\n        return {\r\n            text: this._view.getNavigatorCaption(),\r\n            onClick: this._navigatorClickHandler.bind(this),\r\n            onCaptionClick: this._navigateUp.bind(this),\r\n            rtlEnabled: this.option(\"rtlEnabled\")\r\n        }\r\n    },\r\n    _navigatorClickHandler: function(e) {\r\n        var currentDate = this._getDateByOffset(e.direction, this.option(\"currentDate\"));\r\n        this._moveToClosestAvailableDate(currentDate, 1 * e.direction);\r\n        this._updateNavigatorCaption(-e.direction * this._getRtlCorrection())\r\n    },\r\n    _navigateUp: function() {\r\n        var zoomLevel = this.option(\"zoomLevel\"),\r\n            nextView = dateUtils.getViewUp(zoomLevel);\r\n        if (!nextView || this._isMinZoomLevel(zoomLevel)) {\r\n            return\r\n        }\r\n        var contouredDate = this._view.option(\"contouredDate\");\r\n        this.option(\"zoomLevel\", nextView);\r\n        this.option(\"currentDate\", contouredDate || this._view.option(\"date\"));\r\n        this._renderNavigator();\r\n        this._animateShowView().done(function() {\r\n            this._setViewContoured(contouredDate)\r\n        }.bind(this))\r\n    },\r\n    _isMinZoomLevel: function(zoomLevel) {\r\n        var min = this._getMinDate(),\r\n            max = this._getMaxDate();\r\n        return dateUtils.sameView(zoomLevel, min, max) || this.option(\"minZoomLevel\") === zoomLevel\r\n    },\r\n    _updateButtonsVisibility: function() {\r\n        this._navigator.toggleButton(\"next\", !typeUtils.isDefined(this._getRequiredView(\"next\")));\r\n        this._navigator.toggleButton(\"prev\", !typeUtils.isDefined(this._getRequiredView(\"prev\")))\r\n    },\r\n    _renderSwipeable: function() {\r\n        if (!this._swipeable) {\r\n            this._swipeable = this._createComponent(this.$element(), Swipeable, {\r\n                onStart: this._swipeStartHandler.bind(this),\r\n                onUpdated: this._swipeUpdateHandler.bind(this),\r\n                onEnd: this._swipeEndHandler.bind(this),\r\n                itemSizeFunc: this._viewWidth.bind(this)\r\n            })\r\n        }\r\n    },\r\n    _swipeStartHandler: function(e) {\r\n        fx.stop(this._$viewsWrapper, true);\r\n        e.event.maxLeftOffset = this._getRequiredView(\"next\") ? 1 : 0;\r\n        e.event.maxRightOffset = this._getRequiredView(\"prev\") ? 1 : 0\r\n    },\r\n    _getRequiredView: function(name) {\r\n        var view;\r\n        var isRtl = this.option(\"rtlEnabled\");\r\n        if (\"next\" === name) {\r\n            view = isRtl ? this._beforeView : this._afterView\r\n        } else {\r\n            if (\"prev\" === name) {\r\n                view = isRtl ? this._afterView : this._beforeView\r\n            }\r\n        }\r\n        return view\r\n    },\r\n    _swipeUpdateHandler: function(e) {\r\n        var offset = e.event.offset;\r\n        translator.move(this._$viewsWrapper, {\r\n            left: offset * this._viewWidth(),\r\n            top: 0\r\n        });\r\n        this._updateNavigatorCaption(offset)\r\n    },\r\n    _swipeEndHandler: function(e) {\r\n        var targetOffset = e.event.targetOffset,\r\n            moveOffset = !targetOffset ? 0 : targetOffset / Math.abs(targetOffset);\r\n        if (0 === moveOffset) {\r\n            this._animateWrapper(0, ANIMATION_DURATION_SHOW_VIEW);\r\n            return\r\n        }\r\n        var date = this._getDateByOffset(-moveOffset * this._getRtlCorrection());\r\n        if (this._isDateInInvalidRange(date)) {\r\n            if (moveOffset >= 0) {\r\n                date = new Date(this._getMinDate())\r\n            } else {\r\n                date = new Date(this._getMaxDate())\r\n            }\r\n        }\r\n        this.option(\"currentDate\", date)\r\n    },\r\n    _viewWidth: function() {\r\n        if (!this._viewWidthValue) {\r\n            this._viewWidthValue = this.$element().width()\r\n        }\r\n        return this._viewWidthValue\r\n    },\r\n    _updateNavigatorCaption: function(offset) {\r\n        offset *= this._getRtlCorrection();\r\n        var view = this._view;\r\n        if (offset > .5 && this._beforeView) {\r\n            view = this._beforeView\r\n        } else {\r\n            if (offset < -.5 && this._afterView) {\r\n                view = this._afterView\r\n            }\r\n        }\r\n        this._navigator.option(\"text\", view.getNavigatorCaption())\r\n    },\r\n    _isDateInInvalidRange: function(date) {\r\n        if (this._view.isBoundary(date)) {\r\n            return\r\n        }\r\n        var min = this._getMinDate(),\r\n            max = this._getMaxDate(),\r\n            normalizedDate = dateUtils.normalizeDate(date, min, max);\r\n        return normalizedDate === min || normalizedDate === max\r\n    },\r\n    _renderFooter: function() {\r\n        var showTodayButton = this.option(\"showTodayButton\");\r\n        if (showTodayButton) {\r\n            var $todayButton = this._createComponent($(\"<a>\"), Button, {\r\n                focusStateEnabled: false,\r\n                text: messageLocalization.format(\"dxCalendar-todayButtonText\"),\r\n                onClick: function() {\r\n                    this._toTodayView()\r\n                }.bind(this),\r\n                integrationOptions: {}\r\n            }).$element().addClass(CALENDAR_TODAY_BUTTON_CLASS);\r\n            this._$footer = $(\"<div>\").addClass(CALENDAR_FOOTER_CLASS).append($todayButton);\r\n            this.$element().append(this._$footer)\r\n        }\r\n        this.$element().toggleClass(CALENDAR_HAS_FOOTER_CLASS, showTodayButton)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        var dateValue = this._convertToDate(value);\r\n        this._$submitElement.val(dateSerialization.serializeDate(dateValue, CALENDAR_INPUT_STANDARD_PATTERN))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _animateShowView: function() {\r\n        fx.stop(this._view.$element(), true);\r\n        return this._popAnimationView(this._view, POP_ANIMATION_FROM, POP_ANIMATION_TO, ANIMATION_DURATION_SHOW_VIEW).promise()\r\n    },\r\n    _popAnimationView: function(view, from, to, duration) {\r\n        return fx.animate(view.$element(), {\r\n            type: \"pop\",\r\n            from: {\r\n                scale: from,\r\n                opacity: from\r\n            },\r\n            to: {\r\n                scale: to,\r\n                opacity: to\r\n            },\r\n            duration: duration\r\n        })\r\n    },\r\n    _navigate: function(offset, value) {\r\n        if (0 !== offset && 1 !== Math.abs(offset) && this._isViewAvailable(value)) {\r\n            var newView = this._renderSpecificView(value);\r\n            if (offset > 0) {\r\n                this._afterView && this._afterView.$element().remove();\r\n                this._afterView = newView\r\n            } else {\r\n                this._beforeView && this._beforeView.$element().remove();\r\n                this._beforeView = newView\r\n            }\r\n            this._translateViews()\r\n        }\r\n        var rtlCorrection = this._getRtlCorrection(),\r\n            offsetSign = offset > 0 ? 1 : offset < 0 ? -1 : 0,\r\n            endPosition = -rtlCorrection * offsetSign * this._viewWidth();\r\n        var viewsWrapperPosition = this._$viewsWrapper.position().left;\r\n        if (viewsWrapperPosition !== endPosition) {\r\n            if (this._preventViewChangeAnimation) {\r\n                this._wrapperAnimationEndHandler(offset, value)\r\n            } else {\r\n                this._animateWrapper(endPosition, ANIMATION_DURATION_SHOW_VIEW).done(this._wrapperAnimationEndHandler.bind(this, offset, value))\r\n            }\r\n        }\r\n    },\r\n    _animateWrapper: function(to, duration) {\r\n        return fx.animate(this._$viewsWrapper, {\r\n            type: \"slide\",\r\n            from: {\r\n                left: this._$viewsWrapper.position().left\r\n            },\r\n            to: {\r\n                left: to\r\n            },\r\n            duration: duration\r\n        })\r\n    },\r\n    _toTodayView: function() {\r\n        var today = new Date;\r\n        if (this._isMaxZoomLevel()) {\r\n            this._dateOption(\"value\", today);\r\n            return\r\n        }\r\n        this._preventViewChangeAnimation = true;\r\n        this.option(\"zoomLevel\", this.option(\"maxZoomLevel\"));\r\n        this._dateOption(\"value\", today);\r\n        this._animateShowView();\r\n        this._preventViewChangeAnimation = false\r\n    },\r\n    _wrapperAnimationEndHandler: function(offset, newDate) {\r\n        this._rearrangeViews(offset);\r\n        this._translateViews();\r\n        this._resetLocation();\r\n        this._renderNavigator();\r\n        this._setViewContoured(newDate);\r\n        this._updateAriaId(newDate)\r\n    },\r\n    _rearrangeViews: function(offset) {\r\n        if (0 === offset) {\r\n            return\r\n        }\r\n        var viewOffset, viewToCreateKey, viewToRemoveKey;\r\n        if (offset < 0) {\r\n            viewOffset = 1;\r\n            viewToCreateKey = \"_beforeView\";\r\n            viewToRemoveKey = \"_afterView\"\r\n        } else {\r\n            viewOffset = -1;\r\n            viewToCreateKey = \"_afterView\";\r\n            viewToRemoveKey = \"_beforeView\"\r\n        }\r\n        if (!this[viewToCreateKey]) {\r\n            return\r\n        }\r\n        var destinationDate = this[viewToCreateKey].option(\"date\");\r\n        if (this[viewToRemoveKey]) {\r\n            this[viewToRemoveKey].$element().remove()\r\n        }\r\n        if (offset === viewOffset) {\r\n            this[viewToRemoveKey] = this._view\r\n        } else {\r\n            this[viewToRemoveKey] = this._renderSpecificView(this._getDateByOffset(viewOffset, destinationDate));\r\n            this._view.$element().remove()\r\n        }\r\n        this._view = this[viewToCreateKey];\r\n        var dateByOffset = this._getDateByOffset(-viewOffset, destinationDate);\r\n        this[viewToCreateKey] = this._isViewAvailable(dateByOffset) ? this._renderSpecificView(dateByOffset) : null\r\n    },\r\n    _resetLocation: function() {\r\n        translator.move(this._$viewsWrapper, {\r\n            left: 0,\r\n            top: 0\r\n        })\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._clearViewWidthCache();\r\n        delete this._$viewsWrapper;\r\n        delete this._navigator;\r\n        delete this._$footer\r\n    },\r\n    _clearViewWidthCache: function() {\r\n        delete this._viewWidthValue\r\n    },\r\n    _disposeViews: function() {\r\n        this._view.$element().remove();\r\n        this._beforeView && this._beforeView.$element().remove();\r\n        this._afterView && this._afterView.$element().remove();\r\n        delete this._view;\r\n        delete this._beforeView;\r\n        delete this._afterView\r\n    },\r\n    _refreshViews: function() {\r\n        this._disposeViews();\r\n        this._renderViews()\r\n    },\r\n    _visibilityChanged: function() {\r\n        this._translateViews()\r\n    },\r\n    _focusInHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._view.option(\"contouredDate\", this.option(\"currentDate\"))\r\n    },\r\n    _focusOutHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._view.option(\"contouredDate\", null)\r\n    },\r\n    _updateViewsValue: function(value) {\r\n        var newValue = value ? new Date(value) : null;\r\n        this._view.option(\"value\", newValue);\r\n        this._beforeView && this._beforeView.option(\"value\", newValue);\r\n        this._afterView && this._afterView.option(\"value\", newValue)\r\n    },\r\n    _updateAriaSelected: function(value, previousValue) {\r\n        value = value || this._dateOption(\"value\");\r\n        var $prevSelectedCell = this._view._getCellByDate(previousValue);\r\n        var $selectedCell = this._view._getCellByDate(value);\r\n        this.setAria(\"selected\", void 0, $prevSelectedCell);\r\n        this.setAria(\"selected\", true, $selectedCell);\r\n        if (value && this.option(\"currentDate\").getTime() === value.getTime()) {\r\n            this._updateAriaId(value)\r\n        }\r\n    },\r\n    _updateAriaId: function(value) {\r\n        value = value || this.option(\"currentDate\");\r\n        var ariaId = \"dx-\" + new Guid;\r\n        var $newCell = this._view._getCellByDate(value);\r\n        this.setAria(\"id\", ariaId, $newCell);\r\n        this.setAria(\"activedescendant\", ariaId);\r\n        this._onContouredChanged(ariaId)\r\n    },\r\n    _suppressingNavigation: function(callback, args) {\r\n        this._suppressNavigation = true;\r\n        callback.apply(this, args);\r\n        delete this._suppressNavigation\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        var previousValue = args.previousValue;\r\n        switch (args.name) {\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._clearViewWidthCache();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this.min = void 0;\r\n                this.max = void 0;\r\n                this._suppressingNavigation(this._updateCurrentDate, [this.option(\"currentDate\")]);\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._refreshViews();\r\n                this._updateButtonsVisibility();\r\n                break;\r\n            case \"currentDate\":\r\n                this.setAria(\"id\", void 0, this._view._getCellByDate(previousValue));\r\n                this._updateCurrentDate(value);\r\n                break;\r\n            case \"zoomLevel\":\r\n                this.$element().removeClass(CALENDAR_VIEW_CLASS + \"-\" + previousValue);\r\n                this._correctZoomLevel();\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                this._updateAriaId();\r\n                break;\r\n            case \"minZoomLevel\":\r\n            case \"maxZoomLevel\":\r\n                this._correctZoomLevel();\r\n                this._updateButtonsVisibility();\r\n                break;\r\n            case \"value\":\r\n                value = this._convertToDate(value);\r\n                previousValue = this._convertToDate(previousValue);\r\n                this._updateAriaSelected(value, previousValue);\r\n                this.option(\"currentDate\", typeUtils.isDefined(value) ? new Date(value) : new Date);\r\n                this._updateViewsValue(value);\r\n                this._setSubmitValue(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"disabled\":\r\n                this._view.option(\"disabled\", value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"onCellClick\":\r\n                this._view.option(\"onCellClick\", value);\r\n                break;\r\n            case \"onContouredChanged\":\r\n                this._onContouredChanged = this._createActionByOption(\"onContouredChanged\");\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"dateSerializationFormat\":\r\n            case \"cellTemplate\":\r\n            case \"showTodayButton\":\r\n                this._invalidate();\r\n                break;\r\n            case \"hasFocus\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxCalendar\", Calendar);\r\nmodule.exports = Calendar;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/calendar/ui.calendar.js\n// module id = 795\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/calendar/ui.calendar.navigator.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    Widget = require(\"../widget/ui.widget\"),\r\n    Button = require(\"../button\");\r\nvar CALENDAR_NAVIGATOR_CLASS = \"dx-calendar-navigator\",\r\n    CALENDAR_NAVIGATOR_PREVIOUS_MONTH_CLASS = \"dx-calendar-navigator-previous-month\",\r\n    CALENDAR_NAVIGATOR_NEXT_MONTH_CLASS = \"dx-calendar-navigator-next-month\",\r\n    CALENDAR_NAVIGATOR_PREVIOUS_VIEW_CLASS = \"dx-calendar-navigator-previous-view\",\r\n    CALENDAR_NAVIGATOR_NEXT_VIEW_CLASS = \"dx-calendar-navigator-next-view\",\r\n    CALENDAR_NAVIGATOR_DISABLED_LINK_CLASS = \"dx-calendar-disabled-navigator-link\",\r\n    CALENDAR_NAVIGATOR_CAPTION_BUTTON_CLASS = \"dx-calendar-caption-button\";\r\nvar Navigator = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onClick: null,\r\n            onCaptionClick: null,\r\n            text: \"\"\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initActions()\r\n    },\r\n    _initActions: function() {\r\n        this._clickAction = this._createActionByOption(\"onClick\");\r\n        this._captionClickAction = this._createActionByOption(\"onCaptionClick\")\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(CALENDAR_NAVIGATOR_CLASS);\r\n        this._renderButtons();\r\n        this._renderCaption()\r\n    },\r\n    _renderButtons: function() {\r\n        var that = this,\r\n            direction = this.option(\"rtlEnabled\") ? -1 : 1;\r\n        this._prevButton = this._createComponent($(\"<a>\"), Button, {\r\n            focusStateEnabled: false,\r\n            icon: \"chevronleft\",\r\n            onClick: function(e) {\r\n                that._clickAction({\r\n                    direction: -direction,\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $prevButton = this._prevButton.$element().addClass(CALENDAR_NAVIGATOR_PREVIOUS_VIEW_CLASS).addClass(CALENDAR_NAVIGATOR_PREVIOUS_MONTH_CLASS);\r\n        this._nextButton = this._createComponent($(\"<a>\"), Button, {\r\n            focusStateEnabled: false,\r\n            icon: \"chevronright\",\r\n            onClick: function(e) {\r\n                that._clickAction({\r\n                    direction: direction,\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $nextButton = this._nextButton.$element().addClass(CALENDAR_NAVIGATOR_NEXT_VIEW_CLASS).addClass(CALENDAR_NAVIGATOR_NEXT_MONTH_CLASS);\r\n        this._caption = this._createComponent($(\"<a>\").addClass(CALENDAR_NAVIGATOR_CAPTION_BUTTON_CLASS), Button, {\r\n            focusStateEnabled: false,\r\n            onClick: function(e) {\r\n                that._captionClickAction({\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $caption = this._caption.$element();\r\n        this.$element().append($prevButton, $caption, $nextButton)\r\n    },\r\n    _renderCaption: function() {\r\n        this._caption.option(\"text\", this.option(\"text\"))\r\n    },\r\n    toggleButton: function(buttonPrefix, value) {\r\n        var buttonName = \"_\" + buttonPrefix + \"Button\",\r\n            button = this[buttonName];\r\n        if (button) {\r\n            button.option(\"disabled\", value);\r\n            button.$element().toggleClass(CALENDAR_NAVIGATOR_DISABLED_LINK_CLASS, value)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"text\":\r\n                this._renderCaption();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = Navigator;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/calendar/ui.calendar.navigator.js\n// module id = 796\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/calendar/ui.calendar.views.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    BaseView = require(\"./ui.calendar.base_view\"),\r\n    dateUtils = require(\"../../core/utils/date\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    dateLocalization = require(\"../../localization/date\"),\r\n    dateSerialization = require(\"../../core/utils/date_serialization\"),\r\n    typeUtils = require(\"../../core/utils/type\");\r\nvar CALENDAR_OTHER_MONTH_CLASS = \"dx-calendar-other-month\",\r\n    CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\r\nvar Views = {\r\n    month: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"month\"\r\n        },\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                firstDayOfWeek: void 0,\r\n                rowCount: 6,\r\n                colCount: 7\r\n            })\r\n        },\r\n        _renderImpl: function() {\r\n            this.callBase();\r\n            this._renderHeader()\r\n        },\r\n        _renderBody: function() {\r\n            this.callBase();\r\n            this._$table.find(\".\" + CALENDAR_OTHER_VIEW_CLASS).addClass(CALENDAR_OTHER_MONTH_CLASS)\r\n        },\r\n        _renderFocusTarget: noop,\r\n        getCellAriaLabel: function(date) {\r\n            return dateLocalization.format(date, \"longdate\")\r\n        },\r\n        _renderHeader: function() {\r\n            var that = this;\r\n            var $header = $(\"<thead>\");\r\n            this._$table.prepend($header);\r\n            var $headerRow = $(\"<tr>\");\r\n            $header.append($headerRow);\r\n            var appendCell = this.option(\"rtl\") ? function(row, cell) {\r\n                row.prepend(cell)\r\n            } : function(row, cell) {\r\n                row.append(cell)\r\n            };\r\n            this._iterateCells(this.option(\"colCount\"), function(i) {\r\n                var $cell = $(\"<th>\").text(that._getDayCaption(that._getFirstDayOfWeek() + i));\r\n                appendCell($headerRow, $cell)\r\n            })\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return dateLocalization.format(this.option(\"date\"), \"monthandyear\")\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = new Date;\r\n            return dateUtils.sameDate(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var minDate = this.option(\"min\"),\r\n                maxDate = this.option(\"max\");\r\n            return !dateUtils.dateInRange(cellDate, minDate, maxDate, \"date\")\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            return cellDate.getMonth() !== this.option(\"date\").getMonth()\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.format(cellDate, \"d\")\r\n        },\r\n        _getDayCaption: function(day) {\r\n            var daysInWeek = this.option(\"colCount\");\r\n            return dateLocalization.getDayNames(\"abbreviated\")[day % daysInWeek]\r\n        },\r\n        _getFirstCellData: function() {\r\n            var firstDay = dateUtils.getFirstMonthDate(this.option(\"date\")),\r\n                firstMonthDayOffset = this._getFirstDayOfWeek() - firstDay.getDay(),\r\n                daysInWeek = this.option(\"colCount\");\r\n            if (firstMonthDayOffset >= 0) {\r\n                firstMonthDayOffset -= daysInWeek\r\n            }\r\n            firstDay.setDate(firstDay.getDate() + firstMonthDayOffset);\r\n            return firstDay\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setDate(date.getDate() + 1);\r\n            return date\r\n        },\r\n        _getFirstDayOfWeek: function() {\r\n            return typeUtils.isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex()\r\n        },\r\n        _getCellByDate: function(date) {\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(date, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameMonthAndYear(date, this.option(\"min\")) || dateUtils.sameMonthAndYear(date, this.option(\"max\"))\r\n        },\r\n        _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n            return function(args) {\r\n                var isDisabledDate = disabledDates.some(function(item) {\r\n                    return dateUtils.sameDate(item, args.date)\r\n                });\r\n                if (isDisabledDate) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    year: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"year\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameMonthAndYear(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            return !dateUtils.dateInRange(cellDate, dateUtils.getFirstMonthDate(this.option(\"min\")), dateUtils.getLastMonthDate(this.option(\"max\")))\r\n        },\r\n        _isOtherView: function() {\r\n            return false\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.getMonthNames(\"abbreviated\")[cellDate.getMonth()]\r\n        },\r\n        _getFirstCellData: function() {\r\n            var data = new Date(this.option(\"date\"));\r\n            data.setDate(1);\r\n            data.setMonth(0);\r\n            return data\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setMonth(date.getMonth() + 1);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        getCellAriaLabel: function(date) {\r\n            return dateLocalization.format(date, \"monthandyear\")\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return dateLocalization.format(this.option(\"date\"), \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameYear(date, this.option(\"min\")) || dateUtils.sameYear(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    decade: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"decade\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameYear(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var min = this.option(\"min\"),\r\n                max = this.option(\"max\");\r\n            return !dateUtils.dateInRange(cellDate.getFullYear(), min && min.getFullYear(), max && max.getFullYear())\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = new Date(cellDate);\r\n            date.setMonth(1);\r\n            return !dateUtils.sameDecade(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.format(cellDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var year = dateUtils.getFirstYearInDecade(this.option(\"date\")) - 1;\r\n            return new Date(year, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setFullYear(date.getFullYear() + 1);\r\n            return date\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\"),\r\n                firstYearInDecade = dateUtils.getFirstYearInDecade(currentDate),\r\n                startDate = new Date(currentDate),\r\n                endDate = new Date(currentDate);\r\n            startDate.setFullYear(firstYearInDecade);\r\n            endDate.setFullYear(firstYearInDecade + 9);\r\n            return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        _isValueOnCurrentView: function(currentDate, value) {\r\n            return dateUtils.sameDecade(currentDate, value)\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameDecade(date, this.option(\"min\")) || dateUtils.sameDecade(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    century: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"century\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameDecade(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var decade = dateUtils.getFirstYearInDecade(cellDate),\r\n                minDecade = dateUtils.getFirstYearInDecade(this.option(\"min\")),\r\n                maxDecade = dateUtils.getFirstYearInDecade(this.option(\"max\"));\r\n            return !dateUtils.dateInRange(decade, minDecade, maxDecade)\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = new Date(cellDate);\r\n            date.setMonth(1);\r\n            return !dateUtils.sameCentury(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            var startDate = dateLocalization.format(cellDate, \"yyyy\"),\r\n                endDate = new Date(cellDate);\r\n            endDate.setFullYear(endDate.getFullYear() + 9);\r\n            return startDate + \" - \" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var decade = dateUtils.getFirstDecadeInCentury(this.option(\"date\")) - 10;\r\n            return new Date(decade, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setFullYear(date.getFullYear() + 10);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            foundDate.setFullYear(dateUtils.getFirstYearInDecade(foundDate));\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\"),\r\n                firstDecadeInCentury = dateUtils.getFirstDecadeInCentury(currentDate),\r\n                startDate = new Date(currentDate),\r\n                endDate = new Date(currentDate);\r\n            startDate.setFullYear(firstDecadeInCentury);\r\n            endDate.setFullYear(firstDecadeInCentury + 99);\r\n            return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameCentury(date, this.option(\"min\")) || dateUtils.sameCentury(date, this.option(\"max\"))\r\n        }\r\n    })\r\n};\r\nmodule.exports = Views;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/calendar/ui.calendar.views.js\n// module id = 797\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/calendar/ui.calendar.base_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    dataUtils = require(\"../../core/element_data\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    Widget = require(\"../widget/ui.widget\"),\r\n    dateUtils = require(\"../../core/utils/date\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    dateSerialization = require(\"../../core/utils/date_serialization\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    clickEvent = require(\"../../events/click\");\r\nvar abstract = Widget.abstract,\r\n    CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\",\r\n    CALENDAR_CELL_CLASS = \"dx-calendar-cell\",\r\n    CALENDAR_EMPTY_CELL_CLASS = \"dx-calendar-empty-cell\",\r\n    CALENDAR_TODAY_CLASS = \"dx-calendar-today\",\r\n    CALENDAR_SELECTED_DATE_CLASS = \"dx-calendar-selected-date\",\r\n    CALENDAR_CONTOURED_DATE_CLASS = \"dx-calendar-contoured-date\",\r\n    CALENDAR_DXCLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxCalendar\"),\r\n    CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\r\nvar BaseView = Widget.inherit({\r\n    _getViewName: function() {\r\n        return \"base\"\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            date: new Date,\r\n            focusStateEnabled: false,\r\n            cellTemplate: null,\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            rowCount: 3,\r\n            colCount: 4,\r\n            allowValueSelection: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        var value = this.option(\"value\");\r\n        this.option(\"value\", new Date(value));\r\n        if (!this.option(\"value\").valueOf()) {\r\n            this.option(\"value\", new Date(0, 0, 0, 0, 0, 0))\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderImpl()\r\n    },\r\n    _renderImpl: function() {\r\n        this._$table = $(\"<table>\");\r\n        this.$element().append(this._$table);\r\n        this._createDisabledDatesHandler();\r\n        this._renderBody();\r\n        this._renderContouredDate();\r\n        this._renderValue();\r\n        this._renderEvents()\r\n    },\r\n    _renderBody: function() {\r\n        this.$body = $(\"<tbody>\").appendTo(this._$table);\r\n        var that = this,\r\n            cellTemplate = this.option(\"cellTemplate\");\r\n        var appendChild = this.option(\"rtl\") ? function(row, cell) {\r\n            row.insertBefore(cell, row.firstChild)\r\n        } : function(row, cell) {\r\n            row.appendChild(cell)\r\n        };\r\n\r\n        function renderCell(cellIndex) {\r\n            if (prevCellDate) {\r\n                dateUtils.fixTimezoneGap(prevCellDate, cellDate)\r\n            }\r\n            prevCellDate = cellDate;\r\n            var cell = domAdapter.createElement(\"td\"),\r\n                $cell = $(cell),\r\n                className = CALENDAR_CELL_CLASS;\r\n            if (that._isTodayCell(cellDate)) {\r\n                className = className + \" \" + CALENDAR_TODAY_CLASS\r\n            }\r\n            if (that._isDateOutOfRange(cellDate) || that.isDateDisabled(cellDate)) {\r\n                className = className + \" \" + CALENDAR_EMPTY_CELL_CLASS\r\n            }\r\n            if (that._isOtherView(cellDate)) {\r\n                className = className + \" \" + CALENDAR_OTHER_VIEW_CLASS\r\n            }\r\n            cell.className = className;\r\n            cell.setAttribute(\"data-value\", dateSerialization.serializeDate(cellDate, dateUtils.getShortDateFormat()));\r\n            dataUtils.data(cell, CALENDAR_DATE_VALUE_KEY, cellDate);\r\n            that.setAria({\r\n                role: \"option\",\r\n                label: that.getCellAriaLabel(cellDate)\r\n            }, $cell);\r\n            appendChild(row, cell);\r\n            if (cellTemplate) {\r\n                cellTemplate.render({\r\n                    model: {\r\n                        text: that._getCellText(cellDate),\r\n                        date: cellDate,\r\n                        view: that._getViewName()\r\n                    },\r\n                    container: domUtils.getPublicElement($cell),\r\n                    index: cellIndex\r\n                })\r\n            } else {\r\n                cell.innerHTML = that._getCellText(cellDate)\r\n            }\r\n            cellDate = that._getNextCellData(cellDate)\r\n        }\r\n        var prevCellDate, cellDate = this._getFirstCellData(),\r\n            colCount = this.option(\"colCount\");\r\n        for (var indexRow = 0, len = this.option(\"rowCount\"); indexRow < len; indexRow++) {\r\n            var row = domAdapter.createElement(\"tr\");\r\n            this.$body.get(0).appendChild(row);\r\n            this._iterateCells(colCount, renderCell)\r\n        }\r\n    },\r\n    _iterateCells: function(colCount, delegate) {\r\n        var i = 0;\r\n        while (i < colCount) {\r\n            delegate(i);\r\n            ++i\r\n        }\r\n    },\r\n    _renderEvents: function() {\r\n        this._createCellClickAction();\r\n        eventsEngine.off(this._$table, CALENDAR_DXCLICK_EVENT_NAME);\r\n        eventsEngine.on(this._$table, CALENDAR_DXCLICK_EVENT_NAME, \"td\", function(e) {\r\n            if (!$(e.currentTarget).hasClass(CALENDAR_EMPTY_CELL_CLASS)) {\r\n                this._cellClickAction({\r\n                    event: e,\r\n                    value: $(e.currentTarget).data(CALENDAR_DATE_VALUE_KEY)\r\n                })\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _createCellClickAction: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\")\r\n    },\r\n    _createDisabledDatesHandler: function() {\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        this._disabledDatesHandler = Array.isArray(disabledDates) ? this._getDefaultDisabledDatesHandler(disabledDates) : disabledDates || noop\r\n    },\r\n    _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n        return noop\r\n    },\r\n    _isTodayCell: abstract,\r\n    _isDateOutOfRange: abstract,\r\n    isDateDisabled: function(cellDate) {\r\n        var dateParts = {\r\n            date: cellDate,\r\n            view: this._getViewName()\r\n        };\r\n        return this._disabledDatesHandler(dateParts)\r\n    },\r\n    _isOtherView: abstract,\r\n    _getCellText: abstract,\r\n    _getFirstCellData: abstract,\r\n    _getNextCellData: abstract,\r\n    _renderContouredDate: function(contouredDate) {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        contouredDate = contouredDate || this.option(\"contouredDate\");\r\n        var $oldContouredCell = this._$table.find(\".\" + CALENDAR_CONTOURED_DATE_CLASS);\r\n        var $newContouredCell = this._getCellByDate(contouredDate);\r\n        $oldContouredCell.removeClass(CALENDAR_CONTOURED_DATE_CLASS);\r\n        $newContouredCell.addClass(CALENDAR_CONTOURED_DATE_CLASS)\r\n    },\r\n    _dispose: function() {\r\n        this._keyboardProcessor = void 0;\r\n        this.callBase()\r\n    },\r\n    _changeValue: function(cellDate) {\r\n        if (cellDate) {\r\n            var value = this.option(\"value\"),\r\n                newValue = value ? new Date(value) : new Date;\r\n            newValue.setDate(cellDate.getDate());\r\n            newValue.setMonth(cellDate.getMonth());\r\n            newValue.setFullYear(cellDate.getFullYear());\r\n            newValue.setDate(cellDate.getDate());\r\n            this.option(\"value\", newValue)\r\n        } else {\r\n            this.option(\"value\", null)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (!this.option(\"allowValueSelection\")) {\r\n            return\r\n        }\r\n        var value = this.option(\"value\"),\r\n            selectedCell = this._getCellByDate(value);\r\n        if (this._selectedCell) {\r\n            this._selectedCell.removeClass(CALENDAR_SELECTED_DATE_CLASS)\r\n        }\r\n        selectedCell.addClass(CALENDAR_SELECTED_DATE_CLASS);\r\n        this._selectedCell = selectedCell\r\n    },\r\n    getCellAriaLabel: function(date) {\r\n        return this._getCellText(date)\r\n    },\r\n    _getFirstAvailableDate: function() {\r\n        var date = this.option(\"date\"),\r\n            min = this.option(\"min\");\r\n        date = dateUtils.getFirstDateView(this._getViewName(), date);\r\n        return new Date(min && date < min ? min : date)\r\n    },\r\n    _getCellByDate: abstract,\r\n    isBoundary: abstract,\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._renderValue();\r\n                break;\r\n            case \"contouredDate\":\r\n                this._renderContouredDate(args.value);\r\n                break;\r\n            case \"onCellClick\":\r\n                this._createCellClickAction();\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"cellTemplate\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = BaseView;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/calendar/ui.calendar.base_view.js\n// module id = 798\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.date_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    window = require(\"../../core/utils/window\").getWindow(),\r\n    DateView = require(\"./ui.date_view\"),\r\n    DateBoxStrategy = require(\"./ui.date_box.strategy\"),\r\n    support = require(\"../../core/utils/support\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    themes = require(\"../themes\"),\r\n    dateUtils = require(\"./ui.date_utils\"),\r\n    messageLocalization = require(\"../../localization/message\");\r\nvar DateViewStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"DateView\",\r\n    getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            openOnFieldClick: true,\r\n            applyButtonText: messageLocalization.format(\"Done\")\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || dateUtils.FORMATS_MAP[this.dateBox.option(\"type\")]\r\n    },\r\n    popupConfig: function(config) {\r\n        var themeName = themes.current();\r\n        return {\r\n            showTitle: true,\r\n            toolbarItems: this.dateBox._popupToolbarItemsConfig(),\r\n            onInitialized: config.onInitialized,\r\n            defaultOptionsRules: [{\r\n                device: function(_device) {\r\n                    return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n                },\r\n                options: {\r\n                    showNames: true\r\n                }\r\n            }, {\r\n                device: function(_device2) {\r\n                    return \"win\" === _device2.platform && _device2.phone && _device2.version && 8 === _device2.version[0]\r\n                },\r\n                options: {\r\n                    animation: null\r\n                }\r\n            }, {\r\n                device: function() {\r\n                    return themes.isWin8(themeName)\r\n                },\r\n                options: {\r\n                    fullScreen: true\r\n                }\r\n            }, {\r\n                device: {\r\n                    platform: \"android\"\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    height: 331\r\n                }\r\n            }, {\r\n                device: function(_device3) {\r\n                    var platform = _device3.platform,\r\n                        version = _device3.version;\r\n                    return \"generic\" === platform || \"ios\" === platform || \"win\" === platform && version && 10 === version[0]\r\n                },\r\n                options: {\r\n                    width: \"auto\",\r\n                    height: \"auto\"\r\n                }\r\n            }, {\r\n                device: function(_device4) {\r\n                    var platform = _device4.platform,\r\n                        phone = _device4.phone;\r\n                    return \"generic\" === platform && phone\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    maxWidth: \"100%\",\r\n                    maxHeight: \"100%\",\r\n                    height: \"auto\",\r\n                    position: {\r\n                        collision: \"flipfit flip\"\r\n                    }\r\n                }\r\n            }, {\r\n                device: function(_device5) {\r\n                    return _device5.phone && themes.isWin10(themeName)\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    height: \"auto\"\r\n                }\r\n            }, {\r\n                device: {\r\n                    platform: \"ios\",\r\n                    phone: true\r\n                },\r\n                options: {\r\n                    width: \"100%\",\r\n                    position: {\r\n                        my: \"bottom\",\r\n                        at: \"bottom\",\r\n                        of: window\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    _renderWidget: function() {\r\n        if (support.inputType(this.dateBox.option(\"mode\")) && this.dateBox._isNativeType() || this.dateBox.option(\"readOnly\")) {\r\n            if (this._widget) {\r\n                this._widget.$element().remove();\r\n                this._widget = null\r\n            }\r\n            return\r\n        }\r\n        var popup = this._getPopup();\r\n        if (this._widget) {\r\n            this._widget.option(this._getWidgetOptions())\r\n        } else {\r\n            var element = $(\"<div>\").appendTo(popup.$content());\r\n            this._widget = this._createWidget(element)\r\n        }\r\n        this._widget.$element().appendTo(this._getWidgetContainer())\r\n    },\r\n    _getWidgetName: function() {\r\n        return DateView\r\n    },\r\n    _getWidgetOptions: function() {\r\n        return {\r\n            value: this.dateBoxValue() || new Date,\r\n            type: this.dateBox.option(\"type\"),\r\n            minDate: this.dateBox.dateOption(\"min\") || new Date(1900, 1, 1),\r\n            maxDate: this.dateBox.dateOption(\"max\") || new Date(Date.now() + 50 * dateUtils.ONE_YEAR),\r\n            onDisposing: function() {\r\n                this._widget = null\r\n            }.bind(this)\r\n        }\r\n    }\r\n});\r\nmodule.exports = DateViewStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.strategy.date_view.js\n// module id = 799\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    Editor = require(\"../editor/editor\"),\r\n    DateViewRoller = require(\"./ui.date_view_roller\"),\r\n    dateUtils = require(\"../../core/utils/date\"),\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    uiDateUtils = require(\"./ui.date_utils\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    dateLocalization = require(\"../../localization/date\");\r\nvar DATEVIEW_CLASS = \"dx-dateview\",\r\n    DATEVIEW_COMPACT_CLASS = \"dx-dateview-compact\",\r\n    DATEVIEW_WRAPPER_CLASS = \"dx-dateview-wrapper\",\r\n    DATEVIEW_ROLLER_CONTAINER_CLASS = \"dx-dateview-rollers\",\r\n    DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar ROLLER_TYPE = {\r\n    year: \"year\",\r\n    month: \"month\",\r\n    day: \"day\",\r\n    hours: \"hours\"\r\n};\r\nvar DateView = Editor.inherit({\r\n    _valueOption: function() {\r\n        var value = this.option(\"value\"),\r\n            date = new Date(value);\r\n        return !value || isNaN(date) ? this._getDefaultDate() : date\r\n    },\r\n    _getDefaultDate: function() {\r\n        var date = new Date;\r\n        if (this.option(\"type\") === TYPE.date) {\r\n            return new Date(date.getFullYear(), date.getMonth(), date.getDate())\r\n        }\r\n        return date\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            minDate: uiDateUtils.MIN_DATEVIEW_DEFAULT_DATE,\r\n            maxDate: uiDateUtils.MAX_DATEVIEW_DEFAULT_DATE,\r\n            type: TYPE.date,\r\n            value: new Date,\r\n            showNames: false,\r\n            applyCompactClass: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n            },\r\n            options: {\r\n                showNames: true\r\n            }\r\n        }, {\r\n            device: function(_device2) {\r\n                return \"desktop\" !== _device2.deviceType\r\n            },\r\n            options: {\r\n                applyCompactClass: true\r\n            }\r\n        }])\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DATEVIEW_CLASS);\r\n        this._toggleFormatClasses(this.option(\"type\"));\r\n        this._toggleCompactClass()\r\n    },\r\n    _toggleFormatClasses: function(currentFormat, previousFormat) {\r\n        this.$element().addClass(DATEVIEW_CLASS + \"-\" + currentFormat);\r\n        previousFormat && this.$element().removeClass(DATEVIEW_CLASS + \"-\" + previousFormat)\r\n    },\r\n    _toggleCompactClass: function() {\r\n        this.$element().toggleClass(DATEVIEW_COMPACT_CLASS, this.option(\"applyCompactClass\"))\r\n    },\r\n    _wrapper: function() {\r\n        return this._$wrapper\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._$wrapper = $(\"<div>\").addClass(DATEVIEW_WRAPPER_CLASS);\r\n        this._renderRollers();\r\n        this._$wrapper.appendTo(this.$element())\r\n    },\r\n    _renderRollers: function() {\r\n        if (!this._$rollersContainer) {\r\n            this._$rollersContainer = $(\"<div>\").addClass(DATEVIEW_ROLLER_CONTAINER_CLASS)\r\n        }\r\n        this._$rollersContainer.empty();\r\n        this._createRollerConfigs();\r\n        this._rollers = {};\r\n        var that = this;\r\n        each(that._rollerConfigs, function(name) {\r\n            var $roller = $(\"<div>\").appendTo(that._$rollersContainer).addClass(DATEVIEW_ROLLER_CLASS + \"-\" + that._rollerConfigs[name].type);\r\n            that._rollers[that._rollerConfigs[name].type] = that._createComponent($roller, DateViewRoller, {\r\n                items: that._rollerConfigs[name].displayItems,\r\n                selectedIndex: that._rollerConfigs[name].selectedIndex,\r\n                showScrollbar: false,\r\n                onStart: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(true);\r\n                    that._setActiveRoller(that._rollerConfigs[name], roller.option(\"selectedIndex\"))\r\n                },\r\n                onEnd: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(false)\r\n                },\r\n                onClick: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(true);\r\n                    that._setActiveRoller(that._rollerConfigs[name], roller.option(\"selectedIndex\"));\r\n                    that._setRollerState(that._rollerConfigs[name], roller.option(\"selectedIndex\"));\r\n                    roller._toggleActive(false)\r\n                },\r\n                onSelectedIndexChanged: function(e) {\r\n                    var roller = e.component;\r\n                    that._setRollerState(that._rollerConfigs[name], roller.option(\"selectedIndex\"))\r\n                }\r\n            })\r\n        });\r\n        that._$rollersContainer.appendTo(that._wrapper())\r\n    },\r\n    _createRollerConfigs: function(type) {\r\n        var that = this;\r\n        type = type || that.option(\"type\");\r\n        that._rollerConfigs = {};\r\n        dateLocalization.getFormatParts(uiDateUtils.FORMATS_MAP[type]).forEach(function(partName) {\r\n            that._createRollerConfig(partName)\r\n        })\r\n    },\r\n    _createRollerConfig: function(componentName) {\r\n        var componentInfo = uiDateUtils.DATE_COMPONENTS_INFO[componentName],\r\n            valueRange = this._calculateRollerConfigValueRange(componentName),\r\n            startValue = valueRange.startValue,\r\n            endValue = valueRange.endValue,\r\n            formatter = componentInfo.formatter,\r\n            showNames = this.option(\"showNames\"),\r\n            curDate = this._getCurrentDate();\r\n        var config = {\r\n            type: componentName,\r\n            setValue: componentInfo.setter,\r\n            valueItems: [],\r\n            displayItems: [],\r\n            getIndex: function(value) {\r\n                return value[componentInfo.getter]() - startValue\r\n            }\r\n        };\r\n        for (var i = startValue; i <= endValue; i++) {\r\n            config.valueItems.push(i);\r\n            config.displayItems.push(formatter(i, showNames, curDate))\r\n        }\r\n        config.selectedIndex = config.getIndex(curDate);\r\n        this._rollerConfigs[componentName] = config\r\n    },\r\n    _setActiveRoller: function(currentRoller) {\r\n        var activeRoller = currentRoller && this._rollers[currentRoller.type];\r\n        each(this._rollers, function() {\r\n            this.toggleActiveState(this === activeRoller)\r\n        })\r\n    },\r\n    _updateRollersPosition: function() {\r\n        var that = this;\r\n        each(this._rollers, function(type) {\r\n            var correctIndex = that._rollerConfigs[type].getIndex(that._getCurrentDate());\r\n            this.option(\"selectedIndex\", correctIndex)\r\n        })\r\n    },\r\n    _setRollerState: function(roller, selectedIndex) {\r\n        if (selectedIndex !== roller.selectedIndex) {\r\n            var rollerValue = roller.valueItems[selectedIndex],\r\n                setValue = roller.setValue,\r\n                currentValue = new Date(this._getCurrentDate()),\r\n                currentDate = currentValue.getDate();\r\n            if (roller.type === ROLLER_TYPE.month) {\r\n                currentDate = Math.min(currentDate, uiDateUtils.getMaxMonthDay(currentValue.getFullYear(), rollerValue))\r\n            } else {\r\n                if (roller.type === ROLLER_TYPE.year) {\r\n                    currentDate = Math.min(currentDate, uiDateUtils.getMaxMonthDay(rollerValue, currentValue.getMonth()))\r\n                }\r\n            }\r\n            currentValue.setDate(currentDate);\r\n            currentValue[setValue](rollerValue);\r\n            currentValue = dateUtils.normalizeDate(currentValue, this.option(\"minDate\"), this.option(\"maxDate\"));\r\n            this.option(\"value\", currentValue);\r\n            roller.selectedIndex = selectedIndex\r\n        }\r\n        if (roller.type === ROLLER_TYPE.year) {\r\n            this._refreshRollers()\r\n        }\r\n        if (roller.type === ROLLER_TYPE.month) {\r\n            this._refreshRoller(ROLLER_TYPE.day);\r\n            this._refreshRoller(ROLLER_TYPE.hours)\r\n        }\r\n    },\r\n    _refreshRoller: function(rollerType) {\r\n        var roller = this._rollers[rollerType];\r\n        if (roller) {\r\n            this._createRollerConfig(rollerType);\r\n            var rollerConfig = this._rollerConfigs[rollerType];\r\n            if (rollerType === ROLLER_TYPE.day || rollerConfig.displayItems.toString() !== roller.option(\"items\").toString()) {\r\n                roller.option({\r\n                    items: rollerConfig.displayItems,\r\n                    selectedIndex: rollerConfig.selectedIndex\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _getCurrentDate: function() {\r\n        var curDate = this._valueOption(),\r\n            minDate = this.option(\"minDate\"),\r\n            maxDate = this.option(\"maxDate\");\r\n        if (minDate && curDate.getTime() <= minDate.getTime()) {\r\n            curDate = minDate\r\n        } else {\r\n            if (maxDate && curDate.getTime() >= maxDate.getTime()) {\r\n                curDate = maxDate\r\n            }\r\n        }\r\n        return curDate\r\n    },\r\n    _calculateRollerConfigValueRange: function(componentName) {\r\n        var curDate = this._getCurrentDate(),\r\n            minDate = this.option(\"minDate\"),\r\n            maxDate = this.option(\"maxDate\"),\r\n            minYear = dateUtils.sameYear(curDate, minDate),\r\n            minMonth = minYear && curDate.getMonth() === minDate.getMonth(),\r\n            maxYear = dateUtils.sameYear(curDate, maxDate),\r\n            maxMonth = maxYear && curDate.getMonth() === maxDate.getMonth(),\r\n            minHour = minMonth && curDate.getDate() === minDate.getDate(),\r\n            maxHour = maxMonth && curDate.getDate() === maxDate.getDate(),\r\n            componentInfo = uiDateUtils.DATE_COMPONENTS_INFO[componentName],\r\n            startValue = componentInfo.startValue,\r\n            endValue = componentInfo.endValue;\r\n        if (componentName === ROLLER_TYPE.year) {\r\n            startValue = minDate.getFullYear();\r\n            endValue = maxDate.getFullYear()\r\n        }\r\n        if (componentName === ROLLER_TYPE.month) {\r\n            if (minYear) {\r\n                startValue = minDate.getMonth()\r\n            }\r\n            if (maxYear) {\r\n                endValue = maxDate.getMonth()\r\n            }\r\n        }\r\n        if (componentName === ROLLER_TYPE.day) {\r\n            endValue = uiDateUtils.getMaxMonthDay(curDate.getFullYear(), curDate.getMonth());\r\n            if (minYear && minMonth) {\r\n                startValue = minDate.getDate()\r\n            }\r\n            if (maxYear && maxMonth) {\r\n                endValue = maxDate.getDate()\r\n            }\r\n        }\r\n        if (componentName === ROLLER_TYPE.hours) {\r\n            startValue = minHour ? minDate.getHours() : startValue;\r\n            endValue = maxHour ? maxDate.getHours() : endValue\r\n        }\r\n        return {\r\n            startValue: startValue,\r\n            endValue: endValue\r\n        }\r\n    },\r\n    _refreshRollers: function() {\r\n        this._refreshRoller(ROLLER_TYPE.month);\r\n        this._refreshRoller(ROLLER_TYPE.day);\r\n        this._refreshRoller(ROLLER_TYPE.hours)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showNames\":\r\n            case \"minDate\":\r\n            case \"maxDate\":\r\n            case \"type\":\r\n                this._renderRollers();\r\n                this._toggleFormatClasses(args.value, args.previousValue);\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (args.value) {\r\n                    this._renderRollers()\r\n                }\r\n                break;\r\n            case \"value\":\r\n                this.option(\"value\", this._valueOption());\r\n                this._refreshRollers();\r\n                this._updateRollersPosition();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        delete this._$rollersContainer\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._deferredRenderDayTimeout);\r\n        clearTimeout(this._deferredRenderMonthTimeout);\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxDateView\", DateView);\r\nmodule.exports = DateView;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_view.js\n// module id = 800\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_view_roller.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    eventUtils = require(\"../../events/utils\"),\r\n    clickEvent = require(\"../../events/click\"),\r\n    Scrollable = require(\"../scroll_view/ui.scrollable\"),\r\n    fx = require(\"../../animation/fx\"),\r\n    translator = require(\"../../animation/translator\");\r\nvar DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\",\r\n    DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\",\r\n    DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\",\r\n    DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\",\r\n    DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\",\r\n    DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\",\r\n    DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\r\nvar DateViewRoller = Scrollable.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            showScrollbar: false,\r\n            useNative: false,\r\n            selectedIndex: 0,\r\n            bounceEnabled: false,\r\n            items: [],\r\n            showOnClick: false,\r\n            onClick: null,\r\n            onSelectedIndexChanged: null\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"win\" === _device.platform && _device.version && 8 === _device.version[0]\r\n            },\r\n            options: {\r\n                showOnClick: true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                scrollByContent: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItemFrame()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DATEVIEW_ROLLER_CLASS);\r\n        this._renderContainerClick();\r\n        this._renderItems();\r\n        this._renderSelectedValue();\r\n        this._renderItemsClick();\r\n        this._wrapAction(\"_endAction\", this._endActionHandler.bind(this));\r\n        this._renderSelectedIndexChanged()\r\n    },\r\n    _renderSelectedIndexChanged: function() {\r\n        this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\")\r\n    },\r\n    _renderContainerClick: function() {\r\n        if (!this.option(\"showOnClick\")) {\r\n            return\r\n        }\r\n        var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\r\n        var clickAction = this._createActionByOption(\"onClick\");\r\n        eventsEngine.off(this._$container, eventName);\r\n        eventsEngine.on(this._$container, eventName, function(e) {\r\n            clickAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _wrapAction: function(actionName, callback) {\r\n        var strategy = this._strategy,\r\n            originalAction = strategy[actionName];\r\n        strategy[actionName] = function() {\r\n            callback.apply(this, arguments);\r\n            return originalAction.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderItems: function() {\r\n        var items = this.option(\"items\") || [],\r\n            $items = $();\r\n        this._$content.empty();\r\n        items.forEach(function(item) {\r\n            $items = $items.add($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_CLASS).append(item))\r\n        });\r\n        this._$content.append($items);\r\n        this._$items = $items;\r\n        this.update()\r\n    },\r\n    _renderSelectedItemFrame: function() {\r\n        $(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS).append($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS)).appendTo(this._$container)\r\n    },\r\n    _renderSelectedValue: function(selectedIndex) {\r\n        var index = this._fitIndex(selectedIndex || this.option(\"selectedIndex\"));\r\n        this._moveTo({\r\n            top: this._getItemPosition(index)\r\n        });\r\n        this._renderActiveStateItem()\r\n    },\r\n    _fitIndex: function(index) {\r\n        var items = this.option(\"items\") || [],\r\n            itemCount = items.length;\r\n        if (index >= itemCount) {\r\n            return itemCount - 1\r\n        }\r\n        if (index < 0) {\r\n            return 0\r\n        }\r\n        return index\r\n    },\r\n    _getItemPosition: function(index) {\r\n        return Math.round(this._itemHeight() * index)\r\n    },\r\n    _renderItemsClick: function() {\r\n        var itemSelector = this._getItemSelector(),\r\n            eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\r\n        eventsEngine.off(this.$element(), eventName, itemSelector);\r\n        eventsEngine.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this))\r\n    },\r\n    _getItemSelector: function() {\r\n        return \".\" + DATEVIEW_ROLLER_ITEM_CLASS\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget))\r\n    },\r\n    _itemElementIndex: function(itemElement) {\r\n        return this._itemElements().index(itemElement)\r\n    },\r\n    _itemElements: function() {\r\n        return this.$element().find(this._getItemSelector())\r\n    },\r\n    _renderActiveStateItem: function() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        each(this._$items, function(index) {\r\n            $(this).toggleClass(DATEVIEW_ROLLER_ITEM_SELECTED_CLASS, selectedIndex === index)\r\n        })\r\n    },\r\n    _moveTo: function(targetLocation) {\r\n        targetLocation = this._normalizeLocation(targetLocation);\r\n        var location = this._location(),\r\n            delta = {\r\n                x: -(location.left - targetLocation.left),\r\n                y: -(location.top - targetLocation.top)\r\n            };\r\n        if (this._isVisible() && (delta.x || delta.y)) {\r\n            this._strategy._prepareDirections(true);\r\n            if (this._animation) {\r\n                var that = this;\r\n                fx.stop(this._$content);\r\n                fx.animate(this._$content, {\r\n                    duration: 200,\r\n                    type: \"slide\",\r\n                    to: {\r\n                        top: Math.floor(delta.y)\r\n                    },\r\n                    complete: function() {\r\n                        translator.resetPosition(that._$content);\r\n                        that._strategy.handleMove({\r\n                            delta: delta\r\n                        })\r\n                    }\r\n                });\r\n                delete this._animation\r\n            } else {\r\n                this._strategy.handleMove({\r\n                    delta: delta\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _validate: function(e) {\r\n        return this._strategy.validate(e)\r\n    },\r\n    _endActionHandler: function() {\r\n        var currentSelectedIndex = this.option(\"selectedIndex\"),\r\n            ratio = -this._location().top / this._itemHeight(),\r\n            newSelectedIndex = Math.round(ratio);\r\n        this._animation = true;\r\n        if (newSelectedIndex === currentSelectedIndex) {\r\n            this._renderSelectedValue(newSelectedIndex)\r\n        } else {\r\n            this.option(\"selectedIndex\", newSelectedIndex)\r\n        }\r\n    },\r\n    _itemHeight: function() {\r\n        var $item = this._$items.first();\r\n        return $item.get(0) && $item.get(0).getBoundingClientRect().height || 0\r\n    },\r\n    _toggleActive: function(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_ACTIVE_CLASS, state)\r\n    },\r\n    _isVisible: function() {\r\n        return this._$container.is(\":visible\")\r\n    },\r\n    _fireSelectedIndexChanged: function(value, previousValue) {\r\n        this._selectedIndexChanged({\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: void 0\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._renderSelectedValue(this.option(\"selectedIndex\"))\r\n        }\r\n        this.toggleActiveState(false)\r\n    },\r\n    toggleActiveState: function(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_CURRENT_CLASS, state)\r\n    },\r\n    _refreshSelectedIndex: function() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        var fitIndex = this._fitIndex(selectedIndex);\r\n        fitIndex === selectedIndex ? this._renderActiveStateItem() : this.option(\"selectedIndex\", fitIndex)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"selectedIndex\":\r\n                this._fireSelectedIndexChanged(args.value, args.previousValue);\r\n                this._renderSelectedValue(args.value);\r\n                break;\r\n            case \"items\":\r\n                this._renderItems();\r\n                this._refreshSelectedIndex();\r\n                break;\r\n            case \"onClick\":\r\n            case \"showOnClick\":\r\n                this._renderContainerClick();\r\n                break;\r\n            case \"onSelectedIndexChanged\":\r\n                this._renderSelectedIndexChanged();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxDateViewRoller\", DateViewRoller);\r\nmodule.exports = DateViewRoller;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_view_roller.js\n// module id = 801\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar noop = require(\"../../core/utils/common\").noop,\r\n    DateBoxStrategy = require(\"./ui.date_box.strategy\"),\r\n    support = require(\"../../core/utils/support\"),\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    dateUtils = require(\"./ui.date_utils\"),\r\n    dateSerialization = require(\"../../core/utils/date_serialization\");\r\nvar NativeStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"Native\",\r\n    popupConfig: noop,\r\n    getParsedText: function(text) {\r\n        if (!text) {\r\n            return null\r\n        }\r\n        if (\"datetime\" === this.dateBox.option(\"type\")) {\r\n            return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0])\r\n        }\r\n        return dateUtils.fromStandardDateFormat(text)\r\n    },\r\n    renderPopupContent: noop,\r\n    _getWidgetName: noop,\r\n    _getWidgetOptions: noop,\r\n    _getDateBoxType: function() {\r\n        var type = this.dateBox.option(\"type\");\r\n        if (inArray(type, dateUtils.SUPPORTED_FORMATS) === -1) {\r\n            type = \"date\"\r\n        } else {\r\n            if (\"datetime\" === type && !support.inputType(type)) {\r\n                type = \"datetime-local\"\r\n            }\r\n        }\r\n        return type\r\n    },\r\n    getDefaultOptions: function() {\r\n        return {\r\n            mode: this._getDateBoxType()\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        var type = this._getDateBoxType();\r\n        return displayFormat || dateUtils.FORMATS_MAP[type]\r\n    },\r\n    renderInputMinMax: function($input) {\r\n        $input.attr({\r\n            min: dateSerialization.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\r\n            max: dateSerialization.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\r\n        })\r\n    }\r\n});\r\nmodule.exports = NativeStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.strategy.native.js\n// module id = 802\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.calendar_with_time.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    window = require(\"../../core/utils/window\").getWindow(),\r\n    CalendarStrategy = require(\"./ui.date_box.strategy.calendar\"),\r\n    TimeView = require(\"./ui.time_view\"),\r\n    dateLocalization = require(\"../../localization/date\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    Box = require(\"../box\"),\r\n    uiDateUtils = require(\"./ui.date_utils\");\r\nvar SHRINK_VIEW_SCREEN_WIDTH = 573,\r\n    DATEBOX_ADAPTIVITY_MODE_CLASS = \"dx-datebox-adaptivity-mode\";\r\nvar CalendarWithTimeStrategy = CalendarStrategy.inherit({\r\n    NAME: \"CalendarWithTime\",\r\n    getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            applyValueMode: \"useButtons\",\r\n            buttonsLocation: \"bottom after\",\r\n            showPopupTitle: false\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shortdateshorttime\"\r\n    },\r\n    _is24HourFormat: function() {\r\n        return dateLocalization.is24HourFormat(this.getDisplayFormat(this.dateBox.option(\"displayFormat\")))\r\n    },\r\n    _renderWidget: function() {\r\n        this.callBase();\r\n        this._timeView = this.dateBox._createComponent($(\"<div>\"), TimeView, {\r\n            value: this.dateBoxValue(),\r\n            _showClock: !this._isShrinkView(),\r\n            use24HourFormat: this._is24HourFormat(),\r\n            onValueChanged: this._valueChangedHandler.bind(this),\r\n            stylingMode: this.dateBox.option(\"stylingMode\")\r\n        })\r\n    },\r\n    renderOpenedState: function() {\r\n        this.callBase();\r\n        var popup = this._getPopup();\r\n        if (popup) {\r\n            popup._wrapper().toggleClass(DATEBOX_ADAPTIVITY_MODE_CLASS, this._isSmallScreen())\r\n        }\r\n        clearTimeout(this._repaintTimer);\r\n        this._repaintTimer = setTimeout(function() {\r\n            this._getPopup() && this._getPopup().repaint()\r\n        }.bind(this), 0)\r\n    },\r\n    isAdaptivityChanged: function() {\r\n        var isAdaptiveMode = this._isShrinkView();\r\n        if (isAdaptiveMode !== this._currentAdaptiveMode) {\r\n            this._currentAdaptiveMode = isAdaptiveMode;\r\n            return true\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _updateValue: function(preventDefaultValue) {\r\n        var date = this.dateBoxValue();\r\n        if (!date && !preventDefaultValue) {\r\n            date = new Date;\r\n            uiDateUtils.normalizeTime(date)\r\n        }\r\n        this.callBase();\r\n        if (this._timeView) {\r\n            date && this._timeView.option(\"value\", date);\r\n            this._timeView.option(\"use24HourFormat\", this._is24HourFormat())\r\n        }\r\n    },\r\n    _isSmallScreen: function() {\r\n        return $(window).width() <= SHRINK_VIEW_SCREEN_WIDTH\r\n    },\r\n    _isShrinkView: function() {\r\n        return !this.dateBox.option(\"showAnalogClock\") || this.dateBox.option(\"adaptivityEnabled\") && this._isSmallScreen()\r\n    },\r\n    _getBoxItems: function() {\r\n        var items = [{\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            name: \"calendar\"\r\n        }];\r\n        if (!this._isShrinkView()) {\r\n            items.push({\r\n                ratio: 0,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                name: \"time\"\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    renderPopupContent: function() {\r\n        this.callBase();\r\n        this._currentAdaptiveMode = this._isShrinkView();\r\n        var $popupContent = this._getPopup().$content();\r\n        this._box = this.dateBox._createComponent($(\"<div>\").appendTo($popupContent), Box, {\r\n            direction: \"row\",\r\n            crossAlign: \"start\",\r\n            items: this._getBoxItems(),\r\n            itemTemplate: function(data) {\r\n                var $container = $(\"<div>\");\r\n                switch (data.name) {\r\n                    case \"calendar\":\r\n                        $container.append(this._widget.$element());\r\n                        if (this._isShrinkView()) {\r\n                            $container.append(this._timeView.$element())\r\n                        }\r\n                        break;\r\n                    case \"time\":\r\n                        $container.append(this._timeView.$element())\r\n                }\r\n                return $container\r\n            }.bind(this)\r\n        });\r\n        this._attachTabHandler()\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var calendarPopupConfig = this.callBase(_popupConfig),\r\n            result = extend(calendarPopupConfig, {\r\n                onShowing: function() {\r\n                    if (\"fallback\" === this._box.option(\"_layoutStrategy\")) {\r\n                        var clockMinWidth = this._getPopup().$content().find(\".dx-timeview-clock\").css(\"minWidth\");\r\n                        this._timeView.$element().css(\"maxWidth\", clockMinWidth)\r\n                    }\r\n                }.bind(this)\r\n            });\r\n        return result\r\n    },\r\n    getFirstPopupElement: function() {\r\n        return this._timeView._hourBox.$element().find(\"input\")\r\n    },\r\n    _attachTabHandler: function() {\r\n        var dateBox = this.dateBox,\r\n            handler = function(e) {\r\n                if (e.shiftKey) {\r\n                    e.preventDefault();\r\n                    dateBox.focus()\r\n                }\r\n            };\r\n        this._timeView._hourBox.registerKeyHandler(\"tab\", handler)\r\n    },\r\n    _preventFocusOnPopup: function(e) {\r\n        if (!$(e.target).hasClass(\"dx-texteditor-input\")) {\r\n            this.callBase.apply(this, arguments);\r\n            if (!this.dateBox._hasFocusClass()) {\r\n                this.dateBox.focus()\r\n            }\r\n        }\r\n    },\r\n    getValue: function() {\r\n        var date = this._widget.option(\"value\"),\r\n            time = this._timeView.option(\"value\");\r\n        date = date ? new Date(date) : new Date;\r\n        date.setHours(time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\r\n        return date\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._removeMinWidthTimer);\r\n        clearTimeout(this._repaintTimer);\r\n        this.callBase()\r\n    }\r\n});\r\nmodule.exports = CalendarWithTimeStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.strategy.calendar_with_time.js\n// module id = 803\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.time_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    Editor = require(\"../editor/editor\"),\r\n    NumberBox = require(\"../number_box\"),\r\n    SelectBox = require(\"../select_box\"),\r\n    ensureDefined = require(\"../../core/utils/common\").ensureDefined,\r\n    Box = require(\"../box\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    dateLocalization = require(\"../../localization/date\"),\r\n    uiDateUtils = require(\"./ui.date_utils\");\r\nvar TIMEVIEW_CLASS = \"dx-timeview\",\r\n    TIMEVIEW_CLOCK_CLASS = \"dx-timeview-clock\",\r\n    TIMEVIEW_FIELD_CLASS = \"dx-timeview-field\",\r\n    TIMEVIEW_HOURARROW_CLASS = \"dx-timeview-hourarrow\",\r\n    TIMEVIEW_TIME_SEPARATOR_CLASS = \"dx-timeview-time-separator\",\r\n    TIMEVIEW_FORMAT12_CLASS = \"dx-timeview-format12\",\r\n    TIMEVIEW_FORMAT12_AM = -1,\r\n    TIMEVIEW_FORMAT12_PM = 1,\r\n    TIMEVIEW_MINUTEARROW_CLASS = \"dx-timeview-minutearrow\";\r\nvar rotateArrow = function($arrow, angle, offset) {\r\n    cssRotate($arrow, angle, offset)\r\n};\r\nvar cssRotate = function($arrow, angle, offset) {\r\n    $arrow.css(\"transform\", \"rotate(\" + angle + \"deg) translate(0,\" + offset + \"px)\")\r\n};\r\nvar TimeView = Editor.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: new Date(Date.now()),\r\n            use24HourFormat: true,\r\n            _showClock: true,\r\n            _arrowOffset: 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 15\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 5\r\n            }\r\n        }])\r\n    },\r\n    _getValue: function() {\r\n        return this.option(\"value\") || new Date\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TIMEVIEW_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderBox();\r\n        this._updateTime()\r\n    },\r\n    _renderBox: function() {\r\n        var $box = $(\"<div>\").appendTo(this.$element()),\r\n            items = [];\r\n        if (this.option(\"_showClock\")) {\r\n            items.push({\r\n                ratio: 1,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: this._renderClock.bind(this)\r\n            })\r\n        }\r\n        items.push({\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: 50,\r\n            template: this._renderField.bind(this)\r\n        });\r\n        this._createComponent($box, Box, {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            direction: \"col\",\r\n            items: items\r\n        })\r\n    },\r\n    _renderClock: function(_, __, container) {\r\n        this._$hourArrow = $(\"<div>\").addClass(TIMEVIEW_HOURARROW_CLASS);\r\n        this._$minuteArrow = $(\"<div>\").addClass(TIMEVIEW_MINUTEARROW_CLASS);\r\n        var $container = $(container);\r\n        $container.addClass(TIMEVIEW_CLOCK_CLASS).append(this._$hourArrow).append(this._$minuteArrow);\r\n        this.setAria(\"role\", \"presentation\", $container)\r\n    },\r\n    _updateClock: function() {\r\n        var time = this._getValue(),\r\n            hourArrowAngle = time.getHours() / 12 * 360 + time.getMinutes() / 60 * 30,\r\n            minuteArrowAngle = time.getMinutes() / 60 * 360;\r\n        rotateArrow(this._$hourArrow, hourArrowAngle, this.option(\"_arrowOffset\"));\r\n        rotateArrow(this._$minuteArrow, minuteArrowAngle, this.option(\"_arrowOffset\"))\r\n    },\r\n    _getBoxItems: function(is12HourFormat) {\r\n        var items = [{\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return this._hourBox.$element()\r\n            }.bind(this)\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: $(\"<div>\").addClass(TIMEVIEW_TIME_SEPARATOR_CLASS).text(dateLocalization.getTimeSeparator())\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return this._minuteBox.$element()\r\n            }.bind(this)\r\n        }];\r\n        if (is12HourFormat) {\r\n            items.push({\r\n                ratio: 0,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: function() {\r\n                    return this._format12.$element()\r\n                }.bind(this)\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _renderField: function() {\r\n        var is12HourFormat = !this.option(\"use24HourFormat\");\r\n        this._createHourBox();\r\n        this._createMinuteBox();\r\n        if (is12HourFormat) {\r\n            this._createFormat12Box()\r\n        }\r\n        return this._createComponent($(\"<div>\").addClass(TIMEVIEW_FIELD_CLASS), Box, {\r\n            direction: \"row\",\r\n            align: \"center\",\r\n            crossAlign: \"center\",\r\n            items: this._getBoxItems(is12HourFormat)\r\n        }).$element()\r\n    },\r\n    _createHourBox: function() {\r\n        this._hourBox = this._createComponent($(\"<div>\"), NumberBox, extend({\r\n            min: -1,\r\n            max: 24,\r\n            value: this._getValue().getHours(),\r\n            onValueChanged: function(args) {\r\n                var newHours = this._normalizeHours((24 + args.value) % 24);\r\n                this._hourBox.option(\"value\", newHours);\r\n                var time = new Date(this._getValue());\r\n                time.setHours(this._denormalizeHours(newHours, args.value > args.previousValue));\r\n                uiDateUtils.normalizeTime(time);\r\n                this.option(\"value\", time)\r\n            }.bind(this)\r\n        }, this._getNumberBoxConfig()));\r\n        this._hourBox.setAria(\"label\", \"hours\")\r\n    },\r\n    _createMinuteBox: function() {\r\n        this._minuteBox = this._createComponent($(\"<div>\"), NumberBox, extend({\r\n            min: -1,\r\n            max: 60,\r\n            value: this._getValue().getMinutes(),\r\n            onValueChanged: function(args) {\r\n                var newMinutes = (60 + args.value) % 60;\r\n                this._minuteBox.option(\"value\", newMinutes);\r\n                var time = new Date(this._getValue());\r\n                time.setMinutes(newMinutes);\r\n                uiDateUtils.normalizeTime(time);\r\n                this.option(\"value\", time)\r\n            }.bind(this)\r\n        }, this._getNumberBoxConfig()));\r\n        this._minuteBox.setAria(\"label\", \"minutes\")\r\n    },\r\n    _createFormat12Box: function() {\r\n        this._format12 = this._createComponent($(\"<div>\").addClass(TIMEVIEW_FORMAT12_CLASS), SelectBox, extend({\r\n            items: [{\r\n                value: TIMEVIEW_FORMAT12_AM,\r\n                text: \"AM\"\r\n            }, {\r\n                value: TIMEVIEW_FORMAT12_PM,\r\n                text: \"PM\"\r\n            }],\r\n            valueExpr: \"value\",\r\n            displayExpr: \"text\",\r\n            onValueChanged: function(args) {\r\n                var hours = this._getValue().getHours(),\r\n                    time = new Date(this._getValue()),\r\n                    newHours = (hours + 12 * args.value) % 24;\r\n                time.setHours(newHours);\r\n                this.option(\"value\", time)\r\n            }.bind(this),\r\n            value: this._getValue().getHours() >= 12 ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM\r\n        }, {\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }));\r\n        this._format12.setAria(\"label\", \"type\")\r\n    },\r\n    _refreshFormat12: function() {\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return\r\n        }\r\n        var value = this._getValue(),\r\n            hours = value.getHours(),\r\n            isPM = hours >= 12;\r\n        this._format12._valueChangeActionSuppressed = true;\r\n        this._format12.option(\"value\", isPM ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM);\r\n        this._format12._valueChangeActionSuppressed = false\r\n    },\r\n    _getNumberBoxConfig: function() {\r\n        return extend({\r\n            showSpinButtons: true,\r\n            disabled: this.option(\"disabled\"),\r\n            valueFormat: function(value) {\r\n                return (value < 10 ? \"0\" : \"\") + value\r\n            }\r\n        }, {\r\n            stylingMode: this.option(\"stylingMode\")\r\n        })\r\n    },\r\n    _normalizeHours: function(hours) {\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return hours\r\n        }\r\n        return hours % 12 || 12\r\n    },\r\n    _denormalizeHours: function(hours, moveForward) {\r\n        hours = ensureDefined(hours, this._getValue().getHours());\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return hours\r\n        }\r\n        var isPM = this._format12.option(\"value\") === TIMEVIEW_FORMAT12_PM;\r\n        if (11 === hours && !moveForward) {\r\n            isPM = !isPM\r\n        }\r\n        return (isPM ? hours + 12 : hours) % 24\r\n    },\r\n    _updateField: function() {\r\n        if (this._hourBox) {\r\n            this._hourBox._valueChangeActionSuppressed = true;\r\n            this._hourBox.option(\"value\", this._normalizeHours(this._getValue().getHours()));\r\n            this._hourBox._valueChangeActionSuppressed = false\r\n        }\r\n        if (this._minuteBox) {\r\n            this._minuteBox._valueChangeActionSuppressed = true;\r\n            this._minuteBox.option(\"value\", this._getValue().getMinutes());\r\n            this._minuteBox._valueChangeActionSuppressed = false\r\n        }\r\n        this._refreshFormat12()\r\n    },\r\n    _updateTime: function() {\r\n        if (this.option(\"_showClock\")) {\r\n            this._updateClock()\r\n        }\r\n        this._updateField()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateTime()\r\n        }\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this._hourBox && this._hourBox.option(\"disabled\", value);\r\n        this._minuteBox && this._minuteBox.option(\"disabled\", value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._updateTime();\r\n                this.callBase(args);\r\n                break;\r\n            case \"_arrowOffset\":\r\n                break;\r\n            case \"use24HourFormat\":\r\n            case \"_showClock\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxTimeView\", TimeView);\r\nmodule.exports = TimeView;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.time_view.js\n// module id = 804\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.list.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    window = require(\"../../core/utils/window\").getWindow(),\r\n    List = require(\"../list\"),\r\n    DateBoxStrategy = require(\"./ui.date_box.strategy\"),\r\n    themes = require(\"../themes\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    isDate = require(\"../../core/utils/type\").isDate,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    dateUtils = require(\"./ui.date_utils\"),\r\n    dateLocalization = require(\"../../localization/date\"),\r\n    uiDateUtils = require(\"./ui.date_utils\");\r\nvar BOUNDARY_VALUES = {\r\n    min: new Date(0, 0, 0, 0, 0),\r\n    max: new Date(0, 0, 0, 23, 59)\r\n};\r\nvar ListStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"List\",\r\n    supportedKeys: function() {\r\n        return {\r\n            tab: function() {\r\n                if (this.option(\"opened\")) {\r\n                    this.close()\r\n                }\r\n            },\r\n            space: noop,\r\n            home: noop,\r\n            end: noop\r\n        }\r\n    },\r\n    getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            applyValueMode: \"instantly\"\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shorttime\"\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var result = extend(_popupConfig, {\r\n            width: this._getPopupWidth()\r\n        });\r\n        if (themes.isAndroid5()) {\r\n            extend(true, result, {\r\n                position: {\r\n                    offset: {\r\n                        h: -16,\r\n                        v: -10\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    useCurrentDateByDefault: function() {\r\n        return true\r\n    },\r\n    _getPopupWidth: function() {\r\n        var result = this.dateBox.$element().outerWidth();\r\n        if (themes.isAndroid5()) {\r\n            result += 32\r\n        }\r\n        return result\r\n    },\r\n    popupShowingHandler: function() {\r\n        this._dimensionChanged()\r\n    },\r\n    _renderWidget: function() {\r\n        this.callBase();\r\n        this._refreshItems()\r\n    },\r\n    _getWidgetName: function() {\r\n        return List\r\n    },\r\n    _getWidgetOptions: function() {\r\n        var keyboardProcessor = this.dateBox._keyboardProcessor;\r\n        return {\r\n            _keyboardProcessor: keyboardProcessor ? keyboardProcessor.attachChildProcessor() : null,\r\n            itemTemplate: this._timeListItemTemplate.bind(this),\r\n            onItemClick: this._listItemClickHandler.bind(this),\r\n            tabIndex: -1,\r\n            onFocusedItemChanged: this._refreshActiveDescendant.bind(this),\r\n            selectionMode: \"single\"\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function(e) {\r\n        this.dateBox.setAria(\"activedescendant\", \"\");\r\n        this.dateBox.setAria(\"activedescendant\", e.actionValue)\r\n    },\r\n    _refreshItems: function() {\r\n        this._widgetItems = this._getTimeListItems();\r\n        this._widget.option(\"items\", this._widgetItems)\r\n    },\r\n    renderOpenedState: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._widget.option(\"focusedElement\", null);\r\n        this._setSelectedItemsByValue();\r\n        if (this._widget.option(\"templatesRenderAsynchronously\")) {\r\n            this._asyncScrollTimeout = setTimeout(this._scrollToSelectedItem.bind(this))\r\n        } else {\r\n            this._scrollToSelectedItem()\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._asyncScrollTimeout)\r\n    },\r\n    _updateValue: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._refreshItems();\r\n        this._setSelectedItemsByValue();\r\n        this._scrollToSelectedItem()\r\n    },\r\n    _setSelectedItemsByValue: function() {\r\n        var value = this.dateBoxValue();\r\n        var dateIndex = this._getDateIndex(value);\r\n        if (dateIndex === -1) {\r\n            this._widget.option(\"selectedItems\", [])\r\n        } else {\r\n            this._widget.option(\"selectedIndex\", dateIndex)\r\n        }\r\n    },\r\n    _scrollToSelectedItem: function() {\r\n        this._widget.scrollToItem(this._widget.option(\"selectedIndex\"))\r\n    },\r\n    _getDateIndex: function(date) {\r\n        var result = -1;\r\n        for (var i = 0, n = this._widgetItems.length; i < n; i++) {\r\n            if (this._areDatesEqual(date, this._widgetItems[i])) {\r\n                result = i;\r\n                break\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _areDatesEqual: function(first, second) {\r\n        return isDate(first) && isDate(second) && first.getHours() === second.getHours() && first.getMinutes() === second.getMinutes()\r\n    },\r\n    _getTimeListItems: function() {\r\n        var min = this.dateBox.dateOption(\"min\") || this._getBoundaryDate(\"min\"),\r\n            max = this.dateBox.dateOption(\"max\") || this._getBoundaryDate(\"max\"),\r\n            value = this.dateBox.dateOption(\"value\") || null,\r\n            delta = max - min,\r\n            minutes = min.getMinutes() % this.dateBox.option(\"interval\");\r\n        if (delta < 0) {\r\n            return []\r\n        }\r\n        if (delta > dateUtils.ONE_DAY) {\r\n            delta = dateUtils.ONE_DAY\r\n        }\r\n        if (value - min < dateUtils.ONE_DAY) {\r\n            return this._getRangeItems(min, new Date(min), delta)\r\n        }\r\n        min = this._getBoundaryDate(\"min\");\r\n        min.setMinutes(minutes);\r\n        if (value && Math.abs(value - max) < dateUtils.ONE_DAY) {\r\n            delta = (60 * max.getHours() + Math.abs(max.getMinutes() - minutes)) * dateUtils.ONE_MINUTE\r\n        }\r\n        return this._getRangeItems(min, new Date(min), delta)\r\n    },\r\n    _getRangeItems: function(startValue, currentValue, rangeDuration) {\r\n        var rangeItems = [];\r\n        var interval = this.dateBox.option(\"interval\");\r\n        while (currentValue - startValue < rangeDuration) {\r\n            rangeItems.push(new Date(currentValue));\r\n            currentValue.setMinutes(currentValue.getMinutes() + interval)\r\n        }\r\n        return rangeItems\r\n    },\r\n    _getBoundaryDate: function(boundary) {\r\n        var boundaryValue = BOUNDARY_VALUES[boundary],\r\n            currentValue = this.dateBox.dateOption(\"value\") || new Date;\r\n        return new Date(currentValue.getFullYear(), currentValue.getMonth(), currentValue.getDate(), boundaryValue.getHours(), boundaryValue.getMinutes())\r\n    },\r\n    _timeListItemTemplate: function(itemData) {\r\n        var displayFormat = this.dateBox.option(\"displayFormat\");\r\n        return dateLocalization.format(itemData, this.getDisplayFormat(displayFormat))\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        this.dateBox.option(\"opened\", false);\r\n        var date = this.dateBox.option(\"value\");\r\n        if (date) {\r\n            date = new Date(date)\r\n        } else {\r\n            date = new Date;\r\n            uiDateUtils.normalizeTime(date)\r\n        }\r\n        date.setHours(e.itemData.getHours());\r\n        date.setMinutes(e.itemData.getMinutes());\r\n        date.setSeconds(e.itemData.getSeconds());\r\n        this.dateBoxValue(date)\r\n    },\r\n    attachKeyboardEvents: function(keyboardProcessor) {\r\n        var child = keyboardProcessor.attachChildProcessor();\r\n        if (this._widget) {\r\n            this._widget.option(\"_keyboardProcessor\", child)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._getPopup() && this._updatePopupDimensions()\r\n    },\r\n    _updatePopupDimensions: function() {\r\n        this._updatePopupWidth();\r\n        this._updatePopupHeight()\r\n    },\r\n    _updatePopupWidth: function() {\r\n        this.dateBox._setPopupOption(\"width\", this._getPopupWidth())\r\n    },\r\n    _updatePopupHeight: function() {\r\n        this.dateBox._setPopupOption(\"height\", \"auto\");\r\n        var popupHeight = this._widget.$element().outerHeight();\r\n        var maxHeight = .45 * $(window).height();\r\n        this.dateBox._setPopupOption(\"height\", Math.min(popupHeight, maxHeight));\r\n        this.dateBox._timeList && this.dateBox._timeList.updateDimensions()\r\n    }\r\n});\r\nmodule.exports = ListStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/date_box/ui.date_box.strategy.list.js\n// module id = 805\n// module chunks = 1 3 4","/**\r\n * DevExtreme (ui/validation_summary.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar registerComponent = require(\"../core/component_registrator\"),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    grep = require(\"../core/utils/common\").grep,\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    iteratorUtils = require(\"../core/utils/iterator\"),\r\n    ValidationMixin = require(\"./validation/validation_mixin\"),\r\n    ValidationEngine = require(\"./validation_engine\"),\r\n    CollectionWidget = require(\"./collection/ui.collection_widget.edit\");\r\nvar VALIDATION_SUMMARY_CLASS = \"dx-validationsummary\",\r\n    ITEM_CLASS = VALIDATION_SUMMARY_CLASS + \"-item\",\r\n    ITEM_DATA_KEY = VALIDATION_SUMMARY_CLASS + \"-item-data\";\r\nvar ValidationSummary = CollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            focusStateEnabled: false,\r\n            noDataText: null\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initGroupRegistration()\r\n    },\r\n    _initGroupRegistration: function() {\r\n        var group = this._findGroup(),\r\n            groupConfig = ValidationEngine.addGroup(group);\r\n        this._unsubscribeGroup();\r\n        this._groupWasInit = true;\r\n        this._validationGroup = group;\r\n        this.groupSubscription = this._groupValidationHandler.bind(this);\r\n        groupConfig.on(\"validated\", this.groupSubscription)\r\n    },\r\n    _unsubscribeGroup: function() {\r\n        var groupConfig = ValidationEngine.getGroupConfig(this._validationGroup);\r\n        groupConfig && groupConfig.off(\"validated\", this.groupSubscription)\r\n    },\r\n    _getOrderedItems: function(validators, items) {\r\n        var orderedItems = [];\r\n        iteratorUtils.each(validators, function(_, validator) {\r\n            var firstItem = grep(items, function(item) {\r\n                if (item.validator === validator) {\r\n                    return true\r\n                }\r\n            })[0];\r\n            if (firstItem) {\r\n                orderedItems.push(firstItem)\r\n            }\r\n        });\r\n        return orderedItems\r\n    },\r\n    _groupValidationHandler: function(params) {\r\n        var that = this,\r\n            items = that._getOrderedItems(params.validators, iteratorUtils.map(params.brokenRules, function(rule) {\r\n                return {\r\n                    text: rule.message,\r\n                    validator: rule.validator\r\n                }\r\n            }));\r\n        that.validators = params.validators;\r\n        iteratorUtils.each(that.validators, function(_, validator) {\r\n            if (validator._validationSummary !== this) {\r\n                var handler = that._itemValidationHandler.bind(that),\r\n                    disposingHandler = function() {\r\n                        validator.off(\"validated\", handler);\r\n                        validator._validationSummary = null;\r\n                        handler = null\r\n                    };\r\n                validator.on(\"validated\", handler);\r\n                validator.on(\"disposing\", disposingHandler);\r\n                validator._validationSummary = this\r\n            }\r\n        });\r\n        that.option(\"items\", items)\r\n    },\r\n    _itemValidationHandler: function(itemValidationResult) {\r\n        var elementIndex, items = this.option(\"items\"),\r\n            isValid = itemValidationResult.isValid,\r\n            replacementFound = false,\r\n            newMessage = itemValidationResult.brokenRule && itemValidationResult.brokenRule.message,\r\n            validator = itemValidationResult.validator;\r\n        iteratorUtils.each(items, function(index, item) {\r\n            if (item.validator === validator) {\r\n                if (isValid) {\r\n                    elementIndex = index\r\n                } else {\r\n                    item.text = newMessage\r\n                }\r\n                replacementFound = true;\r\n                return false\r\n            }\r\n        });\r\n        if (isValid ^ replacementFound) {\r\n            return\r\n        }\r\n        if (isValid) {\r\n            items.splice(elementIndex, 1)\r\n        } else {\r\n            items.push({\r\n                text: newMessage,\r\n                validator: validator\r\n            })\r\n        }\r\n        items = this._getOrderedItems(this.validators, items);\r\n        this.option(\"items\", items)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(VALIDATION_SUMMARY_CLASS);\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"validationGroup\":\r\n                this._initGroupRegistration();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return ITEM_DATA_KEY\r\n    },\r\n    _postprocessRenderItem: function(params) {\r\n        eventsEngine.on(params.itemElement, \"click\", function() {\r\n            params.itemData.validator && params.itemData.validator.focus && params.itemData.validator.focus()\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._unsubscribeGroup()\r\n    }\r\n}).include(ValidationMixin);\r\nregisterComponent(\"dxValidationSummary\", ValidationSummary);\r\nmodule.exports = ValidationSummary;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/validation_summary.js\n// module id = 806\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/form.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./form/ui.form\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/form.js\n// module id = 818\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/form/ui.form.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    utils = require(\"../../core/utils/common\"),\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    stringUtils = require(\"../../core/utils/string\"),\r\n    errors = require(\"../widget/ui.errors\"),\r\n    browser = require(\"../../core/utils/browser\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    Widget = require(\"../widget/ui.widget\"),\r\n    windowUtils = require(\"../../core/utils/window\"),\r\n    ValidationEngine = require(\"../validation_engine\"),\r\n    LayoutManager = require(\"./ui.form.layout_manager\"),\r\n    TabPanel = require(\"../tab_panel\"),\r\n    Scrollable = require(\"../scroll_view/ui.scrollable\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred,\r\n    themes = require(\"../themes\");\r\nrequire(\"../validation_summary\");\r\nrequire(\"../validation_group\");\r\nvar FORM_CLASS = \"dx-form\",\r\n    FIELD_ITEM_CLASS = \"dx-field-item\",\r\n    FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\",\r\n    FORM_GROUP_CLASS = \"dx-form-group\",\r\n    FORM_GROUP_CONTENT_CLASS = \"dx-form-group-content\",\r\n    FORM_GROUP_WITH_CAPTION_CLASS = \"dx-form-group-with-caption\",\r\n    FORM_GROUP_CAPTION_CLASS = \"dx-form-group-caption\",\r\n    HIDDEN_LABEL_CLASS = \"dx-layout-manager-hidden-label\",\r\n    FIELD_ITEM_LABEL_CLASS = \"dx-field-item-label\",\r\n    FIELD_ITEM_LABEL_CONTENT_CLASS = \"dx-field-item-label-content\",\r\n    FIELD_ITEM_TAB_CLASS = \"dx-field-item-tab\",\r\n    FORM_FIELD_ITEM_COL_CLASS = \"dx-col-\",\r\n    GROUP_COL_COUNT_CLASS = \"dx-group-colcount-\",\r\n    FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\",\r\n    FORM_VALIDATION_SUMMARY = \"dx-form-validation-summary\",\r\n    WIDGET_CLASS = \"dx-widget\",\r\n    FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar Form = Widget.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._cachedColCountOptions = [];\r\n        this._groupsColCount = []\r\n    },\r\n    _initOptions: function(options) {\r\n        if (!(\"screenByWidth\" in options)) {\r\n            options.screenByWidth = windowUtils.defaultScreenFactorFunc\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            formID: \"dx-\" + new Guid,\r\n            formData: {},\r\n            colCount: 1,\r\n            screenByWidth: null,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            readOnly: false,\r\n            onFieldDataChanged: null,\r\n            customizeItem: null,\r\n            onEditorEnterKey: null,\r\n            minColWidth: 200,\r\n            alignItemLabels: true,\r\n            alignItemLabelsInAllGroups: true,\r\n            showColonAfterLabel: true,\r\n            showRequiredMark: true,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\"),\r\n            showValidationSummary: false,\r\n            items: void 0,\r\n            scrollingEnabled: false,\r\n            validationGroup: void 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isMaterial()\r\n            },\r\n            options: {\r\n                showColonAfterLabel: false,\r\n                labelLocation: \"top\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            formData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _getColCount: function($element) {\r\n        var $cols, index = 0,\r\n            isColsExist = true;\r\n        while (isColsExist) {\r\n            $cols = $element.find(\".\" + FORM_FIELD_ITEM_COL_CLASS + index);\r\n            if (!$cols.length) {\r\n                isColsExist = false\r\n            } else {\r\n                index++\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    _createHiddenElement: function(rootLayoutManager) {\r\n        this._$hiddenElement = $(\"<div>\").addClass(WIDGET_CLASS).addClass(HIDDEN_LABEL_CLASS).appendTo(\"body\");\r\n        var $hiddenLabel = rootLayoutManager._renderLabel({\r\n            text: \" \",\r\n            location: this.option(\"labelLocation\")\r\n        }).appendTo(this._$hiddenElement);\r\n        this._hiddenLabelText = $hiddenLabel.find(\".\" + FIELD_ITEM_LABEL_TEXT_CLASS)[0]\r\n    },\r\n    _removeHiddenElement: function() {\r\n        this._$hiddenElement.remove();\r\n        this._hiddenLabelText = null\r\n    },\r\n    _getLabelWidthByText: function(text) {\r\n        this._hiddenLabelText.innerHTML = text;\r\n        return this._hiddenLabelText.offsetWidth\r\n    },\r\n    _getLabelsSelectorByCol: function(index, options) {\r\n        options = options || {};\r\n        var fieldItemClass = options.inOneColumn ? FIELD_ITEM_CLASS : FORM_FIELD_ITEM_COL_CLASS + index,\r\n            cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\" + FIELD_ITEM_TAB_CLASS + \")\" : \"\",\r\n            childLabelContentSelector = \"> .\" + FIELD_ITEM_LABEL_CLASS + \" > .\" + FIELD_ITEM_LABEL_CONTENT_CLASS;\r\n        return \".\" + fieldItemClass + cssExcludeTabbedSelector + childLabelContentSelector\r\n    },\r\n    _getLabelText: function(labelText) {\r\n        var child, i, length = labelText.children.length,\r\n            result = \"\";\r\n        for (i = 0; i < length; i++) {\r\n            child = labelText.children[i];\r\n            result += !stringUtils.isEmpty(child.innerText) ? child.innerText : child.innerHTML\r\n        }\r\n        return result\r\n    },\r\n    _applyLabelsWidthByCol: function($container, index, options) {\r\n        var labelWidth, i, $labelTexts = $container.find(this._getLabelsSelectorByCol(index, options)),\r\n            $labelTextsLength = $labelTexts.length,\r\n            maxWidth = 0;\r\n        for (i = 0; i < $labelTextsLength; i++) {\r\n            labelWidth = this._getLabelWidthByText(this._getLabelText($labelTexts[i]));\r\n            if (labelWidth > maxWidth) {\r\n                maxWidth = labelWidth\r\n            }\r\n        }\r\n        for (i = 0; i < $labelTextsLength; i++) {\r\n            $labelTexts[i].style.width = maxWidth + \"px\"\r\n        }\r\n    },\r\n    _applyLabelsWidth: function($container, excludeTabbed, inOneColumn, colCount) {\r\n        colCount = inOneColumn ? 1 : colCount || this._getColCount($container);\r\n        var i, applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed,\r\n            inOneColumn: inOneColumn\r\n        };\r\n        for (i = 0; i < colCount; i++) {\r\n            this._applyLabelsWidthByCol($container, i, applyLabelsOptions)\r\n        }\r\n    },\r\n    _getGroupElementsInColumn: function($container, columnIndex, colCount) {\r\n        var cssColCountSelector = typeUtils.isDefined(colCount) ? \".\" + GROUP_COL_COUNT_CLASS + colCount : \"\",\r\n            groupSelector = \".\" + FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + FIELD_ITEM_CONTENT_CLASS + \" > .\" + FORM_GROUP_CLASS + cssColCountSelector;\r\n        return $container.find(groupSelector)\r\n    },\r\n    _applyLabelsWidthWithGroups: function($container, colCount, excludeTabbed) {\r\n        var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\r\n        if (alignItemLabelsInAllGroups) {\r\n            this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed)\r\n        } else {\r\n            var i, $groups = this.$element().find(\".\" + FORM_GROUP_CLASS);\r\n            for (i = 0; i < $groups.length; i++) {\r\n                this._applyLabelsWidth($groups.eq(i), excludeTabbed)\r\n            }\r\n        }\r\n    },\r\n    _applyLabelsWidthWithNestedGroups: function($container, colCount, excludeTabbed) {\r\n        var colIndex, groupsColIndex, groupColIndex, $groupsByCol, applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed\r\n        };\r\n        for (colIndex = 0; colIndex < colCount; colIndex++) {\r\n            $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\r\n            this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions);\r\n            for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\r\n                $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\r\n                var groupColCount = this._getColCount($groupsByCol);\r\n                for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\r\n                    this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _alignLabelsInColumn: function(options) {\r\n        if (!windowUtils.hasWindow()) {\r\n            return\r\n        }\r\n        this._createHiddenElement(options.layoutManager);\r\n        if (options.inOneColumn) {\r\n            this._applyLabelsWidth(options.$container, options.excludeTabbed, true)\r\n        } else {\r\n            if (this._checkGrouping(options.items)) {\r\n                this._applyLabelsWidthWithGroups(options.$container, options.layoutManager._getColCount(), options.excludeTabbed)\r\n            } else {\r\n                this._applyLabelsWidth(options.$container, options.excludeTabbed, false, options.layoutManager._getColCount())\r\n            }\r\n        }\r\n        this._removeHiddenElement()\r\n    },\r\n    _prepareFormData: function() {\r\n        if (!typeUtils.isDefined(this.option(\"formData\"))) {\r\n            this.option(\"formData\", {})\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this._clearCachedInstances();\r\n        this._prepareFormData();\r\n        this.$element().addClass(FORM_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"form\", this.$element());\r\n        if (this.option(\"scrollingEnabled\")) {\r\n            this._renderScrollable()\r\n        }\r\n        this._renderLayout();\r\n        this._renderValidationSummary();\r\n        this._attachSyncSubscriptions();\r\n        this._cachedScreenFactor = this._getCurrentScreenFactor()\r\n    },\r\n    _getCurrentScreenFactor: function() {\r\n        return windowUtils.hasWindow() ? windowUtils.getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\"\r\n    },\r\n    _clearCachedInstances: function() {\r\n        this._editorInstancesByField = {};\r\n        this._cachedLayoutManagers = []\r\n    },\r\n    _alignLabels: function(layoutManager, inOneColumn) {\r\n        this._alignLabelsInColumn({\r\n            $container: this.$element(),\r\n            layoutManager: layoutManager,\r\n            excludeTabbed: true,\r\n            items: this.option(\"items\"),\r\n            inOneColumn: inOneColumn\r\n        })\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._groupsColCount = [];\r\n        this._cachedColCountOptions = [];\r\n        delete this._cachedScreenFactor\r\n    },\r\n    _renderScrollable: function() {\r\n        var useNativeScrolling = this.option(\"useNativeScrolling\");\r\n        this._scrollable = new Scrollable(this.$element(), {\r\n            useNative: !!useNativeScrolling,\r\n            useSimulatedScrollbar: !useNativeScrolling,\r\n            useKeyboard: false,\r\n            direction: \"both\",\r\n            bounceEnabled: false\r\n        })\r\n    },\r\n    _getContent: function() {\r\n        return this.option(\"scrollingEnabled\") ? this._scrollable.$content() : this.$element()\r\n    },\r\n    _renderValidationSummary: function() {\r\n        var $validationSummary = this.$element().find(\".\" + FORM_VALIDATION_SUMMARY);\r\n        if ($validationSummary.length > 0) {\r\n            $validationSummary.remove()\r\n        }\r\n        if (this.option(\"showValidationSummary\")) {\r\n            $(\"<div>\").addClass(FORM_VALIDATION_SUMMARY).dxValidationSummary({\r\n                validationGroup: this._getValidationGroup()\r\n            }).appendTo(this._getContent())\r\n        }\r\n    },\r\n    _prepareItems: function(items, isTabbed) {\r\n        if (items) {\r\n            var i, item, clonedItem, that = this,\r\n                extendedItems = [];\r\n            for (i = 0; i < items.length; i++) {\r\n                item = items[i];\r\n                clonedItem = typeUtils.isObject(item) ? extend({}, item) : item;\r\n                that._prepareGroupItem(clonedItem);\r\n                that._prepareTabbedItem(clonedItem);\r\n                that._prepareItemTemplate(clonedItem);\r\n                if (typeUtils.isObject(clonedItem)) {\r\n                    if (isTabbed) {\r\n                        clonedItem.cssItemClass = FIELD_ITEM_TAB_CLASS\r\n                    }\r\n                    clonedItem.items = this._prepareItems(clonedItem.items, isTabbed)\r\n                }\r\n                extendedItems.push(clonedItem)\r\n            }\r\n            return extendedItems\r\n        }\r\n    },\r\n    _prepareGroupItem: function(item) {\r\n        if (\"group\" === item.itemType) {\r\n            item.alignItemLabels = utils.ensureDefined(item.alignItemLabels, true);\r\n            if (item.template) {\r\n                item.groupContentTemplate = this._getTemplate(item.template)\r\n            }\r\n            item.template = this._itemGroupTemplate.bind(this, item)\r\n        }\r\n    },\r\n    _prepareTabbedItem: function(item) {\r\n        if (\"tabbed\" === item.itemType) {\r\n            item.template = this._itemTabbedTemplate.bind(this, item);\r\n            item.tabs = this._prepareItems(item.tabs, true)\r\n        }\r\n    },\r\n    _prepareItemTemplate: function(item) {\r\n        if (item.template) {\r\n            item.template = this._getTemplate(item.template)\r\n        }\r\n    },\r\n    _checkGrouping: function(items) {\r\n        if (items) {\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                if (\"group\" === item.itemType) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        var that = this,\r\n            items = that.option(\"items\"),\r\n            $content = that._getContent();\r\n        items = that._prepareItems(items);\r\n        that._rootLayoutManager = that._renderLayoutManager(items, $content, {\r\n            colCount: that.option(\"colCount\"),\r\n            alignItemLabels: that.option(\"alignItemLabels\"),\r\n            screenByWidth: this.option(\"screenByWidth\"),\r\n            colCountByScreen: this.option(\"colCountByScreen\"),\r\n            onLayoutChanged: function(inOneColumn) {\r\n                that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn)\r\n            },\r\n            onContentReady: function(e) {\r\n                that._alignLabels(e.component, e.component.isSingleColumnMode())\r\n            }\r\n        })\r\n    },\r\n    _itemTabbedTemplate: function(item, e, $container) {\r\n        var that = this,\r\n            $tabPanel = $(\"<div>\").appendTo($container),\r\n            tabPanelOptions = extend({}, item.tabPanelOptions, {\r\n                dataSource: item.tabs,\r\n                onItemRendered: function(args) {\r\n                    domUtils.triggerShownEvent(args.itemElement)\r\n                },\r\n                itemTemplate: function(itemData, e, container) {\r\n                    var layoutManager, $container = $(container),\r\n                        alignItemLabels = utils.ensureDefined(itemData.alignItemLabels, true);\r\n                    layoutManager = that._renderLayoutManager(itemData.items, $container, {\r\n                        colCount: itemData.colCount,\r\n                        alignItemLabels: alignItemLabels,\r\n                        screenByWidth: this.option(\"screenByWidth\"),\r\n                        colCountByScreen: itemData.colCountByScreen,\r\n                        cssItemClass: itemData.cssItemClass,\r\n                        onLayoutChanged: function(inOneColumn) {\r\n                            that._alignLabelsInColumn.bind(that)({\r\n                                $container: $container,\r\n                                layoutManager: layoutManager,\r\n                                items: itemData.items,\r\n                                inOneColumn: inOneColumn\r\n                            })\r\n                        }\r\n                    });\r\n                    if (alignItemLabels) {\r\n                        that._alignLabelsInColumn.bind(that)({\r\n                            $container: $container,\r\n                            layoutManager: layoutManager,\r\n                            items: itemData.items,\r\n                            inOneColumn: layoutManager.isSingleColumnMode()\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        that._createComponent($tabPanel, TabPanel, tabPanelOptions)\r\n    },\r\n    _itemGroupTemplate: function(item, e, $container) {\r\n        var $groupContent, colCount, layoutManager, $group = $(\"<div>\").toggleClass(FORM_GROUP_WITH_CAPTION_CLASS, typeUtils.isDefined(item.caption) && item.caption.length).addClass(FORM_GROUP_CLASS).appendTo($container);\r\n        if (item.caption) {\r\n            $(\"<span>\").addClass(FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group)\r\n        }\r\n        $groupContent = $(\"<div>\").addClass(FORM_GROUP_CONTENT_CLASS).appendTo($group);\r\n        if (item.groupContentTemplate) {\r\n            var data = {\r\n                formData: this.option(\"formData\"),\r\n                component: this\r\n            };\r\n            item.groupContentTemplate.render({\r\n                model: data,\r\n                container: domUtils.getPublicElement($groupContent)\r\n            })\r\n        } else {\r\n            layoutManager = this._renderLayoutManager(item.items, $groupContent, {\r\n                colCount: item.colCount,\r\n                colCountByScreen: item.colCountByScreen,\r\n                alignItemLabels: item.alignItemLabels,\r\n                cssItemClass: item.cssItemClass\r\n            });\r\n            colCount = layoutManager._getColCount();\r\n            if (inArray(colCount, this._groupsColCount) === -1) {\r\n                this._groupsColCount.push(colCount)\r\n            }\r\n            $group.addClass(GROUP_COL_COUNT_CLASS + colCount)\r\n        }\r\n    },\r\n    _renderLayoutManager: function(items, $rootElement, options) {\r\n        var instance, $element = $(\"<div>\"),\r\n            that = this,\r\n            config = that._getLayoutManagerConfig(items, options),\r\n            baseColCountByScreen = {\r\n                lg: options.colCount,\r\n                md: options.colCount,\r\n                sm: options.colCount,\r\n                xs: 1\r\n            };\r\n        that._cachedColCountOptions.push({\r\n            colCountByScreen: extend(baseColCountByScreen, options.colCountByScreen)\r\n        });\r\n        $element.appendTo($rootElement);\r\n        instance = that._createComponent($element, \"dxLayoutManager\", config);\r\n        instance.on(\"autoColCountChanged\", function() {\r\n            that._refresh()\r\n        });\r\n        that._cachedLayoutManagers.push(instance);\r\n        return instance\r\n    },\r\n    _getValidationGroup: function() {\r\n        return this.option(\"validationGroup\") || this\r\n    },\r\n    _getLayoutManagerConfig: function(items, options) {\r\n        var that = this,\r\n            baseConfig = {\r\n                form: that,\r\n                validationGroup: that._getValidationGroup(),\r\n                showRequiredMark: that.option(\"showRequiredMark\"),\r\n                showOptionalMark: that.option(\"showOptionalMark\"),\r\n                requiredMark: that.option(\"requiredMark\"),\r\n                optionalMark: that.option(\"optionalMark\"),\r\n                requiredMessage: that.option(\"requiredMessage\"),\r\n                screenByWidth: that.option(\"screenByWidth\"),\r\n                layoutData: that.option(\"formData\"),\r\n                labelLocation: that.option(\"labelLocation\"),\r\n                customizeItem: that.option(\"customizeItem\"),\r\n                minColWidth: that.option(\"minColWidth\"),\r\n                showColonAfterLabel: that.option(\"showColonAfterLabel\"),\r\n                onEditorEnterKey: that.option(\"onEditorEnterKey\"),\r\n                onFieldDataChanged: function(args) {\r\n                    if (!that._isDataUpdating) {\r\n                        that._triggerOnFieldDataChanged(args)\r\n                    }\r\n                },\r\n                validationBoundary: that.option(\"scrollingEnabled\") ? that.$element() : void 0\r\n            };\r\n        return extend(baseConfig, {\r\n            items: items,\r\n            onContentReady: function(args) {\r\n                that._updateEditorInstancesFromLayoutManager(args.component._editorInstancesByField);\r\n                options.onContentReady && options.onContentReady(args)\r\n            },\r\n            colCount: options.colCount,\r\n            alignItemLabels: options.alignItemLabels,\r\n            cssItemClass: options.cssItemClass,\r\n            colCountByScreen: options.colCountByScreen,\r\n            onLayoutChanged: options.onLayoutChanged,\r\n            width: options.width\r\n        })\r\n    },\r\n    _updateEditorInstancesFromLayoutManager: function(instancesByDataFields) {\r\n        extend(this._editorInstancesByField, instancesByDataFields)\r\n    },\r\n    _createComponent: function($element, type, config) {\r\n        var that = this;\r\n        config = config || {};\r\n        that._extendConfig(config, {\r\n            readOnly: that.option(\"readOnly\")\r\n        });\r\n        return that.callBase($element, type, config)\r\n    },\r\n    _attachSyncSubscriptions: function() {\r\n        var that = this;\r\n        that.off(\"optionChanged\").on(\"optionChanged\", function(args) {\r\n            var optionFullName = args.fullName;\r\n            if (\"formData\" === optionFullName) {\r\n                if (!typeUtils.isDefined(args.value)) {\r\n                    that._options.formData = args.value = {}\r\n                }\r\n                that._triggerOnFieldDataChangedByDataSet(args.value)\r\n            }\r\n            if (that._cachedLayoutManagers.length) {\r\n                each(that._cachedLayoutManagers, function(index, layoutManager) {\r\n                    if (\"formData\" === optionFullName) {\r\n                        that._isDataUpdating = true;\r\n                        layoutManager.option(\"layoutData\", args.value);\r\n                        that._isDataUpdating = false\r\n                    }\r\n                    if (\"readOnly\" === args.name || \"disabled\" === args.name) {\r\n                        layoutManager.option(optionFullName, args.value)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var rootNameOfComplexOption = this._getRootLevelOfExpectedComplexOption(args.fullName, [\"formData\", \"items\"]);\r\n        if (rootNameOfComplexOption) {\r\n            this._customHandlerOfComplexOption(args, rootNameOfComplexOption);\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"formData\":\r\n                if (!this.option(\"items\")) {\r\n                    this._invalidate()\r\n                } else {\r\n                    if (typeUtils.isEmptyObject(args.value)) {\r\n                        this._resetValues()\r\n                    }\r\n                }\r\n                break;\r\n            case \"items\":\r\n            case \"colCount\":\r\n            case \"onFieldDataChanged\":\r\n            case \"onEditorEnterKey\":\r\n            case \"labelLocation\":\r\n            case \"alignItemLabels\":\r\n            case \"showColonAfterLabel\":\r\n            case \"customizeItem\":\r\n            case \"alignItemLabelsInAllGroups\":\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n            case \"requiredMessage\":\r\n            case \"scrollingEnabled\":\r\n            case \"formID\":\r\n            case \"colCountByScreen\":\r\n            case \"screenByWidth\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationSummary\":\r\n                this._renderValidationSummary();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._rootLayoutManager.option(args.name, args.value);\r\n                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (args.value) {\r\n                    domUtils.triggerShownEvent(this.$element())\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getRootLevelOfExpectedComplexOption: function(fullOptionName, expectedRootNames) {\r\n        var result, splitFullName = fullOptionName.split(\".\");\r\n        if (splitFullName.length > 1) {\r\n            var i, rootOptionName = splitFullName[0];\r\n            for (i = 0; i < expectedRootNames.length; i++) {\r\n                if (rootOptionName.search(expectedRootNames[i]) !== -1) {\r\n                    result = expectedRootNames[i]\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _customHandlerOfComplexOption: function(args, rootOptionName) {\r\n        var nameParts = args.fullName.split(\".\");\r\n        switch (rootOptionName) {\r\n            case \"items\":\r\n                var instance, itemPath = this._getItemPath(nameParts),\r\n                    item = this.option(itemPath);\r\n                if (args.fullName.search(\"editorOptions\") !== -1) {\r\n                    instance = this.getEditor(item.dataField) || this.getEditor(item.name);\r\n                    instance && instance.option(item.editorOptions)\r\n                }\r\n                if (!instance && item) {\r\n                    var items, name = args.fullName.replace(itemPath + \".\", \"\");\r\n                    this._changeItemOption(item, name, args.value);\r\n                    items = this._generateItemsFromData(this.option(\"items\"));\r\n                    this.option(\"items\", items)\r\n                }\r\n                break;\r\n            case \"formData\":\r\n                var dataField = nameParts.slice(1).join(\".\"),\r\n                    editor = this.getEditor(dataField);\r\n                if (editor) {\r\n                    editor.option(\"value\", args.value)\r\n                } else {\r\n                    this._triggerOnFieldDataChanged({\r\n                        dataField: dataField,\r\n                        value: args.value\r\n                    })\r\n                }\r\n        }\r\n    },\r\n    _getItemPath: function(nameParts) {\r\n        var i, itemPath = nameParts[0];\r\n        for (i = 1; i < nameParts.length; i++) {\r\n            if (nameParts[i].search(\"items|tabs\") !== -1) {\r\n                itemPath += \".\" + nameParts[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        return itemPath\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _triggerOnFieldDataChangedByDataSet: function(data) {\r\n        var that = this;\r\n        if (data && typeUtils.isObject(data)) {\r\n            each(data, function(dataField, value) {\r\n                that._triggerOnFieldDataChanged({\r\n                    dataField: dataField,\r\n                    value: value\r\n                })\r\n            })\r\n        }\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        if (typeUtils.isDefined(this.option(\"formData\"))) {\r\n            var editor = this.getEditor(dataField);\r\n            this.option(\"formData.\" + dataField, value);\r\n            if (editor) {\r\n                var editorValue = editor.option(\"value\");\r\n                if (editorValue !== value) {\r\n                    editor.option(\"value\", value)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _generateItemsFromData: function(items) {\r\n        var formData = this.option(\"formData\"),\r\n            result = [];\r\n        if (!items && typeUtils.isDefined(formData)) {\r\n            each(formData, function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            })\r\n        }\r\n        if (items) {\r\n            each(items, function(index, item) {\r\n                if (typeUtils.isObject(item)) {\r\n                    result.push(item)\r\n                } else {\r\n                    result.push({\r\n                        dataField: item\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _getItemByField: function(field, items) {\r\n        var resultItem, that = this,\r\n            fieldParts = typeUtils.isObject(field) ? field : that._getFieldParts(field),\r\n            fieldName = fieldParts.fieldName,\r\n            fieldPath = fieldParts.fieldPath;\r\n        if (items.length) {\r\n            each(items, function(index, item) {\r\n                var itemType = item.itemType;\r\n                if (fieldPath.length) {\r\n                    var path = fieldPath.slice();\r\n                    item = that._getItemByFieldPath(path, fieldName, item)\r\n                } else {\r\n                    if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType) {\r\n                        var subItemsField = that._getSubItemField(itemType);\r\n                        item.items = that._generateItemsFromData(item.items);\r\n                        item = that._getItemByField({\r\n                            fieldName: fieldName,\r\n                            fieldPath: fieldPath\r\n                        }, item[subItemsField])\r\n                    }\r\n                }\r\n                if (that._isExpectedItem(item, fieldName)) {\r\n                    resultItem = item;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        return resultItem\r\n    },\r\n    _getFieldParts: function(field) {\r\n        var fieldSeparator = \".\",\r\n            fieldName = field,\r\n            separatorIndex = fieldName.indexOf(fieldSeparator),\r\n            resultPath = [];\r\n        while (separatorIndex !== -1) {\r\n            resultPath.push(fieldName.substr(0, separatorIndex));\r\n            fieldName = fieldName.substr(separatorIndex + 1);\r\n            separatorIndex = fieldName.indexOf(fieldSeparator)\r\n        }\r\n        return {\r\n            fieldName: fieldName,\r\n            fieldPath: resultPath.reverse()\r\n        }\r\n    },\r\n    _getItemByFieldPath: function(path, fieldName, item) {\r\n        var result, that = this,\r\n            itemType = item.itemType,\r\n            subItemsField = that._getSubItemField(itemType),\r\n            isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\r\n        do {\r\n            if (isItemWithSubItems) {\r\n                var pathNode, name = item.name || item.caption || item.title,\r\n                    isGroupWithName = typeUtils.isDefined(name),\r\n                    nameWithoutSpaces = that._getTextWithoutSpaces(name);\r\n                item[subItemsField] = that._generateItemsFromData(item[subItemsField]);\r\n                if (isGroupWithName) {\r\n                    pathNode = path.pop()\r\n                }\r\n                if (!path.length) {\r\n                    result = that._getItemByField(fieldName, item[subItemsField]);\r\n                    if (result) {\r\n                        break\r\n                    }\r\n                }\r\n                if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\r\n                    if (path.length) {\r\n                        result = that._searchItemInEverySubItem(path, fieldName, item[subItemsField])\r\n                    }\r\n                }\r\n            } else {\r\n                break\r\n            }\r\n        } while (path.length && !typeUtils.isDefined(result));\r\n        return result\r\n    },\r\n    _getSubItemField: function(itemType) {\r\n        return \"tabbed\" === itemType ? \"tabs\" : \"items\"\r\n    },\r\n    _searchItemInEverySubItem: function(path, fieldName, items) {\r\n        var result, that = this;\r\n        each(items, function(index, groupItem) {\r\n            result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\r\n            if (result) {\r\n                return false\r\n            }\r\n        });\r\n        if (!result) {\r\n            result = false\r\n        }\r\n        return result\r\n    },\r\n    _getTextWithoutSpaces: function(text) {\r\n        return text ? text.replace(/\\s/g, \"\") : void 0\r\n    },\r\n    _isExpectedItem: function(item, fieldName) {\r\n        return item && (item.dataField === fieldName || item.name === fieldName || this._getTextWithoutSpaces(item.title) === fieldName || \"group\" === item.itemType && this._getTextWithoutSpaces(item.caption) === fieldName)\r\n    },\r\n    _changeItemOption: function(item, option, value) {\r\n        if (typeUtils.isObject(item)) {\r\n            item[option] = value\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var currentScreenFactor = this._getCurrentScreenFactor();\r\n        if (this._cachedScreenFactor !== currentScreenFactor) {\r\n            if (this._isColCountChanged(this._cachedScreenFactor, currentScreenFactor)) {\r\n                this._refresh()\r\n            }\r\n            this._cachedScreenFactor = currentScreenFactor;\r\n            return\r\n        }\r\n    },\r\n    _isColCountChanged: function(oldScreenSize, newScreenSize) {\r\n        var isChanged = false;\r\n        each(this._cachedColCountOptions, function(index, item) {\r\n            if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\r\n                isChanged = true;\r\n                return false\r\n            }\r\n        });\r\n        return isChanged\r\n    },\r\n    _refresh: function() {\r\n        var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\r\n        eventsEngine.trigger(this.$element().find(editorSelector), \"change\");\r\n        this.callBase()\r\n    },\r\n    _resetValues: function() {\r\n        var validationGroup = this._getValidationGroup(),\r\n            validationGroupConfig = ValidationEngine.getGroupConfig(validationGroup);\r\n        validationGroupConfig && validationGroupConfig.reset();\r\n        each(this._editorInstancesByField, function(dataField, editor) {\r\n            editor.reset();\r\n            editor.option(\"isValid\", true)\r\n        })\r\n    },\r\n    _updateData: function(data, value, isComplexData) {\r\n        var that = this,\r\n            _data = isComplexData ? value : data;\r\n        if (typeUtils.isObject(_data)) {\r\n            each(_data, function(dataField, fieldValue) {\r\n                that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, typeUtils.isObject(fieldValue))\r\n            })\r\n        } else {\r\n            if (typeUtils.isString(data)) {\r\n                that._updateFieldValue(data, value)\r\n            }\r\n        }\r\n    },\r\n    registerKeyHandler: function(key, handler) {\r\n        this.callBase(key, handler);\r\n        each(this._editorInstancesByField, function(dataField, editor) {\r\n            editor.registerKeyHandler(key, handler)\r\n        })\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element().find(\".\" + FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible && browser.msie) {\r\n            this._refresh()\r\n        }\r\n    },\r\n    resetValues: function() {\r\n        this._resetValues()\r\n    },\r\n    updateData: function(data, value) {\r\n        this._updateData(data, value)\r\n    },\r\n    getEditor: function(dataField) {\r\n        return this._editorInstancesByField[dataField]\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this,\r\n            deferred = new Deferred;\r\n        if (that._scrollable) {\r\n            that._scrollable.update().done(function() {\r\n                deferred.resolveWith(that)\r\n            })\r\n        } else {\r\n            deferred.resolveWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    itemOption: function(id, option, value) {\r\n        var that = this,\r\n            argsCount = arguments.length,\r\n            items = that._generateItemsFromData(that.option(\"items\")),\r\n            item = that._getItemByField(id, items);\r\n        switch (argsCount) {\r\n            case 1:\r\n                return item;\r\n            case 3:\r\n                that._changeItemOption(item, option, value);\r\n                break;\r\n            default:\r\n                if (typeUtils.isObject(option)) {\r\n                    each(option, function(optionName, optionValue) {\r\n                        that._changeItemOption(item, optionName, optionValue)\r\n                    })\r\n                }\r\n        }\r\n        this.option(\"items\", items)\r\n    },\r\n    validate: function() {\r\n        try {\r\n            return ValidationEngine.validateGroup(this._getValidationGroup())\r\n        } catch (e) {\r\n            errors.log(\"E1036\", e.message)\r\n        }\r\n    },\r\n    getItemID: function(name) {\r\n        return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new Guid)\r\n    }\r\n});\r\nregisterComponent(\"dxForm\", Form);\r\nmodule.exports = Form;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/form/ui.form.js\n// module id = 832\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/form/ui.form.layout_manager.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    isWrapped = require(\"../../core/utils/variable_wrapper\").isWrapped,\r\n    isWritableWrapped = require(\"../../core/utils/variable_wrapper\").isWritableWrapped,\r\n    unwrap = require(\"../../core/utils/variable_wrapper\").unwrap,\r\n    windowUtils = require(\"../../core/utils/window\"),\r\n    stringUtils = require(\"../../core/utils/string\"),\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    dataUtils = require(\"../../core/utils/data\"),\r\n    removeEvent = require(\"../../core/remove_event\"),\r\n    clickEvent = require(\"../../events/click\"),\r\n    normalizeIndexes = require(\"../../core/utils/array\").normalizeIndexes,\r\n    errors = require(\"../widget/ui.errors\"),\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    styleUtils = require(\"../../core/utils/style\"),\r\n    inflector = require(\"../../core/utils/inflector\"),\r\n    Widget = require(\"../widget/ui.widget\"),\r\n    Validator = require(\"../validator\"),\r\n    ResponsiveBox = require(\"../responsive_box\"),\r\n    themes = require(\"../themes\");\r\nrequire(\"../text_box\");\r\nrequire(\"../number_box\");\r\nrequire(\"../check_box\");\r\nrequire(\"../date_box\");\r\nrequire(\"../button\");\r\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\",\r\n    FIELD_ITEM_CLASS = \"dx-field-item\",\r\n    FIELD_EMPTY_ITEM_CLASS = \"dx-field-empty-item\",\r\n    FIELD_BUTTON_ITEM_CLASS = \"dx-field-button-item\",\r\n    FIELD_ITEM_REQUIRED_CLASS = \"dx-field-item-required\",\r\n    FIELD_ITEM_OPTIONAL_CLASS = \"dx-field-item-optional\",\r\n    FIELD_ITEM_REQUIRED_MARK_CLASS = \"dx-field-item-required-mark\",\r\n    FIELD_ITEM_OPTIONAL_MARK_CLASS = \"dx-field-item-optional-mark\",\r\n    FIELD_ITEM_LABEL_CLASS = \"dx-field-item-label\",\r\n    FIELD_ITEM_LABEL_ALIGN_CLASS = \"dx-field-item-label-align\",\r\n    FIELD_ITEM_LABEL_CONTENT_CLASS = \"dx-field-item-label-content\",\r\n    FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\",\r\n    FIELD_ITEM_LABEL_LOCATION_CLASS = \"dx-field-item-label-location-\",\r\n    FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\",\r\n    FIELD_ITEM_CONTENT_LOCATION_CLASS = \"dx-field-item-content-location-\",\r\n    FIELD_ITEM_CONTENT_WRAPPER_CLASS = \"dx-field-item-content-wrapper\",\r\n    FIELD_ITEM_HELP_TEXT_CLASS = \"dx-field-item-help-text\",\r\n    SINGLE_COLUMN_ITEM_CONTENT = \"dx-single-column-item-content\",\r\n    LABEL_HORIZONTAL_ALIGNMENT_CLASS = \"dx-label-h-align\",\r\n    LABEL_VERTICAL_ALIGNMENT_CLASS = \"dx-label-v-align\",\r\n    FORM_LAYOUT_MANAGER_CLASS = \"dx-layout-manager\",\r\n    LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\",\r\n    LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\",\r\n    LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\",\r\n    LAYOUT_MANAGER_ONE_COLUMN = \"dx-layout-manager-one-col\",\r\n    FLEX_LAYOUT_CLASS = \"dx-flex-layout\",\r\n    INVALID_CLASS = \"dx-invalid\",\r\n    LAYOUT_STRATEGY_FLEX = \"flex\",\r\n    LAYOUT_STRATEGY_FALLBACK = \"fallback\",\r\n    SIMPLE_ITEM_TYPE = \"simple\",\r\n    DATA_OPTIONS = [\"dataSource\", \"items\"],\r\n    EDITORS_WITH_ARRAY_VALUE = [\"dxTagBox\", \"dxRangeSlider\"];\r\nvar LayoutManager = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            layoutData: {},\r\n            readOnly: false,\r\n            colCount: 1,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            onFieldDataChanged: null,\r\n            onEditorEnterKey: null,\r\n            customizeItem: null,\r\n            alignItemLabels: true,\r\n            minColWidth: 200,\r\n            showRequiredMark: true,\r\n            screenByWidth: null,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            layoutData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._itemWatchers = [];\r\n        this._initDataAndItems(this.option(\"layoutData\"))\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._cleanItemWatchers()\r\n    },\r\n    _initDataAndItems: function(initialData) {\r\n        this._syncDataWithItems();\r\n        this._updateItems(initialData)\r\n    },\r\n    _syncDataWithItems: function() {\r\n        var that = this,\r\n            userItems = that.option(\"items\");\r\n        if (typeUtils.isDefined(userItems)) {\r\n            each(userItems, function(index, item) {\r\n                var value;\r\n                if (item.dataField && void 0 === that._getDataByField(item.dataField)) {\r\n                    if (item.editorOptions) {\r\n                        value = item.editorOptions.value\r\n                    }\r\n                    that._updateFieldValue(item.dataField, value)\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getDataByField: function(dataField) {\r\n        return dataField ? this.option(\"layoutData.\" + dataField) : null\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        var layoutData = this.option(\"layoutData\"),\r\n            newValue = value;\r\n        if (!isWrapped(layoutData[dataField]) && typeUtils.isDefined(dataField)) {\r\n            this.option(\"layoutData.\" + dataField, newValue)\r\n        } else {\r\n            if (isWritableWrapped(layoutData[dataField])) {\r\n                newValue = typeUtils.isFunction(newValue) ? newValue() : newValue;\r\n                layoutData[dataField](newValue)\r\n            }\r\n        }\r\n        this._triggerOnFieldDataChanged({\r\n            dataField: dataField,\r\n            value: newValue\r\n        })\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _updateItems: function(layoutData) {\r\n        var items, processedItems, that = this,\r\n            userItems = this.option(\"items\"),\r\n            isUserItemsExist = typeUtils.isDefined(userItems),\r\n            customizeItem = that.option(\"customizeItem\");\r\n        items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\r\n        if (typeUtils.isDefined(items)) {\r\n            processedItems = [];\r\n            each(items, function(index, item) {\r\n                if (that._isAcceptableItem(item)) {\r\n                    item = that._processItem(item);\r\n                    customizeItem && customizeItem(item);\r\n                    if (typeUtils.isObject(item) && false !== unwrap(item.visible)) {\r\n                        processedItems.push(item)\r\n                    }\r\n                }\r\n            });\r\n            if (!that._itemWatchers.length || !isUserItemsExist) {\r\n                that._updateItemWatchers(items)\r\n            }\r\n            this._items = processedItems;\r\n            this._sortItems()\r\n        }\r\n    },\r\n    _cleanItemWatchers: function() {\r\n        this._itemWatchers.forEach(function(dispose) {\r\n            dispose()\r\n        });\r\n        this._itemWatchers = []\r\n    },\r\n    _updateItemWatchers: function(items) {\r\n        var that = this,\r\n            watch = that._getWatch();\r\n        items.forEach(function(item) {\r\n            if (typeUtils.isObject(item) && typeUtils.isDefined(item.visible) && typeUtils.isFunction(watch)) {\r\n                that._itemWatchers.push(watch(function() {\r\n                    return unwrap(item.visible)\r\n                }, function() {\r\n                    that._updateItems(that.option(\"layoutData\"));\r\n                    that.repaint()\r\n                }, {\r\n                    skipImmediate: true\r\n                }))\r\n            }\r\n        })\r\n    },\r\n    _generateItemsByData: function(layoutData) {\r\n        var result = [];\r\n        if (typeUtils.isDefined(layoutData)) {\r\n            each(layoutData, function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _isAcceptableItem: function(item) {\r\n        var itemField = item.dataField || item,\r\n            itemData = this._getDataByField(itemField);\r\n        return !(typeUtils.isFunction(itemData) && !isWrapped(itemData))\r\n    },\r\n    _processItem: function(item) {\r\n        if (\"string\" === typeof item) {\r\n            item = {\r\n                dataField: item\r\n            }\r\n        }\r\n        if (\"object\" === (\"undefined\" === typeof item ? \"undefined\" : _typeof(item)) && !item.itemType) {\r\n            item.itemType = SIMPLE_ITEM_TYPE\r\n        }\r\n        if (!typeUtils.isDefined(item.editorType) && typeUtils.isDefined(item.dataField)) {\r\n            var value = this._getDataByField(item.dataField);\r\n            item.editorType = typeUtils.isDefined(value) ? this._getEditorTypeByDataType(typeUtils.type(value)) : FORM_EDITOR_BY_DEFAULT\r\n        }\r\n        return item\r\n    },\r\n    _getEditorTypeByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"number\":\r\n                return \"dxNumberBox\";\r\n            case \"date\":\r\n                return \"dxDateBox\";\r\n            case \"boolean\":\r\n                return \"dxCheckBox\";\r\n            default:\r\n                return \"dxTextBox\"\r\n        }\r\n    },\r\n    _sortItems: function() {\r\n        normalizeIndexes(this._items, \"visibleIndex\");\r\n        this._sortIndexes()\r\n    },\r\n    _sortIndexes: function() {\r\n        this._items.sort(function(itemA, itemB) {\r\n            var result, indexA = itemA.visibleIndex,\r\n                indexB = itemB.visibleIndex;\r\n            if (indexA > indexB) {\r\n                result = 1\r\n            } else {\r\n                if (indexA < indexB) {\r\n                    result = -1\r\n                } else {\r\n                    result = 0\r\n                }\r\n            }\r\n            return result\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this._clearEditorInstances();\r\n        this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\r\n        this.callBase();\r\n        this._renderResponsiveBox()\r\n    },\r\n    _clearEditorInstances: function() {\r\n        this._editorInstancesByField = {}\r\n    },\r\n    _hasBrowserFlex: function() {\r\n        return styleUtils.styleProp(LAYOUT_STRATEGY_FLEX) === LAYOUT_STRATEGY_FLEX\r\n    },\r\n    _renderResponsiveBox: function() {\r\n        var that = this,\r\n            templatesInfo = [];\r\n        if (that._items && that._items.length) {\r\n            var layoutItems, colCount = that._getColCount(),\r\n                $container = $(\"<div>\").appendTo(that.$element());\r\n            that._prepareItemsWithMerging(colCount);\r\n            layoutItems = that._generateLayoutItems();\r\n            that._extendItemsWithDefaultTemplateOptions(layoutItems, that._items);\r\n            that._responsiveBox = that._createComponent($container, ResponsiveBox, that._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\r\n            if (!windowUtils.hasWindow()) {\r\n                that._renderTemplates(templatesInfo)\r\n            }\r\n        }\r\n    },\r\n    _extendItemsWithDefaultTemplateOptions: function(targetItems, sourceItems) {\r\n        sourceItems.forEach(function(item) {\r\n            if (!item.merged) {\r\n                if (typeUtils.isDefined(item.disabled)) {\r\n                    targetItems[item.visibleIndex].disabled = item.disabled\r\n                }\r\n                if (typeUtils.isDefined(item.visible)) {\r\n                    targetItems[item.visibleIndex].visible = item.visible\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _itemStateChangedHandler: function(e) {\r\n        this._refresh()\r\n    },\r\n    _renderTemplate: function($container, item) {\r\n        switch (item.itemType) {\r\n            case \"empty\":\r\n                this._renderEmptyItem($container);\r\n                break;\r\n            case \"button\":\r\n                this._renderButtonItem(item, $container);\r\n                break;\r\n            default:\r\n                this._renderFieldItem(item, $container)\r\n        }\r\n    },\r\n    _renderTemplates: function(templatesInfo) {\r\n        var that = this;\r\n        each(templatesInfo, function(index, info) {\r\n            that._renderTemplate(info.container, info.formItem)\r\n        })\r\n    },\r\n    _getResponsiveBoxConfig: function(layoutItems, colCount, templatesInfo) {\r\n        var that = this,\r\n            colCountByScreen = that.option(\"colCountByScreen\"),\r\n            xsColCount = colCountByScreen && colCountByScreen.xs;\r\n        return {\r\n            onItemStateChanged: this._itemStateChangedHandler.bind(this),\r\n            _layoutStrategy: that._hasBrowserFlex() ? LAYOUT_STRATEGY_FLEX : LAYOUT_STRATEGY_FALLBACK,\r\n            onLayoutChanged: function onLayoutChanged() {\r\n                var onLayoutChanged = that.option(\"onLayoutChanged\"),\r\n                    isSingleColumnMode = that.isSingleColumnMode();\r\n                if (onLayoutChanged) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\r\n                    onLayoutChanged(isSingleColumnMode)\r\n                }\r\n            },\r\n            onContentReady: function(e) {\r\n                if (windowUtils.hasWindow()) {\r\n                    that._renderTemplates(templatesInfo)\r\n                }\r\n                if (that.option(\"onLayoutChanged\")) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component))\r\n                }\r\n                that._fireContentReadyAction()\r\n            },\r\n            itemTemplate: function(e, itemData, itemElement) {\r\n                if (!e.location) {\r\n                    return\r\n                }\r\n                var $itemElement = $(itemElement),\r\n                    itemRenderedCountInPreviousRows = e.location.row * colCount,\r\n                    item = that._items[e.location.col + itemRenderedCountInPreviousRows],\r\n                    $fieldItem = $(\"<div>\").addClass(item.cssClass).appendTo($itemElement);\r\n                templatesInfo.push({\r\n                    container: $fieldItem,\r\n                    formItem: item\r\n                });\r\n                $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\r\n                if (0 === e.location.row) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_FIRST_ROW_CLASS)\r\n                }\r\n                if (0 === e.location.col) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_FIRST_COL_CLASS)\r\n                }\r\n                if (e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_LAST_COL_CLASS)\r\n                }\r\n            },\r\n            cols: that._generateRatio(colCount),\r\n            rows: that._generateRatio(that._getRowsCount(), true),\r\n            dataSource: layoutItems,\r\n            screenByWidth: that.option(\"screenByWidth\"),\r\n            singleColumnScreen: xsColCount ? false : \"xs\"\r\n        }\r\n    },\r\n    _getColCount: function() {\r\n        var colCount = this.option(\"colCount\"),\r\n            colCountByScreen = this.option(\"colCountByScreen\");\r\n        if (colCountByScreen) {\r\n            var screenFactor = windowUtils.hasWindow() ? windowUtils.getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\",\r\n                currentColCount = colCountByScreen[screenFactor];\r\n            colCount = currentColCount || colCount\r\n        }\r\n        if (\"auto\" === colCount) {\r\n            if (!!this._cashedColCount) {\r\n                return this._cashedColCount\r\n            }\r\n            this._cashedColCount = colCount = this._getMaxColCount()\r\n        }\r\n        return colCount < 1 ? 1 : colCount\r\n    },\r\n    _getMaxColCount: function() {\r\n        if (!windowUtils.hasWindow()) {\r\n            return 1\r\n        }\r\n        var minColWidth = this.option(\"minColWidth\"),\r\n            width = this.$element().width(),\r\n            itemsCount = this._items.length,\r\n            maxColCount = Math.floor(width / minColWidth) || 1;\r\n        return itemsCount < maxColCount ? itemsCount : maxColCount\r\n    },\r\n    isCachedColCountObsolete: function() {\r\n        return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount\r\n    },\r\n    _prepareItemsWithMerging: function(colCount) {\r\n        var item, itemsMergedByCol, j, i, items = this._items.slice(0),\r\n            result = [];\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            result.push(item);\r\n            if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\r\n                item.col = this._getColByIndex(result.length - 1, colCount)\r\n            }\r\n            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\r\n                itemsMergedByCol = [];\r\n                for (j = 0; j < item.colSpan - 1; j++) {\r\n                    itemsMergedByCol.push({\r\n                        merged: true\r\n                    })\r\n                }\r\n                result = result.concat(itemsMergedByCol)\r\n            } else {\r\n                delete item.colSpan\r\n            }\r\n        }\r\n        this._items = result\r\n    },\r\n    _getColByIndex: function(index, colCount) {\r\n        return index % colCount\r\n    },\r\n    _generateLayoutItems: function() {\r\n        var item, i, items = this._items,\r\n            colCount = this._getColCount(),\r\n            result = [];\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            if (!item.merged) {\r\n                var generatedItem = {\r\n                    location: {\r\n                        row: parseInt(i / colCount),\r\n                        col: this._getColByIndex(i, colCount)\r\n                    }\r\n                };\r\n                if (typeUtils.isDefined(item.colSpan)) {\r\n                    generatedItem.location.colspan = item.colSpan\r\n                }\r\n                if (typeUtils.isDefined(item.rowSpan)) {\r\n                    generatedItem.location.rowspan = item.rowSpan\r\n                }\r\n                result.push(generatedItem)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _renderEmptyItem: function($container) {\r\n        return $container.addClass(FIELD_EMPTY_ITEM_CLASS).html(\"&nbsp;\")\r\n    },\r\n    _getButtonHorizontalAlignment: function(item) {\r\n        if (typeUtils.isDefined(item.horizontalAlignment)) {\r\n            return item.horizontalAlignment\r\n        }\r\n        if (typeUtils.isDefined(item.alignment)) {\r\n            errors.log(\"W0001\", \"dxForm\", \"alignment\", \"18.1\", \"Use the 'horizontalAlignment' option in button items instead.\");\r\n            return item.alignment\r\n        }\r\n        return \"right\"\r\n    },\r\n    _getButtonVerticalAlignment: function(item) {\r\n        switch (item.verticalAlignment) {\r\n            case \"center\":\r\n                return \"center\";\r\n            case \"bottom\":\r\n                return \"flex-end\";\r\n            default:\r\n                return \"flex-start\"\r\n        }\r\n    },\r\n    _renderButtonItem: function(item, $container) {\r\n        var $button = $(\"<div>\").appendTo($container),\r\n            defaultOptions = {\r\n                validationGroup: this.option(\"validationGroup\")\r\n            };\r\n        $container.addClass(FIELD_BUTTON_ITEM_CLASS).css(\"textAlign\", this._getButtonHorizontalAlignment(item));\r\n        $container.parent().css(\"justifyContent\", this._getButtonVerticalAlignment(item));\r\n        this._createComponent($button, \"dxButton\", extend(defaultOptions, item.buttonOptions));\r\n        this._addItemClasses($container, item.col);\r\n        return $button\r\n    },\r\n    _addItemClasses: function($item, column) {\r\n        $item.addClass(FIELD_ITEM_CLASS).addClass(this.option(\"cssItemClass\")).addClass(typeUtils.isDefined(column) ? \"dx-col-\" + column : \"\")\r\n    },\r\n    _renderFieldItem: function(item, $container) {\r\n        var $label, that = this,\r\n            name = that._getName(item),\r\n            id = that.getItemID(name),\r\n            isRequired = typeUtils.isDefined(item.isRequired) ? item.isRequired : !!that._hasRequiredRuleInSet(item.validationRules),\r\n            labelOptions = that._getLabelOptions(item, id, isRequired),\r\n            $editor = $(\"<div>\"),\r\n            helpID = item.helpText ? \"dx-\" + new Guid : null;\r\n        this._addItemClasses($container, item.col);\r\n        $container.addClass(isRequired ? FIELD_ITEM_REQUIRED_CLASS : FIELD_ITEM_OPTIONAL_CLASS);\r\n        if (labelOptions.visible && labelOptions.text) {\r\n            $label = that._renderLabel(labelOptions).appendTo($container)\r\n        }\r\n        if (item.itemType === SIMPLE_ITEM_TYPE) {\r\n            if (that._isLabelNeedBaselineAlign(item) && \"top\" !== labelOptions.location) {\r\n                $container.addClass(FIELD_ITEM_LABEL_ALIGN_CLASS)\r\n            }\r\n            that._hasBrowserFlex() && $container.addClass(FLEX_LAYOUT_CLASS)\r\n        }\r\n        $editor.data(\"dx-form-item\", item);\r\n        that._appendEditorToField({\r\n            $fieldItem: $container,\r\n            $label: $label,\r\n            $editor: $editor,\r\n            labelOptions: labelOptions\r\n        });\r\n        that._renderEditor({\r\n            $container: $editor,\r\n            dataField: item.dataField,\r\n            name: name,\r\n            editorType: item.editorType,\r\n            editorOptions: item.editorOptions,\r\n            template: that._getTemplateByFieldItem(item),\r\n            isRequired: isRequired,\r\n            helpID: helpID,\r\n            id: id,\r\n            validationBoundary: that.option(\"validationBoundary\")\r\n        });\r\n        var $validationTarget = $editor.children().first();\r\n        if ($validationTarget && $validationTarget.data(\"dx-validation-target\")) {\r\n            that._renderValidator($validationTarget, item)\r\n        }\r\n        that._renderHelpText(item, $editor, helpID);\r\n        that._attachClickHandler($label, $editor, item.editorType)\r\n    },\r\n    _hasRequiredRuleInSet: function(rules) {\r\n        var hasRequiredRule;\r\n        if (rules && rules.length) {\r\n            each(rules, function(index, rule) {\r\n                if (\"required\" === rule.type) {\r\n                    hasRequiredRule = true;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        return hasRequiredRule\r\n    },\r\n    _getName: function(item) {\r\n        return item.dataField || item.name\r\n    },\r\n    _isLabelNeedBaselineAlign: function(item) {\r\n        var largeEditors = [\"dxTextArea\", \"dxRadioGroup\", \"dxCalendar\"];\r\n        return !!item.helpText && !this._hasBrowserFlex() || inArray(item.editorType, largeEditors) !== -1\r\n    },\r\n    _getLabelOptions: function(item, id, isRequired) {\r\n        var labelOptions = extend({\r\n            showColon: this.option(\"showColonAfterLabel\"),\r\n            location: this.option(\"labelLocation\"),\r\n            id: id,\r\n            visible: true,\r\n            isRequired: isRequired\r\n        }, item ? item.label : {});\r\n        if (!labelOptions.text && item.dataField) {\r\n            labelOptions.text = inflector.captionize(item.dataField)\r\n        }\r\n        if (labelOptions.text) {\r\n            labelOptions.text += labelOptions.showColon ? \":\" : \"\"\r\n        }\r\n        return labelOptions\r\n    },\r\n    _renderLabel: function(options) {\r\n        if (typeUtils.isDefined(options.text) && options.text.length > 0) {\r\n            var labelClasses = FIELD_ITEM_LABEL_CLASS + \" \" + FIELD_ITEM_LABEL_LOCATION_CLASS + options.location,\r\n                $label = $(\"<label>\").addClass(labelClasses).attr(\"for\", options.id),\r\n                $labelContent = $(\"<span>\").addClass(FIELD_ITEM_LABEL_CONTENT_CLASS).appendTo($label);\r\n            $(\"<span>\").addClass(FIELD_ITEM_LABEL_TEXT_CLASS).text(options.text).appendTo($labelContent);\r\n            if (options.alignment) {\r\n                $label.css(\"textAlign\", options.alignment)\r\n            }\r\n            $labelContent.append(this._renderLabelMark(options.isRequired));\r\n            return $label\r\n        }\r\n    },\r\n    _renderLabelMark: function(isRequired) {\r\n        var $mark, requiredMarksConfig = this._getRequiredMarksConfig(),\r\n            isRequiredMark = requiredMarksConfig.showRequiredMark && isRequired,\r\n            isOptionalMark = requiredMarksConfig.showOptionalMark && !isRequired;\r\n        if (isRequiredMark || isOptionalMark) {\r\n            var markClass = isRequiredMark ? FIELD_ITEM_REQUIRED_MARK_CLASS : FIELD_ITEM_OPTIONAL_MARK_CLASS,\r\n                markText = isRequiredMark ? requiredMarksConfig.requiredMark : requiredMarksConfig.optionalMark;\r\n            $mark = $(\"<span>\").addClass(markClass).html(\"&nbsp\" + markText)\r\n        }\r\n        return $mark\r\n    },\r\n    _getRequiredMarksConfig: function() {\r\n        if (!this._cashedRequiredConfig) {\r\n            this._cashedRequiredConfig = {\r\n                showRequiredMark: this.option(\"showRequiredMark\"),\r\n                showOptionalMark: this.option(\"showOptionalMark\"),\r\n                requiredMark: this.option(\"requiredMark\"),\r\n                optionalMark: this.option(\"optionalMark\")\r\n            }\r\n        }\r\n        return this._cashedRequiredConfig\r\n    },\r\n    _renderEditor: function(options) {\r\n        var editorOptions, dataValue = this._getDataByField(options.dataField),\r\n            defaultEditorOptions = {\r\n                value: dataValue\r\n            },\r\n            isDeepExtend = true;\r\n        if (EDITORS_WITH_ARRAY_VALUE.indexOf(options.editorType) !== -1) {\r\n            defaultEditorOptions.value = defaultEditorOptions.value || []\r\n        }\r\n        var formInstance = this.option(\"form\");\r\n        editorOptions = extend(isDeepExtend, defaultEditorOptions, options.editorOptions, {\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            validationBoundary: options.validationBoundary,\r\n            stylingMode: formInstance && formInstance.option(\"stylingMode\")\r\n        });\r\n        this._replaceDataOptions(options.editorOptions, editorOptions);\r\n        var renderOptions = {\r\n            editorType: options.editorType,\r\n            dataField: options.dataField,\r\n            template: options.template,\r\n            name: options.name,\r\n            helpID: options.helpID,\r\n            isRequired: options.isRequired\r\n        };\r\n        this._createEditor(options.$container, renderOptions, editorOptions)\r\n    },\r\n    _replaceDataOptions: function(originalOptions, resultOptions) {\r\n        if (originalOptions) {\r\n            DATA_OPTIONS.forEach(function(item) {\r\n                if (resultOptions[item]) {\r\n                    resultOptions[item] = originalOptions[item]\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _renderValidator: function($editor, item) {\r\n        var fieldName = this._getFieldLabelName(item),\r\n            validationRules = this._prepareValidationRules(item.validationRules, item.isRequired, item.itemType, fieldName);\r\n        if (Array.isArray(validationRules) && validationRules.length) {\r\n            this._createComponent($editor, Validator, {\r\n                validationRules: validationRules,\r\n                validationGroup: this.option(\"validationGroup\")\r\n            })\r\n        }\r\n    },\r\n    _getFieldLabelName: function(item) {\r\n        var isItemHaveCustomLabel = item.label && item.label.text,\r\n            itemName = isItemHaveCustomLabel ? null : this._getName(item);\r\n        return isItemHaveCustomLabel ? item.label.text : itemName && inflector.captionize(itemName)\r\n    },\r\n    _prepareValidationRules: function(userValidationRules, isItemRequired, itemType, itemName) {\r\n        var validationRules, isSimpleItem = itemType === SIMPLE_ITEM_TYPE;\r\n        if (isSimpleItem) {\r\n            if (userValidationRules) {\r\n                validationRules = userValidationRules\r\n            } else {\r\n                var requiredMessage = stringUtils.format(this.option(\"requiredMessage\"), itemName || \"\");\r\n                validationRules = isItemRequired ? [{\r\n                    type: \"required\",\r\n                    message: requiredMessage\r\n                }] : null\r\n            }\r\n        }\r\n        return validationRules\r\n    },\r\n    _addWrapperInvalidClass: function(editorInstance) {\r\n        var wrapperClass = \".\" + FIELD_ITEM_CONTENT_WRAPPER_CLASS,\r\n            toggleInvalidClass = function(e) {\r\n                $(e.element).parents(wrapperClass).toggleClass(INVALID_CLASS, \"focusin\" === e.event.type && false === e.component.option(\"isValid\"))\r\n            };\r\n        editorInstance.on(\"focusIn\", toggleInvalidClass).on(\"focusOut\", toggleInvalidClass)\r\n    },\r\n    _createEditor: function($container, renderOptions, editorOptions) {\r\n        var editorInstance, that = this,\r\n            template = renderOptions.template;\r\n        if (renderOptions.dataField && !editorOptions.name) {\r\n            editorOptions.name = renderOptions.dataField\r\n        }\r\n        that._addItemContentClasses($container);\r\n        if (template) {\r\n            var data = {\r\n                dataField: renderOptions.dataField,\r\n                editorType: renderOptions.editorType,\r\n                editorOptions: editorOptions,\r\n                component: that._getComponentOwner()\r\n            };\r\n            template.render({\r\n                model: data,\r\n                container: domUtils.getPublicElement($container)\r\n            })\r\n        } else {\r\n            var $editor = $(\"<div>\").appendTo($container);\r\n            try {\r\n                editorInstance = that._createComponent($editor, renderOptions.editorType, editorOptions);\r\n                editorInstance.setAria(\"describedby\", renderOptions.helpID);\r\n                editorInstance.setAria(\"required\", renderOptions.isRequired);\r\n                that._registerEditorInstance(editorInstance, renderOptions);\r\n                if (themes.isMaterial()) {\r\n                    that._addWrapperInvalidClass(editorInstance)\r\n                }\r\n                if (renderOptions.dataField) {\r\n                    that._bindDataField(editorInstance, renderOptions, $container)\r\n                }\r\n            } catch (e) {\r\n                errors.log(\"E1035\", e.message)\r\n            }\r\n        }\r\n    },\r\n    _getComponentOwner: function() {\r\n        return this.option(\"form\") || this\r\n    },\r\n    _bindDataField: function(editorInstance, renderOptions, $container) {\r\n        var componentOwner = this._getComponentOwner();\r\n        editorInstance.on(\"enterKey\", function(args) {\r\n            componentOwner._createActionByOption(\"onEditorEnterKey\")(extend(args, {\r\n                dataField: renderOptions.dataField\r\n            }))\r\n        });\r\n        this._createWatcher(editorInstance, $container, renderOptions);\r\n        this.linkEditorToDataField(editorInstance, renderOptions.dataField, renderOptions.editorType)\r\n    },\r\n    _createWatcher: function(editorInstance, $container, renderOptions) {\r\n        var that = this,\r\n            watch = that._getWatch();\r\n        if (!typeUtils.isFunction(watch)) {\r\n            return\r\n        }\r\n        var dispose = watch(function() {\r\n            return that._getDataByField(renderOptions.dataField)\r\n        }, function() {\r\n            editorInstance.option(\"value\", that._getDataByField(renderOptions.dataField))\r\n        }, {\r\n            deep: true,\r\n            skipImmediate: true\r\n        });\r\n        eventsEngine.on($container, removeEvent, dispose)\r\n    },\r\n    _getWatch: function() {\r\n        if (!typeUtils.isDefined(this._watch)) {\r\n            var formInstance = this.option(\"form\");\r\n            this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\")\r\n        }\r\n        return this._watch\r\n    },\r\n    _addItemContentClasses: function($itemContent) {\r\n        var locationSpecificClass = this._getItemContentLocationSpecificClass();\r\n        $itemContent.addClass([FIELD_ITEM_CONTENT_CLASS, locationSpecificClass].join(\" \"))\r\n    },\r\n    _getItemContentLocationSpecificClass: function() {\r\n        var labelLocation = this.option(\"labelLocation\"),\r\n            oppositeClasses = {\r\n                right: \"left\",\r\n                left: \"right\",\r\n                top: \"bottom\"\r\n            };\r\n        return FIELD_ITEM_CONTENT_LOCATION_CLASS + oppositeClasses[labelLocation]\r\n    },\r\n    _registerEditorInstance: function(instance, options) {\r\n        var name = this._getName(options);\r\n        if (name) {\r\n            this._editorInstancesByField[name] = instance\r\n        }\r\n    },\r\n    _createComponent: function($editor, type, editorOptions) {\r\n        var instance, that = this,\r\n            readOnlyState = this.option(\"readOnly\");\r\n        instance = that.callBase($editor, type, editorOptions);\r\n        readOnlyState && instance.option(\"readOnly\", readOnlyState);\r\n        that.on(\"optionChanged\", function(args) {\r\n            if (\"readOnly\" === args.name && !typeUtils.isDefined(editorOptions.readOnly)) {\r\n                instance.option(args.name, args.value)\r\n            }\r\n        });\r\n        return instance\r\n    },\r\n    _getTemplateByFieldItem: function(fieldItem) {\r\n        return fieldItem.template ? this._getTemplate(fieldItem.template) : null\r\n    },\r\n    _appendEditorToField: function(params) {\r\n        if (params.$label) {\r\n            var location = params.labelOptions.location;\r\n            if (\"top\" === location || \"left\" === location) {\r\n                params.$fieldItem.append(params.$editor)\r\n            }\r\n            if (\"right\" === location) {\r\n                params.$fieldItem.prepend(params.$editor)\r\n            }\r\n            this._addInnerItemAlignmentClass(params.$fieldItem, location)\r\n        } else {\r\n            params.$fieldItem.append(params.$editor)\r\n        }\r\n    },\r\n    _addInnerItemAlignmentClass: function($fieldItem, location) {\r\n        if (\"top\" === location) {\r\n            $fieldItem.addClass(LABEL_VERTICAL_ALIGNMENT_CLASS)\r\n        } else {\r\n            $fieldItem.addClass(LABEL_HORIZONTAL_ALIGNMENT_CLASS)\r\n        }\r\n    },\r\n    _renderHelpText: function(fieldItem, $editor, helpID) {\r\n        var helpText = fieldItem.helpText,\r\n            isSimpleItem = fieldItem.itemType === SIMPLE_ITEM_TYPE;\r\n        if (helpText && isSimpleItem) {\r\n            var $editorWrapper = $(\"<div>\").addClass(FIELD_ITEM_CONTENT_WRAPPER_CLASS);\r\n            $editor.wrap($editorWrapper);\r\n            $(\"<div>\").addClass(FIELD_ITEM_HELP_TEXT_CLASS).attr(\"id\", helpID).text(helpText).appendTo($editor.parent())\r\n        }\r\n    },\r\n    _attachClickHandler: function($label, $editor, editorType) {\r\n        var isBooleanEditors = \"dxCheckBox\" === editorType || \"dxSwitch\" === editorType;\r\n        if ($label && isBooleanEditors) {\r\n            eventsEngine.on($label, clickEvent.name, function() {\r\n                eventsEngine.trigger($editor.children(), clickEvent.name)\r\n            })\r\n        }\r\n    },\r\n    _generateRatio: function(count, isAutoSize) {\r\n        var ratio, i, result = [];\r\n        for (i = 0; i < count; i++) {\r\n            ratio = {\r\n                ratio: 1\r\n            };\r\n            if (isAutoSize) {\r\n                ratio.baseSize = \"auto\"\r\n            }\r\n            result.push(ratio)\r\n        }\r\n        return result\r\n    },\r\n    _getRowsCount: function() {\r\n        return Math.ceil(this._items.length / this._getColCount())\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (0 === args.fullName.search(\"layoutData.\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n                this._cashedRequiredConfig = null;\r\n                this._invalidate();\r\n                break;\r\n            case \"layoutData\":\r\n                if (this.option(\"items\")) {\r\n                    if (!typeUtils.isEmptyObject(args.value)) {\r\n                        each(this._editorInstancesByField, function(name, editor) {\r\n                            var valueGetter = dataUtils.compileGetter(name),\r\n                                dataValue = valueGetter(args.value);\r\n                            if (void 0 === dataValue) {\r\n                                editor.reset();\r\n                                editor.option(\"isValid\", true)\r\n                            } else {\r\n                                editor.option(\"value\", dataValue)\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    this._initDataAndItems(args.value);\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"items\":\r\n                this._cleanItemWatchers();\r\n                this._initDataAndItems(args.value);\r\n                this._invalidate();\r\n                break;\r\n            case \"alignItemLabels\":\r\n            case \"labelLocation\":\r\n            case \"requiredMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"customizeItem\":\r\n                this._updateItems(this.option(\"layoutData\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"colCount\":\r\n                this._resetColCount();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _resetColCount: function() {\r\n        this._cashedColCount = null;\r\n        this._invalidate()\r\n    },\r\n    linkEditorToDataField: function(editorInstance, dataField, editorType) {\r\n        var isDataUpdating, fullFieldName = \"layoutData.\" + dataField,\r\n            that = this;\r\n        that.on(\"optionChanged\", function(args) {\r\n            if (args.fullName === fullFieldName) {\r\n                isDataUpdating = true;\r\n                if (\"object\" === _typeof(args.value)) {\r\n                    that._managedUpdateEditorOption(editorInstance, \"value\", args.value)\r\n                } else {\r\n                    editorInstance.option(\"value\", args.value)\r\n                }\r\n                isDataUpdating = false\r\n            }\r\n        });\r\n        editorInstance.on(\"valueChanged\", function(args) {\r\n            var isObjectValue = \"object\" === _typeof(args.value),\r\n                isSameObjectValue = isObjectValue && args.value === args.previousValue;\r\n            if (!isDataUpdating && !isSameObjectValue) {\r\n                if (isObjectValue) {\r\n                    that._managedUpdateFieldValue(dataField, args.value)\r\n                } else {\r\n                    that._updateFieldValue(dataField, args.value)\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _managedUpdateEditorOption: function(editorInstance, optionName, value) {\r\n        if (!this._isValueChangedCalled) {\r\n            this._isFieldValueChanged = true;\r\n            editorInstance.option(optionName, value);\r\n            this._isFieldValueChanged = false\r\n        }\r\n    },\r\n    _managedUpdateFieldValue: function(dataField, value) {\r\n        this._isValueChangedCalled = true;\r\n        if (!this._isFieldValueChanged) {\r\n            this._updateFieldValue(dataField, value)\r\n        }\r\n        this._isValueChangedCalled = false\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\r\n            this.fireEvent(\"autoColCountChanged\")\r\n        }\r\n    },\r\n    getItemID: function(name) {\r\n        var formInstance = this.option(\"form\");\r\n        return formInstance && formInstance.getItemID(name)\r\n    },\r\n    updateData: function(data, value) {\r\n        var that = this;\r\n        if (typeUtils.isObject(data)) {\r\n            each(data, function(dataField, fieldValue) {\r\n                that._updateFieldValue(dataField, fieldValue)\r\n            })\r\n        } else {\r\n            if (\"string\" === typeof data) {\r\n                that._updateFieldValue(data, value)\r\n            }\r\n        }\r\n    },\r\n    getEditor: function(field) {\r\n        return this._editorInstancesByField[field]\r\n    },\r\n    isSingleColumnMode: function(component) {\r\n        var responsiveBox = this._responsiveBox || component;\r\n        if (responsiveBox) {\r\n            return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\")\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxLayoutManager\", LayoutManager);\r\nmodule.exports = LayoutManager;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/form/ui.form.layout_manager.js\n// module id = 833\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/validation/default_adapter.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Callbacks = require(\"../../core/utils/callbacks\"),\r\n    Class = require(\"../../core/class\");\r\nvar DefaultAdapter = Class.inherit({\r\n    ctor: function(editor, validator) {\r\n        var that = this;\r\n        that.editor = editor;\r\n        that.validator = validator;\r\n        that.validationRequestsCallbacks = Callbacks();\r\n        var handler = function() {\r\n            that.validationRequestsCallbacks.fire()\r\n        };\r\n        editor.validationRequest.add(handler);\r\n        editor.on(\"disposing\", function() {\r\n            editor.validationRequest.remove(handler)\r\n        })\r\n    },\r\n    getValue: function() {\r\n        return this.editor.option(\"value\")\r\n    },\r\n    getCurrentValidationError: function() {\r\n        return this.editor.option(\"validationError\")\r\n    },\r\n    bypass: function() {\r\n        return this.editor.option(\"disabled\")\r\n    },\r\n    applyValidationResults: function(params) {\r\n        this.editor.option({\r\n            isValid: params.isValid,\r\n            validationError: params.brokenRule\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.editor.reset()\r\n    },\r\n    focus: function() {\r\n        this.editor.focus()\r\n    }\r\n});\r\nmodule.exports = DefaultAdapter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/validation/default_adapter.js\n// module id = 834\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/responsive_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    commonUtils = require(\"../core/utils/common\"),\r\n    typeUtils = require(\"../core/utils/type\"),\r\n    errors = require(\"./widget/ui.errors\"),\r\n    windowUtils = require(\"../core/utils/window\"),\r\n    window = windowUtils.getWindow(),\r\n    iteratorUtils = require(\"../core/utils/iterator\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    Box = require(\"./box\"),\r\n    CollectionWidget = require(\"./collection/ui.collection_widget.edit\");\r\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\",\r\n    SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\",\r\n    BOX_ITEM_CLASS = \"dx-box-item\",\r\n    BOX_ITEM_DATA_KEY = \"dxBoxItemData\",\r\n    HD_SCREEN_WIDTH = 1920;\r\nvar ResponsiveBox = CollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            rows: [],\r\n            cols: [],\r\n            screenByWidth: null,\r\n            singleColumnScreen: \"\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            onLayoutChanged: null,\r\n            currentScreenFactor: void 0,\r\n            _layoutStrategy: void 0\r\n        })\r\n    },\r\n    _init: function() {\r\n        if (!this.option(\"screenByWidth\")) {\r\n            this._options.screenByWidth = windowUtils.defaultScreenFactorFunc\r\n        }\r\n        this.callBase();\r\n        this._initLayoutChangedAction()\r\n    },\r\n    _initLayoutChangedAction: function() {\r\n        this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\r\n            excludeValidators: [\"disabled\", \"readonly\"]\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return BOX_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESPONSIVE_BOX_CLASS);\r\n        this._updateRootBox()\r\n    },\r\n    _updateRootBox: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = setTimeout(function() {\r\n            if (this._$root) {\r\n                eventsEngine.triggerHandler(this._$root, \"dxupdate\")\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _renderItems: function() {\r\n        this._setScreenSize();\r\n        this._screenItems = this._itemsByScreen();\r\n        this._prepareGrid();\r\n        this._spreadItems();\r\n        this._layoutItems();\r\n        this._linkNodeToItem()\r\n    },\r\n    _itemOptionChanged: function(item) {\r\n        var $item = this._findItemElementByItem(item);\r\n        if (!$item.length) {\r\n            return\r\n        }\r\n        this._refreshItem($item, item);\r\n        this._clearItemNodeTemplates();\r\n        this._update()\r\n    },\r\n    _setScreenSize: function() {\r\n        var currentScreen = this._getCurrentScreen();\r\n        this._removeScreenSizeClass();\r\n        this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\r\n        this.option(\"currentScreenFactor\", currentScreen)\r\n    },\r\n    _removeScreenSizeClass: function() {\r\n        var currentScreenFactor = this.option(\"currentScreenFactor\");\r\n        currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor)\r\n    },\r\n    _prepareGrid: function() {\r\n        var grid = this._grid = [];\r\n        this._prepareRowsAndCols();\r\n        iteratorUtils.each(this._rows, function() {\r\n            var row = [];\r\n            grid.push(row);\r\n            iteratorUtils.each(this._cols, function() {\r\n                row.push(this._createEmptyCell())\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    _prepareRowsAndCols: function() {\r\n        if (this._isSingleColumnScreen()) {\r\n            this._prepareSingleColumnScreenItems();\r\n            this._rows = this._defaultSizeConfig(this._screenItems.length);\r\n            this._cols = this._defaultSizeConfig(1)\r\n        } else {\r\n            this._rows = this._sizesByScreen(this.option(\"rows\"));\r\n            this._cols = this._sizesByScreen(this.option(\"cols\"))\r\n        }\r\n    },\r\n    _isSingleColumnScreen: function() {\r\n        return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length\r\n    },\r\n    _prepareSingleColumnScreenItems: function() {\r\n        this._screenItems.sort(function(item1, item2) {\r\n            return item1.location.row - item2.location.row || item1.location.col - item2.location.col\r\n        });\r\n        iteratorUtils.each(this._screenItems, function(index, item) {\r\n            extend(item.location, {\r\n                row: index,\r\n                col: 0,\r\n                rowspan: 1,\r\n                colspan: 1\r\n            })\r\n        })\r\n    },\r\n    _sizesByScreen: function(sizeConfigs) {\r\n        return iteratorUtils.map(this._filterByScreen(sizeConfigs), function(sizeConfig) {\r\n            return extend(this._defaultSizeConfig(), sizeConfig)\r\n        }.bind(this))\r\n    },\r\n    _defaultSizeConfig: function(size) {\r\n        var defaultSizeConfig = {\r\n            ratio: 1,\r\n            baseSize: 0,\r\n            minSize: 0,\r\n            maxSize: 0\r\n        };\r\n        if (!arguments.length) {\r\n            return defaultSizeConfig\r\n        }\r\n        var result = [];\r\n        for (var i = 0; i < size; i++) {\r\n            result.push(defaultSizeConfig)\r\n        }\r\n        return result\r\n    },\r\n    _filterByScreen: function(items) {\r\n        var screenRegExp = this._screenRegExp();\r\n        return commonUtils.grep(items, function(item) {\r\n            return !item.screen || screenRegExp.test(item.screen)\r\n        })\r\n    },\r\n    _screenRegExp: function() {\r\n        var screen = this._getCurrentScreen();\r\n        return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\")\r\n    },\r\n    _getCurrentScreen: function() {\r\n        var width = this._screenWidth();\r\n        return this.option(\"screenByWidth\")(width)\r\n    },\r\n    _screenWidth: function() {\r\n        return windowUtils.hasWindow() ? $(window).width() : HD_SCREEN_WIDTH\r\n    },\r\n    _createEmptyCell: function() {\r\n        return {\r\n            item: {},\r\n            location: {\r\n                colspan: 1,\r\n                rowspan: 1\r\n            }\r\n        }\r\n    },\r\n    _spreadItems: function() {\r\n        iteratorUtils.each(this._screenItems, function(_, itemInfo) {\r\n            var location = itemInfo.location || {};\r\n            var itemCol = location.col;\r\n            var itemRow = location.row;\r\n            var row = this._grid[itemRow];\r\n            var itemCell = row && row[itemCol];\r\n            this._occupyCells(itemCell, itemInfo)\r\n        }.bind(this))\r\n    },\r\n    _itemsByScreen: function() {\r\n        var _this = this;\r\n        return this.option(\"items\").reduce(function(result, item) {\r\n            var locations = item.location || {};\r\n            locations = typeUtils.isPlainObject(locations) ? [locations] : locations;\r\n            _this._filterByScreen(locations).forEach(function(location) {\r\n                result.push({\r\n                    item: item,\r\n                    location: extend({\r\n                        rowspan: 1,\r\n                        colspan: 1\r\n                    }, location)\r\n                })\r\n            });\r\n            return result\r\n        }, [])\r\n    },\r\n    _occupyCells: function(itemCell, itemInfo) {\r\n        if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\r\n            return\r\n        }\r\n        extend(itemCell, itemInfo);\r\n        this._markSpanningCell(itemCell)\r\n    },\r\n    _isItemCellOccupied: function(itemCell, itemInfo) {\r\n        if (!typeUtils.isEmptyObject(itemCell.item)) {\r\n            return true\r\n        }\r\n        var result = false;\r\n        this._loopOverSpanning(itemInfo.location, function(cell) {\r\n            result = result || !typeUtils.isEmptyObject(cell.item)\r\n        });\r\n        return result\r\n    },\r\n    _loopOverSpanning: function(location, callback) {\r\n        var rowEnd = location.row + location.rowspan - 1;\r\n        var colEnd = location.col + location.colspan - 1;\r\n        var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\r\n        var boundColEnd = Math.min(colEnd, this._cols.length - 1);\r\n        location.rowspan -= rowEnd - boundRowEnd;\r\n        location.colspan -= colEnd - boundColEnd;\r\n        for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\r\n            for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\r\n                if (rowIndex !== location.row || colIndex !== location.col) {\r\n                    callback(this._grid[rowIndex][colIndex])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _markSpanningCell: function(itemCell) {\r\n        this._loopOverSpanning(itemCell.location, function(cell) {\r\n            extend(cell, {\r\n                item: itemCell.item,\r\n                spanningCell: itemCell\r\n            })\r\n        })\r\n    },\r\n    _linkNodeToItem: function() {\r\n        iteratorUtils.each(this._itemElements(), function(_, itemNode) {\r\n            var $item = $(itemNode),\r\n                item = $item.data(BOX_ITEM_DATA_KEY);\r\n            if (!item.box) {\r\n                item.node = $item.children()\r\n            }\r\n        })\r\n    },\r\n    _layoutItems: function() {\r\n        var rowsCount = this._grid.length;\r\n        var colsCount = rowsCount && this._grid[0].length;\r\n        if (!rowsCount && !colsCount) {\r\n            return\r\n        }\r\n        var result = this._layoutBlock({\r\n            direction: \"col\",\r\n            row: {\r\n                start: 0,\r\n                end: rowsCount - 1\r\n            },\r\n            col: {\r\n                start: 0,\r\n                end: colsCount - 1\r\n            }\r\n        });\r\n        var rootBox = this._prepareBoxConfig(result.box || {\r\n            direction: \"row\",\r\n            items: [extend(result, {\r\n                ratio: 1\r\n            })]\r\n        });\r\n        extend(rootBox, this._rootBoxConfig(rootBox.items));\r\n        this._$root = $(\"<div>\").appendTo(this._itemContainer());\r\n        this._createComponent(this._$root, Box, rootBox)\r\n    },\r\n    _rootBoxConfig: function(items) {\r\n        var rootItems = iteratorUtils.each(items, function(index, item) {\r\n            this._needApplyAutoBaseSize(item) && extend(item, {\r\n                baseSize: \"auto\"\r\n            })\r\n        }.bind(this));\r\n        return extend({\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            items: rootItems,\r\n            itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onItemHold: this._createActionByOption(\"onItemHold\"),\r\n            onItemClick: this._createActionByOption(\"onItemClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\r\n            onItemRendered: this._createActionByOption(\"onItemRendered\")\r\n        }, {\r\n            _layoutStrategy: this.option(\"_layoutStrategy\")\r\n        })\r\n    },\r\n    _needApplyAutoBaseSize: function(item) {\r\n        return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize)\r\n    },\r\n    _prepareBoxConfig: function(config) {\r\n        return extend(config || {}, {\r\n            crossAlign: \"stretch\",\r\n            onItemStateChanged: this.option(\"onItemStateChanged\")\r\n        })\r\n    },\r\n    _layoutBlock: function(options) {\r\n        if (this._isSingleItem(options)) {\r\n            return this._itemByCell(options.row.start, options.col.start)\r\n        }\r\n        return this._layoutDirection(options)\r\n    },\r\n    _isSingleItem: function(options) {\r\n        var firstCellLocation = this._grid[options.row.start][options.col.start].location;\r\n        var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\r\n        var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\r\n        return isItemRowSpanned && isItemColSpanned\r\n    },\r\n    _itemByCell: function(rowIndex, colIndex) {\r\n        var itemCell = this._grid[rowIndex][colIndex];\r\n        return itemCell.spanningCell ? null : itemCell.item\r\n    },\r\n    _layoutDirection: function(options) {\r\n        var items = [];\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var block;\r\n        while (block = this._nextBlock(options)) {\r\n            if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\r\n                throw errors.Error(\"E1025\")\r\n            }\r\n            var item = this._layoutBlock({\r\n                direction: crossDirection,\r\n                row: block.row,\r\n                col: block.col,\r\n                prevBlockOptions: options\r\n            });\r\n            if (item) {\r\n                extend(item, this._blockSize(block, crossDirection));\r\n                items.push(item)\r\n            }\r\n            options[crossDirection].start = block[crossDirection].end + 1\r\n        }\r\n        return {\r\n            box: this._prepareBoxConfig({\r\n                direction: direction,\r\n                items: items\r\n            })\r\n        }\r\n    },\r\n    _isBlockIndivisible: function(options, block) {\r\n        return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end\r\n    },\r\n    _crossDirection: function(direction) {\r\n        return \"col\" === direction ? \"row\" : \"col\"\r\n    },\r\n    _nextBlock: function(options) {\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var startIndex = options[direction].start;\r\n        var endIndex = options[direction].end;\r\n        var crossStartIndex = options[crossDirection].start;\r\n        if (crossStartIndex > options[crossDirection].end) {\r\n            return null\r\n        }\r\n        var crossSpan = 1;\r\n        for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\r\n            var lineCrossSpan = 1;\r\n            for (var index = startIndex; index <= endIndex; index++) {\r\n                var cell = this._cellByDirection(direction, index, crossIndex);\r\n                lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"])\r\n            }\r\n            var lineCrossEndIndex = crossIndex + lineCrossSpan;\r\n            var crossEndIndex = crossStartIndex + crossSpan;\r\n            if (lineCrossEndIndex > crossEndIndex) {\r\n                crossSpan += lineCrossEndIndex - crossEndIndex\r\n            }\r\n        }\r\n        var result = {};\r\n        result[direction] = {\r\n            start: startIndex,\r\n            end: endIndex\r\n        };\r\n        result[crossDirection] = {\r\n            start: crossStartIndex,\r\n            end: crossStartIndex + crossSpan - 1\r\n        };\r\n        return result\r\n    },\r\n    _cellByDirection: function(direction, index, crossIndex) {\r\n        return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex]\r\n    },\r\n    _blockSize: function(block, direction) {\r\n        var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\r\n        var result = {\r\n            ratio: 0,\r\n            baseSize: 0,\r\n            minSize: 0,\r\n            maxSize: 0\r\n        };\r\n        for (var index = block[direction].start; index <= block[direction].end; index++) {\r\n            var sizeConfig = sizeConfigs[index];\r\n            result.ratio += sizeConfig.ratio;\r\n            result.baseSize += sizeConfig.baseSize;\r\n            result.minSize += sizeConfig.minSize;\r\n            result.maxSize += sizeConfig.maxSize\r\n        }\r\n        result.minSize = result.minSize ? result.minSize : \"auto\";\r\n        result.maxSize = result.maxSize ? result.maxSize : \"auto\";\r\n        this._isSingleColumnScreen() && (result.baseSize = \"auto\");\r\n        return result\r\n    },\r\n    _update: function() {\r\n        var $existingRoot = this._$root;\r\n        this._renderItems();\r\n        $existingRoot && $existingRoot.detach();\r\n        this._saveAssistantRoot($existingRoot);\r\n        this._layoutChangedAction();\r\n        this._updateRootBox()\r\n    },\r\n    _saveAssistantRoot: function($root) {\r\n        this._assistantRoots = this._assistantRoots || [];\r\n        this._assistantRoots.push($root)\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._clearItemNodeTemplates();\r\n        this._cleanUnusedRoots();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _cleanUnusedRoots: function() {\r\n        if (!this._assistantRoots) {\r\n            return\r\n        }\r\n        iteratorUtils.each(this._assistantRoots, function(_, item) {\r\n            $(item).remove()\r\n        })\r\n    },\r\n    _clearItemNodeTemplates: function() {\r\n        iteratorUtils.each(this.option(\"items\"), function() {\r\n            delete this.node\r\n        })\r\n    },\r\n    _toggleVisibility: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._updateRootBox()\r\n        }\r\n    },\r\n    _attachClickEvent: commonUtils.noop,\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"rows\":\r\n            case \"cols\":\r\n            case \"screenByWidth\":\r\n            case \"_layoutStrategy\":\r\n            case \"singleColumnScreen\":\r\n                this._clearItemNodeTemplates();\r\n                this._invalidate();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._update();\r\n                break;\r\n            case \"onLayoutChanged\":\r\n                this._initLayoutChangedAction();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._clearItemNodeTemplates();\r\n                this.callBase(args);\r\n                break;\r\n            case \"currentScreenFactor\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\r\n            this._update()\r\n        }\r\n    },\r\n    repaint: function() {\r\n        this._update()\r\n    }\r\n});\r\nregisterComponent(\"dxResponsiveBox\", ResponsiveBox);\r\nmodule.exports = ResponsiveBox;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/responsive_box.js\n// module id = 835\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/tab_panel.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    support = require(\"../core/utils/support\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    devices = require(\"../core/devices\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    MultiView = require(\"./multi_view\"),\r\n    Tabs = require(\"./tabs\"),\r\n    iconUtils = require(\"../core/utils/icon\"),\r\n    getPublicElement = require(\"../core/utils/dom\").getPublicElement,\r\n    BindableTemplate = require(\"./widget/bindable_template\"),\r\n    windowUtils = require(\"../core/utils/window\");\r\nvar TABPANEL_CLASS = \"dx-tabpanel\",\r\n    TABPANEL_TABS_CLASS = \"dx-tabpanel-tabs\",\r\n    TABPANEL_CONTAINER_CLASS = \"dx-tabpanel-container\",\r\n    TABS_ITEM_TEXT_CLASS = \"dx-tab-text\";\r\nvar TabPanel = MultiView.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            itemTitleTemplate: \"title\",\r\n            hoverStateEnabled: true,\r\n            showNavButtons: false,\r\n            scrollByContent: true,\r\n            scrollingEnabled: true,\r\n            onTitleClick: null,\r\n            onTitleHold: null,\r\n            onTitleRendered: null\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return !support.touch\r\n            },\r\n            options: {\r\n                swipeEnabled: false\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                animationEnabled: false\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TABPANEL_CLASS);\r\n        this.setAria(\"role\", \"tabpanel\")\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._createTitleActions();\r\n        this._renderLayout()\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.title = new BindableTemplate(function($container, data) {\r\n            $container.text(data.title || String(data));\r\n            var $iconElement = iconUtils.getImageContainer(data.icon);\r\n            $container.wrapInner($(\"<span>\").addClass(TABS_ITEM_TEXT_CLASS));\r\n            $iconElement && $iconElement.prependTo($container)\r\n        }, [\"title\", \"html\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\r\n    },\r\n    _createTitleActions: function() {\r\n        this._createTitleClickAction();\r\n        this._createTitleHoldAction();\r\n        this._createTitleRenderedAction()\r\n    },\r\n    _createTitleClickAction: function() {\r\n        this._titleClickAction = this._createActionByOption(\"onTitleClick\")\r\n    },\r\n    _createTitleHoldAction: function() {\r\n        this._titleHoldAction = this._createActionByOption(\"onTitleHold\")\r\n    },\r\n    _createTitleRenderedAction: function() {\r\n        this._titleRenderedAction = this._createActionByOption(\"onTitleRendered\")\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        if (this.option(\"templatesRenderAsynchronously\")) {\r\n            this._resizeEventTimer = setTimeout(function() {\r\n                that._updateLayout()\r\n            }, 0)\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        if (this._tabs) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        this._$tabContainer = $(\"<div>\").addClass(TABPANEL_TABS_CLASS).appendTo($element);\r\n        var $tabs = $(\"<div>\").appendTo(this._$tabContainer);\r\n        this._tabs = this._createComponent($tabs, Tabs, this._tabConfig());\r\n        this._$container = $(\"<div>\").addClass(TABPANEL_CONTAINER_CLASS).appendTo($element);\r\n        this._$container.append(this._$wrapper);\r\n        this._updateLayout()\r\n    },\r\n    _updateLayout: function() {\r\n        if (windowUtils.hasWindow()) {\r\n            var tabsHeight = this._$tabContainer.outerHeight();\r\n            this._$container.css({\r\n                marginTop: -tabsHeight,\r\n                paddingTop: tabsHeight\r\n            })\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function() {\r\n        if (!this._tabs) {\r\n            return\r\n        }\r\n        var tabs = this._tabs,\r\n            tabItems = tabs.itemElements(),\r\n            $activeTab = $(tabItems[tabs.option(\"selectedIndex\")]),\r\n            id = this.getFocusedItemId();\r\n        this.setAria(\"controls\", void 0, $(tabItems));\r\n        this.setAria(\"controls\", id, $activeTab)\r\n    },\r\n    _tabConfig: function() {\r\n        return {\r\n            selectOnFocus: true,\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            repaintChangesOnly: this.option(\"repaintChangesOnly\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            selectedIndex: this.option(\"selectedIndex\"),\r\n            onItemClick: this._titleClickAction.bind(this),\r\n            onItemHold: this._titleHoldAction.bind(this),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onSelectionChanged: function(e) {\r\n                this.option(\"selectedIndex\", e.component.option(\"selectedIndex\"));\r\n                this._refreshActiveDescendant()\r\n            }.bind(this),\r\n            onItemRendered: this._titleRenderedAction.bind(this),\r\n            itemTemplate: this._getTemplateByOption(\"itemTitleTemplate\"),\r\n            items: this.option(\"items\"),\r\n            noDataText: null,\r\n            scrollingEnabled: this.option(\"scrollingEnabled\"),\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            showNavButtons: this.option(\"showNavButtons\"),\r\n            itemTemplateProperty: \"tabTemplate\",\r\n            loopItemFocus: this.option(\"loop\"),\r\n            selectionRequired: true,\r\n            onOptionChanged: function(args) {\r\n                if (\"focusedElement\" === args.name) {\r\n                    if (args.value) {\r\n                        var $value = $(args.value);\r\n                        var $newItem = this._itemElements().eq($value.index());\r\n                        this.option(\"focusedElement\", getPublicElement($newItem))\r\n                    } else {\r\n                        this.option(\"focusedElement\", args.value)\r\n                    }\r\n                }\r\n            }.bind(this),\r\n            onFocusIn: function(args) {\r\n                this._focusInHandler(args.event)\r\n            }.bind(this),\r\n            onFocusOut: function(args) {\r\n                this._focusOutHandler(args.event)\r\n            }.bind(this)\r\n        }\r\n    },\r\n    _renderFocusTarget: function() {\r\n        this._focusTarget().attr(\"tabIndex\", -1);\r\n        this._refreshActiveDescendant()\r\n    },\r\n    _updateFocusState: function(e, isFocused) {\r\n        this.callBase(e, isFocused);\r\n        if (e.target === this._tabs._focusTarget().get(0)) {\r\n            this._toggleFocusClass(isFocused, this._focusTarget())\r\n        }\r\n    },\r\n    _setTabsOption: function(name, value) {\r\n        if (this._tabs) {\r\n            this._tabs.option(name, value)\r\n        }\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._tabs._dimensionChanged();\r\n            this._updateLayout()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name,\r\n            value = args.value,\r\n            fullName = args.fullName;\r\n        switch (name) {\r\n            case \"dataSource\":\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._setTabsOption(fullName, value);\r\n                this._updateLayout();\r\n                if (!this.option(\"repaintChangesOnly\")) {\r\n                    this._tabs.repaint()\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"selectedIndex\":\r\n            case \"selectedItem\":\r\n            case \"itemHoldTimeout\":\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setTabsOption(fullName, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"scrollingEnabled\":\r\n            case \"scrollByContent\":\r\n            case \"showNavButtons\":\r\n                this._setTabsOption(fullName, value);\r\n                break;\r\n            case \"focusedElement\":\r\n                var id = value ? $(value).index() : value;\r\n                var newItem = value ? this._tabs._itemElements().eq(id) : value;\r\n                this._setTabsOption(\"focusedElement\", getPublicElement(newItem));\r\n                this.callBase(args);\r\n                break;\r\n            case \"itemTitleTemplate\":\r\n                this._setTabsOption(\"itemTemplate\", this._getTemplateByOption(\"itemTitleTemplate\"));\r\n                break;\r\n            case \"onTitleClick\":\r\n                this._createTitleClickAction();\r\n                this._setTabsOption(\"onItemClick\", this._titleClickAction.bind(this));\r\n                break;\r\n            case \"onTitleHold\":\r\n                this._createTitleHoldAction();\r\n                this._setTabsOption(\"onItemHold\", this._titleHoldAction.bind(this));\r\n                break;\r\n            case \"onTitleRendered\":\r\n                this._createTitleRenderedAction();\r\n                this._setTabsOption(\"onItemRendered\", this._titleRenderedAction.bind(this));\r\n                break;\r\n            case \"loop\":\r\n                this._setTabsOption(\"loopItemFocus\", value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        clearTimeout(this._resizeEventTimer);\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxTabPanel\", TabPanel);\r\nmodule.exports = TabPanel;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/tab_panel.js\n// module id = 836\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/multi_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    fx = require(\"../animation/fx\"),\r\n    translator = require(\"../animation/translator\"),\r\n    mathUtils = require(\"../core/utils/math\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    noop = require(\"../core/utils/common\").noop,\r\n    domUtils = require(\"../core/utils/dom\"),\r\n    isDefined = require(\"../core/utils/type\").isDefined,\r\n    devices = require(\"../core/devices\"),\r\n    getPublicElement = require(\"../core/utils/dom\").getPublicElement,\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    CollectionWidget = require(\"./collection/ui.collection_widget.live_update\").default,\r\n    Swipeable = require(\"../events/gesture/swipeable\"),\r\n    Deferred = require(\"../core/utils/deferred\").Deferred;\r\nvar MULTIVIEW_CLASS = \"dx-multiview\",\r\n    MULTIVIEW_WRAPPER_CLASS = \"dx-multiview-wrapper\",\r\n    MULTIVIEW_ITEM_CONTAINER_CLASS = \"dx-multiview-item-container\",\r\n    MULTIVIEW_ITEM_CLASS = \"dx-multiview-item\",\r\n    MULTIVIEW_ITEM_HIDDEN_CLASS = \"dx-multiview-item-hidden\",\r\n    MULTIVIEW_ITEM_DATA_KEY = \"dxMultiViewItemData\",\r\n    MULTIVIEW_ANIMATION_DURATION = 200;\r\nvar toNumber = function(value) {\r\n    return +value\r\n};\r\nvar position = function($element) {\r\n    return translator.locate($element).left\r\n};\r\nvar move = function($element, position) {\r\n    translator.move($element, {\r\n        left: position\r\n    })\r\n};\r\nvar animation = {\r\n    moveTo: function($element, position, duration, completeAction) {\r\n        fx.animate($element, {\r\n            type: \"slide\",\r\n            to: {\r\n                left: position\r\n            },\r\n            duration: duration,\r\n            complete: completeAction\r\n        })\r\n    },\r\n    complete: function($element) {\r\n        fx.stop($element, true)\r\n    }\r\n};\r\nvar MultiView = CollectionWidget.inherit({\r\n    _activeStateUnit: \".\" + MULTIVIEW_ITEM_CLASS,\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            pageUp: noop,\r\n            pageDown: noop\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            selectedIndex: 0,\r\n            swipeEnabled: true,\r\n            animationEnabled: true,\r\n            loop: false,\r\n            deferRendering: true,\r\n            _itemAttributes: {\r\n                role: \"tabpanel\"\r\n            },\r\n            loopItemFocus: false,\r\n            selectOnFocus: true,\r\n            selectionMode: \"single\",\r\n            selectionRequired: true,\r\n            selectionByClick: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _itemClass: function() {\r\n        return MULTIVIEW_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return MULTIVIEW_ITEM_DATA_KEY\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$itemContainer\r\n    },\r\n    _itemElements: function() {\r\n        return this._itemContainer().children(this._itemSelector())\r\n    },\r\n    _itemWidth: function() {\r\n        if (!this._itemWidthValue) {\r\n            this._itemWidthValue = this._$wrapper.width()\r\n        }\r\n        return this._itemWidthValue\r\n    },\r\n    _clearItemWidthCache: function() {\r\n        delete this._itemWidthValue\r\n    },\r\n    _itemsCount: function() {\r\n        return this.option(\"items\").length\r\n    },\r\n    _normalizeIndex: function(index) {\r\n        var count = this._itemsCount();\r\n        if (index < 0) {\r\n            index += count\r\n        }\r\n        if (index >= count) {\r\n            index -= count\r\n        }\r\n        return index\r\n    },\r\n    _getRTLSignCorrection: function() {\r\n        return this.option(\"rtlEnabled\") ? -1 : 1\r\n    },\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var $element = this.$element();\r\n        $element.addClass(MULTIVIEW_CLASS);\r\n        this._$wrapper = $(\"<div>\").addClass(MULTIVIEW_WRAPPER_CLASS);\r\n        this._$wrapper.appendTo($element);\r\n        this._$itemContainer = $(\"<div>\").addClass(MULTIVIEW_ITEM_CONTAINER_CLASS);\r\n        this._$itemContainer.appendTo(this._$wrapper);\r\n        this.option(\"loopItemFocus\", this.option(\"loop\"));\r\n        this._initSwipeable()\r\n    },\r\n    _initMarkup: function() {\r\n        this._deferredItems = [];\r\n        this.callBase()\r\n    },\r\n    _renderItemContent: function(args) {\r\n        var renderContentDeferred = new Deferred;\r\n        var that = this,\r\n            callBase = this.callBase;\r\n        var deferred = new Deferred;\r\n        deferred.done(function() {\r\n            var $itemContent = callBase.call(that, args);\r\n            renderContentDeferred.resolve($itemContent)\r\n        });\r\n        this._deferredItems[args.index] = deferred;\r\n        this.option(\"deferRendering\") || deferred.resolve();\r\n        return renderContentDeferred.promise()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var selectedItemIndices = this._getSelectedItemIndices();\r\n        this._updateItemsPosition(selectedItemIndices[0]);\r\n        this._updateItemsVisibility(selectedItemIndices[0])\r\n    },\r\n    _renderSelection: function(addedSelection) {\r\n        this._updateItemsVisibility(addedSelection[0])\r\n    },\r\n    _updateItems: function(selectedIndex, newIndex) {\r\n        this._updateItemsPosition(selectedIndex, newIndex);\r\n        this._updateItemsVisibility(selectedIndex, newIndex)\r\n    },\r\n    _updateItemsPosition: function(selectedIndex, newIndex) {\r\n        var $itemElements = this._itemElements(),\r\n            positionSign = -this._animationDirection(newIndex, selectedIndex),\r\n            $selectedItem = $itemElements.eq(selectedIndex);\r\n        move($selectedItem, 0);\r\n        move($itemElements.eq(newIndex), 100 * positionSign + \"%\")\r\n    },\r\n    _updateItemsVisibility: function(selectedIndex, newIndex) {\r\n        var $itemElements = this._itemElements();\r\n        $itemElements.each(function(itemIndex, item) {\r\n            var $item = $(item),\r\n                isHidden = itemIndex !== selectedIndex && itemIndex !== newIndex;\r\n            if (!isHidden) {\r\n                this._renderSpecificItem(itemIndex)\r\n            }\r\n            $item.toggleClass(MULTIVIEW_ITEM_HIDDEN_CLASS, isHidden);\r\n            this.setAria(\"hidden\", isHidden || void 0, $item)\r\n        }.bind(this))\r\n    },\r\n    _renderSpecificItem: function(index) {\r\n        var $item = this._itemElements().eq(index),\r\n            hasItemContent = $item.find(this._itemContentClass()).length > 0;\r\n        if (isDefined(index) && !hasItemContent) {\r\n            this._deferredItems[index].resolve();\r\n            domUtils.triggerResizeEvent($item)\r\n        }\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        this.callBase($item, item);\r\n        this._updateItemsVisibility(this.option(\"selectedIndex\"))\r\n    },\r\n    _setAriaSelected: noop,\r\n    _updateSelection: function(addedSelection, removedSelection) {\r\n        var newIndex = addedSelection[0],\r\n            prevIndex = removedSelection[0];\r\n        animation.complete(this._$itemContainer);\r\n        this._updateItems(prevIndex, newIndex);\r\n        var animationDirection = this._animationDirection(newIndex, prevIndex);\r\n        this._animateItemContainer(animationDirection * this._itemWidth(), function() {\r\n            move(this._$itemContainer, 0);\r\n            this._updateItems(newIndex);\r\n            this._$itemContainer.width()\r\n        }.bind(this))\r\n    },\r\n    _animateItemContainer: function(position, completeCallback) {\r\n        var duration = this.option(\"animationEnabled\") ? MULTIVIEW_ANIMATION_DURATION : 0;\r\n        animation.moveTo(this._$itemContainer, position, duration, completeCallback)\r\n    },\r\n    _animationDirection: function(newIndex, prevIndex) {\r\n        var containerPosition = position(this._$itemContainer),\r\n            indexDifference = (prevIndex - newIndex) * this._getRTLSignCorrection() * this._getItemFocusLoopSignCorrection(),\r\n            isSwipePresent = 0 !== containerPosition,\r\n            directionSignVariable = isSwipePresent ? containerPosition : indexDifference;\r\n        return mathUtils.sign(directionSignVariable)\r\n    },\r\n    _initSwipeable: function() {\r\n        this._createComponent(this.$element(), Swipeable, {\r\n            disabled: !this.option(\"swipeEnabled\"),\r\n            elastic: false,\r\n            itemSizeFunc: this._itemWidth.bind(this),\r\n            onStart: function(args) {\r\n                this._swipeStartHandler(args.event)\r\n            }.bind(this),\r\n            onUpdated: function(args) {\r\n                this._swipeUpdateHandler(args.event)\r\n            }.bind(this),\r\n            onEnd: function(args) {\r\n                this._swipeEndHandler(args.event)\r\n            }.bind(this)\r\n        })\r\n    },\r\n    _swipeStartHandler: function(e) {\r\n        animation.complete(this._$itemContainer);\r\n        var selectedIndex = this.option(\"selectedIndex\"),\r\n            loop = this.option(\"loop\"),\r\n            lastIndex = this._itemsCount() - 1,\r\n            rtl = this.option(\"rtlEnabled\");\r\n        e.maxLeftOffset = toNumber(loop || (rtl ? selectedIndex > 0 : selectedIndex < lastIndex));\r\n        e.maxRightOffset = toNumber(loop || (rtl ? selectedIndex < lastIndex : selectedIndex > 0));\r\n        this._swipeDirection = null\r\n    },\r\n    _swipeUpdateHandler: function(e) {\r\n        var offset = e.offset,\r\n            swipeDirection = mathUtils.sign(offset) * this._getRTLSignCorrection();\r\n        move(this._$itemContainer, offset * this._itemWidth());\r\n        if (swipeDirection !== this._swipeDirection) {\r\n            this._swipeDirection = swipeDirection;\r\n            var selectedIndex = this.option(\"selectedIndex\"),\r\n                newIndex = this._normalizeIndex(selectedIndex - swipeDirection);\r\n            this._updateItems(selectedIndex, newIndex)\r\n        }\r\n    },\r\n    _swipeEndHandler: function(e) {\r\n        var targetOffset = e.targetOffset * this._getRTLSignCorrection();\r\n        if (targetOffset) {\r\n            this.option(\"selectedIndex\", this._normalizeIndex(this.option(\"selectedIndex\") - targetOffset));\r\n            var $selectedElement = this.itemElements().filter(\".dx-item-selected\");\r\n            this.option(\"focusStateEnabled\") && this.option(\"focusedElement\", getPublicElement($selectedElement))\r\n        } else {\r\n            this._animateItemContainer(0, noop)\r\n        }\r\n    },\r\n    _getItemFocusLoopSignCorrection: function() {\r\n        return this._itemFocusLooped ? -1 : 1\r\n    },\r\n    _moveFocus: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = false\r\n    },\r\n    _prevItem: function($items) {\r\n        var $result = this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = $result.is($items.last());\r\n        return $result\r\n    },\r\n    _nextItem: function($items) {\r\n        var $result = this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = $result.is($items.first());\r\n        return $result\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._clearItemWidthCache()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"loop\":\r\n                this.option(\"loopItemFocus\", value);\r\n                break;\r\n            case \"animationEnabled\":\r\n                break;\r\n            case \"swipeEnabled\":\r\n                Swipeable.getInstance(this.$element()).option(\"disabled\", !value);\r\n                break;\r\n            case \"deferRendering\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxMultiView\", MultiView);\r\nmodule.exports = MultiView;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/multi_view.js\n// module id = 837\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/tabs.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    devices = require(\"../core/devices\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    Button = require(\"./button\"),\r\n    inkRipple = require(\"./widget/utils.ink_ripple\"),\r\n    eventUtils = require(\"../events/utils\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    isPlainObject = require(\"../core/utils/type\").isPlainObject,\r\n    pointerEvents = require(\"../events/pointer\"),\r\n    TabsItem = require(\"./tabs/item\"),\r\n    themes = require(\"./themes\"),\r\n    holdEvent = require(\"../events/hold\"),\r\n    Scrollable = require(\"./scroll_view/ui.scrollable\"),\r\n    CollectionWidget = require(\"./collection/ui.collection_widget.live_update\").default,\r\n    iconUtils = require(\"../core/utils/icon\"),\r\n    BindableTemplate = require(\"./widget/bindable_template\");\r\nvar TABS_CLASS = \"dx-tabs\",\r\n    TABS_WRAPPER_CLASS = \"dx-tabs-wrapper\",\r\n    TABS_EXPANDED_CLASS = \"dx-tabs-expanded\",\r\n    TABS_SCROLLABLE_CLASS = \"dx-tabs-scrollable\",\r\n    TABS_NAV_BUTTONS_CLASS = \"dx-tabs-nav-buttons\",\r\n    OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\",\r\n    TABS_ITEM_CLASS = \"dx-tab\",\r\n    TABS_ITEM_SELECTED_CLASS = \"dx-tab-selected\",\r\n    TABS_NAV_BUTTON_CLASS = \"dx-tabs-nav-button\",\r\n    TABS_LEFT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-left\",\r\n    TABS_RIGHT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-right\",\r\n    TABS_ITEM_TEXT_CLASS = \"dx-tab-text\",\r\n    TABS_ITEM_DATA_KEY = \"dxTabData\",\r\n    BUTTON_NEXT_ICON = \"chevronnext\",\r\n    BUTTON_PREV_ICON = \"chevronprev\",\r\n    FEEDBACK_HIDE_TIMEOUT = 100,\r\n    FEEDBACK_DURATION_INTERVAL = 5,\r\n    FEEDBACK_SCROLL_TIMEOUT = 300,\r\n    TAB_OFFSET = 30;\r\nvar Tabs = CollectionWidget.inherit({\r\n    _activeStateUnit: \".\" + TABS_ITEM_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            showNavButtons: true,\r\n            scrollByContent: true,\r\n            scrollingEnabled: true,\r\n            selectionMode: \"single\",\r\n            activeStateEnabled: true,\r\n            selectionRequired: false,\r\n            selectOnFocus: true,\r\n            loopItemFocus: false,\r\n            useInkRipple: false,\r\n            badgeExpr: function(data) {\r\n                return data ? data.badge : void 0\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = themes.current();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"generic\" !== devices.real().platform\r\n            },\r\n            options: {\r\n                showNavButtons: false\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                scrollByContent: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isAndroid5(themeName)\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isMaterial(themeName)\r\n            },\r\n            options: {\r\n                useInkRipple: true,\r\n                selectOnFocus: false\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.setAria(\"role\", \"tablist\");\r\n        this.$element().addClass(TABS_CLASS);\r\n        this._renderWrapper();\r\n        this._renderMultiple();\r\n        this._feedbackHideTimeout = FEEDBACK_HIDE_TIMEOUT\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.item = new BindableTemplate(function($container, data) {\r\n            if (isPlainObject(data)) {\r\n                this._prepareDefaultItemTemplate(data, $container)\r\n            } else {\r\n                $container.text(String(data))\r\n            }\r\n            var $iconElement = iconUtils.getImageContainer(data.icon);\r\n            $container.wrapInner($(\"<span>\").addClass(TABS_ITEM_TEXT_CLASS));\r\n            $iconElement && $iconElement.prependTo($container)\r\n        }.bind(this), [\"text\", \"html\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\r\n    },\r\n    _itemClass: function() {\r\n        return TABS_ITEM_CLASS\r\n    },\r\n    _selectedItemClass: function() {\r\n        return TABS_ITEM_SELECTED_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return TABS_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.setAria(\"role\", \"tab\", this.itemElements());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.$element().addClass(OVERFLOW_HIDDEN_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderScrolling()\r\n    },\r\n    _renderScrolling: function() {\r\n        this.$element().removeClass(TABS_EXPANDED_CLASS);\r\n        this.$element().removeClass(OVERFLOW_HIDDEN_CLASS);\r\n        if (this._allowScrolling()) {\r\n            if (!this._scrollable) {\r\n                this._renderScrollable();\r\n                this._renderNavButtons()\r\n            }\r\n            this._scrollable.update();\r\n            this._updateNavButtonsVisibility();\r\n            if (this.option(\"rtlEnabled\")) {\r\n                this._scrollable.scrollTo({\r\n                    left: this._scrollable.scrollWidth() - this._scrollable.clientWidth()\r\n                })\r\n            }\r\n            this._scrollToItem(this.option(\"selectedItem\"))\r\n        }\r\n        if (!this._allowScrolling()) {\r\n            this._cleanScrolling();\r\n            this.$element().removeClass(TABS_NAV_BUTTONS_CLASS).addClass(TABS_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _cleanNavButtons: function() {\r\n        if (!this._leftButton || !this._rightButton) {\r\n            return\r\n        }\r\n        this._leftButton.$element().remove();\r\n        this._rightButton.$element().remove();\r\n        this._leftButton = null;\r\n        this._rightButton = null\r\n    },\r\n    _cleanScrolling: function() {\r\n        if (!this._scrollable) {\r\n            return\r\n        }\r\n        this._$wrapper.appendTo(this.$element());\r\n        this._scrollable.$element().remove();\r\n        this._scrollable = null;\r\n        this._cleanNavButtons()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _renderMultiple: function() {\r\n        if (\"multiple\" === this.option(\"selectionMode\")) {\r\n            this.option(\"selectOnFocus\", false)\r\n        }\r\n    },\r\n    _renderWrapper: function() {\r\n        this._$wrapper = $(\"<div>\").addClass(TABS_WRAPPER_CLASS);\r\n        this.$element().append(this._$wrapper)\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$wrapper\r\n    },\r\n    _renderScrollable: function() {\r\n        var $itemContainer = this.$element().wrapInner($(\"<div>\").addClass(TABS_SCROLLABLE_CLASS)).children();\r\n        this._scrollable = this._createComponent($itemContainer, Scrollable, {\r\n            direction: \"horizontal\",\r\n            showScrollbar: false,\r\n            useKeyboard: false,\r\n            useNative: false,\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            onScroll: this._updateNavButtonsVisibility.bind(this)\r\n        });\r\n        this.$element().append(this._scrollable.$element())\r\n    },\r\n    _scrollToItem: function(itemData) {\r\n        if (!this._scrollable) {\r\n            return\r\n        }\r\n        var $item = this._editStrategy.getItemElement(itemData);\r\n        this._scrollable.scrollToElement($item)\r\n    },\r\n    _allowScrolling: function() {\r\n        if (!this.option(\"scrollingEnabled\")) {\r\n            return false\r\n        }\r\n        var tabItemsWidth = this._getSummaryItemsWidth(this._getAvailableItems(), true);\r\n        return tabItemsWidth - 1 > this.$element().width()\r\n    },\r\n    _renderNavButtons: function() {\r\n        this.$element().toggleClass(TABS_NAV_BUTTONS_CLASS, this.option(\"showNavButtons\"));\r\n        if (!this.option(\"showNavButtons\")) {\r\n            return\r\n        }\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this._leftButton = this._createNavButton(-TAB_OFFSET, rtlEnabled ? BUTTON_NEXT_ICON : BUTTON_PREV_ICON);\r\n        var $leftButton = this._leftButton.$element();\r\n        $leftButton.addClass(TABS_LEFT_NAV_BUTTON_CLASS);\r\n        this.$element().prepend($leftButton);\r\n        this._rightButton = this._createNavButton(TAB_OFFSET, rtlEnabled ? BUTTON_PREV_ICON : BUTTON_NEXT_ICON);\r\n        var $rightButton = this._rightButton.$element();\r\n        $rightButton.addClass(TABS_RIGHT_NAV_BUTTON_CLASS);\r\n        this.$element().append($rightButton)\r\n    },\r\n    _updateNavButtonsVisibility: function() {\r\n        this._leftButton && this._leftButton.option(\"disabled\", this._scrollable.scrollLeft() <= 0);\r\n        this._rightButton && this._rightButton.option(\"disabled\", this._scrollable.scrollLeft() >= Math.round(this._scrollable.scrollWidth() - this._scrollable.clientWidth()))\r\n    },\r\n    _updateScrollPosition: function(offset, duration) {\r\n        this._scrollable.update();\r\n        this._scrollable.scrollBy(offset / duration)\r\n    },\r\n    _createNavButton: function(offset, icon) {\r\n        var that = this;\r\n        var holdAction = that._createAction(function() {\r\n                that._holdInterval = setInterval(function() {\r\n                    that._updateScrollPosition(offset, FEEDBACK_DURATION_INTERVAL)\r\n                }, FEEDBACK_DURATION_INTERVAL)\r\n            }),\r\n            holdEventName = eventUtils.addNamespace(holdEvent.name, \"dxNavButton\"),\r\n            pointerUpEventName = eventUtils.addNamespace(pointerEvents.up, \"dxNavButton\"),\r\n            pointerOutEventName = eventUtils.addNamespace(pointerEvents.out, \"dxNavButton\");\r\n        var navButton = this._createComponent($(\"<div>\").addClass(TABS_NAV_BUTTON_CLASS), Button, {\r\n            focusStateEnabled: false,\r\n            icon: icon,\r\n            onClick: function() {\r\n                that._updateScrollPosition(offset, 1)\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $navButton = navButton.$element();\r\n        eventsEngine.on($navButton, holdEventName, {\r\n            timeout: FEEDBACK_SCROLL_TIMEOUT\r\n        }, function(e) {\r\n            holdAction({\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        eventsEngine.on($navButton, pointerUpEventName, function() {\r\n            that._clearInterval()\r\n        });\r\n        eventsEngine.on($navButton, pointerOutEventName, function() {\r\n            that._clearInterval()\r\n        });\r\n        return navButton\r\n    },\r\n    _clearInterval: function() {\r\n        if (this._holdInterval) {\r\n            clearInterval(this._holdInterval)\r\n        }\r\n    },\r\n    _renderSelection: function(addedSelection) {\r\n        this._scrollable && this._scrollable.scrollToElement(this.itemElements().eq(addedSelection[0]), {\r\n            left: 1,\r\n            right: 1\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this.option(\"scrollingEnabled\")) {\r\n            this._renderScrolling()\r\n        }\r\n    },\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _clean: function() {\r\n        this._cleanScrolling();\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useInkRipple\":\r\n            case \"scrollingEnabled\":\r\n            case \"showNavButtons\":\r\n                this._invalidate();\r\n                break;\r\n            case \"scrollByContent\":\r\n                this._scrollable && this._scrollable.option(args.name, args.value);\r\n                break;\r\n            case \"selectionMode\":\r\n                this._renderMultiple();\r\n                this.callBase(args);\r\n                break;\r\n            case \"badgeExpr\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nTabs.ItemClass = TabsItem;\r\nregisterComponent(\"dxTabs\", Tabs);\r\nmodule.exports = Tabs;\r\nmodule.exports.getTabsExpandedClass = TABS_EXPANDED_CLASS;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/tabs.js\n// module id = 838\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/tabs/item.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    CollectionWidgetItem = require(\"../collection/item\");\r\nvar TABS_ITEM_BADGE_CLASS = \"dx-tabs-item-badge\",\r\n    BADGE_CLASS = \"dx-badge\";\r\nvar TabsItem = CollectionWidgetItem.inherit({\r\n    _renderWatchers: function() {\r\n        this.callBase();\r\n        this._startWatcher(\"badge\", this._renderBadge.bind(this))\r\n    },\r\n    _renderBadge: function(badge) {\r\n        this._$element.children(\".\" + BADGE_CLASS).remove();\r\n        if (!badge) {\r\n            return\r\n        }\r\n        var $badge = $(\"<div>\").addClass(TABS_ITEM_BADGE_CLASS).addClass(BADGE_CLASS).text(badge);\r\n        this._$element.append($badge)\r\n    }\r\n});\r\nmodule.exports = TabsItem;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/tabs/item.js\n// module id = 839\n// module chunks = 1 3","/**\r\n * DevExtreme (ui/validation_group.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    DOMComponent = require(\"../core/dom_component\"),\r\n    ValidationSummary = require(\"./validation_summary\"),\r\n    ValidationEngine = require(\"./validation_engine\"),\r\n    Validator = require(\"./validator\");\r\nvar VALIDATION_ENGINE_CLASS = \"dx-validationgroup\";\r\nvar ValidationGroup = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return this.callBase()\r\n    },\r\n    _init: function() {\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        var $element = this.$element();\r\n        $element.addClass(VALIDATION_ENGINE_CLASS);\r\n        $element.find(\".dx-validator\").each(function(_, validatorContainer) {\r\n            Validator.getInstance($(validatorContainer))._initGroupRegistration()\r\n        });\r\n        $element.find(\".dx-validationsummary\").each(function(_, summaryContainer) {\r\n            ValidationSummary.getInstance($(summaryContainer))._initGroupRegistration()\r\n        });\r\n        this.callBase()\r\n    },\r\n    validate: function() {\r\n        return ValidationEngine.validateGroup(this)\r\n    },\r\n    reset: function() {\r\n        return ValidationEngine.resetGroup(this)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        ValidationEngine.removeGroup(this);\r\n        this.$element().removeClass(VALIDATION_ENGINE_CLASS);\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxValidationGroup\", ValidationGroup);\r\nmodule.exports = ValidationGroup;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/validation_group.js\n// module id = 840\n// module chunks = 1 3","/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar form_1 = require(\"devextreme/ui/form\");\nvar prop_types_1 = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar Form = /** @class */ (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = form_1.default;\n        _this._defaults = {\n            defaultFormData: \"formData\"\n        };\n        return _this;\n    }\n    Object.defineProperty(Form.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Form;\n}(component_1.Component));\nexports.Form = Form;\nForm.propTypes = {\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    alignItemLabels: prop_types_1.PropTypes.bool,\n    alignItemLabelsInAllGroups: prop_types_1.PropTypes.bool,\n    colCount: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.oneOf([\n            \"auto\"\n        ])\n    ]),\n    colCountByScreen: prop_types_1.PropTypes.object,\n    customizeItem: prop_types_1.PropTypes.func,\n    disabled: prop_types_1.PropTypes.bool,\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    formData: prop_types_1.PropTypes.object,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    items: prop_types_1.PropTypes.array,\n    labelLocation: prop_types_1.PropTypes.oneOf([\n        \"left\",\n        \"right\",\n        \"top\"\n    ]),\n    minColWidth: prop_types_1.PropTypes.number,\n    onContentReady: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onEditorEnterKey: prop_types_1.PropTypes.func,\n    onFieldDataChanged: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    optionalMark: prop_types_1.PropTypes.string,\n    readOnly: prop_types_1.PropTypes.bool,\n    requiredMark: prop_types_1.PropTypes.string,\n    requiredMessage: prop_types_1.PropTypes.string,\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    screenByWidth: prop_types_1.PropTypes.func,\n    scrollingEnabled: prop_types_1.PropTypes.bool,\n    showColonAfterLabel: prop_types_1.PropTypes.bool,\n    showOptionalMark: prop_types_1.PropTypes.bool,\n    showRequiredMark: prop_types_1.PropTypes.bool,\n    showValidationSummary: prop_types_1.PropTypes.bool,\n    tabIndex: prop_types_1.PropTypes.number,\n    validationGroup: prop_types_1.PropTypes.string,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Form\nvar ButtonItem = /** @class */ (function (_super) {\n    __extends(ButtonItem, _super);\n    function ButtonItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ButtonItem.OptionName = \"items\";\n    ButtonItem.IsCollectionItem = true;\n    ButtonItem.PredefinedProps = {\n        itemType: \"button\"\n    };\n    return ButtonItem;\n}(nested_option_1.default));\nexports.ButtonItem = ButtonItem;\n// owners:\n// ButtonItem\nvar ButtonOptions = /** @class */ (function (_super) {\n    __extends(ButtonOptions, _super);\n    function ButtonOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ButtonOptions.OptionName = \"buttonOptions\";\n    ButtonOptions.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    return ButtonOptions;\n}(nested_option_1.default));\nexports.ButtonOptions = ButtonOptions;\n// owners:\n// Form\nvar ColCountByScreen = /** @class */ (function (_super) {\n    __extends(ColCountByScreen, _super);\n    function ColCountByScreen() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColCountByScreen.OptionName = \"colCountByScreen\";\n    return ColCountByScreen;\n}(nested_option_1.default));\nexports.ColCountByScreen = ColCountByScreen;\n// owners:\n// SimpleItem\nvar CompareRule = /** @class */ (function (_super) {\n    __extends(CompareRule, _super);\n    function CompareRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CompareRule.OptionName = \"validationRules\";\n    CompareRule.IsCollectionItem = true;\n    CompareRule.PredefinedProps = {\n        type: \"compare\"\n    };\n    return CompareRule;\n}(nested_option_1.default));\nexports.CompareRule = CompareRule;\n// owners:\n// SimpleItem\nvar CustomRule = /** @class */ (function (_super) {\n    __extends(CustomRule, _super);\n    function CustomRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CustomRule.OptionName = \"validationRules\";\n    CustomRule.IsCollectionItem = true;\n    CustomRule.PredefinedProps = {\n        type: \"custom\"\n    };\n    return CustomRule;\n}(nested_option_1.default));\nexports.CustomRule = CustomRule;\n// owners:\n// SimpleItem\nvar EmailRule = /** @class */ (function (_super) {\n    __extends(EmailRule, _super);\n    function EmailRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmailRule.OptionName = \"validationRules\";\n    EmailRule.IsCollectionItem = true;\n    EmailRule.PredefinedProps = {\n        type: \"email\"\n    };\n    return EmailRule;\n}(nested_option_1.default));\nexports.EmailRule = EmailRule;\n// owners:\n// Form\nvar EmptyItem = /** @class */ (function (_super) {\n    __extends(EmptyItem, _super);\n    function EmptyItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmptyItem.OptionName = \"items\";\n    EmptyItem.IsCollectionItem = true;\n    EmptyItem.PredefinedProps = {\n        itemType: \"empty\"\n    };\n    return EmptyItem;\n}(nested_option_1.default));\nexports.EmptyItem = EmptyItem;\n// owners:\n// Form\nvar GroupItem = /** @class */ (function (_super) {\n    __extends(GroupItem, _super);\n    function GroupItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GroupItem.OptionName = \"items\";\n    GroupItem.IsCollectionItem = true;\n    GroupItem.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    GroupItem.PredefinedProps = {\n        itemType: \"group\"\n    };\n    return GroupItem;\n}(nested_option_1.default));\nexports.GroupItem = GroupItem;\n// owners:\n// Form\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Item.OptionName = \"items\";\n    Item.IsCollectionItem = true;\n    Item.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    Item.PredefinedProps = {\n        itemType: \"simple\"\n    };\n    return Item;\n}(nested_option_1.default));\nexports.Item = Item;\n// owners:\n// SimpleItem\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Label.OptionName = \"label\";\n    return Label;\n}(nested_option_1.default));\nexports.Label = Label;\n// owners:\n// SimpleItem\nvar NumericRule = /** @class */ (function (_super) {\n    __extends(NumericRule, _super);\n    function NumericRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericRule.OptionName = \"validationRules\";\n    NumericRule.IsCollectionItem = true;\n    NumericRule.PredefinedProps = {\n        type: \"numeric\"\n    };\n    return NumericRule;\n}(nested_option_1.default));\nexports.NumericRule = NumericRule;\n// owners:\n// SimpleItem\nvar PatternRule = /** @class */ (function (_super) {\n    __extends(PatternRule, _super);\n    function PatternRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PatternRule.OptionName = \"validationRules\";\n    PatternRule.IsCollectionItem = true;\n    PatternRule.PredefinedProps = {\n        type: \"pattern\"\n    };\n    return PatternRule;\n}(nested_option_1.default));\nexports.PatternRule = PatternRule;\n// owners:\n// SimpleItem\nvar RangeRule = /** @class */ (function (_super) {\n    __extends(RangeRule, _super);\n    function RangeRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RangeRule.OptionName = \"validationRules\";\n    RangeRule.IsCollectionItem = true;\n    RangeRule.PredefinedProps = {\n        type: \"range\"\n    };\n    return RangeRule;\n}(nested_option_1.default));\nexports.RangeRule = RangeRule;\n// owners:\n// SimpleItem\nvar RequiredRule = /** @class */ (function (_super) {\n    __extends(RequiredRule, _super);\n    function RequiredRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RequiredRule.OptionName = \"validationRules\";\n    RequiredRule.IsCollectionItem = true;\n    RequiredRule.PredefinedProps = {\n        type: \"required\"\n    };\n    return RequiredRule;\n}(nested_option_1.default));\nexports.RequiredRule = RequiredRule;\n// owners:\n// Form\nvar SimpleItem = /** @class */ (function (_super) {\n    __extends(SimpleItem, _super);\n    function SimpleItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SimpleItem.OptionName = \"items\";\n    SimpleItem.IsCollectionItem = true;\n    SimpleItem.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    SimpleItem.PredefinedProps = {\n        itemType: \"simple\"\n    };\n    return SimpleItem;\n}(nested_option_1.default));\nexports.SimpleItem = SimpleItem;\n// owners:\n// SimpleItem\nvar StringLengthRule = /** @class */ (function (_super) {\n    __extends(StringLengthRule, _super);\n    function StringLengthRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StringLengthRule.OptionName = \"validationRules\";\n    StringLengthRule.IsCollectionItem = true;\n    StringLengthRule.PredefinedProps = {\n        type: \"stringLength\"\n    };\n    return StringLengthRule;\n}(nested_option_1.default));\nexports.StringLengthRule = StringLengthRule;\n// owners:\n// TabbedItem\nvar Tab = /** @class */ (function (_super) {\n    __extends(Tab, _super);\n    function Tab() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Tab.OptionName = \"tabs\";\n    Tab.IsCollectionItem = true;\n    Tab.TemplateProps = [{\n            tmplOption: \"tabTemplate\",\n            render: \"tabRender\",\n            component: \"tabComponent\"\n        }, {\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    return Tab;\n}(nested_option_1.default));\nexports.Tab = Tab;\n// owners:\n// Form\nvar TabbedItem = /** @class */ (function (_super) {\n    __extends(TabbedItem, _super);\n    function TabbedItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TabbedItem.OptionName = \"items\";\n    TabbedItem.IsCollectionItem = true;\n    TabbedItem.PredefinedProps = {\n        itemType: \"tabbed\"\n    };\n    return TabbedItem;\n}(nested_option_1.default));\nexports.TabbedItem = TabbedItem;\n// owners:\n// TabbedItem\nvar TabPanelOptions = /** @class */ (function (_super) {\n    __extends(TabPanelOptions, _super);\n    function TabPanelOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TabPanelOptions.OptionName = \"tabPanelOptions\";\n    TabPanelOptions.DefaultsProps = {\n        defaultItems: \"items\",\n        defaultSelectedIndex: \"selectedIndex\",\n        defaultSelectedItem: \"selectedItem\",\n        defaultSelectedItemKeys: \"selectedItemKeys\",\n        defaultSelectedItems: \"selectedItems\"\n    };\n    TabPanelOptions.TemplateProps = [{\n            tmplOption: \"itemTemplate\",\n            render: \"itemRender\",\n            component: \"itemComponent\"\n        }, {\n            tmplOption: \"itemTitleTemplate\",\n            render: \"itemTitleRender\",\n            component: \"itemTitleComponent\"\n        }];\n    return TabPanelOptions;\n}(nested_option_1.default));\nexports.TabPanelOptions = TabPanelOptions;\n// owners:\n// SimpleItem\nvar ValidationRule = /** @class */ (function (_super) {\n    __extends(ValidationRule, _super);\n    function ValidationRule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ValidationRule.OptionName = \"validationRules\";\n    ValidationRule.IsCollectionItem = true;\n    ValidationRule.PredefinedProps = {\n        type: \"required\"\n    };\n    return ValidationRule;\n}(nested_option_1.default));\nexports.ValidationRule = ValidationRule;\nexports.default = Form;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/form.js\n// module id = 863\n// module chunks = 3","/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-vue/form' file instead */\n__export(require(\"../form\"));\nvar form_1 = require(\"../form\");\nexports.default = form_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/ui/form.js\n// module id = 969\n// module chunks = 3"],"sourceRoot":""}