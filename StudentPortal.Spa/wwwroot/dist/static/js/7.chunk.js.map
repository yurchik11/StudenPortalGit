{"version":3,"sources":["../static/js/7.chunk.js","../additional_modules/app-player-react/dist/widgets/actions/single-choice-action.js","../node_modules/devextreme/ui/context_menu/ui.menu_base.js","../node_modules/devextreme/ui/context_menu.js","../node_modules/devextreme/ui/context_menu/ui.context_menu.js","../node_modules/devextreme/ui/context_menu/ui.menu_base.edit.strategy.js","../node_modules/devextreme/ui/menu.js","../node_modules/devextreme/ui/menu/ui.menu.js","../node_modules/devextreme/ui/menu/ui.submenu.js","../node_modules/devextreme-react/menu.js","../node_modules/devextreme-react/ui/menu.js"],"names":["webpackJsonp","712","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","_a","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__","__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__","n","__WEBPACK_IMPORTED_MODULE_3_react__","__WEBPACK_IMPORTED_MODULE_4__menu_item__","__WEBPACK_IMPORTED_MODULE_5__with_style__","__WEBPACK_IMPORTED_MODULE_6_reselect__","dxStateHoverClassName","dropDownButtonClassName","actionButtonClassName","WithStyle","main","display","flexDirection","alignItems","borderBottomRightRadius","borderTopRightRadius","borderRightWidth","borderBottomLeftRadius","borderTopLeftRadius","borderWidth","borderLeftWidth","padding","borderRadius","ReactSingleChoiceAction","_super","_this","apply","this","arguments","state","firstActiveItem","props","items","lastExecutedItem","lastExcutedLeafItem","menuItemsSelector","root","mapItems","actionButtonElement","dropDownButtonElement","handleMouseEnter","target","classList","contains","getElement","add","handleMouseLeave","remove","renderSubmenuItemComponent","item","isRootItem","icon","elementAttr","class","ref","hoverStateEnabled","showArrow","isLeafItem","executeAction","e","itemToExecute","getItemToExecute","onExecute","_b","showItemsOnClick","onExecuteFn","setTimeout","click","itemData","executeItemClick","itemExecuteFn","isLeafItem_1","setState","prevState","defaultItemMode","parent","hasIcon","some","map","newItem","prototype","current","instance","element","render","actionText","text","_c","actionIcon","_d","showText","tooltip","style","widgetTooltip","className","onMouseEnter","onMouseLeave","onClick","hint","cssClass","showFirstSubmenuMode","onItemClick","itemComponent","defaultProps","_originalConfig","768","exports","$","commonUtils","typeUtils","each","extend","inkRipple","HierarchicalCollectionWidget","MenuBaseEditStrategy","devices","themes","ITEM_CLASS","DX_MENU_CLASS","DEFAULT_DELAY","show","hide","MenuBase","inherit","_getDefaultOptions","callBase","activeStateEnabled","showSubmenuMode","name","delay","animation","type","from","to","duration","selectByClick","focusOnSelectedItem","keyExpr","_itemAttributes","role","useInkRipple","_defaultOptionsRules","concat","device","isAndroid5","options","_activeStateUnit","_itemDataKey","_itemClass","_setAriaSelected","noop","_selectedItemClass","_widgetClass","_focusTarget","_itemContainer","_clean","option","_supportedKeys","selectItem","$item","length","_isSelectionEnabled","space","pageUp","pageDown","_init","_renderSelectedItem","_initActions","_getTextContainer","itemText","$itemContainer","addClass","itemContent","isPlainObject","String","_getPopoutContainer","$popOutContainer","$popOutImage","DX_MENU_ITEM_POPOUT_CLASS","append","_getDataAdapterOptions","rootValue","multipleSelection","recursiveSelection","recursiveExpansion","searchValue","_selectByItem","selectedItem","nodeToSelect","_dataAdapter","getNodeByItem","toggleSelection","internalFields","key","selectedKeys","getSelectedNodesKeys","selectedKey","node","getNodeByKey","selectable","_initMarkup","_addCustomCssClass","$element","_renderInkRipple","_inkRipple","_toggleActiveState","config","event","showWave","hideWave","_getShowSubmenuMode","optionValue","isObject","_isDesktopDevice","_initSelectedItems","real","deviceType","_initEditStrategy","Strategy","_editStrategy","_itemWrapperSelector","_hoverStartHandler","that","$itemElement","_getItemElementByEventArgs","_isItemDisabled","stopPropagation","clearTimeout","_showSubmenusTimeout","_showSubmenu","bind","_getSubmenuDelay","_getAvailableItems","$itemElements","filter","css","_disabledGetter","data","_addExpandedClass","itemElement","action","isDefined","eventArgs","$target","hasClass","get","currentTarget","_hoverEndHandler","_hasSubmenu","childrenKeys","_renderContentImpl","_renderItems","getRootNodes","nodes","submenuContainer","$nodeContainer","hasIcons","_renderContainer","firstVisibleIndex","nextGroupFirstIndex","index","isVisibleNode","visible","beginGroup","_renderSeparator","_renderItem","$wrapper","appendTo","_createDOMElement","$nodeElement","$itemFrame","$node","attr","setAria","_renderItemFrame","children","_refreshItem","_itemIndexKey","closest","_addContentClasses","hasText","hasSubmenu","toggleClass","_getItemContent","$itemContent","_postprocessRenderItem","args","selectedIndex","_selectedGetter","_isItemSelectable","$itemsContainer","_itemClickHandler","_skipHandling","itemClickActionHandler","_createAction","_updateSubmenuVisibilityOnClick","_itemDXEventHandler","afterExecute","actionArgs","_updateSelectedItemOnClick","selectedItemKey","_isItemSelectionAllowed","selectedNode","_toggleItemSelection","_fireSelectionChangeEvent","_setOptionSilent","isSelectionByClickEnabled","_isContainerEmpty","_itemsGetter","is","_syncSelectionOptions","_optionChanged","_cancelOptionChange","_updateSelectedItems","_invalidate","_getElementByItem","result","_itemElements","_","oldSelection","newSelection","_updateSelection","addedSelection","removedSelection","_createActionByOption","excludeValidators","addedItems","removedItems","nodeType","_getItemData","unselectItem","selected","773","default","809","domAdapter","eventsEngine","Guid","registerComponent","domUtils","getPublicElement","inArray","windowUtils","fx","positionUtils","eventUtils","Overlay","Deferred","ACTIONS","LOCAL_SUBMENU_DIRECTIONS","ContextMenu","getShowEvent","getShowDelay","showEvent","closeOnOutsideClick","position","at","my","onShowing","onShown","onSubmenuCreated","onHiding","onHidden","onPositioning","submenuDirection","onLeftFirstItem","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","hasWindow","_actions","_setOptionsByReference","_optionsByReference","_focusInHandler","_overlay","$content","_eventBindingTarget","itemsContainer","esc","_getActiveItem","$items","$focusedItem","$hoveredItem","find","_moveFocus","location","$newTarget","_getItemsByLocation","$oldTarget","$activeItemHighlighted","_prevItem","first","_nextItem","last","_hideSubmenuHandler","_expandSubmenuHandler","$activeItem","_getAriaTarget","_refreshActiveDescendant","id","getFocusedItemId","$curItem","$parentItem","parents","_hideSubmenusOnSameLevel","_hideSubmenu","isItemHasSubmenu","$submenu","_detachShowContextMenuEvents","_getTarget","_render","_renderVisibility","_addWidgetClass","_attachShowContextMenuEvents","_attachKeyboardEvents","_keyboardProcessor","_renderContextMenuOverlay","$overlayContent","overlayOptions","_getOverlayOptions","$overlayElement","_createComponent","_$element","_addPlatformDependentClass","_attachContextMenuEvent","_itemContextMenuHandler","phone","eventName","addNamespace","NAME","_showContextMenuEventHandler","off","getDocument","handler","contextMenuAction","_show","validatingTargetName","isRenderer","isWindow","on","_renderDimensions","$holder","_renderSubmenuItems","_getChildNodes","submenuElement","overlayAnimation","focusStateEnabled","_closeOnOutsideClickHandler","propagateOutsideClick","closeOnTargetScroll","deferRendering","of","collision","shading","showTitle","height","width","_overlayShownActionHandler","_overlayHidingActionHandler","_overlayHiddenActionHandler","arg","cancel","_hideAllShownSubmenus","$clickedItem","$activeItemContainer","$itemContainers","$rootItem","isRootItemClicked","isFunction","isDocument","_getActiveItemsContainer","_getItemsContainers","_searchActiveItem","_isIncludeOverlay","_hideAllShownChildSubmenus","_$content","eq","$activeOverlay","$allOverlays","isSame","$overlay","$context","$submenuElements","shownSubmenus","_shownSubmenus","context","isSubmenuRendered","_isSubmenuVisible","_drawSubmenu","$expandedItems","siblings","removeClass","DX_MENU_ITEM_CLASS","_hideSubmenuGroup","_hideSubmenuCore","submenuPosition","_getSubmenuPosition","push","stop","setup","_animate","$container","animate","toLowerCase","$rootItemWrapper","offset","h","v","notCloseMenuOnItemClick","closeMenuOnClick","disabled","$prevSubmenu","canceled","$curSubmenu","splice","_stopAnimate","_visibilityChanged","previousValue","showing","_hide","_toggleVisibility","jQEvent","promise","reject","_positionContextMenu","_renderFocusState","_attachHoverEvents","_attachClickEvent","_getContextMenuPosition","isInitialPosition","_isInitialOptionValue","positioningAction","preventDefault","removeAttr","toggle","810","_typeof","Symbol","iterator","obj","constructor","PlainEditStrategy","_getPlainItems","_collectionWidget","getMenuItems","_stringifyItem","JSON","stringify","_getTemplateString","template","toString","811","812","pointerEvents","hoverEvents","Submenu","Button","TreeView","Menu","orientation","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","rootMenuElements","submenuElements","_submenuItemElements","elements","currentSubmenu","_submenus","_isMenuHorizontal","argument","operation","navigationAction","isMenuHorizontal","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","_resizeEventTimer","_menuItemsWidth","_updateItemsWidthCache","_dimensionChanged","_isAdaptivityEnabled","$menuItems","_getSummaryItemsWidth","containerWidth","outerWidth","_toggleAdaptiveMode","_visibleSubmenu","_initAdaptivity","_renderHamburgerButton","_hamburger","_toggleTreeView","_toggleHamburgerActiveState","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","collapseAll","_removeAdaptivity","_$adaptiveContainer","_treeviewItemClickHandler","_getAdaptiveOverlayOptions","rtl","_getTreeViewOptions","menuOptions","optionsToTransfer","actionsToTransfer","actionName","animationEnabled","onItemExpanded","repaint","onItemCollapsed","selectNodesRecursive","expandEvent","$hamburger","_getDelay","delayType","submenu","_createSubmenu","_renderBorderElement","$submenuContainer","_getSubmenuOptions","_parentKey","onHoverStart","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","itemTemplate","selectionMode","displayExpr","disabledExpr","selectedExpr","itemsExpr","onSelectionChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","onItemRendered","_moveMainMenuFocus","_getShowFirstSubmenuMode","direction","itemCount","$currentItem","itemIndex","$newItem","focus","getInstance","_clearSelectionInSubmenus","_clearRootSelection","targetSubmenu","cleanAllSubmenus","isOtherItem","$selectedItem","selectedItemData","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","getOverlayContent","submenus","submenuMouseLeaveName","end","_submenuOnShowingHandler","_submenuOnShownHandler","_submenuOnHidingHandler","_submenuOnHiddenHandler","_submenuMouseLeaveHandler","$border","rootItem","relatedTarget","contextMenu","_getSubmenuByRootElement","_hideSubmenuAfterTimeout","isRootItemHovered","isHorizontalMenu","rtlEnabled","DX_CONTEXT_MENU_CLASS","_itemPointerDownHandler","mouseMoveEventName","move","isSelectionActive","buttons","which","_hasChildren","_showSubmenuTimer","_getSubmenuByElement","isOverlayVisible","_itemMouseMoveHandler","eventArg","_hideSubmenuTimer","_hoveredRootItem","pointers","_changeSubmenusOption","813","_initDataAdapter","_renderDelimiter","$contentDelimiter","onPositioned","_overlayPositionedActionHandler","_showDelimiter","_toggleFocusClass","containerOffset","vLocation","hLocation","rootOffset","offsetLeft","Math","round","left","offsetTop","top","rootWidth","rootHeight","submenuWidth","submenuHeight","815","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","create","menu_1","prop_types_1","component_1","nested_option_1","_WidgetClass","_defaults","defaultItems","defaultSelectedItem","_templateProps","tmplOption","component","_instance","enumerable","configurable","Component","propTypes","accessKey","PropTypes","string","bool","object","dataSource","oneOfType","array","func","number","onContentReady","onDisposing","onInitialized","onItemContextMenu","onOptionChanged","oneOf","tabIndex","Animation","OptionName","Delay","Hide","Item","IsCollectionItem","TemplateProps","Show","ShowFirstSubmenuMode","ShowSubmenuMode","846","m"],"mappings":"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","file":"static/js/7.chunk.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ 712:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__ = __webpack_require__(147);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__ = __webpack_require__(846);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__menu_item__ = __webpack_require__(349);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__with_style__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_reselect__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_reselect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_reselect__);\n/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\n\nvar _a;\n\n\n\n\n\n\nvar dxStateHoverClassName = \"dx-state-hover\", dropDownButtonClassName = \"xet-drop-down-button\", actionButtonClassName = \"xet-action-button\";\nvar WithStyle = Object(__WEBPACK_IMPORTED_MODULE_5__with_style__[\"a\" /* createWithStyleComponent */])({\n    main: (_a = {\n            \"display\": \"flex\",\n            \"flexDirection\": \"row\",\n            \"alignItems\": \"center\"\n        },\n        _a[\"& .\" + actionButtonClassName] = {\n            \"borderBottomRightRadius\": 0,\n            \"borderTopRightRadius\": 0,\n            \"borderRightWidth\": 0\n        },\n        _a[\"& .\" + dropDownButtonClassName] = {\n            \"borderBottomLeftRadius\": 0,\n            \"borderTopLeftRadius\": 0\n        },\n        _a[\"& .dx-button.dx-state-focused\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-active\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-focused + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-button.dx-state-active + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-menu-base .dx-menu-item-content\"] = {\n            \"padding\": 0\n        },\n        _a[\"& .dx-menu-item\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-menu-item-expanded\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-context-menu-container-border\"] = {\n            \"display\": \"none\"\n        },\n        _a[\"& .xet-menu .dx-context-menu-content-delimiter\"] = {\n            \"display\": \"none!important\"\n        },\n        _a)\n});\nvar ReactSingleChoiceAction = /** @class */ (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](ReactSingleChoiceAction, _super);\n    function ReactSingleChoiceAction() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { firstActiveItem: _this.props.items[0], lastExecutedItem: null, lastExcutedLeafItem: null };\n        _this.menuItemsSelector = Object(__WEBPACK_IMPORTED_MODULE_6_reselect__[\"createSelector\"])(function (_a) {\n            var items = _a.items;\n            return items;\n        }, function (items) {\n            var root = { items: null };\n            root.items = ReactSingleChoiceAction.mapItems(items, root);\n            return [root];\n        });\n        _this.actionButtonElement = __WEBPACK_IMPORTED_MODULE_3_react__[\"createRef\"]();\n        _this.dropDownButtonElement = __WEBPACK_IMPORTED_MODULE_3_react__[\"createRef\"]();\n        _this.handleMouseEnter = function (_a) {\n            var target = _a.target;\n            var classList = target.classList;\n            if (classList.contains(dropDownButtonClassName) || classList.contains(actionButtonClassName)) {\n                _this.getElement(_this.actionButtonElement).classList.add(dxStateHoverClassName);\n                _this.getElement(_this.dropDownButtonElement).classList.add(dxStateHoverClassName);\n            }\n        };\n        _this.handleMouseLeave = function () {\n            _this.getElement(_this.actionButtonElement).classList.remove(dxStateHoverClassName);\n            _this.getElement(_this.dropDownButtonElement).classList.remove(dxStateHoverClassName);\n        };\n        _this.renderSubmenuItemComponent = function (item) {\n            if (_this.isRootItem(item)) {\n                return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__[\"Button\"], { icon: \"spindown\", elementAttr: { class: dropDownButtonClassName }, ref: _this.dropDownButtonElement, hoverStateEnabled: false }));\n            }\n            return __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_4__menu_item__[\"a\" /* MenuItemTemplate */], __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { showArrow: ReactSingleChoiceAction.isLeafItem(item) })));\n        };\n        _this.executeAction = function (e) {\n            var itemToExecute = _this.getItemToExecute(), _a = _this.props, onExecute = _a.onExecute, _b = _a.showItemsOnClick, showItemsOnClick = _b === void 0 ? false : _b, onExecuteFn = itemToExecute.onExecute ? itemToExecute.onExecute : onExecute;\n            if (showItemsOnClick) {\n                setTimeout(function () {\n                    _this.getElement(_this.dropDownButtonElement).click();\n                });\n                return false;\n            }\n            return onExecuteFn(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, e, { itemData: itemToExecute }));\n        };\n        _this.executeItemClick = function (e) {\n            var itemData = e.itemData, _a = _this.props.onExecute, onExecuteFn = _a === void 0 ? function () { return undefined; } : _a, _b = itemData.onExecute, itemExecuteFn = _b === void 0 ? onExecuteFn : _b;\n            if (!_this.isRootItem(itemData)) {\n                var isLeafItem_1 = ReactSingleChoiceAction.isLeafItem(itemData);\n                _this.setState(function (prevState) {\n                    var lastExcutedLeafItem = isLeafItem_1 ? itemData : prevState.lastExcutedLeafItem;\n                    return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, prevState, { lastExecutedItem: itemData, lastExcutedLeafItem: lastExcutedLeafItem });\n                });\n                if (!isLeafItem_1) {\n                    return itemExecuteFn(e);\n                }\n            }\n        };\n        _this.getItemToExecute = function () {\n            var _a = _this.props.defaultItemMode, defaultItemMode = _a === void 0 ? \"FirstActiveItem\" : _a, _b = _this.state, lastExecutedItem = _b.lastExecutedItem, firstActiveItem = _b.firstActiveItem, itemToExecute = defaultItemMode === \"LastExecutedItem\" && lastExecutedItem\n                ? lastExecutedItem\n                : firstActiveItem;\n            return itemToExecute;\n        };\n        return _this;\n    }\n    ReactSingleChoiceAction.mapItems = function (items, parent) {\n        if (items === void 0) { items = []; }\n        if (parent === void 0) { parent = null; }\n        var hasIcon = items.some(function (item) { return !!item.icon; });\n        return items.map(function (item) {\n            var newItem = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { parent: parent });\n            if (hasIcon) {\n                newItem = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, newItem, { icon: newItem.icon || \"empty\" });\n            }\n            if (ReactSingleChoiceAction.isLeafItem(item)) {\n                newItem.items = ReactSingleChoiceAction.mapItems(item.items, newItem);\n            }\n            return newItem;\n        });\n    };\n    ReactSingleChoiceAction.prototype.getElement = function (ref) {\n        return ref.current.instance.element();\n    };\n    ReactSingleChoiceAction.isLeafItem = function (item) {\n        return !!item.items;\n    };\n    ReactSingleChoiceAction.prototype.isRootItem = function (item) {\n        return !item.parent;\n    };\n    ReactSingleChoiceAction.prototype.render = function () {\n        var _this = this;\n        var itemToExecute = this.getItemToExecute(), _a = this.props, _b = _a.actionText, actionText = _b === void 0 ? itemToExecute.text : _b, _c = _a.actionIcon, actionIcon = _c === void 0 ? itemToExecute.icon : _c, _d = _a.showText, showText = _d === void 0 ? true : _d, showItemsOnClick = _a.showItemsOnClick, tooltip = _a.tooltip, style = _a.style, widgetTooltip = itemToExecute.tooltip || tooltip;\n        return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](WithStyle, { className: this.props.className }, function (_a) {\n            var main = _a.main;\n            return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](\"div\", { style: style, className: main, onMouseEnter: _this.handleMouseEnter, onMouseLeave: _this.handleMouseLeave },\n                __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__[\"Button\"], { onClick: _this.executeAction, icon: !showItemsOnClick ? actionIcon : null, text: showText ? actionText : null, hint: widgetTooltip, elementAttr: { class: actionButtonClassName }, ref: _this.actionButtonElement, hoverStateEnabled: false }),\n                __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__[\"Menu\"], { cssClass: \"xet-menu\", hint: widgetTooltip, showFirstSubmenuMode: \"onHover\", onItemClick: _this.executeItemClick, itemComponent: _this.renderSubmenuItemComponent, items: _this.menuItemsSelector(_this.props) })));\n        }));\n    };\n    ReactSingleChoiceAction.defaultProps = { _originalConfig: {} };\n    return ReactSingleChoiceAction;\n}(__WEBPACK_IMPORTED_MODULE_3_react__[\"Component\"]));\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReactSingleChoiceAction);\n\n\n/***/ }),\n\n/***/ 768:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    commonUtils = __webpack_require__(6),\r\n    typeUtils = __webpack_require__(4),\r\n    each = __webpack_require__(5).each,\r\n    extend = __webpack_require__(3).extend,\r\n    inkRipple = __webpack_require__(100),\r\n    HierarchicalCollectionWidget = __webpack_require__(347),\r\n    MenuBaseEditStrategy = __webpack_require__(810),\r\n    devices = __webpack_require__(14),\r\n    themes = __webpack_require__(22);\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_NO_ICONS_CLASS = DX_MENU_CLASS + \"-no-icons\",\r\n    DX_MENU_BASE_CLASS = \"dx-menu-base\",\r\n    ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_ITEM_CONTENT_CLASS = ITEM_CLASS + \"-content\",\r\n    DX_MENU_SELECTED_ITEM_CLASS = ITEM_CLASS + \"-selected\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = ITEM_CLASS + \"-wrapper\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_SEPARATOR_CLASS = DX_MENU_CLASS + \"-separator\",\r\n    DX_MENU_ITEM_LAST_GROUP_ITEM = DX_MENU_CLASS + \"-last-group-item\",\r\n    DX_ITEM_HAS_TEXT = ITEM_CLASS + \"-has-text\",\r\n    DX_ITEM_HAS_ICON = ITEM_CLASS + \"-has-icon\",\r\n    DX_ITEM_HAS_SUBMENU = ITEM_CLASS + \"-has-submenu\",\r\n    DX_MENU_ITEM_POPOUT_CLASS = ITEM_CLASS + \"-popout\",\r\n    DX_MENU_ITEM_POPOUT_CONTAINER_CLASS = DX_MENU_ITEM_POPOUT_CLASS + \"-container\",\r\n    DX_MENU_ITEM_CAPTION_CLASS = ITEM_CLASS + \"-text\",\r\n    SINGLE_SELECTION_MODE = \"single\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    };\r\nvar MenuBase = HierarchicalCollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            items: [],\r\n            cssClass: \"\",\r\n            activeStateEnabled: true,\r\n            showSubmenuMode: {\r\n                name: \"onHover\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    from: 0,\r\n                    to: 1,\r\n                    duration: 100\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    from: 1,\r\n                    to: 0,\r\n                    duration: 100\r\n                }\r\n            },\r\n            selectByClick: false,\r\n            focusOnSelectedItem: false,\r\n            keyExpr: null,\r\n            _itemAttributes: {\r\n                role: \"menuitem\"\r\n            },\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _itemDataKey: function() {\r\n        return \"dxMenuItemDataKey\"\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _setAriaSelected: commonUtils.noop,\r\n    _selectedItemClass: function() {\r\n        return DX_MENU_SELECTED_ITEM_CLASS\r\n    },\r\n    _widgetClass: function() {\r\n        return DX_MENU_BASE_CLASS\r\n    },\r\n    _focusTarget: function() {\r\n        return this._itemContainer()\r\n    },\r\n    _clean: function() {\r\n        this.option(\"focusedElement\", null);\r\n        this.callBase()\r\n    },\r\n    _supportedKeys: function() {\r\n        var selectItem = function() {\r\n            var $item = $(this.option(\"focusedElement\"));\r\n            if (!$item.length || !this._isSelectionEnabled()) {\r\n                return\r\n            }\r\n            this.selectItem($item[0])\r\n        };\r\n        return extend(this.callBase(), {\r\n            space: selectItem,\r\n            pageUp: commonUtils.noop,\r\n            pageDown: commonUtils.noop\r\n        })\r\n    },\r\n    _isSelectionEnabled: function() {\r\n        return this.option(\"selectionMode\") === SINGLE_SELECTION_MODE\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItem();\r\n        this._initActions()\r\n    },\r\n    _getTextContainer: function(itemData) {\r\n        var itemText = itemData.text,\r\n            $itemContainer = $(\"<span>\").addClass(DX_MENU_ITEM_CAPTION_CLASS),\r\n            itemContent = typeUtils.isPlainObject(itemData) ? itemText : String(itemData);\r\n        return itemText && $itemContainer.text(itemContent)\r\n    },\r\n    _getPopoutContainer: function(itemData) {\r\n        var $popOutContainer, items = itemData.items;\r\n        if (items && items.length) {\r\n            var $popOutImage = $(\"<div>\").addClass(DX_MENU_ITEM_POPOUT_CLASS);\r\n            $popOutContainer = $(\"<span>\").addClass(DX_MENU_ITEM_POPOUT_CONTAINER_CLASS).append($popOutImage)\r\n        }\r\n        return $popOutContainer\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return {\r\n            rootValue: 0,\r\n            multipleSelection: false,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            searchValue: \"\"\r\n        }\r\n    },\r\n    _selectByItem: function(selectedItem) {\r\n        if (!selectedItem) {\r\n            return\r\n        }\r\n        var nodeToSelect = this._dataAdapter.getNodeByItem(selectedItem);\r\n        this._dataAdapter.toggleSelection(nodeToSelect.internalFields.key, true)\r\n    },\r\n    _renderSelectedItem: function() {\r\n        var selectedKeys = this._dataAdapter.getSelectedNodesKeys(),\r\n            selectedKey = selectedKeys.length && selectedKeys[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (!selectedKey) {\r\n            this._selectByItem(selectedItem);\r\n            return\r\n        }\r\n        var node = this._dataAdapter.getNodeByKey(selectedKey);\r\n        if (false === node.selectable) {\r\n            return\r\n        }\r\n        if (!selectedItem) {\r\n            this.option(\"selectedItem\", node.internalFields.item);\r\n            return\r\n        }\r\n        if (selectedItem !== node.internalFields.item) {\r\n            this._dataAdapter.toggleSelection(selectedKey, false);\r\n            this._selectByItem(selectedItem)\r\n        }\r\n    },\r\n    _initActions: commonUtils.noop,\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._addCustomCssClass(this.$element());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _getShowSubmenuMode: function() {\r\n        var defaultValue = \"onClick\",\r\n            optionValue = this.option(\"showSubmenuMode\");\r\n        optionValue = typeUtils.isObject(optionValue) ? optionValue.name : optionValue;\r\n        return this._isDesktopDevice() ? optionValue : defaultValue\r\n    },\r\n    _initSelectedItems: commonUtils.noop,\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    },\r\n    _initEditStrategy: function() {\r\n        var Strategy = MenuBaseEditStrategy;\r\n        this._editStrategy = new Strategy(this)\r\n    },\r\n    _addCustomCssClass: function($element) {\r\n        $element.addClass(this.option(\"cssClass\"))\r\n    },\r\n    _itemWrapperSelector: function() {\r\n        return \".\" + DX_MENU_ITEM_WRAPPER_CLASS\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var that = this,\r\n            $itemElement = that._getItemElementByEventArgs(e);\r\n        if (!$itemElement || that._isItemDisabled($itemElement)) {\r\n            return\r\n        }\r\n        e.stopPropagation();\r\n        if (\"onHover\" === that._getShowSubmenuMode()) {\r\n            clearTimeout(this._showSubmenusTimeout);\r\n            this._showSubmenusTimeout = setTimeout(that._showSubmenu.bind(that, $itemElement), that._getSubmenuDelay(\"show\"))\r\n        }\r\n    },\r\n    _getAvailableItems: function($itemElements) {\r\n        return this.callBase($itemElements).filter(function() {\r\n            return \"hidden\" !== $(this).css(\"visibility\")\r\n        })\r\n    },\r\n    _isItemDisabled: function($item) {\r\n        return this._disabledGetter($item.data(this._itemDataKey()))\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        this._addExpandedClass($itemElement)\r\n    },\r\n    _addExpandedClass: function(itemElement) {\r\n        $(itemElement).addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _getSubmenuDelay: function(action) {\r\n        var delay = this.option(\"showSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[action]\r\n        }\r\n        return typeUtils.isObject(delay) ? delay[action] : delay\r\n    },\r\n    _getItemElementByEventArgs: function(eventArgs) {\r\n        var $target = $(eventArgs.target);\r\n        if ($target.hasClass(this._itemClass()) || $target.get(0) === eventArgs.currentTarget) {\r\n            return $target\r\n        }\r\n        while (!$target.hasClass(this._itemClass())) {\r\n            $target = $target.parent();\r\n            if ($target.hasClass(\"dx-submenu\")) {\r\n                return null\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _hoverEndHandler: function() {\r\n        clearTimeout(this._showSubmenusTimeout)\r\n    },\r\n    _hasSubmenu: function(node) {\r\n        return node.internalFields.childrenKeys.length\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderItems(this._dataAdapter.getRootNodes())\r\n    },\r\n    _renderItems: function(nodes, submenuContainer) {\r\n        var $nodeContainer, that = this;\r\n        if (nodes.length) {\r\n            this.hasIcons = false;\r\n            $nodeContainer = this._renderContainer(this.$element(), submenuContainer);\r\n            var firstVisibleIndex = -1,\r\n                nextGroupFirstIndex = -1;\r\n            each(nodes, function(index, node) {\r\n                var isVisibleNode = false !== node.visible;\r\n                if (isVisibleNode && firstVisibleIndex < 0) {\r\n                    firstVisibleIndex = index\r\n                }\r\n                var isBeginGroup = firstVisibleIndex < index && (node.beginGroup || index === nextGroupFirstIndex);\r\n                if (isBeginGroup) {\r\n                    nextGroupFirstIndex = isVisibleNode ? index : index + 1\r\n                }\r\n                if (index === nextGroupFirstIndex && firstVisibleIndex < index) {\r\n                    that._renderSeparator($nodeContainer)\r\n                }\r\n                that._renderItem(index, node, $nodeContainer)\r\n            });\r\n            if (!this.hasIcons) {\r\n                $nodeContainer.addClass(DX_MENU_NO_ICONS_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _renderContainer: function($wrapper) {\r\n        return $(\"<ul>\").appendTo($wrapper).addClass(DX_MENU_ITEMS_CONTAINER_CLASS)\r\n    },\r\n    _createDOMElement: function($nodeContainer) {\r\n        var $node = $(\"<li>\").appendTo($nodeContainer).addClass(DX_MENU_ITEM_WRAPPER_CLASS);\r\n        return $node\r\n    },\r\n    _renderItem: function(index, node, $nodeContainer, $nodeElement) {\r\n        var $itemFrame, items = this.option(\"items\");\r\n        if (false === node.internalFields.item.visible) {\r\n            return\r\n        }\r\n        var $node = $nodeElement || this._createDOMElement($nodeContainer);\r\n        if (items[index + 1] && items[index + 1].beginGroup) {\r\n            $node.addClass(DX_MENU_ITEM_LAST_GROUP_ITEM)\r\n        }\r\n        $itemFrame = this.callBase(index, node.internalFields.item, $node);\r\n        if (node.internalFields.item === this.option(\"selectedItem\")) {\r\n            $itemFrame.addClass(DX_MENU_SELECTED_ITEM_CLASS)\r\n        }\r\n        $itemFrame.attr(\"tabIndex\", -1);\r\n        if (this._hasSubmenu(node)) {\r\n            this.setAria(\"haspopup\", \"true\", $itemFrame)\r\n        }\r\n    },\r\n    _renderItemFrame: function(index, itemData, $itemContainer) {\r\n        var $itemFrame = $itemContainer.children(\".\" + ITEM_CLASS);\r\n        return $itemFrame.length ? $itemFrame : this.callBase.apply(this, arguments)\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        var node = this._dataAdapter.getNodeByItem(item),\r\n            index = $item.data(this._itemIndexKey()),\r\n            $nodeContainer = $item.closest(\"ul\"),\r\n            $nodeElement = $item.closest(\"li\");\r\n        this._renderItem(index, node, $nodeContainer, $nodeElement)\r\n    },\r\n    _addContentClasses: function(itemData, $itemFrame) {\r\n        var hasText = itemData.text ? !!itemData.text.length : false,\r\n            hasIcon = !!itemData.icon,\r\n            hasSubmenu = itemData.items ? !!itemData.items.length : false;\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_TEXT, hasText);\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_ICON, hasIcon);\r\n        if (!this.hasIcons) {\r\n            this.hasIcons = hasIcon\r\n        }\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_SUBMENU, hasSubmenu)\r\n    },\r\n    _getItemContent: function($itemFrame) {\r\n        var $itemContent = this.callBase($itemFrame);\r\n        if (!$itemContent.length) {\r\n            $itemContent = $itemFrame.children(\".\" + DX_ITEM_CONTENT_CLASS)\r\n        }\r\n        return $itemContent\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        var node, $itemElement = $(args.itemElement),\r\n            selectedIndex = this._dataAdapter.getSelectedNodesKeys();\r\n        if (!selectedIndex.length || !this._selectedGetter(args.itemData) || !this._isItemSelectable(args.itemData)) {\r\n            this._setAriaSelected($itemElement, \"false\");\r\n            return\r\n        }\r\n        node = this._dataAdapter.getNodeByItem(args.itemData);\r\n        if (node.internalFields.key === selectedIndex[0]) {\r\n            $itemElement.addClass(this._selectedItemClass());\r\n            this._setAriaSelected($itemElement, \"true\")\r\n        } else {\r\n            this._setAriaSelected($itemElement, \"false\")\r\n        }\r\n    },\r\n    _isItemSelectable: function(item) {\r\n        return false !== item.selectable\r\n    },\r\n    _renderSeparator: function($itemsContainer) {\r\n        $(\"<li>\").appendTo($itemsContainer).addClass(DX_MENU_SEPARATOR_CLASS)\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        if (e._skipHandling) {\r\n            return\r\n        }\r\n        var itemClickActionHandler = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));\r\n        this._itemDXEventHandler(e, \"onItemClick\", {}, {\r\n            afterExecute: itemClickActionHandler.bind(this)\r\n        });\r\n        e._skipHandling = true\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (\"onClick\" === this._getShowSubmenuMode()) {\r\n            this._addExpandedClass(actionArgs.args[0].itemElement)\r\n        }\r\n    },\r\n    _updateSelectedItemOnClick: function(actionArgs) {\r\n        var selectedItemKey, args = actionArgs.args ? actionArgs.args[0] : actionArgs;\r\n        if (!this._isItemSelectionAllowed(args.itemData)) {\r\n            return\r\n        }\r\n        selectedItemKey = this._dataAdapter.getSelectedNodesKeys();\r\n        var selectedNode = selectedItemKey.length && this._dataAdapter.getNodeByKey(selectedItemKey[0]);\r\n        if (selectedNode) {\r\n            this._toggleItemSelection(selectedNode, false)\r\n        }\r\n        if (!selectedNode || selectedNode.internalFields.item !== args.itemData) {\r\n            this.selectItem(args.itemData)\r\n        } else {\r\n            this._fireSelectionChangeEvent(null, this.option(\"selectedItem\"));\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    },\r\n    _isItemSelectionAllowed: function(item) {\r\n        var isSelectionByClickEnabled = this._isSelectionEnabled() && this.option(\"selectByClick\");\r\n        return !this._isContainerEmpty() && isSelectionByClickEnabled && this._isItemSelectable(item) && !this._itemsGetter(item)\r\n    },\r\n    _isContainerEmpty: function() {\r\n        return this._itemContainer().is(\":empty\")\r\n    },\r\n    _syncSelectionOptions: commonUtils.noop,\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showSubmenuMode\":\r\n                break;\r\n            case \"selectedItem\":\r\n                var itemData = args.value,\r\n                    node = this._dataAdapter.getNodeByItem(itemData),\r\n                    selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\r\n                if (node && node.internalFields.key !== selectedKey) {\r\n                    if (false === node.selectable) {\r\n                        break\r\n                    }\r\n                    if (selectedKey) {\r\n                        this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n                    }\r\n                    this._toggleItemSelection(node, true);\r\n                    this._updateSelectedItems()\r\n                }\r\n                break;\r\n            case \"cssClass\":\r\n            case \"position\":\r\n            case \"selectByClick\":\r\n            case \"animation\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _toggleItemSelection: function(node, value) {\r\n        var itemElement = this._getElementByItem(node.internalFields.item);\r\n        itemElement && $(itemElement).toggleClass(DX_MENU_SELECTED_ITEM_CLASS);\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value)\r\n    },\r\n    _getElementByItem: function(itemData) {\r\n        var result, that = this;\r\n        each(this._itemElements(), function(_, itemElement) {\r\n            if ($(itemElement).data(that._itemDataKey()) !== itemData) {\r\n                return true\r\n            }\r\n            result = itemElement;\r\n            return false\r\n        });\r\n        return result\r\n    },\r\n    _updateSelectedItems: function(oldSelection, newSelection) {\r\n        if (oldSelection || newSelection) {\r\n            this._updateSelection(newSelection, oldSelection);\r\n            this._fireSelectionChangeEvent(newSelection, oldSelection)\r\n        }\r\n    },\r\n    _fireSelectionChangeEvent: function(addedSelection, removedSelection) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: [addedSelection],\r\n            removedItems: [removedSelection]\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedKey = this._dataAdapter.getSelectedNodesKeys()[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.key !== selectedKey) {\r\n            if (selectedKey) {\r\n                this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n            }\r\n            this._toggleItemSelection(node, true);\r\n            this._updateSelectedItems(selectedItem, itemData);\r\n            this._setOptionSilent(\"selectedItem\", itemData)\r\n        }\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.selected) {\r\n            this._toggleItemSelection(node, false);\r\n            this._updateSelectedItems(selectedItem, null);\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    }\r\n});\r\nmodule.exports = MenuBase;\r\n\n\n/***/ }),\n\n/***/ 773:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(809);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 809:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.context_menu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    Guid = __webpack_require__(77),\r\n    registerComponent = __webpack_require__(16),\r\n    noop = __webpack_require__(6).noop,\r\n    typeUtils = __webpack_require__(4),\r\n    domUtils = __webpack_require__(13),\r\n    contains = domUtils.contains,\r\n    getPublicElement = domUtils.getPublicElement,\r\n    each = __webpack_require__(5).each,\r\n    inArray = __webpack_require__(15).inArray,\r\n    extend = __webpack_require__(3).extend,\r\n    windowUtils = __webpack_require__(9),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    fx = __webpack_require__(32),\r\n    positionUtils = __webpack_require__(138),\r\n    devices = __webpack_require__(14),\r\n    eventUtils = __webpack_require__(8),\r\n    Overlay = __webpack_require__(54),\r\n    MenuBase = __webpack_require__(768),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_PHONE_CLASS = \"dx-menu-phone-overlay\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = DX_MENU_ITEM_CLASS + \"-wrapper\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_HAS_CONTEXT_MENU_CLASS = \"dx-has-context-menu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    FOCUS_FIRST = \"first\",\r\n    FOCUS_LAST = \"last\",\r\n    ACTIONS = [\"onShowing\", \"onShown\", \"onSubmenuCreated\", \"onHiding\", \"onHidden\", \"onPositioning\", \"onLeftFirstItem\", \"onLeftLastItem\", \"onCloseRootSubmenu\", \"onExpandLastSubmenu\"],\r\n    LOCAL_SUBMENU_DIRECTIONS = [FOCUS_UP, FOCUS_DOWN, FOCUS_FIRST, FOCUS_LAST],\r\n    DEFAULT_SHOW_EVENT = \"dxcontextmenu\";\r\nvar ContextMenu = MenuBase.inherit(function() {\r\n    var getShowEvent = function(that) {\r\n            var result = null,\r\n                optionValue = that.option(\"showEvent\");\r\n            if (typeUtils.isObject(optionValue)) {\r\n                if (null !== optionValue.name) {\r\n                    result = optionValue.name || DEFAULT_SHOW_EVENT\r\n                }\r\n            } else {\r\n                result = optionValue\r\n            }\r\n            return result\r\n        },\r\n        getShowDelay = function(that) {\r\n            var optionValue = that.option(\"showEvent\");\r\n            return typeUtils.isObject(optionValue) && optionValue.delay\r\n        };\r\n    return {\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                showEvent: DEFAULT_SHOW_EVENT,\r\n                closeOnOutsideClick: true,\r\n                position: {\r\n                    at: \"top left\",\r\n                    my: \"top left\"\r\n                },\r\n                onShowing: null,\r\n                onShown: null,\r\n                onSubmenuCreated: null,\r\n                onHiding: null,\r\n                onHidden: null,\r\n                onPositioning: null,\r\n                submenuDirection: \"auto\",\r\n                visible: false,\r\n                target: void 0,\r\n                onLeftFirstItem: null,\r\n                onLeftLastItem: null,\r\n                onCloseRootSubmenu: null,\r\n                onExpandLastSubmenu: null\r\n            })\r\n        },\r\n        _defaultOptionsRules: function() {\r\n            return this.callBase().concat([{\r\n                device: function() {\r\n                    return !windowUtils.hasWindow()\r\n                },\r\n                options: {\r\n                    animation: null\r\n                }\r\n            }])\r\n        },\r\n        _initActions: function() {\r\n            this._actions = {};\r\n            each(ACTIONS, function(index, action) {\r\n                this._actions[action] = this._createActionByOption(action) || noop\r\n            }.bind(this))\r\n        },\r\n        _setOptionsByReference: function() {\r\n            this.callBase();\r\n            extend(this._optionsByReference, {\r\n                animation: true,\r\n                selectedItem: true\r\n            })\r\n        },\r\n        _focusInHandler: noop,\r\n        _itemContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : $()\r\n        },\r\n        _eventBindingTarget: function() {\r\n            return this._itemContainer()\r\n        },\r\n        itemsContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : void 0\r\n        },\r\n        _supportedKeys: function() {\r\n            var selectItem = function() {\r\n                var $item = $(this.option(\"focusedElement\"));\r\n                this.hide();\r\n                if (!$item.length || !this._isSelectionEnabled()) {\r\n                    return\r\n                }\r\n                this.selectItem($item[0])\r\n            };\r\n            return extend(this.callBase(), {\r\n                space: selectItem,\r\n                esc: this.hide\r\n            })\r\n        },\r\n        _getActiveItem: function() {\r\n            var $items = this._getAvailableItems(),\r\n                $focusedItem = $items.filter(\".dx-state-focused\"),\r\n                $hoveredItem = $items.filter(\".dx-state-hover\"),\r\n                $hoveredItemContainer = $hoveredItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\r\n            if ($hoveredItemContainer.find(\".\" + DX_MENU_ITEM_CLASS).index($focusedItem) >= 0) {\r\n                return $focusedItem\r\n            }\r\n            if ($hoveredItem.length) {\r\n                return $hoveredItem\r\n            }\r\n            return this.callBase()\r\n        },\r\n        _moveFocus: function(location) {\r\n            var $newTarget, $items = this._getItemsByLocation(location),\r\n                $oldTarget = this._getActiveItem(true),\r\n                $hoveredItem = this.itemsContainer().find(\".dx-state-hover\"),\r\n                $focusedItem = $(this.option(\"focusedElement\")),\r\n                $activeItemHighlighted = !!($focusedItem.length || $hoveredItem.length);\r\n            switch (location) {\r\n                case FOCUS_UP:\r\n                    $newTarget = $activeItemHighlighted ? this._prevItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.first())) {\r\n                        this._actions.onLeftFirstItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_DOWN:\r\n                    $newTarget = $activeItemHighlighted ? this._nextItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.last())) {\r\n                        this._actions.onLeftLastItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_RIGHT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._hideSubmenuHandler() : this._expandSubmenuHandler($items, location);\r\n                    break;\r\n                case FOCUS_LEFT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._expandSubmenuHandler($items, location) : this._hideSubmenuHandler();\r\n                    break;\r\n                case FOCUS_FIRST:\r\n                    $newTarget = $items.first();\r\n                    break;\r\n                case FOCUS_LAST:\r\n                    $newTarget = $items.last();\r\n                    break;\r\n                default:\r\n                    return this.callBase(location)\r\n            }\r\n            if (0 !== $newTarget.length) {\r\n                this.option(\"focusedElement\", getPublicElement($newTarget))\r\n            }\r\n        },\r\n        _getItemsByLocation: function(location) {\r\n            var $items, $activeItem = this._getActiveItem(true);\r\n            if (inArray(location, LOCAL_SUBMENU_DIRECTIONS) >= 0) {\r\n                $items = $activeItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).children().children()\r\n            }\r\n            $items = this._getAvailableItems($items);\r\n            return $items\r\n        },\r\n        _getAriaTarget: function() {\r\n            return this.$element()\r\n        },\r\n        _refreshActiveDescendant: function() {\r\n            if (!this._overlay) {\r\n                return\r\n            }\r\n            var id = this.getFocusedItemId();\r\n            this.setAria(\"activedescendant\", \"\", this._overlay.$content());\r\n            this.setAria(\"activedescendant\", id, this._overlay.$content())\r\n        },\r\n        _hideSubmenuHandler: function() {\r\n            var $curItem = this._getActiveItem(true),\r\n                $parentItem = $curItem.parents(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).first();\r\n            if ($parentItem.length) {\r\n                this._hideSubmenusOnSameLevel($parentItem);\r\n                this._hideSubmenu($curItem.closest(\".\" + DX_SUBMENU_CLASS));\r\n                return $parentItem\r\n            }\r\n            this._actions.onCloseRootSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _expandSubmenuHandler: function($items, location) {\r\n            var $curItem = this._getActiveItem(true),\r\n                itemData = this._getItemData($curItem),\r\n                node = this._dataAdapter.getNodeByItem(itemData),\r\n                isItemHasSubmenu = this._hasSubmenu(node),\r\n                $submenu = $curItem.children(\".\" + DX_SUBMENU_CLASS);\r\n            if (isItemHasSubmenu && !$curItem.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                if (!$submenu.length || \"hidden\" === $submenu.css(\"visibility\")) {\r\n                    this._showSubmenu($curItem)\r\n                }\r\n                return this._nextItem(this._getItemsByLocation(location))\r\n            }\r\n            this._actions.onExpandLastSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _clean: function() {\r\n            if (this._overlay) {\r\n                this._overlay.$element().remove();\r\n                this._overlay = null\r\n            }\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this.callBase()\r\n        },\r\n        _initMarkup: function() {\r\n            this.$element().addClass(DX_HAS_CONTEXT_MENU_CLASS);\r\n            this.callBase()\r\n        },\r\n        _render: function() {\r\n            this.callBase();\r\n            this._renderVisibility(this.option(\"visible\"));\r\n            this._addWidgetClass()\r\n        },\r\n        _renderContentImpl: function() {\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this._attachShowContextMenuEvents()\r\n        },\r\n        _attachKeyboardEvents: function() {\r\n            !this._keyboardProcessor && this._focusTarget().length && this.callBase()\r\n        },\r\n        _renderContextMenuOverlay: function() {\r\n            if (this._overlay) {\r\n                return\r\n            }\r\n            var $overlayContent, overlayOptions = this._getOverlayOptions(),\r\n                $overlayElement = $(\"<div>\");\r\n            this._overlay = this._createComponent($overlayElement.appendTo(this._$element), Overlay, overlayOptions);\r\n            $overlayContent = this._overlay.$content();\r\n            $overlayContent.addClass(DX_CONTEXT_MENU_CLASS);\r\n            this._addCustomCssClass($overlayContent);\r\n            this._addPlatformDependentClass($overlayContent);\r\n            this._attachContextMenuEvent()\r\n        },\r\n        _itemContextMenuHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _addPlatformDependentClass: function($element) {\r\n            if (devices.current().phone) {\r\n                $element.addClass(DX_MENU_PHONE_CLASS)\r\n            }\r\n        },\r\n        _detachShowContextMenuEvents: function(target) {\r\n            var eventName, showEvent = getShowEvent(this);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, this.NAME);\r\n            if (this._showContextMenuEventHandler) {\r\n                eventsEngine.off(domAdapter.getDocument(), eventName, target, this._showContextMenuEventHandler)\r\n            } else {\r\n                eventsEngine.off($(target), eventName)\r\n            }\r\n        },\r\n        _attachShowContextMenuEvents: function() {\r\n            var delay, handler, eventName, contextMenuAction, that = this,\r\n                target = that._getTarget(),\r\n                showEvent = getShowEvent(that);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, that.NAME);\r\n            contextMenuAction = that._createAction(function(e) {\r\n                delay = getShowDelay(that);\r\n                if (delay) {\r\n                    setTimeout(function() {\r\n                        that._show(e.event)\r\n                    }, delay)\r\n                } else {\r\n                    that._show(e.event)\r\n                }\r\n            }.bind(that), {\r\n                validatingTargetName: \"target\"\r\n            });\r\n            handler = function(e) {\r\n                contextMenuAction({\r\n                    event: e,\r\n                    target: $(e.currentTarget)\r\n                })\r\n            };\r\n            contextMenuAction = that._createAction(contextMenuAction);\r\n            if (typeUtils.isRenderer(target) || target.nodeType || typeUtils.isWindow(target)) {\r\n                that._showContextMenuEventHandler = void 0;\r\n                eventsEngine.on(target, eventName, handler)\r\n            } else {\r\n                that._showContextMenuEventHandler = handler;\r\n                eventsEngine.on(domAdapter.getDocument(), eventName, target, that._showContextMenuEventHandler)\r\n            }\r\n        },\r\n        _hoverEndHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _renderDimensions: noop,\r\n        _renderContainer: function($wrapper, submenuContainer) {\r\n            var $itemsContainer, $holder = submenuContainer || this._itemContainer();\r\n            $wrapper = $(\"<div>\");\r\n            $wrapper.appendTo($holder).addClass(DX_SUBMENU_CLASS).css(\"visibility\", submenuContainer ? \"hidden\" : \"visible\");\r\n            $itemsContainer = this.callBase($wrapper);\r\n            if (submenuContainer) {\r\n                return $itemsContainer\r\n            }\r\n            if (this.option(\"width\")) {\r\n                return $itemsContainer.css(\"minWidth\", this.option(\"width\"))\r\n            }\r\n            if (this.option(\"height\")) {\r\n                return $itemsContainer.css(\"minHeight\", this.option(\"height\"))\r\n            }\r\n            return $itemsContainer\r\n        },\r\n        _renderSubmenuItems: function(node, $itemFrame) {\r\n            this._renderItems(this._getChildNodes(node), $itemFrame);\r\n            this._actions.onSubmenuCreated({\r\n                itemElement: getPublicElement($itemFrame),\r\n                itemData: node.internalFields.item,\r\n                submenuElement: getPublicElement($itemFrame.children(\".\" + DX_SUBMENU_CLASS))\r\n            })\r\n        },\r\n        _getOverlayOptions: function() {\r\n            var position = this.option(\"position\"),\r\n                overlayAnimation = this.option(\"animation\"),\r\n                overlayOptions = {\r\n                    focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n                    animation: overlayAnimation,\r\n                    closeOnOutsideClick: this._closeOnOutsideClickHandler.bind(this),\r\n                    propagateOutsideClick: true,\r\n                    closeOnTargetScroll: true,\r\n                    deferRendering: false,\r\n                    position: {\r\n                        at: position.at,\r\n                        my: position.my,\r\n                        of: this._getTarget(),\r\n                        collision: \"flipfit\"\r\n                    },\r\n                    shading: false,\r\n                    showTitle: false,\r\n                    height: \"auto\",\r\n                    width: \"auto\",\r\n                    onShown: this._overlayShownActionHandler.bind(this),\r\n                    onHiding: this._overlayHidingActionHandler.bind(this),\r\n                    onHidden: this._overlayHiddenActionHandler.bind(this)\r\n                };\r\n            return overlayOptions\r\n        },\r\n        _overlayShownActionHandler: function(arg) {\r\n            this._actions.onShown(arg)\r\n        },\r\n        _overlayHidingActionHandler: function(arg) {\r\n            this._actions.onHiding(arg);\r\n            if (!arg.cancel) {\r\n                this._hideAllShownSubmenus();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n        },\r\n        _overlayHiddenActionHandler: function(arg) {\r\n            this._actions.onHidden(arg)\r\n        },\r\n        _closeOnOutsideClickHandler: function(e) {\r\n            var $clickedItem, $activeItemContainer, $itemContainers, $rootItem, isRootItemClicked, isInnerOverlayClicked, closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n            if (typeUtils.isFunction(closeOnOutsideClick)) {\r\n                return closeOnOutsideClick(e)\r\n            }\r\n            if (!closeOnOutsideClick) {\r\n                return false\r\n            }\r\n            if (domAdapter.isDocument(e.target)) {\r\n                return true\r\n            }\r\n            $activeItemContainer = this._getActiveItemsContainer(e.target);\r\n            $itemContainers = this._getItemsContainers();\r\n            $clickedItem = this._searchActiveItem(e.target);\r\n            $rootItem = this.$element().parents(\".\" + DX_MENU_ITEM_CLASS);\r\n            isRootItemClicked = $clickedItem[0] === $rootItem[0] && $clickedItem.length && $rootItem.length;\r\n            isInnerOverlayClicked = this._isIncludeOverlay($activeItemContainer, $itemContainers) && $clickedItem.length;\r\n            if (isInnerOverlayClicked || isRootItemClicked) {\r\n                if (\"onClick\" === this._getShowSubmenuMode()) {\r\n                    this._hideAllShownChildSubmenus($clickedItem)\r\n                }\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _getActiveItemsContainer: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _getItemsContainers: function() {\r\n            return this._overlay._$content.find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _searchActiveItem: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEM_CLASS).eq(0)\r\n        },\r\n        _isIncludeOverlay: function($activeOverlay, $allOverlays) {\r\n            var isSame = false;\r\n            each($allOverlays, function(index, $overlay) {\r\n                if ($activeOverlay.is($overlay) && !isSame) {\r\n                    isSame = true\r\n                }\r\n            });\r\n            return isSame\r\n        },\r\n        _hideAllShownChildSubmenus: function($clickedItem) {\r\n            var $context, that = this,\r\n                $submenuElements = $clickedItem.find(\".\" + DX_SUBMENU_CLASS),\r\n                shownSubmenus = extend([], this._shownSubmenus);\r\n            if ($submenuElements.length > 0) {\r\n                each(shownSubmenus, function(index, $submenu) {\r\n                    $context = that._searchActiveItem($submenu.context).parent();\r\n                    if ($context.parent().is($clickedItem.parent().parent()) && !$context.is($clickedItem.parent())) {\r\n                        that._hideSubmenu($submenu)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _showSubmenu: function($item) {\r\n            var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n            this._hideSubmenusOnSameLevel($item);\r\n            if (!this._hasSubmenu(node)) {\r\n                return\r\n            }\r\n            var $submenu = $item.children(\".\" + DX_SUBMENU_CLASS),\r\n                isSubmenuRendered = $submenu.length;\r\n            this.callBase($item);\r\n            if (!isSubmenuRendered) {\r\n                this._renderSubmenuItems(node, $item)\r\n            }\r\n            if (!this._isSubmenuVisible($submenu)) {\r\n                this._drawSubmenu($item)\r\n            }\r\n        },\r\n        _hideSubmenusOnSameLevel: function($item) {\r\n            var $expandedItems = $item.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS).siblings().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            if ($expandedItems.length) {\r\n                $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                this._hideSubmenu($expandedItems.find(\".\" + DX_SUBMENU_CLASS))\r\n            }\r\n        },\r\n        _hideSubmenuGroup: function($submenu) {\r\n            if (this._isSubmenuVisible($submenu)) {\r\n                this._hideSubmenuCore($submenu)\r\n            }\r\n        },\r\n        _isSubmenuVisible: function($submenu) {\r\n            return \"visible\" === $submenu.css(\"visibility\")\r\n        },\r\n        _drawSubmenu: function($itemElement) {\r\n            var animation = this.option(\"animation\") ? this.option(\"animation\").show : {},\r\n                $submenu = $itemElement.children(\".\" + DX_SUBMENU_CLASS),\r\n                submenuPosition = this._getSubmenuPosition($itemElement);\r\n            if (this._overlay && this._overlay.option(\"visible\")) {\r\n                if (!typeUtils.isDefined(this._shownSubmenus)) {\r\n                    this._shownSubmenus = []\r\n                }\r\n                if (inArray($submenu, this._shownSubmenus)) {\r\n                    this._shownSubmenus.push($submenu)\r\n                }\r\n                if (animation) {\r\n                    fx.stop($submenu)\r\n                }\r\n                positionUtils.setup($submenu, submenuPosition);\r\n                if (animation) {\r\n                    if (typeUtils.isPlainObject(animation.to)) {\r\n                        animation.to.position = submenuPosition\r\n                    }\r\n                    this._animate($submenu, animation)\r\n                }\r\n                $submenu.css(\"visibility\", \"visible\")\r\n            }\r\n        },\r\n        _animate: function($container, options) {\r\n            fx.animate($container, options)\r\n        },\r\n        _getSubmenuPosition: function($rootItem) {\r\n            var submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n                $rootItemWrapper = $rootItem.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS),\r\n                position = {\r\n                    collision: \"flip\",\r\n                    of: $rootItemWrapper,\r\n                    offset: {\r\n                        h: 0,\r\n                        v: -1\r\n                    }\r\n                };\r\n            switch (submenuDirection) {\r\n                case \"left\":\r\n                    position.at = \"left top\";\r\n                    position.my = \"right top\";\r\n                    break;\r\n                case \"right\":\r\n                    position.at = \"right top\";\r\n                    position.my = \"left top\";\r\n                    break;\r\n                default:\r\n                    if (this.option(\"rtlEnabled\")) {\r\n                        position.at = \"left top\";\r\n                        position.my = \"right top\"\r\n                    } else {\r\n                        position.at = \"right top\";\r\n                        position.my = \"left top\"\r\n                    }\r\n            }\r\n            return position\r\n        },\r\n        _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n            if (!actionArgs.args.length) {\r\n                return\r\n            }\r\n            var $itemElement = $(actionArgs.args[0].itemElement),\r\n                itemData = actionArgs.args[0].itemData,\r\n                node = this._dataAdapter.getNodeByItem(itemData);\r\n            if (!node) {\r\n                return\r\n            }\r\n            var $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS),\r\n                shouldRenderSubmenu = this._hasSubmenu(node) && !$submenu.length;\r\n            if (shouldRenderSubmenu) {\r\n                this._renderSubmenuItems(node, $itemElement);\r\n                $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS)\r\n            }\r\n            if ($itemElement.context === $submenu.context && \"visible\" === $submenu.css(\"visibility\")) {\r\n                return\r\n            }\r\n            var notCloseMenuOnItemClick = itemData && false === itemData.closeMenuOnClick;\r\n            if (!itemData || itemData.disabled || notCloseMenuOnItemClick) {\r\n                return\r\n            }\r\n            this._updateSelectedItemOnClick(actionArgs);\r\n            if (0 === $submenu.length) {\r\n                var $prevSubmenu = $($itemElement.parents(\".\" + DX_SUBMENU_CLASS)[0]);\r\n                this._hideSubmenu($prevSubmenu);\r\n                if (!actionArgs.canceled && this._overlay && this._overlay.option(\"visible\")) {\r\n                    this.option(\"visible\", false)\r\n                }\r\n            } else {\r\n                if (this._shownSubmenus && this._shownSubmenus.length > 0) {\r\n                    if (this._shownSubmenus[0].is($submenu)) {\r\n                        this._hideSubmenu($submenu)\r\n                    }\r\n                }\r\n                this._showSubmenu($itemElement)\r\n            }\r\n        },\r\n        _hideSubmenu: function($curSubmenu) {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus);\r\n            each(shownSubmenus, function(index, $submenu) {\r\n                if ($curSubmenu.is($submenu) || contains($curSubmenu[0], $submenu[0])) {\r\n                    $submenu.parent().removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                    that._hideSubmenuCore($submenu)\r\n                }\r\n            })\r\n        },\r\n        _hideSubmenuCore: function($submenu) {\r\n            var index = inArray($submenu, this._shownSubmenus),\r\n                animation = this.option(\"animation\") ? this.option(\"animation\").hide : null;\r\n            if (index >= 0) {\r\n                this._shownSubmenus.splice(index, 1)\r\n            }\r\n            this._stopAnimate($submenu);\r\n            animation && this._animate($submenu, animation);\r\n            $submenu.css(\"visibility\", \"hidden\")\r\n        },\r\n        _stopAnimate: function($container) {\r\n            fx.stop($container, true)\r\n        },\r\n        _hideAllShownSubmenus: function() {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus),\r\n                $expandedItems = this._overlay.$content().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n            each(shownSubmenus, function(_, $submenu) {\r\n                that._hideSubmenu($submenu)\r\n            })\r\n        },\r\n        _visibilityChanged: function(visible) {\r\n            if (visible) {\r\n                this._renderContentImpl()\r\n            }\r\n        },\r\n        _optionChanged: function(args) {\r\n            if (this._cancelOptionChange === args.name) {\r\n                return\r\n            }\r\n            if (inArray(args.name, ACTIONS) > -1) {\r\n                this._initActions();\r\n                return\r\n            }\r\n            switch (args.name) {\r\n                case \"visible\":\r\n                    this._renderVisibility(args.value);\r\n                    break;\r\n                case \"showEvent\":\r\n                case \"position\":\r\n                case \"submenuDirection\":\r\n                    this._invalidate();\r\n                    break;\r\n                case \"target\":\r\n                    args.previousValue && this._detachShowContextMenuEvents(args.previousValue);\r\n                    this.option(\"position\").of = null;\r\n                    this._invalidate();\r\n                    break;\r\n                case \"closeOnOutsideClick\":\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        _renderVisibility: function(showing) {\r\n            return showing ? this._show() : this._hide()\r\n        },\r\n        _toggleVisibility: noop,\r\n        _show: function(event) {\r\n            var args = {\r\n                    jQEvent: event\r\n                },\r\n                promise = (new Deferred).reject().promise();\r\n            this._actions.onShowing(args);\r\n            if (args.cancel) {\r\n                return promise\r\n            }\r\n            var position = this._positionContextMenu(event);\r\n            if (position) {\r\n                if (!this._overlay) {\r\n                    this._renderContextMenuOverlay();\r\n                    this._overlay.$content().addClass(this._widgetClass());\r\n                    this._renderFocusState();\r\n                    this._attachHoverEvents();\r\n                    this._attachClickEvent();\r\n                    this._renderItems(this._dataAdapter.getRootNodes())\r\n                }\r\n                this._setOptionSilent(\"visible\", true);\r\n                this._overlay.option(\"position\", position);\r\n                promise = this._overlay.show();\r\n                event && event.stopPropagation();\r\n                var id = \"dx-\" + new Guid;\r\n                this._overlay.$content().attr({\r\n                    id: id,\r\n                    role: \"menu\"\r\n                });\r\n                this.setAria(\"owns\", id)\r\n            }\r\n            return promise\r\n        },\r\n        _getTarget: function() {\r\n            return this.option(\"target\") || this.option(\"position\").of || $(domAdapter.getDocument())\r\n        },\r\n        _getContextMenuPosition: function() {\r\n            return extend({}, this.option(\"position\"), { of: this._getTarget()\r\n            })\r\n        },\r\n        _positionContextMenu: function(jQEvent) {\r\n            var actionArgs, position = this._getContextMenuPosition(),\r\n                isInitialPosition = this._isInitialOptionValue(\"position\"),\r\n                positioningAction = this._createActionByOption(\"onPositioning\", actionArgs);\r\n            if (jQEvent && jQEvent.preventDefault && isInitialPosition) {\r\n                position.of = jQEvent\r\n            }\r\n            actionArgs = {\r\n                position: position,\r\n                event: jQEvent\r\n            };\r\n            positioningAction(actionArgs);\r\n            if (actionArgs.cancel) {\r\n                position = null\r\n            } else {\r\n                if (actionArgs.event) {\r\n                    actionArgs.event.cancel = true;\r\n                    jQEvent.preventDefault()\r\n                }\r\n            }\r\n            return position\r\n        },\r\n        _hide: function() {\r\n            var promise;\r\n            if (this._overlay) {\r\n                this._overlay.$content().removeAttr(\"id\");\r\n                promise = this._overlay.hide();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n            this.setAria(\"owns\", void 0);\r\n            return promise || (new Deferred).reject().promise()\r\n        },\r\n        toggle: function(showing) {\r\n            var visible = this.option(\"visible\");\r\n            showing = void 0 === showing ? !visible : showing;\r\n            return this._renderVisibility(showing)\r\n        },\r\n        show: function() {\r\n            return this.toggle(true)\r\n        },\r\n        hide: function() {\r\n            return this.toggle(false)\r\n        }\r\n    }\r\n}());\r\nregisterComponent(\"dxContextMenu\", ContextMenu);\r\nmodule.exports = ContextMenu;\r\n\n\n/***/ }),\n\n/***/ 810:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.edit.strategy.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = __webpack_require__(1),\r\n    map = __webpack_require__(5).map,\r\n    PlainEditStrategy = __webpack_require__(210);\r\nvar MenuBaseEditStrategy = PlainEditStrategy.inherit({\r\n    _getPlainItems: function() {\r\n        return map(this._collectionWidget.option(\"items\"), function getMenuItems(item) {\r\n            return item.items ? [item].concat(map(item.items, getMenuItems)) : item\r\n        })\r\n    },\r\n    _stringifyItem: function(item) {\r\n        var that = this;\r\n        return JSON.stringify(item, function(key, value) {\r\n            if (\"template\" === key) {\r\n                return that._getTemplateString(value)\r\n            }\r\n            return value\r\n        })\r\n    },\r\n    _getTemplateString: function(template) {\r\n        var result;\r\n        if (\"object\" === (\"undefined\" === typeof template ? \"undefined\" : _typeof(template))) {\r\n            result = $(template).text()\r\n        } else {\r\n            result = template.toString()\r\n        }\r\n        return result\r\n    }\r\n});\r\nmodule.exports = MenuBaseEditStrategy;\r\n\n\n/***/ }),\n\n/***/ 811:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(812);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 812:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu/ui.menu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    registerComponent = __webpack_require__(16),\r\n    commonUtils = __webpack_require__(6),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    each = __webpack_require__(5).each,\r\n    typeUtils = __webpack_require__(4),\r\n    extend = __webpack_require__(3).extend,\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(31),\r\n    hoverEvents = __webpack_require__(345),\r\n    MenuBase = __webpack_require__(768),\r\n    Overlay = __webpack_require__(54),\r\n    Submenu = __webpack_require__(813),\r\n    Button = __webpack_require__(42),\r\n    TreeView = __webpack_require__(342);\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\",\r\n    DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\",\r\n    DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    DX_STATE_HOVER_CLASS = \"dx-state-hover\",\r\n    DX_STATE_ACTIVE_CLASS = \"dx-state-active\",\r\n    DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\",\r\n    DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    SHOW_SUBMENU_OPERATION = \"showSubmenu\",\r\n    NEXTITEM_OPERATION = \"nextItem\",\r\n    PREVITEM_OPERATION = \"prevItem\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    },\r\n    ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\"];\r\nvar Menu = MenuBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _itemElements: function() {\r\n        var rootMenuElements = this.callBase(),\r\n            submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    },\r\n    _submenuItemElements: function() {\r\n        var elements = [],\r\n            itemSelector = \".\" + DX_MENU_ITEM_CLASS,\r\n            currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _moveFocus: function(location) {\r\n        var argument, operation, navigationAction, $newTarget, $items = this._getAvailableItems(),\r\n            isMenuHorizontal = this._isMenuHorizontal(),\r\n            $activeItem = this._getActiveItem(true);\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return this.callBase(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    },\r\n    _getItemsNavigationOperation: function(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    },\r\n    _getKeyboardNavigationAction: function(operation, argument) {\r\n        var action = commonUtils.noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _isAdaptivityEnabled: function() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _updateItemsWidthCache: function() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\" + DX_MENU_ITEM_CLASS);\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = this.$element().outerWidth();\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._submenus = []\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {};\r\n        each(ACTIONS, function(index, action) {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        }.bind(this))\r\n    },\r\n    _initMarkup: function() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"menubar\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._initAdaptivity()\r\n    },\r\n    _renderHamburgerButton: function() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    },\r\n    _toggleTreeView: function(state) {\r\n        if (typeUtils.isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    },\r\n    _toggleHamburgerActiveState: function(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    },\r\n    _toggleAdaptiveMode: function(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\" + DX_MENU_HORIZONTAL_CLASS),\r\n            $adaptiveElements = this.$element().find(\".\" + DX_ADAPTIVE_MODE_CLASS);\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    },\r\n    _removeAdaptivity: function() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    },\r\n    _treeviewItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    },\r\n    _getAdaptiveOverlayOptions: function() {\r\n        var rtl = this.option(\"rtlEnabled\"),\r\n            position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            closeOnTargetScroll: true,\r\n            onHidden: function() {\r\n                this._toggleHamburgerActiveState(false)\r\n            }.bind(this),\r\n            height: \"auto\",\r\n            closeOnOutsideClick: function(e) {\r\n                return !!!$(e.target).closest(\".\" + DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS).length\r\n            },\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    },\r\n    _getTreeViewOptions: function() {\r\n        var menuOptions = {},\r\n            that = this,\r\n            optionsToTransfer = [\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"],\r\n            actionsToTransfer = [\"onItemContextMenu\", \"onSelectionChanged\"];\r\n        each(optionsToTransfer, function(_, option) {\r\n            menuOptions[option] = that.option(option)\r\n        });\r\n        each(actionsToTransfer, function(_, actionName) {\r\n            menuOptions[actionName] = function(e) {\r\n                this._actions[actionName](e)\r\n            }.bind(that)\r\n        });\r\n        return extend(menuOptions, {\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: that._treeviewItemClickHandler.bind(that),\r\n            onItemExpanded: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            }.bind(that),\r\n            onItemCollapsed: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            }.bind(that),\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    },\r\n    _initAdaptivity: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    },\r\n    _getDelay: function(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return typeUtils.isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    },\r\n    _renderContainer: function() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return this.callBase($wrapper)\r\n    },\r\n    _renderSubmenuItems: function(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    },\r\n    _createSubmenu: function(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node),\r\n            result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n                _dataAdapter: this._dataAdapter,\r\n                _parentKey: node.internalFields.key,\r\n                items: items,\r\n                onHoverStart: this._clearTimeouts.bind(this),\r\n                position: this.getSubmenuPosition($rootItem)\r\n            }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    },\r\n    _getSubmenuOptions: function() {\r\n        var $submenuTarget = $(\"<div>\"),\r\n            isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this.option(\"onItemRendered\"),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    },\r\n    _getShowFirstSubmenuMode: function() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return typeUtils.isObject(optionValue) ? optionValue.name : optionValue\r\n    },\r\n    _moveMainMenuFocus: function(direction) {\r\n        var $items = this._getAvailableItems(),\r\n            itemCount = $items.length,\r\n            $currentItem = $items.filter(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).eq(0),\r\n            itemIndex = $items.index($currentItem);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else {\r\n            if (itemIndex < 0) {\r\n                itemIndex = itemCount - 1\r\n            }\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.focus();\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    },\r\n    _nestedItemOnSelectionChangedHandler: function(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0],\r\n            submenu = Submenu.getInstance(args.element),\r\n            onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionSilent(\"selectedItem\", selectedItem)\r\n    },\r\n    _clearSelectionInSubmenus: function(item, targetSubmenu) {\r\n        var that = this,\r\n            cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, function(index, submenu) {\r\n            var $submenu = submenu._itemContainer(),\r\n                isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer()),\r\n                $selectedItem = $submenu.find(\".\" + that._selectedItemClass());\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                var selectedItemData;\r\n                $selectedItem.removeClass(that._selectedItemClass());\r\n                selectedItemData = that._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    },\r\n    _clearRootSelection: function() {\r\n        var $prevSelectedItem = this.$element().find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).first().children().children().filter(\".\" + this._selectedItemClass());\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData;\r\n            prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    },\r\n    _nestedItemOnItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e)\r\n    },\r\n    _attachSubmenuHandlers: function($rootItem, submenu) {\r\n        var that = this,\r\n            $submenuOverlayContent = submenu.getOverlayContent(),\r\n            submenus = $submenuOverlayContent.find(\".\" + DX_SUBMENU_CLASS),\r\n            submenuMouseLeaveName = eventUtils.addNamespace(hoverEvents.end, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, function(index, submenu) {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, that._submenuMouseLeaveHandler.bind(that, $rootItem))\r\n        })\r\n    },\r\n    _submenuOnShowingHandler: function($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS);\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _submenuOnShownHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuOnHidingHandler: function($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS),\r\n            args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _submenuOnHiddenHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuMouseLeaveHandler: function($rootItem, eventArgs) {\r\n        var that = this,\r\n            target = $(eventArgs.relatedTarget).parents(\".\" + DX_CONTEXT_MENU_CLASS)[0],\r\n            contextMenu = that._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            that._clearTimeouts();\r\n            setTimeout(that._hideSubmenuAfterTimeout.bind(that), that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideSubmenuAfterTimeout: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS),\r\n            isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\" + DX_STATE_HOVER_CLASS).length;\r\n        if (!isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    },\r\n    _getSubmenuByRootElement: function($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\" + DX_CONTEXT_MENU_CLASS);\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    },\r\n    getSubmenuPosition: function($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal(),\r\n            submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n            rtlEnabled = this.option(\"rtlEnabled\"),\r\n            submenuPosition = {\r\n                collision: \"flip\",\r\n                of: $rootItem\r\n            };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    },\r\n    _renderBorderElement: function($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        var $target = $(e.target),\r\n            $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var mouseMoveEventName = eventUtils.addNamespace(pointerEvents.move, this.NAME),\r\n            $item = this._getItemElementByEventArgs(e),\r\n            node = this._dataAdapter.getNodeByItem(this._getItemData($item)),\r\n            isSelectionActive = typeUtils.isDefined(e.buttons) && 1 === e.buttons || !typeUtils.isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    },\r\n    _hoverEndHandler: function(eventArg) {\r\n        var that = this,\r\n            $item = that._getItemElementByEventArgs(eventArg),\r\n            relatedTarget = $(eventArg.relatedTarget);\r\n        that.callBase(eventArg);\r\n        that._clearTimeouts();\r\n        if (that._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            that._hideSubmenuTimer = setTimeout(function() {\r\n                that._hideSubmenuAfterTimeout()\r\n            }, that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideVisibleSubmenu: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        submenu && submenu.show();\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    },\r\n    _hideSubmenu: function(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    },\r\n    _itemMouseMoveHandler: function(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var that = this,\r\n            $item = $(e.currentTarget);\r\n        if (!typeUtils.isDefined(that._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        that._clearTimeouts();\r\n        that._showSubmenuTimer = setTimeout(function() {\r\n            var submenu = that._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                that._showSubmenu($item)\r\n            }\r\n        }, that._getDelay(\"show\"))\r\n    },\r\n    _clearTimeouts: function() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    },\r\n    _getSubmenuByElement: function($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        var currentSubmenu, args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"onSubmenuShowing\":\r\n            case \"onSubmenuShown\":\r\n            case \"onSubmenuHiding\":\r\n            case \"onSubmenuHidden\":\r\n                this._initActions();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value)\r\n                }\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _changeSubmenusOption: function(name, value) {\r\n        each(this._submenus, function(index, submenu) {\r\n            submenu.option(name, value)\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    }\r\n});\r\nregisterComponent(\"dxMenu\", Menu);\r\nmodule.exports = Menu;\r\n\n\n/***/ }),\n\n/***/ 813:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu/ui.submenu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    noop = __webpack_require__(6).noop,\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    positionUtils = __webpack_require__(138),\r\n    extend = __webpack_require__(3).extend,\r\n    ContextMenu = __webpack_require__(773);\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar Submenu = ContextMenu.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            onHoverStart: noop\r\n        })\r\n    },\r\n    _initDataAdapter: function() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderContextMenuOverlay();\r\n        this.callBase();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    },\r\n    _renderDelimiter: function() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    },\r\n    _getOverlayOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    },\r\n    _overlayPositionedActionHandler: function(arg) {\r\n        this._showDelimiter(arg)\r\n    },\r\n    _hoverEndHandler: function(e) {\r\n        this.callBase(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        this.callBase(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    },\r\n    _drawSubmenu: function($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _hideSubmenu: function($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _showDelimiter: function(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\" + DX_SUBMENU_CLASS).eq(0),\r\n            $rootItem = this.option(\"position\").of,\r\n            position = { of: $submenu\r\n            },\r\n            containerOffset = arg.position,\r\n            vLocation = containerOffset.v.location,\r\n            hLocation = containerOffset.h.location,\r\n            rootOffset = $rootItem.offset(),\r\n            offsetLeft = Math.round(rootOffset.left),\r\n            offsetTop = Math.round(rootOffset.top),\r\n            rootWidth = $rootItem.width(),\r\n            rootHeight = $rootItem.height(),\r\n            submenuWidth = $submenu.width(),\r\n            submenuHeight = $submenu.height();\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        this.$contentDelimiter.width(this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        this.$contentDelimiter.height(this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                this.$contentDelimiter.height(5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else {\r\n            if (hLocation > offsetLeft) {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"-1 1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"left bottom\"\r\n                }\r\n            } else {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"1 1\";\r\n                    position.at = position.my = \"right top\"\r\n                } else {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        }\r\n        positionUtils.setup(this.$contentDelimiter, position)\r\n    },\r\n    _getContextMenuPosition: function() {\r\n        return this.option(\"position\")\r\n    },\r\n    isOverlayVisible: function() {\r\n        return this._overlay.option(\"visible\")\r\n    },\r\n    getOverlayContent: function() {\r\n        return this._overlay.$content()\r\n    }\r\n});\r\nmodule.exports = Submenu;\r\n\n\n/***/ }),\n\n/***/ 815:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar menu_1 = __webpack_require__(811);\nvar prop_types_1 = __webpack_require__(36);\nvar component_1 = __webpack_require__(39);\nvar nested_option_1 = __webpack_require__(80);\nvar Menu = /** @class */ (function (_super) {\n    __extends(Menu, _super);\n    function Menu() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = menu_1.default;\n        _this._defaults = {\n            defaultItems: \"items\",\n            defaultSelectedItem: \"selectedItem\"\n        };\n        _this._templateProps = [{\n                tmplOption: \"itemTemplate\",\n                render: \"itemRender\",\n                component: \"itemComponent\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(Menu.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Menu;\n}(component_1.Component));\nexports.Menu = Menu;\nMenu.propTypes = {\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    adaptivityEnabled: prop_types_1.PropTypes.bool,\n    animation: prop_types_1.PropTypes.object,\n    cssClass: prop_types_1.PropTypes.string,\n    dataSource: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.array,\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.string\n    ]),\n    disabled: prop_types_1.PropTypes.bool,\n    disabledExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    displayExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hideSubmenuOnMouseLeave: prop_types_1.PropTypes.bool,\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    items: prop_types_1.PropTypes.array,\n    itemsExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onContentReady: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onItemClick: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onItemContextMenu: prop_types_1.PropTypes.func,\n    onItemRendered: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onSelectionChanged: prop_types_1.PropTypes.func,\n    onSubmenuHidden: prop_types_1.PropTypes.func,\n    onSubmenuHiding: prop_types_1.PropTypes.func,\n    onSubmenuShowing: prop_types_1.PropTypes.func,\n    onSubmenuShown: prop_types_1.PropTypes.func,\n    orientation: prop_types_1.PropTypes.oneOf([\n        \"horizontal\",\n        \"vertical\"\n    ]),\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    selectByClick: prop_types_1.PropTypes.bool,\n    selectedExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    selectedItem: prop_types_1.PropTypes.object,\n    selectionMode: prop_types_1.PropTypes.oneOf([\n        \"none\",\n        \"single\"\n    ]),\n    showFirstSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    showSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    submenuDirection: prop_types_1.PropTypes.oneOf([\n        \"auto\",\n        \"leftOrTop\",\n        \"rightOrBottom\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Menu\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Animation.OptionName = \"animation\";\n    return Animation;\n}(nested_option_1.default));\nexports.Animation = Animation;\n// owners:\n// ShowFirstSubmenuMode\n// ShowSubmenuMode\nvar Delay = /** @class */ (function (_super) {\n    __extends(Delay, _super);\n    function Delay() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Delay.OptionName = \"delay\";\n    return Delay;\n}(nested_option_1.default));\nexports.Delay = Delay;\n// owners:\n// Animation\nvar Hide = /** @class */ (function (_super) {\n    __extends(Hide, _super);\n    function Hide() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Hide.OptionName = \"hide\";\n    return Hide;\n}(nested_option_1.default));\nexports.Hide = Hide;\n// owners:\n// Menu\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Item.OptionName = \"items\";\n    Item.IsCollectionItem = true;\n    Item.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    return Item;\n}(nested_option_1.default));\nexports.Item = Item;\n// owners:\n// Animation\nvar Show = /** @class */ (function (_super) {\n    __extends(Show, _super);\n    function Show() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Show.OptionName = \"show\";\n    return Show;\n}(nested_option_1.default));\nexports.Show = Show;\n// owners:\n// Menu\nvar ShowFirstSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowFirstSubmenuMode, _super);\n    function ShowFirstSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowFirstSubmenuMode.OptionName = \"showFirstSubmenuMode\";\n    return ShowFirstSubmenuMode;\n}(nested_option_1.default));\nexports.ShowFirstSubmenuMode = ShowFirstSubmenuMode;\n// owners:\n// Menu\nvar ShowSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowSubmenuMode, _super);\n    function ShowSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowSubmenuMode.OptionName = \"showSubmenuMode\";\n    return ShowSubmenuMode;\n}(nested_option_1.default));\nexports.ShowSubmenuMode = ShowSubmenuMode;\nexports.default = Menu;\n\n\n/***/ }),\n\n/***/ 846:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-vue/menu' file instead */\n__export(__webpack_require__(815));\nvar menu_1 = __webpack_require__(815);\nexports.default = menu_1.default;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/7.chunk.js","/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\nimport * as tslib_1 from \"tslib\";\nvar _a;\nimport { Button } from \"devextreme-react/ui/button\";\nimport { Menu } from \"devextreme-react/ui/menu\";\nimport * as React from \"react\";\nimport { MenuItemTemplate } from \"../menu-item\";\nimport { createWithStyleComponent } from \"../with-style\";\nimport { createSelector } from \"reselect\";\nvar dxStateHoverClassName = \"dx-state-hover\", dropDownButtonClassName = \"xet-drop-down-button\", actionButtonClassName = \"xet-action-button\";\nvar WithStyle = createWithStyleComponent({\n    main: (_a = {\n            \"display\": \"flex\",\n            \"flexDirection\": \"row\",\n            \"alignItems\": \"center\"\n        },\n        _a[\"& .\" + actionButtonClassName] = {\n            \"borderBottomRightRadius\": 0,\n            \"borderTopRightRadius\": 0,\n            \"borderRightWidth\": 0\n        },\n        _a[\"& .\" + dropDownButtonClassName] = {\n            \"borderBottomLeftRadius\": 0,\n            \"borderTopLeftRadius\": 0\n        },\n        _a[\"& .dx-button.dx-state-focused\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-active\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-focused + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-button.dx-state-active + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-menu-base .dx-menu-item-content\"] = {\n            \"padding\": 0\n        },\n        _a[\"& .dx-menu-item\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-menu-item-expanded\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-context-menu-container-border\"] = {\n            \"display\": \"none\"\n        },\n        _a[\"& .xet-menu .dx-context-menu-content-delimiter\"] = {\n            \"display\": \"none!important\"\n        },\n        _a)\n});\nvar ReactSingleChoiceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReactSingleChoiceAction, _super);\n    function ReactSingleChoiceAction() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { firstActiveItem: _this.props.items[0], lastExecutedItem: null, lastExcutedLeafItem: null };\n        _this.menuItemsSelector = createSelector(function (_a) {\n            var items = _a.items;\n            return items;\n        }, function (items) {\n            var root = { items: null };\n            root.items = ReactSingleChoiceAction.mapItems(items, root);\n            return [root];\n        });\n        _this.actionButtonElement = React.createRef();\n        _this.dropDownButtonElement = React.createRef();\n        _this.handleMouseEnter = function (_a) {\n            var target = _a.target;\n            var classList = target.classList;\n            if (classList.contains(dropDownButtonClassName) || classList.contains(actionButtonClassName)) {\n                _this.getElement(_this.actionButtonElement).classList.add(dxStateHoverClassName);\n                _this.getElement(_this.dropDownButtonElement).classList.add(dxStateHoverClassName);\n            }\n        };\n        _this.handleMouseLeave = function () {\n            _this.getElement(_this.actionButtonElement).classList.remove(dxStateHoverClassName);\n            _this.getElement(_this.dropDownButtonElement).classList.remove(dxStateHoverClassName);\n        };\n        _this.renderSubmenuItemComponent = function (item) {\n            if (_this.isRootItem(item)) {\n                return (React.createElement(Button, { icon: \"spindown\", elementAttr: { class: dropDownButtonClassName }, ref: _this.dropDownButtonElement, hoverStateEnabled: false }));\n            }\n            return React.createElement(MenuItemTemplate, tslib_1.__assign({}, tslib_1.__assign({}, item, { showArrow: ReactSingleChoiceAction.isLeafItem(item) })));\n        };\n        _this.executeAction = function (e) {\n            var itemToExecute = _this.getItemToExecute(), _a = _this.props, onExecute = _a.onExecute, _b = _a.showItemsOnClick, showItemsOnClick = _b === void 0 ? false : _b, onExecuteFn = itemToExecute.onExecute ? itemToExecute.onExecute : onExecute;\n            if (showItemsOnClick) {\n                setTimeout(function () {\n                    _this.getElement(_this.dropDownButtonElement).click();\n                });\n                return false;\n            }\n            return onExecuteFn(tslib_1.__assign({}, e, { itemData: itemToExecute }));\n        };\n        _this.executeItemClick = function (e) {\n            var itemData = e.itemData, _a = _this.props.onExecute, onExecuteFn = _a === void 0 ? function () { return undefined; } : _a, _b = itemData.onExecute, itemExecuteFn = _b === void 0 ? onExecuteFn : _b;\n            if (!_this.isRootItem(itemData)) {\n                var isLeafItem_1 = ReactSingleChoiceAction.isLeafItem(itemData);\n                _this.setState(function (prevState) {\n                    var lastExcutedLeafItem = isLeafItem_1 ? itemData : prevState.lastExcutedLeafItem;\n                    return tslib_1.__assign({}, prevState, { lastExecutedItem: itemData, lastExcutedLeafItem: lastExcutedLeafItem });\n                });\n                if (!isLeafItem_1) {\n                    return itemExecuteFn(e);\n                }\n            }\n        };\n        _this.getItemToExecute = function () {\n            var _a = _this.props.defaultItemMode, defaultItemMode = _a === void 0 ? \"FirstActiveItem\" : _a, _b = _this.state, lastExecutedItem = _b.lastExecutedItem, firstActiveItem = _b.firstActiveItem, itemToExecute = defaultItemMode === \"LastExecutedItem\" && lastExecutedItem\n                ? lastExecutedItem\n                : firstActiveItem;\n            return itemToExecute;\n        };\n        return _this;\n    }\n    ReactSingleChoiceAction.mapItems = function (items, parent) {\n        if (items === void 0) { items = []; }\n        if (parent === void 0) { parent = null; }\n        var hasIcon = items.some(function (item) { return !!item.icon; });\n        return items.map(function (item) {\n            var newItem = tslib_1.__assign({}, item, { parent: parent });\n            if (hasIcon) {\n                newItem = tslib_1.__assign({}, newItem, { icon: newItem.icon || \"empty\" });\n            }\n            if (ReactSingleChoiceAction.isLeafItem(item)) {\n                newItem.items = ReactSingleChoiceAction.mapItems(item.items, newItem);\n            }\n            return newItem;\n        });\n    };\n    ReactSingleChoiceAction.prototype.getElement = function (ref) {\n        return ref.current.instance.element();\n    };\n    ReactSingleChoiceAction.isLeafItem = function (item) {\n        return !!item.items;\n    };\n    ReactSingleChoiceAction.prototype.isRootItem = function (item) {\n        return !item.parent;\n    };\n    ReactSingleChoiceAction.prototype.render = function () {\n        var _this = this;\n        var itemToExecute = this.getItemToExecute(), _a = this.props, _b = _a.actionText, actionText = _b === void 0 ? itemToExecute.text : _b, _c = _a.actionIcon, actionIcon = _c === void 0 ? itemToExecute.icon : _c, _d = _a.showText, showText = _d === void 0 ? true : _d, showItemsOnClick = _a.showItemsOnClick, tooltip = _a.tooltip, style = _a.style, widgetTooltip = itemToExecute.tooltip || tooltip;\n        return (React.createElement(WithStyle, { className: this.props.className }, function (_a) {\n            var main = _a.main;\n            return (React.createElement(\"div\", { style: style, className: main, onMouseEnter: _this.handleMouseEnter, onMouseLeave: _this.handleMouseLeave },\n                React.createElement(Button, { onClick: _this.executeAction, icon: !showItemsOnClick ? actionIcon : null, text: showText ? actionText : null, hint: widgetTooltip, elementAttr: { class: actionButtonClassName }, ref: _this.actionButtonElement, hoverStateEnabled: false }),\n                React.createElement(Menu, { cssClass: \"xet-menu\", hint: widgetTooltip, showFirstSubmenuMode: \"onHover\", onItemClick: _this.executeItemClick, itemComponent: _this.renderSubmenuItemComponent, items: _this.menuItemsSelector(_this.props) })));\n        }));\n    };\n    ReactSingleChoiceAction.defaultProps = { _originalConfig: {} };\n    return ReactSingleChoiceAction;\n}(React.Component));\nexport default ReactSingleChoiceAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./additional_modules/app-player-react/dist/widgets/actions/single-choice-action.js\n// module id = 712\n// module chunks = 6 7","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    inkRipple = require(\"../widget/utils.ink_ripple\"),\r\n    HierarchicalCollectionWidget = require(\"../hierarchical_collection/ui.hierarchical_collection_widget\"),\r\n    MenuBaseEditStrategy = require(\"./ui.menu_base.edit.strategy\"),\r\n    devices = require(\"../../core/devices\"),\r\n    themes = require(\"../themes\");\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_NO_ICONS_CLASS = DX_MENU_CLASS + \"-no-icons\",\r\n    DX_MENU_BASE_CLASS = \"dx-menu-base\",\r\n    ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_ITEM_CONTENT_CLASS = ITEM_CLASS + \"-content\",\r\n    DX_MENU_SELECTED_ITEM_CLASS = ITEM_CLASS + \"-selected\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = ITEM_CLASS + \"-wrapper\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_SEPARATOR_CLASS = DX_MENU_CLASS + \"-separator\",\r\n    DX_MENU_ITEM_LAST_GROUP_ITEM = DX_MENU_CLASS + \"-last-group-item\",\r\n    DX_ITEM_HAS_TEXT = ITEM_CLASS + \"-has-text\",\r\n    DX_ITEM_HAS_ICON = ITEM_CLASS + \"-has-icon\",\r\n    DX_ITEM_HAS_SUBMENU = ITEM_CLASS + \"-has-submenu\",\r\n    DX_MENU_ITEM_POPOUT_CLASS = ITEM_CLASS + \"-popout\",\r\n    DX_MENU_ITEM_POPOUT_CONTAINER_CLASS = DX_MENU_ITEM_POPOUT_CLASS + \"-container\",\r\n    DX_MENU_ITEM_CAPTION_CLASS = ITEM_CLASS + \"-text\",\r\n    SINGLE_SELECTION_MODE = \"single\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    };\r\nvar MenuBase = HierarchicalCollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            items: [],\r\n            cssClass: \"\",\r\n            activeStateEnabled: true,\r\n            showSubmenuMode: {\r\n                name: \"onHover\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    from: 0,\r\n                    to: 1,\r\n                    duration: 100\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    from: 1,\r\n                    to: 0,\r\n                    duration: 100\r\n                }\r\n            },\r\n            selectByClick: false,\r\n            focusOnSelectedItem: false,\r\n            keyExpr: null,\r\n            _itemAttributes: {\r\n                role: \"menuitem\"\r\n            },\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _itemDataKey: function() {\r\n        return \"dxMenuItemDataKey\"\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _setAriaSelected: commonUtils.noop,\r\n    _selectedItemClass: function() {\r\n        return DX_MENU_SELECTED_ITEM_CLASS\r\n    },\r\n    _widgetClass: function() {\r\n        return DX_MENU_BASE_CLASS\r\n    },\r\n    _focusTarget: function() {\r\n        return this._itemContainer()\r\n    },\r\n    _clean: function() {\r\n        this.option(\"focusedElement\", null);\r\n        this.callBase()\r\n    },\r\n    _supportedKeys: function() {\r\n        var selectItem = function() {\r\n            var $item = $(this.option(\"focusedElement\"));\r\n            if (!$item.length || !this._isSelectionEnabled()) {\r\n                return\r\n            }\r\n            this.selectItem($item[0])\r\n        };\r\n        return extend(this.callBase(), {\r\n            space: selectItem,\r\n            pageUp: commonUtils.noop,\r\n            pageDown: commonUtils.noop\r\n        })\r\n    },\r\n    _isSelectionEnabled: function() {\r\n        return this.option(\"selectionMode\") === SINGLE_SELECTION_MODE\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItem();\r\n        this._initActions()\r\n    },\r\n    _getTextContainer: function(itemData) {\r\n        var itemText = itemData.text,\r\n            $itemContainer = $(\"<span>\").addClass(DX_MENU_ITEM_CAPTION_CLASS),\r\n            itemContent = typeUtils.isPlainObject(itemData) ? itemText : String(itemData);\r\n        return itemText && $itemContainer.text(itemContent)\r\n    },\r\n    _getPopoutContainer: function(itemData) {\r\n        var $popOutContainer, items = itemData.items;\r\n        if (items && items.length) {\r\n            var $popOutImage = $(\"<div>\").addClass(DX_MENU_ITEM_POPOUT_CLASS);\r\n            $popOutContainer = $(\"<span>\").addClass(DX_MENU_ITEM_POPOUT_CONTAINER_CLASS).append($popOutImage)\r\n        }\r\n        return $popOutContainer\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return {\r\n            rootValue: 0,\r\n            multipleSelection: false,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            searchValue: \"\"\r\n        }\r\n    },\r\n    _selectByItem: function(selectedItem) {\r\n        if (!selectedItem) {\r\n            return\r\n        }\r\n        var nodeToSelect = this._dataAdapter.getNodeByItem(selectedItem);\r\n        this._dataAdapter.toggleSelection(nodeToSelect.internalFields.key, true)\r\n    },\r\n    _renderSelectedItem: function() {\r\n        var selectedKeys = this._dataAdapter.getSelectedNodesKeys(),\r\n            selectedKey = selectedKeys.length && selectedKeys[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (!selectedKey) {\r\n            this._selectByItem(selectedItem);\r\n            return\r\n        }\r\n        var node = this._dataAdapter.getNodeByKey(selectedKey);\r\n        if (false === node.selectable) {\r\n            return\r\n        }\r\n        if (!selectedItem) {\r\n            this.option(\"selectedItem\", node.internalFields.item);\r\n            return\r\n        }\r\n        if (selectedItem !== node.internalFields.item) {\r\n            this._dataAdapter.toggleSelection(selectedKey, false);\r\n            this._selectByItem(selectedItem)\r\n        }\r\n    },\r\n    _initActions: commonUtils.noop,\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._addCustomCssClass(this.$element());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _getShowSubmenuMode: function() {\r\n        var defaultValue = \"onClick\",\r\n            optionValue = this.option(\"showSubmenuMode\");\r\n        optionValue = typeUtils.isObject(optionValue) ? optionValue.name : optionValue;\r\n        return this._isDesktopDevice() ? optionValue : defaultValue\r\n    },\r\n    _initSelectedItems: commonUtils.noop,\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    },\r\n    _initEditStrategy: function() {\r\n        var Strategy = MenuBaseEditStrategy;\r\n        this._editStrategy = new Strategy(this)\r\n    },\r\n    _addCustomCssClass: function($element) {\r\n        $element.addClass(this.option(\"cssClass\"))\r\n    },\r\n    _itemWrapperSelector: function() {\r\n        return \".\" + DX_MENU_ITEM_WRAPPER_CLASS\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var that = this,\r\n            $itemElement = that._getItemElementByEventArgs(e);\r\n        if (!$itemElement || that._isItemDisabled($itemElement)) {\r\n            return\r\n        }\r\n        e.stopPropagation();\r\n        if (\"onHover\" === that._getShowSubmenuMode()) {\r\n            clearTimeout(this._showSubmenusTimeout);\r\n            this._showSubmenusTimeout = setTimeout(that._showSubmenu.bind(that, $itemElement), that._getSubmenuDelay(\"show\"))\r\n        }\r\n    },\r\n    _getAvailableItems: function($itemElements) {\r\n        return this.callBase($itemElements).filter(function() {\r\n            return \"hidden\" !== $(this).css(\"visibility\")\r\n        })\r\n    },\r\n    _isItemDisabled: function($item) {\r\n        return this._disabledGetter($item.data(this._itemDataKey()))\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        this._addExpandedClass($itemElement)\r\n    },\r\n    _addExpandedClass: function(itemElement) {\r\n        $(itemElement).addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _getSubmenuDelay: function(action) {\r\n        var delay = this.option(\"showSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[action]\r\n        }\r\n        return typeUtils.isObject(delay) ? delay[action] : delay\r\n    },\r\n    _getItemElementByEventArgs: function(eventArgs) {\r\n        var $target = $(eventArgs.target);\r\n        if ($target.hasClass(this._itemClass()) || $target.get(0) === eventArgs.currentTarget) {\r\n            return $target\r\n        }\r\n        while (!$target.hasClass(this._itemClass())) {\r\n            $target = $target.parent();\r\n            if ($target.hasClass(\"dx-submenu\")) {\r\n                return null\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _hoverEndHandler: function() {\r\n        clearTimeout(this._showSubmenusTimeout)\r\n    },\r\n    _hasSubmenu: function(node) {\r\n        return node.internalFields.childrenKeys.length\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderItems(this._dataAdapter.getRootNodes())\r\n    },\r\n    _renderItems: function(nodes, submenuContainer) {\r\n        var $nodeContainer, that = this;\r\n        if (nodes.length) {\r\n            this.hasIcons = false;\r\n            $nodeContainer = this._renderContainer(this.$element(), submenuContainer);\r\n            var firstVisibleIndex = -1,\r\n                nextGroupFirstIndex = -1;\r\n            each(nodes, function(index, node) {\r\n                var isVisibleNode = false !== node.visible;\r\n                if (isVisibleNode && firstVisibleIndex < 0) {\r\n                    firstVisibleIndex = index\r\n                }\r\n                var isBeginGroup = firstVisibleIndex < index && (node.beginGroup || index === nextGroupFirstIndex);\r\n                if (isBeginGroup) {\r\n                    nextGroupFirstIndex = isVisibleNode ? index : index + 1\r\n                }\r\n                if (index === nextGroupFirstIndex && firstVisibleIndex < index) {\r\n                    that._renderSeparator($nodeContainer)\r\n                }\r\n                that._renderItem(index, node, $nodeContainer)\r\n            });\r\n            if (!this.hasIcons) {\r\n                $nodeContainer.addClass(DX_MENU_NO_ICONS_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _renderContainer: function($wrapper) {\r\n        return $(\"<ul>\").appendTo($wrapper).addClass(DX_MENU_ITEMS_CONTAINER_CLASS)\r\n    },\r\n    _createDOMElement: function($nodeContainer) {\r\n        var $node = $(\"<li>\").appendTo($nodeContainer).addClass(DX_MENU_ITEM_WRAPPER_CLASS);\r\n        return $node\r\n    },\r\n    _renderItem: function(index, node, $nodeContainer, $nodeElement) {\r\n        var $itemFrame, items = this.option(\"items\");\r\n        if (false === node.internalFields.item.visible) {\r\n            return\r\n        }\r\n        var $node = $nodeElement || this._createDOMElement($nodeContainer);\r\n        if (items[index + 1] && items[index + 1].beginGroup) {\r\n            $node.addClass(DX_MENU_ITEM_LAST_GROUP_ITEM)\r\n        }\r\n        $itemFrame = this.callBase(index, node.internalFields.item, $node);\r\n        if (node.internalFields.item === this.option(\"selectedItem\")) {\r\n            $itemFrame.addClass(DX_MENU_SELECTED_ITEM_CLASS)\r\n        }\r\n        $itemFrame.attr(\"tabIndex\", -1);\r\n        if (this._hasSubmenu(node)) {\r\n            this.setAria(\"haspopup\", \"true\", $itemFrame)\r\n        }\r\n    },\r\n    _renderItemFrame: function(index, itemData, $itemContainer) {\r\n        var $itemFrame = $itemContainer.children(\".\" + ITEM_CLASS);\r\n        return $itemFrame.length ? $itemFrame : this.callBase.apply(this, arguments)\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        var node = this._dataAdapter.getNodeByItem(item),\r\n            index = $item.data(this._itemIndexKey()),\r\n            $nodeContainer = $item.closest(\"ul\"),\r\n            $nodeElement = $item.closest(\"li\");\r\n        this._renderItem(index, node, $nodeContainer, $nodeElement)\r\n    },\r\n    _addContentClasses: function(itemData, $itemFrame) {\r\n        var hasText = itemData.text ? !!itemData.text.length : false,\r\n            hasIcon = !!itemData.icon,\r\n            hasSubmenu = itemData.items ? !!itemData.items.length : false;\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_TEXT, hasText);\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_ICON, hasIcon);\r\n        if (!this.hasIcons) {\r\n            this.hasIcons = hasIcon\r\n        }\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_SUBMENU, hasSubmenu)\r\n    },\r\n    _getItemContent: function($itemFrame) {\r\n        var $itemContent = this.callBase($itemFrame);\r\n        if (!$itemContent.length) {\r\n            $itemContent = $itemFrame.children(\".\" + DX_ITEM_CONTENT_CLASS)\r\n        }\r\n        return $itemContent\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        var node, $itemElement = $(args.itemElement),\r\n            selectedIndex = this._dataAdapter.getSelectedNodesKeys();\r\n        if (!selectedIndex.length || !this._selectedGetter(args.itemData) || !this._isItemSelectable(args.itemData)) {\r\n            this._setAriaSelected($itemElement, \"false\");\r\n            return\r\n        }\r\n        node = this._dataAdapter.getNodeByItem(args.itemData);\r\n        if (node.internalFields.key === selectedIndex[0]) {\r\n            $itemElement.addClass(this._selectedItemClass());\r\n            this._setAriaSelected($itemElement, \"true\")\r\n        } else {\r\n            this._setAriaSelected($itemElement, \"false\")\r\n        }\r\n    },\r\n    _isItemSelectable: function(item) {\r\n        return false !== item.selectable\r\n    },\r\n    _renderSeparator: function($itemsContainer) {\r\n        $(\"<li>\").appendTo($itemsContainer).addClass(DX_MENU_SEPARATOR_CLASS)\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        if (e._skipHandling) {\r\n            return\r\n        }\r\n        var itemClickActionHandler = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));\r\n        this._itemDXEventHandler(e, \"onItemClick\", {}, {\r\n            afterExecute: itemClickActionHandler.bind(this)\r\n        });\r\n        e._skipHandling = true\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (\"onClick\" === this._getShowSubmenuMode()) {\r\n            this._addExpandedClass(actionArgs.args[0].itemElement)\r\n        }\r\n    },\r\n    _updateSelectedItemOnClick: function(actionArgs) {\r\n        var selectedItemKey, args = actionArgs.args ? actionArgs.args[0] : actionArgs;\r\n        if (!this._isItemSelectionAllowed(args.itemData)) {\r\n            return\r\n        }\r\n        selectedItemKey = this._dataAdapter.getSelectedNodesKeys();\r\n        var selectedNode = selectedItemKey.length && this._dataAdapter.getNodeByKey(selectedItemKey[0]);\r\n        if (selectedNode) {\r\n            this._toggleItemSelection(selectedNode, false)\r\n        }\r\n        if (!selectedNode || selectedNode.internalFields.item !== args.itemData) {\r\n            this.selectItem(args.itemData)\r\n        } else {\r\n            this._fireSelectionChangeEvent(null, this.option(\"selectedItem\"));\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    },\r\n    _isItemSelectionAllowed: function(item) {\r\n        var isSelectionByClickEnabled = this._isSelectionEnabled() && this.option(\"selectByClick\");\r\n        return !this._isContainerEmpty() && isSelectionByClickEnabled && this._isItemSelectable(item) && !this._itemsGetter(item)\r\n    },\r\n    _isContainerEmpty: function() {\r\n        return this._itemContainer().is(\":empty\")\r\n    },\r\n    _syncSelectionOptions: commonUtils.noop,\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showSubmenuMode\":\r\n                break;\r\n            case \"selectedItem\":\r\n                var itemData = args.value,\r\n                    node = this._dataAdapter.getNodeByItem(itemData),\r\n                    selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\r\n                if (node && node.internalFields.key !== selectedKey) {\r\n                    if (false === node.selectable) {\r\n                        break\r\n                    }\r\n                    if (selectedKey) {\r\n                        this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n                    }\r\n                    this._toggleItemSelection(node, true);\r\n                    this._updateSelectedItems()\r\n                }\r\n                break;\r\n            case \"cssClass\":\r\n            case \"position\":\r\n            case \"selectByClick\":\r\n            case \"animation\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _toggleItemSelection: function(node, value) {\r\n        var itemElement = this._getElementByItem(node.internalFields.item);\r\n        itemElement && $(itemElement).toggleClass(DX_MENU_SELECTED_ITEM_CLASS);\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value)\r\n    },\r\n    _getElementByItem: function(itemData) {\r\n        var result, that = this;\r\n        each(this._itemElements(), function(_, itemElement) {\r\n            if ($(itemElement).data(that._itemDataKey()) !== itemData) {\r\n                return true\r\n            }\r\n            result = itemElement;\r\n            return false\r\n        });\r\n        return result\r\n    },\r\n    _updateSelectedItems: function(oldSelection, newSelection) {\r\n        if (oldSelection || newSelection) {\r\n            this._updateSelection(newSelection, oldSelection);\r\n            this._fireSelectionChangeEvent(newSelection, oldSelection)\r\n        }\r\n    },\r\n    _fireSelectionChangeEvent: function(addedSelection, removedSelection) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: [addedSelection],\r\n            removedItems: [removedSelection]\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedKey = this._dataAdapter.getSelectedNodesKeys()[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.key !== selectedKey) {\r\n            if (selectedKey) {\r\n                this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n            }\r\n            this._toggleItemSelection(node, true);\r\n            this._updateSelectedItems(selectedItem, itemData);\r\n            this._setOptionSilent(\"selectedItem\", itemData)\r\n        }\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.selected) {\r\n            this._toggleItemSelection(node, false);\r\n            this._updateSelectedItems(selectedItem, null);\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    }\r\n});\r\nmodule.exports = MenuBase;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.menu_base.js\n// module id = 768\n// module chunks = 1 6 7","/**\r\n * DevExtreme (ui/context_menu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./context_menu/ui.context_menu\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu.js\n// module id = 773\n// module chunks = 1 6 7","/**\r\n * DevExtreme (ui/context_menu/ui.context_menu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    contains = domUtils.contains,\r\n    getPublicElement = domUtils.getPublicElement,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    windowUtils = require(\"../../core/utils/window\"),\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    fx = require(\"../../animation/fx\"),\r\n    positionUtils = require(\"../../animation/position\"),\r\n    devices = require(\"../../core/devices\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    Overlay = require(\"../overlay\"),\r\n    MenuBase = require(\"./ui.menu_base\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_PHONE_CLASS = \"dx-menu-phone-overlay\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = DX_MENU_ITEM_CLASS + \"-wrapper\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_HAS_CONTEXT_MENU_CLASS = \"dx-has-context-menu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    FOCUS_FIRST = \"first\",\r\n    FOCUS_LAST = \"last\",\r\n    ACTIONS = [\"onShowing\", \"onShown\", \"onSubmenuCreated\", \"onHiding\", \"onHidden\", \"onPositioning\", \"onLeftFirstItem\", \"onLeftLastItem\", \"onCloseRootSubmenu\", \"onExpandLastSubmenu\"],\r\n    LOCAL_SUBMENU_DIRECTIONS = [FOCUS_UP, FOCUS_DOWN, FOCUS_FIRST, FOCUS_LAST],\r\n    DEFAULT_SHOW_EVENT = \"dxcontextmenu\";\r\nvar ContextMenu = MenuBase.inherit(function() {\r\n    var getShowEvent = function(that) {\r\n            var result = null,\r\n                optionValue = that.option(\"showEvent\");\r\n            if (typeUtils.isObject(optionValue)) {\r\n                if (null !== optionValue.name) {\r\n                    result = optionValue.name || DEFAULT_SHOW_EVENT\r\n                }\r\n            } else {\r\n                result = optionValue\r\n            }\r\n            return result\r\n        },\r\n        getShowDelay = function(that) {\r\n            var optionValue = that.option(\"showEvent\");\r\n            return typeUtils.isObject(optionValue) && optionValue.delay\r\n        };\r\n    return {\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                showEvent: DEFAULT_SHOW_EVENT,\r\n                closeOnOutsideClick: true,\r\n                position: {\r\n                    at: \"top left\",\r\n                    my: \"top left\"\r\n                },\r\n                onShowing: null,\r\n                onShown: null,\r\n                onSubmenuCreated: null,\r\n                onHiding: null,\r\n                onHidden: null,\r\n                onPositioning: null,\r\n                submenuDirection: \"auto\",\r\n                visible: false,\r\n                target: void 0,\r\n                onLeftFirstItem: null,\r\n                onLeftLastItem: null,\r\n                onCloseRootSubmenu: null,\r\n                onExpandLastSubmenu: null\r\n            })\r\n        },\r\n        _defaultOptionsRules: function() {\r\n            return this.callBase().concat([{\r\n                device: function() {\r\n                    return !windowUtils.hasWindow()\r\n                },\r\n                options: {\r\n                    animation: null\r\n                }\r\n            }])\r\n        },\r\n        _initActions: function() {\r\n            this._actions = {};\r\n            each(ACTIONS, function(index, action) {\r\n                this._actions[action] = this._createActionByOption(action) || noop\r\n            }.bind(this))\r\n        },\r\n        _setOptionsByReference: function() {\r\n            this.callBase();\r\n            extend(this._optionsByReference, {\r\n                animation: true,\r\n                selectedItem: true\r\n            })\r\n        },\r\n        _focusInHandler: noop,\r\n        _itemContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : $()\r\n        },\r\n        _eventBindingTarget: function() {\r\n            return this._itemContainer()\r\n        },\r\n        itemsContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : void 0\r\n        },\r\n        _supportedKeys: function() {\r\n            var selectItem = function() {\r\n                var $item = $(this.option(\"focusedElement\"));\r\n                this.hide();\r\n                if (!$item.length || !this._isSelectionEnabled()) {\r\n                    return\r\n                }\r\n                this.selectItem($item[0])\r\n            };\r\n            return extend(this.callBase(), {\r\n                space: selectItem,\r\n                esc: this.hide\r\n            })\r\n        },\r\n        _getActiveItem: function() {\r\n            var $items = this._getAvailableItems(),\r\n                $focusedItem = $items.filter(\".dx-state-focused\"),\r\n                $hoveredItem = $items.filter(\".dx-state-hover\"),\r\n                $hoveredItemContainer = $hoveredItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\r\n            if ($hoveredItemContainer.find(\".\" + DX_MENU_ITEM_CLASS).index($focusedItem) >= 0) {\r\n                return $focusedItem\r\n            }\r\n            if ($hoveredItem.length) {\r\n                return $hoveredItem\r\n            }\r\n            return this.callBase()\r\n        },\r\n        _moveFocus: function(location) {\r\n            var $newTarget, $items = this._getItemsByLocation(location),\r\n                $oldTarget = this._getActiveItem(true),\r\n                $hoveredItem = this.itemsContainer().find(\".dx-state-hover\"),\r\n                $focusedItem = $(this.option(\"focusedElement\")),\r\n                $activeItemHighlighted = !!($focusedItem.length || $hoveredItem.length);\r\n            switch (location) {\r\n                case FOCUS_UP:\r\n                    $newTarget = $activeItemHighlighted ? this._prevItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.first())) {\r\n                        this._actions.onLeftFirstItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_DOWN:\r\n                    $newTarget = $activeItemHighlighted ? this._nextItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.last())) {\r\n                        this._actions.onLeftLastItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_RIGHT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._hideSubmenuHandler() : this._expandSubmenuHandler($items, location);\r\n                    break;\r\n                case FOCUS_LEFT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._expandSubmenuHandler($items, location) : this._hideSubmenuHandler();\r\n                    break;\r\n                case FOCUS_FIRST:\r\n                    $newTarget = $items.first();\r\n                    break;\r\n                case FOCUS_LAST:\r\n                    $newTarget = $items.last();\r\n                    break;\r\n                default:\r\n                    return this.callBase(location)\r\n            }\r\n            if (0 !== $newTarget.length) {\r\n                this.option(\"focusedElement\", getPublicElement($newTarget))\r\n            }\r\n        },\r\n        _getItemsByLocation: function(location) {\r\n            var $items, $activeItem = this._getActiveItem(true);\r\n            if (inArray(location, LOCAL_SUBMENU_DIRECTIONS) >= 0) {\r\n                $items = $activeItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).children().children()\r\n            }\r\n            $items = this._getAvailableItems($items);\r\n            return $items\r\n        },\r\n        _getAriaTarget: function() {\r\n            return this.$element()\r\n        },\r\n        _refreshActiveDescendant: function() {\r\n            if (!this._overlay) {\r\n                return\r\n            }\r\n            var id = this.getFocusedItemId();\r\n            this.setAria(\"activedescendant\", \"\", this._overlay.$content());\r\n            this.setAria(\"activedescendant\", id, this._overlay.$content())\r\n        },\r\n        _hideSubmenuHandler: function() {\r\n            var $curItem = this._getActiveItem(true),\r\n                $parentItem = $curItem.parents(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).first();\r\n            if ($parentItem.length) {\r\n                this._hideSubmenusOnSameLevel($parentItem);\r\n                this._hideSubmenu($curItem.closest(\".\" + DX_SUBMENU_CLASS));\r\n                return $parentItem\r\n            }\r\n            this._actions.onCloseRootSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _expandSubmenuHandler: function($items, location) {\r\n            var $curItem = this._getActiveItem(true),\r\n                itemData = this._getItemData($curItem),\r\n                node = this._dataAdapter.getNodeByItem(itemData),\r\n                isItemHasSubmenu = this._hasSubmenu(node),\r\n                $submenu = $curItem.children(\".\" + DX_SUBMENU_CLASS);\r\n            if (isItemHasSubmenu && !$curItem.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                if (!$submenu.length || \"hidden\" === $submenu.css(\"visibility\")) {\r\n                    this._showSubmenu($curItem)\r\n                }\r\n                return this._nextItem(this._getItemsByLocation(location))\r\n            }\r\n            this._actions.onExpandLastSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _clean: function() {\r\n            if (this._overlay) {\r\n                this._overlay.$element().remove();\r\n                this._overlay = null\r\n            }\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this.callBase()\r\n        },\r\n        _initMarkup: function() {\r\n            this.$element().addClass(DX_HAS_CONTEXT_MENU_CLASS);\r\n            this.callBase()\r\n        },\r\n        _render: function() {\r\n            this.callBase();\r\n            this._renderVisibility(this.option(\"visible\"));\r\n            this._addWidgetClass()\r\n        },\r\n        _renderContentImpl: function() {\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this._attachShowContextMenuEvents()\r\n        },\r\n        _attachKeyboardEvents: function() {\r\n            !this._keyboardProcessor && this._focusTarget().length && this.callBase()\r\n        },\r\n        _renderContextMenuOverlay: function() {\r\n            if (this._overlay) {\r\n                return\r\n            }\r\n            var $overlayContent, overlayOptions = this._getOverlayOptions(),\r\n                $overlayElement = $(\"<div>\");\r\n            this._overlay = this._createComponent($overlayElement.appendTo(this._$element), Overlay, overlayOptions);\r\n            $overlayContent = this._overlay.$content();\r\n            $overlayContent.addClass(DX_CONTEXT_MENU_CLASS);\r\n            this._addCustomCssClass($overlayContent);\r\n            this._addPlatformDependentClass($overlayContent);\r\n            this._attachContextMenuEvent()\r\n        },\r\n        _itemContextMenuHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _addPlatformDependentClass: function($element) {\r\n            if (devices.current().phone) {\r\n                $element.addClass(DX_MENU_PHONE_CLASS)\r\n            }\r\n        },\r\n        _detachShowContextMenuEvents: function(target) {\r\n            var eventName, showEvent = getShowEvent(this);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, this.NAME);\r\n            if (this._showContextMenuEventHandler) {\r\n                eventsEngine.off(domAdapter.getDocument(), eventName, target, this._showContextMenuEventHandler)\r\n            } else {\r\n                eventsEngine.off($(target), eventName)\r\n            }\r\n        },\r\n        _attachShowContextMenuEvents: function() {\r\n            var delay, handler, eventName, contextMenuAction, that = this,\r\n                target = that._getTarget(),\r\n                showEvent = getShowEvent(that);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, that.NAME);\r\n            contextMenuAction = that._createAction(function(e) {\r\n                delay = getShowDelay(that);\r\n                if (delay) {\r\n                    setTimeout(function() {\r\n                        that._show(e.event)\r\n                    }, delay)\r\n                } else {\r\n                    that._show(e.event)\r\n                }\r\n            }.bind(that), {\r\n                validatingTargetName: \"target\"\r\n            });\r\n            handler = function(e) {\r\n                contextMenuAction({\r\n                    event: e,\r\n                    target: $(e.currentTarget)\r\n                })\r\n            };\r\n            contextMenuAction = that._createAction(contextMenuAction);\r\n            if (typeUtils.isRenderer(target) || target.nodeType || typeUtils.isWindow(target)) {\r\n                that._showContextMenuEventHandler = void 0;\r\n                eventsEngine.on(target, eventName, handler)\r\n            } else {\r\n                that._showContextMenuEventHandler = handler;\r\n                eventsEngine.on(domAdapter.getDocument(), eventName, target, that._showContextMenuEventHandler)\r\n            }\r\n        },\r\n        _hoverEndHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _renderDimensions: noop,\r\n        _renderContainer: function($wrapper, submenuContainer) {\r\n            var $itemsContainer, $holder = submenuContainer || this._itemContainer();\r\n            $wrapper = $(\"<div>\");\r\n            $wrapper.appendTo($holder).addClass(DX_SUBMENU_CLASS).css(\"visibility\", submenuContainer ? \"hidden\" : \"visible\");\r\n            $itemsContainer = this.callBase($wrapper);\r\n            if (submenuContainer) {\r\n                return $itemsContainer\r\n            }\r\n            if (this.option(\"width\")) {\r\n                return $itemsContainer.css(\"minWidth\", this.option(\"width\"))\r\n            }\r\n            if (this.option(\"height\")) {\r\n                return $itemsContainer.css(\"minHeight\", this.option(\"height\"))\r\n            }\r\n            return $itemsContainer\r\n        },\r\n        _renderSubmenuItems: function(node, $itemFrame) {\r\n            this._renderItems(this._getChildNodes(node), $itemFrame);\r\n            this._actions.onSubmenuCreated({\r\n                itemElement: getPublicElement($itemFrame),\r\n                itemData: node.internalFields.item,\r\n                submenuElement: getPublicElement($itemFrame.children(\".\" + DX_SUBMENU_CLASS))\r\n            })\r\n        },\r\n        _getOverlayOptions: function() {\r\n            var position = this.option(\"position\"),\r\n                overlayAnimation = this.option(\"animation\"),\r\n                overlayOptions = {\r\n                    focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n                    animation: overlayAnimation,\r\n                    closeOnOutsideClick: this._closeOnOutsideClickHandler.bind(this),\r\n                    propagateOutsideClick: true,\r\n                    closeOnTargetScroll: true,\r\n                    deferRendering: false,\r\n                    position: {\r\n                        at: position.at,\r\n                        my: position.my,\r\n                        of: this._getTarget(),\r\n                        collision: \"flipfit\"\r\n                    },\r\n                    shading: false,\r\n                    showTitle: false,\r\n                    height: \"auto\",\r\n                    width: \"auto\",\r\n                    onShown: this._overlayShownActionHandler.bind(this),\r\n                    onHiding: this._overlayHidingActionHandler.bind(this),\r\n                    onHidden: this._overlayHiddenActionHandler.bind(this)\r\n                };\r\n            return overlayOptions\r\n        },\r\n        _overlayShownActionHandler: function(arg) {\r\n            this._actions.onShown(arg)\r\n        },\r\n        _overlayHidingActionHandler: function(arg) {\r\n            this._actions.onHiding(arg);\r\n            if (!arg.cancel) {\r\n                this._hideAllShownSubmenus();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n        },\r\n        _overlayHiddenActionHandler: function(arg) {\r\n            this._actions.onHidden(arg)\r\n        },\r\n        _closeOnOutsideClickHandler: function(e) {\r\n            var $clickedItem, $activeItemContainer, $itemContainers, $rootItem, isRootItemClicked, isInnerOverlayClicked, closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n            if (typeUtils.isFunction(closeOnOutsideClick)) {\r\n                return closeOnOutsideClick(e)\r\n            }\r\n            if (!closeOnOutsideClick) {\r\n                return false\r\n            }\r\n            if (domAdapter.isDocument(e.target)) {\r\n                return true\r\n            }\r\n            $activeItemContainer = this._getActiveItemsContainer(e.target);\r\n            $itemContainers = this._getItemsContainers();\r\n            $clickedItem = this._searchActiveItem(e.target);\r\n            $rootItem = this.$element().parents(\".\" + DX_MENU_ITEM_CLASS);\r\n            isRootItemClicked = $clickedItem[0] === $rootItem[0] && $clickedItem.length && $rootItem.length;\r\n            isInnerOverlayClicked = this._isIncludeOverlay($activeItemContainer, $itemContainers) && $clickedItem.length;\r\n            if (isInnerOverlayClicked || isRootItemClicked) {\r\n                if (\"onClick\" === this._getShowSubmenuMode()) {\r\n                    this._hideAllShownChildSubmenus($clickedItem)\r\n                }\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _getActiveItemsContainer: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _getItemsContainers: function() {\r\n            return this._overlay._$content.find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _searchActiveItem: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEM_CLASS).eq(0)\r\n        },\r\n        _isIncludeOverlay: function($activeOverlay, $allOverlays) {\r\n            var isSame = false;\r\n            each($allOverlays, function(index, $overlay) {\r\n                if ($activeOverlay.is($overlay) && !isSame) {\r\n                    isSame = true\r\n                }\r\n            });\r\n            return isSame\r\n        },\r\n        _hideAllShownChildSubmenus: function($clickedItem) {\r\n            var $context, that = this,\r\n                $submenuElements = $clickedItem.find(\".\" + DX_SUBMENU_CLASS),\r\n                shownSubmenus = extend([], this._shownSubmenus);\r\n            if ($submenuElements.length > 0) {\r\n                each(shownSubmenus, function(index, $submenu) {\r\n                    $context = that._searchActiveItem($submenu.context).parent();\r\n                    if ($context.parent().is($clickedItem.parent().parent()) && !$context.is($clickedItem.parent())) {\r\n                        that._hideSubmenu($submenu)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _showSubmenu: function($item) {\r\n            var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n            this._hideSubmenusOnSameLevel($item);\r\n            if (!this._hasSubmenu(node)) {\r\n                return\r\n            }\r\n            var $submenu = $item.children(\".\" + DX_SUBMENU_CLASS),\r\n                isSubmenuRendered = $submenu.length;\r\n            this.callBase($item);\r\n            if (!isSubmenuRendered) {\r\n                this._renderSubmenuItems(node, $item)\r\n            }\r\n            if (!this._isSubmenuVisible($submenu)) {\r\n                this._drawSubmenu($item)\r\n            }\r\n        },\r\n        _hideSubmenusOnSameLevel: function($item) {\r\n            var $expandedItems = $item.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS).siblings().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            if ($expandedItems.length) {\r\n                $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                this._hideSubmenu($expandedItems.find(\".\" + DX_SUBMENU_CLASS))\r\n            }\r\n        },\r\n        _hideSubmenuGroup: function($submenu) {\r\n            if (this._isSubmenuVisible($submenu)) {\r\n                this._hideSubmenuCore($submenu)\r\n            }\r\n        },\r\n        _isSubmenuVisible: function($submenu) {\r\n            return \"visible\" === $submenu.css(\"visibility\")\r\n        },\r\n        _drawSubmenu: function($itemElement) {\r\n            var animation = this.option(\"animation\") ? this.option(\"animation\").show : {},\r\n                $submenu = $itemElement.children(\".\" + DX_SUBMENU_CLASS),\r\n                submenuPosition = this._getSubmenuPosition($itemElement);\r\n            if (this._overlay && this._overlay.option(\"visible\")) {\r\n                if (!typeUtils.isDefined(this._shownSubmenus)) {\r\n                    this._shownSubmenus = []\r\n                }\r\n                if (inArray($submenu, this._shownSubmenus)) {\r\n                    this._shownSubmenus.push($submenu)\r\n                }\r\n                if (animation) {\r\n                    fx.stop($submenu)\r\n                }\r\n                positionUtils.setup($submenu, submenuPosition);\r\n                if (animation) {\r\n                    if (typeUtils.isPlainObject(animation.to)) {\r\n                        animation.to.position = submenuPosition\r\n                    }\r\n                    this._animate($submenu, animation)\r\n                }\r\n                $submenu.css(\"visibility\", \"visible\")\r\n            }\r\n        },\r\n        _animate: function($container, options) {\r\n            fx.animate($container, options)\r\n        },\r\n        _getSubmenuPosition: function($rootItem) {\r\n            var submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n                $rootItemWrapper = $rootItem.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS),\r\n                position = {\r\n                    collision: \"flip\",\r\n                    of: $rootItemWrapper,\r\n                    offset: {\r\n                        h: 0,\r\n                        v: -1\r\n                    }\r\n                };\r\n            switch (submenuDirection) {\r\n                case \"left\":\r\n                    position.at = \"left top\";\r\n                    position.my = \"right top\";\r\n                    break;\r\n                case \"right\":\r\n                    position.at = \"right top\";\r\n                    position.my = \"left top\";\r\n                    break;\r\n                default:\r\n                    if (this.option(\"rtlEnabled\")) {\r\n                        position.at = \"left top\";\r\n                        position.my = \"right top\"\r\n                    } else {\r\n                        position.at = \"right top\";\r\n                        position.my = \"left top\"\r\n                    }\r\n            }\r\n            return position\r\n        },\r\n        _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n            if (!actionArgs.args.length) {\r\n                return\r\n            }\r\n            var $itemElement = $(actionArgs.args[0].itemElement),\r\n                itemData = actionArgs.args[0].itemData,\r\n                node = this._dataAdapter.getNodeByItem(itemData);\r\n            if (!node) {\r\n                return\r\n            }\r\n            var $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS),\r\n                shouldRenderSubmenu = this._hasSubmenu(node) && !$submenu.length;\r\n            if (shouldRenderSubmenu) {\r\n                this._renderSubmenuItems(node, $itemElement);\r\n                $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS)\r\n            }\r\n            if ($itemElement.context === $submenu.context && \"visible\" === $submenu.css(\"visibility\")) {\r\n                return\r\n            }\r\n            var notCloseMenuOnItemClick = itemData && false === itemData.closeMenuOnClick;\r\n            if (!itemData || itemData.disabled || notCloseMenuOnItemClick) {\r\n                return\r\n            }\r\n            this._updateSelectedItemOnClick(actionArgs);\r\n            if (0 === $submenu.length) {\r\n                var $prevSubmenu = $($itemElement.parents(\".\" + DX_SUBMENU_CLASS)[0]);\r\n                this._hideSubmenu($prevSubmenu);\r\n                if (!actionArgs.canceled && this._overlay && this._overlay.option(\"visible\")) {\r\n                    this.option(\"visible\", false)\r\n                }\r\n            } else {\r\n                if (this._shownSubmenus && this._shownSubmenus.length > 0) {\r\n                    if (this._shownSubmenus[0].is($submenu)) {\r\n                        this._hideSubmenu($submenu)\r\n                    }\r\n                }\r\n                this._showSubmenu($itemElement)\r\n            }\r\n        },\r\n        _hideSubmenu: function($curSubmenu) {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus);\r\n            each(shownSubmenus, function(index, $submenu) {\r\n                if ($curSubmenu.is($submenu) || contains($curSubmenu[0], $submenu[0])) {\r\n                    $submenu.parent().removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                    that._hideSubmenuCore($submenu)\r\n                }\r\n            })\r\n        },\r\n        _hideSubmenuCore: function($submenu) {\r\n            var index = inArray($submenu, this._shownSubmenus),\r\n                animation = this.option(\"animation\") ? this.option(\"animation\").hide : null;\r\n            if (index >= 0) {\r\n                this._shownSubmenus.splice(index, 1)\r\n            }\r\n            this._stopAnimate($submenu);\r\n            animation && this._animate($submenu, animation);\r\n            $submenu.css(\"visibility\", \"hidden\")\r\n        },\r\n        _stopAnimate: function($container) {\r\n            fx.stop($container, true)\r\n        },\r\n        _hideAllShownSubmenus: function() {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus),\r\n                $expandedItems = this._overlay.$content().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n            each(shownSubmenus, function(_, $submenu) {\r\n                that._hideSubmenu($submenu)\r\n            })\r\n        },\r\n        _visibilityChanged: function(visible) {\r\n            if (visible) {\r\n                this._renderContentImpl()\r\n            }\r\n        },\r\n        _optionChanged: function(args) {\r\n            if (this._cancelOptionChange === args.name) {\r\n                return\r\n            }\r\n            if (inArray(args.name, ACTIONS) > -1) {\r\n                this._initActions();\r\n                return\r\n            }\r\n            switch (args.name) {\r\n                case \"visible\":\r\n                    this._renderVisibility(args.value);\r\n                    break;\r\n                case \"showEvent\":\r\n                case \"position\":\r\n                case \"submenuDirection\":\r\n                    this._invalidate();\r\n                    break;\r\n                case \"target\":\r\n                    args.previousValue && this._detachShowContextMenuEvents(args.previousValue);\r\n                    this.option(\"position\").of = null;\r\n                    this._invalidate();\r\n                    break;\r\n                case \"closeOnOutsideClick\":\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        _renderVisibility: function(showing) {\r\n            return showing ? this._show() : this._hide()\r\n        },\r\n        _toggleVisibility: noop,\r\n        _show: function(event) {\r\n            var args = {\r\n                    jQEvent: event\r\n                },\r\n                promise = (new Deferred).reject().promise();\r\n            this._actions.onShowing(args);\r\n            if (args.cancel) {\r\n                return promise\r\n            }\r\n            var position = this._positionContextMenu(event);\r\n            if (position) {\r\n                if (!this._overlay) {\r\n                    this._renderContextMenuOverlay();\r\n                    this._overlay.$content().addClass(this._widgetClass());\r\n                    this._renderFocusState();\r\n                    this._attachHoverEvents();\r\n                    this._attachClickEvent();\r\n                    this._renderItems(this._dataAdapter.getRootNodes())\r\n                }\r\n                this._setOptionSilent(\"visible\", true);\r\n                this._overlay.option(\"position\", position);\r\n                promise = this._overlay.show();\r\n                event && event.stopPropagation();\r\n                var id = \"dx-\" + new Guid;\r\n                this._overlay.$content().attr({\r\n                    id: id,\r\n                    role: \"menu\"\r\n                });\r\n                this.setAria(\"owns\", id)\r\n            }\r\n            return promise\r\n        },\r\n        _getTarget: function() {\r\n            return this.option(\"target\") || this.option(\"position\").of || $(domAdapter.getDocument())\r\n        },\r\n        _getContextMenuPosition: function() {\r\n            return extend({}, this.option(\"position\"), { of: this._getTarget()\r\n            })\r\n        },\r\n        _positionContextMenu: function(jQEvent) {\r\n            var actionArgs, position = this._getContextMenuPosition(),\r\n                isInitialPosition = this._isInitialOptionValue(\"position\"),\r\n                positioningAction = this._createActionByOption(\"onPositioning\", actionArgs);\r\n            if (jQEvent && jQEvent.preventDefault && isInitialPosition) {\r\n                position.of = jQEvent\r\n            }\r\n            actionArgs = {\r\n                position: position,\r\n                event: jQEvent\r\n            };\r\n            positioningAction(actionArgs);\r\n            if (actionArgs.cancel) {\r\n                position = null\r\n            } else {\r\n                if (actionArgs.event) {\r\n                    actionArgs.event.cancel = true;\r\n                    jQEvent.preventDefault()\r\n                }\r\n            }\r\n            return position\r\n        },\r\n        _hide: function() {\r\n            var promise;\r\n            if (this._overlay) {\r\n                this._overlay.$content().removeAttr(\"id\");\r\n                promise = this._overlay.hide();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n            this.setAria(\"owns\", void 0);\r\n            return promise || (new Deferred).reject().promise()\r\n        },\r\n        toggle: function(showing) {\r\n            var visible = this.option(\"visible\");\r\n            showing = void 0 === showing ? !visible : showing;\r\n            return this._renderVisibility(showing)\r\n        },\r\n        show: function() {\r\n            return this.toggle(true)\r\n        },\r\n        hide: function() {\r\n            return this.toggle(false)\r\n        }\r\n    }\r\n}());\r\nregisterComponent(\"dxContextMenu\", ContextMenu);\r\nmodule.exports = ContextMenu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.context_menu.js\n// module id = 809\n// module chunks = 1 6 7","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.edit.strategy.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = require(\"../../core/renderer\"),\r\n    map = require(\"../../core/utils/iterator\").map,\r\n    PlainEditStrategy = require(\"../collection/ui.collection_widget.edit.strategy.plain\");\r\nvar MenuBaseEditStrategy = PlainEditStrategy.inherit({\r\n    _getPlainItems: function() {\r\n        return map(this._collectionWidget.option(\"items\"), function getMenuItems(item) {\r\n            return item.items ? [item].concat(map(item.items, getMenuItems)) : item\r\n        })\r\n    },\r\n    _stringifyItem: function(item) {\r\n        var that = this;\r\n        return JSON.stringify(item, function(key, value) {\r\n            if (\"template\" === key) {\r\n                return that._getTemplateString(value)\r\n            }\r\n            return value\r\n        })\r\n    },\r\n    _getTemplateString: function(template) {\r\n        var result;\r\n        if (\"object\" === (\"undefined\" === typeof template ? \"undefined\" : _typeof(template))) {\r\n            result = $(template).text()\r\n        } else {\r\n            result = template.toString()\r\n        }\r\n        return result\r\n    }\r\n});\r\nmodule.exports = MenuBaseEditStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.menu_base.edit.strategy.js\n// module id = 810\n// module chunks = 1 6 7","/**\r\n * DevExtreme (ui/menu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./menu/ui.menu\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu.js\n// module id = 811\n// module chunks = 1 6 7","/**\r\n * DevExtreme (ui/menu/ui.menu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    hoverEvents = require(\"../../events/hover\"),\r\n    MenuBase = require(\"../context_menu/ui.menu_base\"),\r\n    Overlay = require(\"../overlay\"),\r\n    Submenu = require(\"./ui.submenu\"),\r\n    Button = require(\"../button\"),\r\n    TreeView = require(\"../tree_view\");\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\",\r\n    DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\",\r\n    DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    DX_STATE_HOVER_CLASS = \"dx-state-hover\",\r\n    DX_STATE_ACTIVE_CLASS = \"dx-state-active\",\r\n    DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\",\r\n    DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    SHOW_SUBMENU_OPERATION = \"showSubmenu\",\r\n    NEXTITEM_OPERATION = \"nextItem\",\r\n    PREVITEM_OPERATION = \"prevItem\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    },\r\n    ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\"];\r\nvar Menu = MenuBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _itemElements: function() {\r\n        var rootMenuElements = this.callBase(),\r\n            submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    },\r\n    _submenuItemElements: function() {\r\n        var elements = [],\r\n            itemSelector = \".\" + DX_MENU_ITEM_CLASS,\r\n            currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _moveFocus: function(location) {\r\n        var argument, operation, navigationAction, $newTarget, $items = this._getAvailableItems(),\r\n            isMenuHorizontal = this._isMenuHorizontal(),\r\n            $activeItem = this._getActiveItem(true);\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return this.callBase(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    },\r\n    _getItemsNavigationOperation: function(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    },\r\n    _getKeyboardNavigationAction: function(operation, argument) {\r\n        var action = commonUtils.noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _isAdaptivityEnabled: function() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _updateItemsWidthCache: function() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\" + DX_MENU_ITEM_CLASS);\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = this.$element().outerWidth();\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._submenus = []\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {};\r\n        each(ACTIONS, function(index, action) {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        }.bind(this))\r\n    },\r\n    _initMarkup: function() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"menubar\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._initAdaptivity()\r\n    },\r\n    _renderHamburgerButton: function() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    },\r\n    _toggleTreeView: function(state) {\r\n        if (typeUtils.isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    },\r\n    _toggleHamburgerActiveState: function(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    },\r\n    _toggleAdaptiveMode: function(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\" + DX_MENU_HORIZONTAL_CLASS),\r\n            $adaptiveElements = this.$element().find(\".\" + DX_ADAPTIVE_MODE_CLASS);\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    },\r\n    _removeAdaptivity: function() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    },\r\n    _treeviewItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    },\r\n    _getAdaptiveOverlayOptions: function() {\r\n        var rtl = this.option(\"rtlEnabled\"),\r\n            position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            closeOnTargetScroll: true,\r\n            onHidden: function() {\r\n                this._toggleHamburgerActiveState(false)\r\n            }.bind(this),\r\n            height: \"auto\",\r\n            closeOnOutsideClick: function(e) {\r\n                return !!!$(e.target).closest(\".\" + DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS).length\r\n            },\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    },\r\n    _getTreeViewOptions: function() {\r\n        var menuOptions = {},\r\n            that = this,\r\n            optionsToTransfer = [\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"],\r\n            actionsToTransfer = [\"onItemContextMenu\", \"onSelectionChanged\"];\r\n        each(optionsToTransfer, function(_, option) {\r\n            menuOptions[option] = that.option(option)\r\n        });\r\n        each(actionsToTransfer, function(_, actionName) {\r\n            menuOptions[actionName] = function(e) {\r\n                this._actions[actionName](e)\r\n            }.bind(that)\r\n        });\r\n        return extend(menuOptions, {\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: that._treeviewItemClickHandler.bind(that),\r\n            onItemExpanded: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            }.bind(that),\r\n            onItemCollapsed: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            }.bind(that),\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    },\r\n    _initAdaptivity: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    },\r\n    _getDelay: function(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return typeUtils.isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    },\r\n    _renderContainer: function() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return this.callBase($wrapper)\r\n    },\r\n    _renderSubmenuItems: function(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    },\r\n    _createSubmenu: function(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node),\r\n            result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n                _dataAdapter: this._dataAdapter,\r\n                _parentKey: node.internalFields.key,\r\n                items: items,\r\n                onHoverStart: this._clearTimeouts.bind(this),\r\n                position: this.getSubmenuPosition($rootItem)\r\n            }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    },\r\n    _getSubmenuOptions: function() {\r\n        var $submenuTarget = $(\"<div>\"),\r\n            isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this.option(\"onItemRendered\"),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    },\r\n    _getShowFirstSubmenuMode: function() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return typeUtils.isObject(optionValue) ? optionValue.name : optionValue\r\n    },\r\n    _moveMainMenuFocus: function(direction) {\r\n        var $items = this._getAvailableItems(),\r\n            itemCount = $items.length,\r\n            $currentItem = $items.filter(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).eq(0),\r\n            itemIndex = $items.index($currentItem);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else {\r\n            if (itemIndex < 0) {\r\n                itemIndex = itemCount - 1\r\n            }\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.focus();\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    },\r\n    _nestedItemOnSelectionChangedHandler: function(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0],\r\n            submenu = Submenu.getInstance(args.element),\r\n            onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionSilent(\"selectedItem\", selectedItem)\r\n    },\r\n    _clearSelectionInSubmenus: function(item, targetSubmenu) {\r\n        var that = this,\r\n            cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, function(index, submenu) {\r\n            var $submenu = submenu._itemContainer(),\r\n                isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer()),\r\n                $selectedItem = $submenu.find(\".\" + that._selectedItemClass());\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                var selectedItemData;\r\n                $selectedItem.removeClass(that._selectedItemClass());\r\n                selectedItemData = that._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    },\r\n    _clearRootSelection: function() {\r\n        var $prevSelectedItem = this.$element().find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).first().children().children().filter(\".\" + this._selectedItemClass());\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData;\r\n            prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    },\r\n    _nestedItemOnItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e)\r\n    },\r\n    _attachSubmenuHandlers: function($rootItem, submenu) {\r\n        var that = this,\r\n            $submenuOverlayContent = submenu.getOverlayContent(),\r\n            submenus = $submenuOverlayContent.find(\".\" + DX_SUBMENU_CLASS),\r\n            submenuMouseLeaveName = eventUtils.addNamespace(hoverEvents.end, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, function(index, submenu) {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, that._submenuMouseLeaveHandler.bind(that, $rootItem))\r\n        })\r\n    },\r\n    _submenuOnShowingHandler: function($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS);\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _submenuOnShownHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuOnHidingHandler: function($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS),\r\n            args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _submenuOnHiddenHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuMouseLeaveHandler: function($rootItem, eventArgs) {\r\n        var that = this,\r\n            target = $(eventArgs.relatedTarget).parents(\".\" + DX_CONTEXT_MENU_CLASS)[0],\r\n            contextMenu = that._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            that._clearTimeouts();\r\n            setTimeout(that._hideSubmenuAfterTimeout.bind(that), that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideSubmenuAfterTimeout: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS),\r\n            isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\" + DX_STATE_HOVER_CLASS).length;\r\n        if (!isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    },\r\n    _getSubmenuByRootElement: function($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\" + DX_CONTEXT_MENU_CLASS);\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    },\r\n    getSubmenuPosition: function($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal(),\r\n            submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n            rtlEnabled = this.option(\"rtlEnabled\"),\r\n            submenuPosition = {\r\n                collision: \"flip\",\r\n                of: $rootItem\r\n            };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    },\r\n    _renderBorderElement: function($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        var $target = $(e.target),\r\n            $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var mouseMoveEventName = eventUtils.addNamespace(pointerEvents.move, this.NAME),\r\n            $item = this._getItemElementByEventArgs(e),\r\n            node = this._dataAdapter.getNodeByItem(this._getItemData($item)),\r\n            isSelectionActive = typeUtils.isDefined(e.buttons) && 1 === e.buttons || !typeUtils.isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    },\r\n    _hoverEndHandler: function(eventArg) {\r\n        var that = this,\r\n            $item = that._getItemElementByEventArgs(eventArg),\r\n            relatedTarget = $(eventArg.relatedTarget);\r\n        that.callBase(eventArg);\r\n        that._clearTimeouts();\r\n        if (that._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            that._hideSubmenuTimer = setTimeout(function() {\r\n                that._hideSubmenuAfterTimeout()\r\n            }, that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideVisibleSubmenu: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        submenu && submenu.show();\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    },\r\n    _hideSubmenu: function(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    },\r\n    _itemMouseMoveHandler: function(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var that = this,\r\n            $item = $(e.currentTarget);\r\n        if (!typeUtils.isDefined(that._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        that._clearTimeouts();\r\n        that._showSubmenuTimer = setTimeout(function() {\r\n            var submenu = that._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                that._showSubmenu($item)\r\n            }\r\n        }, that._getDelay(\"show\"))\r\n    },\r\n    _clearTimeouts: function() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    },\r\n    _getSubmenuByElement: function($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        var currentSubmenu, args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"onSubmenuShowing\":\r\n            case \"onSubmenuShown\":\r\n            case \"onSubmenuHiding\":\r\n            case \"onSubmenuHidden\":\r\n                this._initActions();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value)\r\n                }\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _changeSubmenusOption: function(name, value) {\r\n        each(this._submenus, function(index, submenu) {\r\n            submenu.option(name, value)\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    }\r\n});\r\nregisterComponent(\"dxMenu\", Menu);\r\nmodule.exports = Menu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu/ui.menu.js\n// module id = 812\n// module chunks = 1 6 7","/**\r\n * DevExtreme (ui/menu/ui.submenu.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    positionUtils = require(\"../../animation/position\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    ContextMenu = require(\"../context_menu\");\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar Submenu = ContextMenu.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            onHoverStart: noop\r\n        })\r\n    },\r\n    _initDataAdapter: function() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderContextMenuOverlay();\r\n        this.callBase();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    },\r\n    _renderDelimiter: function() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    },\r\n    _getOverlayOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    },\r\n    _overlayPositionedActionHandler: function(arg) {\r\n        this._showDelimiter(arg)\r\n    },\r\n    _hoverEndHandler: function(e) {\r\n        this.callBase(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        this.callBase(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    },\r\n    _drawSubmenu: function($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _hideSubmenu: function($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _showDelimiter: function(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\" + DX_SUBMENU_CLASS).eq(0),\r\n            $rootItem = this.option(\"position\").of,\r\n            position = { of: $submenu\r\n            },\r\n            containerOffset = arg.position,\r\n            vLocation = containerOffset.v.location,\r\n            hLocation = containerOffset.h.location,\r\n            rootOffset = $rootItem.offset(),\r\n            offsetLeft = Math.round(rootOffset.left),\r\n            offsetTop = Math.round(rootOffset.top),\r\n            rootWidth = $rootItem.width(),\r\n            rootHeight = $rootItem.height(),\r\n            submenuWidth = $submenu.width(),\r\n            submenuHeight = $submenu.height();\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        this.$contentDelimiter.width(this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        this.$contentDelimiter.height(this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                this.$contentDelimiter.height(5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else {\r\n            if (hLocation > offsetLeft) {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"-1 1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"left bottom\"\r\n                }\r\n            } else {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"1 1\";\r\n                    position.at = position.my = \"right top\"\r\n                } else {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        }\r\n        positionUtils.setup(this.$contentDelimiter, position)\r\n    },\r\n    _getContextMenuPosition: function() {\r\n        return this.option(\"position\")\r\n    },\r\n    isOverlayVisible: function() {\r\n        return this._overlay.option(\"visible\")\r\n    },\r\n    getOverlayContent: function() {\r\n        return this._overlay.$content()\r\n    }\r\n});\r\nmodule.exports = Submenu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu/ui.submenu.js\n// module id = 813\n// module chunks = 1 6 7","/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar menu_1 = require(\"devextreme/ui/menu\");\nvar prop_types_1 = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar Menu = /** @class */ (function (_super) {\n    __extends(Menu, _super);\n    function Menu() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = menu_1.default;\n        _this._defaults = {\n            defaultItems: \"items\",\n            defaultSelectedItem: \"selectedItem\"\n        };\n        _this._templateProps = [{\n                tmplOption: \"itemTemplate\",\n                render: \"itemRender\",\n                component: \"itemComponent\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(Menu.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Menu;\n}(component_1.Component));\nexports.Menu = Menu;\nMenu.propTypes = {\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    adaptivityEnabled: prop_types_1.PropTypes.bool,\n    animation: prop_types_1.PropTypes.object,\n    cssClass: prop_types_1.PropTypes.string,\n    dataSource: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.array,\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.string\n    ]),\n    disabled: prop_types_1.PropTypes.bool,\n    disabledExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    displayExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hideSubmenuOnMouseLeave: prop_types_1.PropTypes.bool,\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    items: prop_types_1.PropTypes.array,\n    itemsExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onContentReady: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onItemClick: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onItemContextMenu: prop_types_1.PropTypes.func,\n    onItemRendered: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onSelectionChanged: prop_types_1.PropTypes.func,\n    onSubmenuHidden: prop_types_1.PropTypes.func,\n    onSubmenuHiding: prop_types_1.PropTypes.func,\n    onSubmenuShowing: prop_types_1.PropTypes.func,\n    onSubmenuShown: prop_types_1.PropTypes.func,\n    orientation: prop_types_1.PropTypes.oneOf([\n        \"horizontal\",\n        \"vertical\"\n    ]),\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    selectByClick: prop_types_1.PropTypes.bool,\n    selectedExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    selectedItem: prop_types_1.PropTypes.object,\n    selectionMode: prop_types_1.PropTypes.oneOf([\n        \"none\",\n        \"single\"\n    ]),\n    showFirstSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    showSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    submenuDirection: prop_types_1.PropTypes.oneOf([\n        \"auto\",\n        \"leftOrTop\",\n        \"rightOrBottom\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Menu\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Animation.OptionName = \"animation\";\n    return Animation;\n}(nested_option_1.default));\nexports.Animation = Animation;\n// owners:\n// ShowFirstSubmenuMode\n// ShowSubmenuMode\nvar Delay = /** @class */ (function (_super) {\n    __extends(Delay, _super);\n    function Delay() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Delay.OptionName = \"delay\";\n    return Delay;\n}(nested_option_1.default));\nexports.Delay = Delay;\n// owners:\n// Animation\nvar Hide = /** @class */ (function (_super) {\n    __extends(Hide, _super);\n    function Hide() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Hide.OptionName = \"hide\";\n    return Hide;\n}(nested_option_1.default));\nexports.Hide = Hide;\n// owners:\n// Menu\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Item.OptionName = \"items\";\n    Item.IsCollectionItem = true;\n    Item.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\"\n        }];\n    return Item;\n}(nested_option_1.default));\nexports.Item = Item;\n// owners:\n// Animation\nvar Show = /** @class */ (function (_super) {\n    __extends(Show, _super);\n    function Show() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Show.OptionName = \"show\";\n    return Show;\n}(nested_option_1.default));\nexports.Show = Show;\n// owners:\n// Menu\nvar ShowFirstSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowFirstSubmenuMode, _super);\n    function ShowFirstSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowFirstSubmenuMode.OptionName = \"showFirstSubmenuMode\";\n    return ShowFirstSubmenuMode;\n}(nested_option_1.default));\nexports.ShowFirstSubmenuMode = ShowFirstSubmenuMode;\n// owners:\n// Menu\nvar ShowSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowSubmenuMode, _super);\n    function ShowSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowSubmenuMode.OptionName = \"showSubmenuMode\";\n    return ShowSubmenuMode;\n}(nested_option_1.default));\nexports.ShowSubmenuMode = ShowSubmenuMode;\nexports.default = Menu;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/menu.js\n// module id = 815\n// module chunks = 6 7","/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-vue/menu' file instead */\n__export(require(\"../menu\"));\nvar menu_1 = require(\"../menu\");\nexports.default = menu_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/ui/menu.js\n// module id = 846\n// module chunks = 6 7"],"sourceRoot":""}