{"version":3,"sources":["../static/js/5.chunk.js","../node_modules/devextreme/ui/color_box.js","../node_modules/devextreme/ui/color_box/color_box.js","../node_modules/devextreme/ui/color_box/color_view.js","../node_modules/devextreme/ui/draggable.js","../node_modules/devextreme-react/ui/color-box.js","../node_modules/devextreme/ui/drop_down_editor/ui.drop_down_editor.js","../node_modules/devextreme/ui/number_box.js","../node_modules/devextreme/ui/shared/async_template_mixin.js","../node_modules/devextreme/ui/number_box/number_box.js","../node_modules/devextreme/ui/number_box/number_box.mask.js","../node_modules/devextreme/ui/number_box/number_box.caret.js","../node_modules/devextreme/ui/number_box/number_box.base.js","../node_modules/devextreme/ui/number_box/number_box.spin.js","../node_modules/devextreme/color.js","../node_modules/devextreme-react/color-box.js"],"names":["webpackJsonp","1105","module","exports","__webpack_require__","default","1106","$","eventsEngine","Color","ColorView","extend","isFunction","registerComponent","DropDownEditor","colorEditorPrototype","prototype","colorUtils","makeTransparentBackground","_makeTransparentBackground","bind","makeRgba","_makeRgba","ColorBox","inherit","_supportedKeys","arrowHandler","e","stopPropagation","this","option","preventDefault","upArrowHandler","altKey","close","downArrowHandler","_validatedOpening","callBase","tab","_colorView","_rgbInputs","focus","enter","_enterKeyHandler","leftArrow","rightArrow","upArrow","downArrow","_getDefaultOptions","editAlphaChannel","applyValueMode","keyStep","fieldTemplate","onApplyButtonClick","onCancelButtonClick","buttonsLocation","_popupConfig","height","width","_contentReadyHandler","_createColorView","_addPopupBottomClasses","$popupBottom","_popup","bottomToolbar","addClass","find","overlayContent","COLOR_BOX_CLASS","$colorView","appendTo","$content","_createComponent","_colorViewConfig","on","_applyNewColor","value","_$colorResultPreview","_colorViewEnterKeyPressed","that","focusStateEnabled","stylingMode","onEnterKeyPressed","onValueChanged","args","previousValue","_keyboardProcessor","_colorViewProcessor","newValue","_input","val","oldValue","colorIsInvalid","_applyColorFromInput","colorViewValue","_applyButtonHandler","_cancelButtonHandler","_resetInputValue","_attachChildKeyboardEvents","attachChildProcessor","_init","_initMarkup","$element","_renderInput","_renderColorPreview","wrapInner","COLOR_BOX_INPUT_CLASS","_$colorBoxInputContainer","children","eq","_renderValue","$input","_valueChangeEventHandler","_optionChanged","name","toggleClass","removeAttr","1107","translator","messageLocalization","devices","Editor","NumberBox","TextBox","Draggable","clickEvent","isRTL","getHorizontalPaletteStep","step","_paletteWidth","shiftKey","Math","round","updateHorizontalPaletteValue","_currentColor","hsv","s","updatePaletteValue","getVerticalPaletteStep","_paletteHeight","updateVerticalPaletteValue","v","_placePaletteHandle","_updateColorFromHsv","h","getHueScaleStep","_hueScaleWrapperHeight","_hueScaleHandleHeight","updateHueScaleValue","_placeHueScaleHandle","handleLocation","locate","_$hueScaleHandle","_updateColorHue","top","getAlphaScaleStep","_alphaChannelScaleWorkWidth","updateAlphaScaleValue","a","_placeAlphaChannelHandle","_$alphaChannelHandle","_calculateColorTransparencyByScaleWidth","left","_alphaChannelHandleWidth","ctrlKey","_isTopColorHue","_fireEnterKeyPressed","_defaultOptionsRules","concat","device","real","deviceType","isSimulator","options","_initColorAndOpacity","_initEnterKeyPressedAction","_onEnterKeyPressedAction","_createActionByOption","event","_setCurrentColor","newColor","baseColor","_$currentColor","_renderColorPickerContainer","_render","_renderPalette","_renderHueScale","_renderControlsContainer","_renderControls","_renderAlphaChannelElements","$el","color","css","r","g","b","join","$parent","_$colorPickerContainer","_renderHtmlRows","updatedOption","$renderedRows","renderedRowsCount","length","rowCount","delta","remove","abs","i","rows","push","after","append","_renderHtmlCellInsideRow","index","$rowParent","additionalClass","$paletteCell","$paletteGradientWhite","$paletteGradientBlack","_$palette","getPureColor","toHex","_renderPaletteHandle","_$paletteHandle","area","allowMoveByClick","boundOffset","_paletteHandleHeight","onDrag","paletteHandlePosition","_updateByDrag","_calculateColorSaturation","_calculateColorValue","_paletteHandleWidth","move","floor","saturation","hue","_updateColorParamsAndColorPreview","applyColor","$hueScaleCell","_$hueScaleWrapper","_$hueScale","_hueScaleHeight","outerHeight","_renderHueScaleHandle","direction","hueScaleHeight","handleHeight","handlePosition","$controlsContainerCell","_$controlsContainer","_renderColorsPreview","_renderRgbInputs","_renderHexInput","$colorsPreviewContainer","$colorsPreviewContainerInner","_$newColor","_renderAlphaChannelScale","_renderAlphaChannelInput","_rgbInputsWithLabels","_renderEditorWithLabel","editorType","_updateColor","labelText","labelAriaText","format","labelClass","dxNumberBox","$editor","$label","text","off","editorOptions","min","max","registerKeyHandler","setAria","hexInputOptions","replace","_hexInput","getInstance","$alphaChannelScaleCell","$alphaChannelBorder","$alphaChannelScaleWrapper","_$alphaChannelScale","_makeCSSLinearGradient","_renderAlphaChannelHandle","colorAsRgb","colorAsHex","combineGradientString","rtlEnabled","startColor","finishColor","attr","call","$alphaChannelInputCell","_alphaChannelInput","isValidAlpha","_updateColorTransparency","transparency","$alphaChannelHandle","alphaChannelHandlePosition","toFixed","colorValue","cancelColor","_refreshMarkup","isHex","rgba","_validateHex","_validateRgb","_suppressEditorsValueUpdating","hex","isValidHex","isValidRGB","1108","window","getWindow","stringUtils","dasherize","DOMComponent","eventUtils","pointerEvents","dragEvents","positionUtils","noop","DRAGGABLE","DRAGSTART_EVENT_NAME","addNamespace","start","DRAG_EVENT_NAME","DRAGEND_EVENT_NAME","end","POINTERDOWN_EVENT_NAME","down","DRAGGABLE_CLASS","DRAGGABLE_DRAGGING_CLASS","onDragStart","onDragEnd","immediate","_attachEventHandlers","eventHandlers","_dragStartHandler","_dragHandler","_dragEndHandler","_pointerDownHandler","_getArea","_detachEventHandlers","_move","position","needSkipEvent","areaOffset","_getAreaOffset","currentTarget","pageX","pageY","_getAction","is","cancel","$area","_getBoundOffset","areaWidth","outerWidth","areaHeight","elementWidth","elementHeight","_toggleDraggingClass","startOffset","offset","_startPosition","maxLeftOffset","maxRightOffset","right","maxTopOffset","maxBottomOffset","bottom","quadToObject","startPosition","x","y","_dispose","722","Object","defineProperty","m","p","hasOwnProperty","color_box_1","742","AsyncTemplateMixin","Guid","commonUtils","domUtils","focused","each","isDefined","getPublicElement","errors","getDefaultAlignment","Button","FunctionTemplate","Popup","homeEndHandler","$focusableElement","_getLastPopupElement","_getFirstPopupElement","trigger","escape","home","onOpened","onClosed","opened","acceptCustomValue","deferRendering","activeStateEnabled","dropDownButtonTemplate","contentTemplate","openOnFieldClick","showDropDownButton","popupPosition","_getDefaultPopupPosition","onPopupInitialized","applyButtonText","cancelButtonText","showPopupTitle","my","at","collision","_device","isGeneric","platform","isWin10","version","_inputWrapper","_initVisibilityActions","_initPopupInitializedAction","_openAction","excludeValidators","_closeAction","_popupInitializedAction","_renderOpenHandler","_renderOpenedState","_renderContentImpl","_createPopup","_$container","haspopup","autocomplete","_readOnlyPropValue","_cleanFocusState","_renderField","_getTemplateByOption","_renderTemplatedField","_fieldRenderData","data","_this","isFocused","_resetFocus","$container","empty","_$dropDownButton","_$clearButton","render","model","container","onRendered","Error","_refreshEvents","_refreshValueChangeEvent","_renderFocusState","_renderInputAddons","_renderDropDownButton","_createDropDownButton","_attachDropDownButtonClickHandler","dxButton","_openHandler","_initTemplates","_defaultTemplates","dropDownButton","$icon","$button","prependTo","_buttonsContainer","hoverStateEnabled","disabled","useInkRipple","template","removeClass","$inputWrapper","eventName","NAME","_getInputClickHandler","_openOnFieldClickAction","_createAction","_executeOpenAction","_focusInput","_toggleOpenState","_keyboardEventBindingTarget","isVisible","arguments","_setPopupOption","expanded","owns","_popupContentId","_$popup","_renderPopup","_renderPopupContent","showing","_popupShowingHandler","shown","_popupShownHandler","hiding","_popupHidingHandler","hidden","_popupHiddenHandler","onInitialized","_popupInitializedHandler","of","showTitle","shading","closeOnTargetScroll","closeOnOutsideClick","_closeOutsideDropDownHandler","animation","show","type","duration","from","to","hide","showCloseButton","toolbarItems","_getPopupToolbarItems","onPositioned","_popupPositionedHandler","fullScreen","popup","component","flip","_$validationMessage","dxOverlay","_getValidationMessagePosition","positionRequest","myTop","setup","popupTop","$popupContent","templateData","$target","target","isInputClicked","closest","isDropDownButtonClicked","_clean","optionName","_setWidgetOption","_popupToolbarItemsConfig","_wrapper","_popupElementTabHandler","_popupElementEscHandler","_popupButtonInitializedHandler","buttonsConfig","shortcut","onClick","_applyButtonsLocation","resultConfig","splitPair","_","element","toolbar","location","_toggleReadOnlyState","_invalidate","open","field","content","include","745","748","_waitAsyncTemplates","callback","_options","templatesRenderAsynchronously","_asyncTemplatesTimers","timer","setTimeout","clearTimeout","_cleanAsyncTemplatesTimer","timers","753","NumberBoxMask","754","isNumeric","browser","fitIntoRange","inRange","escapeRegExp","number","maskCaret","getLDMLFormat","getFormat","NumberBoxBase","typeUtils","ensureDefined","defaultValue","useMaskBehavior","_isDeleteKey","key","_useMaskBehavior","minus","_revertSign","del","_removeHandler","backspace","_arrowHandler","_moveCaretToBoundary","_updateFormattedValue","_focusInHandler","caret","_caret","msie","_ieCaretTimeout","_focusOutHandler","_focusOutOccurs","_parsedValue","_tryParse","_getInputVal","_adjustParsedValue","_setTextByParsedValue","_isValueDirty","_isDirty","_getFormatPattern","nextCaret","getCaretWithOffset","isCaretInBoundaries","getCaretInBoundaries","boundaries","getCaretBoundaries","newCaret","_shouldMoveCaret","decimalSeparator","getDecimalSeparator","isDecimalSeparatorNext","charAt","isZeroNext","moveToFloat","_lastKey","zeroToZeroReplace","convertDigits","_keyboardHandler","originalEvent","_shouldHandleKey","enteredChar","_moveCaret","_keyPressHandler","char","slice","_isStub","decimalSeparatorIndex","indexOf","_isNonStubAfter","_replaceSelectedText","search","_isValueInRange","valueAfterRemoving","_isPercentFormat","_parse","formatOption","formatter","parser","parse","_format","_getFormatForSign","signParts","split","sign","getSign","_removeStubs","excludeComma","thousandsSeparator","getThousandsSeparator","stubs","regExp","RegExp","_truncateToPrecision","maxPrecision","strValue","toString","parsedValue","parseFloat","substr","isNaN","selection","editedText","isTextSelected","parsed","_getPrecisionLimits","isValueChanged","isDecimalPointRestricted","isUselessCharRestricted","_isValueIncomplete","point","pointIndex","isCaretOnFloat","textParts","floatLength","precision","isPrecisionInRange","endsWithZero","_setInputText","getCaretAfterFormat","_formattedValue","_toggleEmptinessEventHandler","_renderInputType","isNumberType","_setInputType","_isChar","str","adjustedCaret","isSpecialChar","isMinusKey","_renderFormatter","_clearCache","_detachFormatterEvents","_attachFormatterEvents","_formatValue","_forceRefreshInputValue","isString","escapedDecimalSeparator","regExpString","test","_parseValue","currentFormat","floatPart","_applyRevertedSign","preserveSelectedText","previousText","currentText","getCaretOffset","caretInBoundaries","_removeMinusFromText","formatted","textWithoutMinus","wasMinusRemoved","_renderDisplayText","apply","clearedText","_saveValueChangeEvent","_optionValuesEqual","755","clearedFormat","result","exec","_getDigitCountBeforeIndex","_reverseText","reverse","_getDigitPositionByIndex","digitIndex","counter","pointPosition","newPointPosition","formattedParts","relativeIndex","digitsBefore","newPosition","positionFromEnd","digitsFromEnd","newPositionFromEnd","newPositionFromBegin","newText","previousBoundaries","756","domAdapter","mathUtils","inArray","TextEditor","wheelEvent","SpinButton","math","FIREFOX_CONTROL_KEYS","_spinUpChangeHandler","_spinDownChangeHandler","showSpinButtons","useLargeSpinButtons","mode","invalidValueMessage","generic","_renderSubmitElement","_validateValue","_renderMouseWheelHandler","_$submitElement","_setSubmitValue","applyServerDecimalSeparator","_getSubmitElement","String","fromCharCode","which","metaKey","_keyPressed","mouseWheelAction","_mouseWheelHandler","dxEvent","_spinValueChange","inputValue","Number","_forceValueRender","_renderValueEventName","_toggleDisabledState","_$spinUp","_$spinDown","formattedValue","_applyValueFormat","_renderProps","prop","valuemin","valuemax","_renderSpinButtons","spinButtonsVisible","_toggleTouchFriendlyClass","_$spinContainer","_createSpinButtons","pointerDownAction","_spinButtonsPointerDownHandler","$spinContainer","onChange","getActiveElement","_normalizeInputValue","_correctRounding","regex","isFloatValue","isFloatStep","valueAccuracy","stepAccuracy","accuracy","_round","multiplier","pow","_renderValueChangeEvent","_normalizeText","valueHasDigits","_isValueValid","_applyValueBoundaries","validationRequest","fire","editor","isValueIncomplete","isValueCorrect","_replaceCommaWithPoint","_inputIsInvalid","isNumberMode","validityState","get","validity","badInput","_isNumber","isValueValid","isValid","isNumber","validationError","editorSpecific","message","trim","reset","_resumeValueChangeAction","757","Widget","feedbackEvents","holdEvent","Deferred","POINTERUP_EVENT_NAME","up","POINTERCANCEL_EVENT_NAME","SPIN_CLASS","_spinIcon","_spinDownHandler","_spinChangeHandler","_clearTimer","_feedBackDeferred","lock","_holdTimer","setInterval","document","getDocument","resolve","clearInterval","823","toLowerCase","standardColorNames","parseColor","normalize","toHsvFromRgb","hsl","l","toHslFromRgb","ii","standardColorTypes","re","process","colorComponent","def","toHexFromRgb","H","S","V","hsvToRgb","vDec","vInc","vMin","calculateHue","convertTo01Bounds","maxMinSum","makeColorTint","colorPart","colorTint","modifyColorTint","hueToRgb","q","hslToRgb","n","isIntegerBetweenMinAndMax","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","colorString","parseInt","rgb","constructor","highlight","alter","darken","blend","blendColor","opacity","other","fromHSL","906","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","__","create","prop_types_1","component_1","_super","_WidgetClass","_defaults","defaultOpened","_templateProps","tmplOption","_instance","enumerable","configurable","Component","propTypes","PropTypes","bool","accessKey","string","oneOf","elementAttr","object","oneOfType","func","hint","inputAttr","onCopy","onCut","onDisposing","onEnterKey","onFocusIn","onFocusOut","onInput","onKeyDown","onKeyPress","onKeyUp","onOptionChanged","onPaste","placeholder","readOnly","tabIndex","validationMessageMode","visible"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAASC,GAEjC,YCIAF,GAAAC,QAAAC,EAAA,MACAF,EAAAC,QAAAE,QAAAH,EAAAC,SDWMG,KACA,SAAUJ,EAAQC,EAASC,GAEjC,YEfA,IAAAG,GAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,KACAM,EAAAN,EAAA,MACAO,EAAAP,EAAA,GAAAO,OACAC,EAAAR,EAAA,GAAAQ,WACAC,EAAAT,EAAA,IACAU,EAAAV,EAAA,KAYAW,EAAAL,EAAAM,UACAC,GACAC,0BAAAH,EAAAI,2BAAAC,KAAAL,GACAM,SAAAN,EAAAO,UAAAF,KAAAL,IAEAQ,EAAAT,EAAAU,SACAC,eAAA,WACA,GAAAC,GAAA,SAAAC,GAEA,GADAA,EAAAC,kBACAC,KAAAC,OAAA,UAEA,MADAH,GAAAI,kBACA,GAGAC,EAAA,SAAAL,GACA,MAAAE,MAAAC,OAAA,WAIAH,EAAAM,SACAJ,KAAAK,SACA,IALAP,EAAAI,kBACA,IAQAI,EAAA,SAAAR,GACA,MAAAE,MAAAC,OAAA,WAAAH,EAAAM,UAIAJ,KAAAC,OAAA,WAAAH,EAAAM,UACAJ,KAAAO,qBACA,IALAT,EAAAI,kBACA,GAQA,OAAApB,GAAAkB,KAAAQ,YACAC,IAAA,SAAAX,GACAE,KAAAC,OAAA,YACAH,EAAAI,iBACAF,KAAAU,WAAAC,WAAA,GAAAC,UAGAC,MAAAb,KAAAc,iBACAC,UAAAlB,EACAmB,WAAAnB,EACAoB,QAAAd,EACAe,UAAAZ,KAGAa,mBAAA,WACA,MAAArC,GAAAkB,KAAAQ,YACAY,kBAAA,EACAC,eAAA,aACAC,QAAA,EACAC,cAAA,KACAC,mBAAA,KACAC,oBAAA,KACAC,gBAAA,kBAGAC,aAAA,WACA,MAAA7C,GAAAkB,KAAAQ,YACAoB,OAAA,OACAC,MAAA,MAGAC,qBAAA,WACA9B,KAAA+B,mBACA/B,KAAAgC,0BAEAA,uBAAA,WACA,GAAAC,GAAAjC,KAAAkC,OAAAC,eACAF,KACAA,EAAAG,SA/EA,+BA+EAA,SA9EA,4BA8EAC,KAAA,+BAAAD,SA7EA,kCA8EAH,EAAAI,KAAA,kBAAAD,SA7EA,6BA8EAH,EAAAI,KAAA,oBAAAD,SA7EA,gCAgFAL,iBAAA,WACA/B,KAAAkC,OAAAI,iBAAAF,SAtFAG,sBAuFA,IAAAC,GAAA9D,EAAA,SAAA+D,SAAAzC,KAAAkC,OAAAQ,WACA1C,MAAAU,WAAAV,KAAA2C,iBAAAH,EAAA3D,EAAAmB,KAAA4C,oBACAjE,EAAAkE,GAAAL,EAAA,mBACAxC,KAAAY,SACSrB,KAAAS,QAET8C,eAAA,SAAAC,GACA/C,KAAAC,OAAA,QAAA8C,GACAA,GACA3D,EAAAC,0BAAAW,KAAAgD,qBAAAD,GAEA/C,KAAAiD,4BACAjD,KAAAK,QACAL,KAAAiD,2BAAA,IAGAL,iBAAA,WACA,GAAAM,GAAAlD,IACA,QACA+C,MAAAG,EAAAjD,OAAA,SACAmB,iBAAA8B,EAAAjD,OAAA,oBACAoB,eAAA6B,EAAAjD,OAAA,kBACAkD,kBAAAD,EAAAjD,OAAA,qBACAmD,YAAApD,KAAAC,OAAA,eACAoD,kBAAA,WACAH,EAAAD,2BAAA,EACAC,EAAAxC,WAAAT,OAAA,WAAAiD,EAAAjD,OAAA,WACAiD,EAAAJ,eAAAI,EAAAxC,WAAAT,OAAA,UACAiD,EAAA7C,UAGAiD,eAAA,SAAAC,GACA,GAAAnE,EAAAI,SAAA+D,EAAAR,SAAAQ,EAAAC,cAAA,EAGA,cAAAN,EAAAjD,OAAA,mBACAiD,EAAAD,4BAGAC,EAAAJ,eAAAS,EAAAR,SAEAU,mBAAAP,EAAAQ,sBAGA5C,iBAAA,WACA,GAAA6C,GAAA3D,KAAA4D,SAAAC,MACAd,EAAA/C,KAAAC,OAAA,SACA6D,EAAA9D,KAAAC,OAAA,oBAAAb,EAAAI,SAAAuD,IACA,KAAAY,EACA,QAGA,IADA,GAAA/E,GAAA+E,GACAI,eAEA,WADA/D,MAAA4D,SAAAC,IAAAC,EAOA,IAJAH,IAAAG,IACA9D,KAAAgE,qBAAAL,GACA3D,KAAAC,OAAA,QAAAD,KAAAC,OAAA,oBAAAb,EAAAI,SAAAmE,OAEA3D,KAAAU,WAAA,CACA,GAAAuD,GAAAjE,KAAAU,WAAAT,OAAA,QACA8C,KAAAkB,GACAjE,KAAAC,OAAA,QAAAgE,GAIA,MADAjE,MAAAK,SACA,GAEA6D,oBAAA,WACAlE,KAAA8C,eAAA9C,KAAAU,WAAAT,OAAA,UACAlB,EAAAiB,KAAAC,OAAA,wBACAD,KAAAC,OAAA,wBAEAD,KAAAQ,YAEA2D,qBAAA,WACAnE,KAAAoE,mBACArF,EAAAiB,KAAAC,OAAA,yBACAD,KAAAC,OAAA,yBAEAD,KAAAQ,YAEA6D,2BAAA,WAEA,GADArE,KAAA0D,oBAAA1D,KAAAyD,mBAAAa,uBACAtE,KAAAU,WAEA,WADAV,MAAAU,WAAAT,OAAA,qBAAAD,KAAA0D,sBAIAa,MAAA,WACAvE,KAAAQ,YAEAgE,YAAA,WACAxE,KAAAyE,WAAArC,SA1LA,eA2LApC,KAAAQ,YAEAkE,aAAA,WACA1E,KAAAQ,WACAR,KAAA4D,SAAAxB,SA9LAG,qBA+LAvC,KAAA2E,uBAEAA,oBAAA,WACA3E,KAAAyE,WAAAG,UAAAlG,EAAA,SAAA0D,SAjMAyC,gCAkMA7E,KAAA8E,yBAAA9E,KAAAyE,WAAAM,WAAAC,GAAA,GACAhF,KAAAgD,qBAAAtE,EAAA,SAAA0D,SAlMAG,oCAkMAE,SAAAzC,KAAA8E,0BACA9E,KAAAC,OAAA,SAGAb,EAAAC,0BAAAW,KAAAgD,qBAAAhD,KAAAC,OAAA,UAFAD,KAAA8E,yBAAA1C,SAnMAG,qCAwMA0C,aAAA,WACA,GAAAlC,GAAA/C,KAAAC,OAAA,QACAD,MAAAC,OAAA,OAAAD,KAAAC,OAAA,oBAAAb,EAAAI,SAAAuD,MACA/C,KAAAQ,YAEA4D,iBAAA,WACA,GAAAc,GAAAlF,KAAA4D,SACAb,EAAA/C,KAAAC,OAAA,QACAiF,GAAArB,IAAAd,GACA/C,KAAAU,YAAAV,KAAAU,WAAAT,OAAA,QAAA8C,IAEAoC,yBAAA,SAAArF,GACA,GAAAiD,GAAA/C,KAAA4D,SAAAC,KACAd,KACAA,EAAA/C,KAAAgE,qBAAAjB,GACA/C,KAAAU,YAAAV,KAAAU,WAAAT,OAAA,QAAA8C,IAEA/C,KAAAQ,SAAAV,EAAAiD,IAEAiB,qBAAA,SAAAjB,GAMA,MALA,IAAAnE,GAAAmE,GACAgB,iBACA/D,KAAAoE,mBACArB,EAAA/C,KAAAC,OAAA,UAEA8C,GAEAqC,eAAA,SAAA7B,GACA,GAAAR,GAAAQ,EAAAR,MACAsC,EAAA9B,EAAA8B,IACA,QAAAA,GACA,YACArF,KAAA8E,yBAAAQ,YAxOA/C,oCAwOAQ,GACAA,EACA3D,EAAAC,0BAAAW,KAAAgD,qBAAAD,GAEA/C,KAAAgD,qBAAAuC,WAAA,SAEAvF,KAAAU,YACAV,KAAAU,WAAAT,OAAA,QAAA8C,GAEA/C,KAAAQ,SAAA+C,EACA,MACA,uBACA,uBACAvD,KAAAQ,SAAA+C,GACAvD,KAAAkC,QAAAlC,KAAAgC,wBACA,MACA,wBACA,0BACA,yBACA,cACAhC,KAAAU,YACAV,KAAAU,WAAAT,OAAAoF,EAAAtC,EAEA,MACA,sBACA/C,KAAAQ,SAAA+C,EACA,MACA,kBACAvD,KAAAU,YACAV,KAAAU,WAAAT,OAAAoF,EAAAtC,GAEA/C,KAAAQ,SAAA+C,EACA,MACA,SACAvD,KAAAQ,SAAA+C,MAIAvE,GAAA,aAAAU,GACArB,EAAAC,QAAAoB,GF8BM8F,KACA,SAAUnH,EAAQC,EAASC,GAEjC,YG5TA,IAAAG,GAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAkH,EAAAlH,EAAA,IACAO,EAAAP,EAAA,GAAAO,OACAF,EAAAL,EAAA,KACAmH,EAAAnH,EAAA,IACAoH,EAAApH,EAAA,IACAS,EAAAT,EAAA,IACAqH,EAAArH,EAAA,KACAsH,EAAAtH,EAAA,KACAuH,EAAAvH,EAAA,KACAwH,EAAAxH,EAAA,MACAyH,EAAAzH,EAAA,IAgCAM,EAAA+G,EAAAjG,SACAC,eAAA,WACA,GAAAqG,GAAAjG,KAAAC,OAAA,cACAiD,EAAAlD,KACAkG,EAAA,SAAApG,GACA,GAAAqG,GAAA,IAAAjD,EAAAkD,aAKA,OAJAtG,GAAAuG,WACAF,GAAAjD,EAAAjD,OAAA,YAEAkG,IAAA,EAAAA,EAAA,EACAG,KAAAC,MAAAJ,IAEAK,EAAA,SAAAL,GACA,GAAApD,GAAAG,EAAAuD,cAAAC,IAAAC,EAAAR,CACApD,GAAA,IACAA,EAAA,IAEAA,EAAA,IACAA,EAAA,GAGAG,EAAAuD,cAAAC,IAAAC,EAAA5D,EACA6D,KAEAC,EAAA,SAAA/G,GACA,GAAAqG,GAAA,IAAAjD,EAAA4D,cAKA,OAJAhH,GAAAuG,WACAF,GAAAjD,EAAAjD,OAAA,YAEAkG,IAAA,EAAAA,EAAA,EACAG,KAAAC,MAAAJ,IAEAY,EAAA,SAAAZ,GACA,GAAApD,GAAAG,EAAAuD,cAAAC,IAAAM,EAAAb,CACApD,GAAA,IACAA,EAAA,IAEAA,EAAA,IACAA,EAAA,GAGAG,EAAAuD,cAAAC,IAAAM,EAAAjE,EACA6D,KAEAA,EAAA,WACA1D,EAAA+D,sBACA/D,EAAAgE,oBAAAhE,EAAAuD,cAAAC,IAAAS,EAAAjE,EAAAuD,cAAAC,IAAAC,EAAAzD,EAAAuD,cAAAC,IAAAM,IAEAI,EAAA,SAAAtH,GACA,GAAAqG,GAAA,KAAAjD,EAAAmE,uBAAAnE,EAAAoE,sBAKA,OAJAxH,GAAAuG,WACAF,GAAAjD,EAAAjD,OAAA,YAEAkG,IAAA,EAAAA,EAAA,GAGAoB,EAAA,SAAApB,GACAjD,EAAAuD,cAAAC,IAAAS,GAAAhB,EACAjD,EAAAsE,sBACA,IAAAC,GAAAhC,EAAAiC,OAAAxE,EAAAyE,iBACAzE,GAAA0E,gBAAAH,EAAAI,IAAA3E,EAAAoE,sBAAA,IAEAQ,EAAA,SAAAhI,GACA,GAAAqG,GAAA,EAAAjD,EAAA6E,2BAMA,OALAjI,GAAAuG,WACAF,GAAAjD,EAAAjD,OAAA,YAEAkG,IAAA,IAAAA,EAAA,IACAA,EAAAF,GAAAE,KAGA6B,EAAA,SAAA7B,GACAjD,EAAAuD,cAAAwB,GAAA9B,EACAjD,EAAAgF,0BACA,IAAAT,GAAAhC,EAAAiC,OAAAxE,EAAAiF,qBACAjF,GAAAkF,wCAAAX,EAAAY,KAAAnF,EAAAoF,yBAAA,GAEA,OAAAxJ,GAAAkB,KAAAQ,YACAS,QAAA,SAAAnB,GACAA,EAAAI,iBACAJ,EAAAC,kBACAD,EAAAyI,QACAvI,KAAAyG,cAAAC,IAAAS,GAAA,MAAAnH,KAAAwI,gBACAjB,EAAAH,EAAAtH,IAGAE,KAAAyG,cAAAC,IAAAM,EAAA,KACAD,EAAAF,EAAA/G,KAIAoB,UAAA,SAAApB,GACAA,EAAAI,iBACAJ,EAAAC,kBACAD,EAAAyI,QACAvI,KAAAyG,cAAAC,IAAAS,GAAA,IACAnH,KAAAwI,iBACAxI,KAAAyG,cAAAC,IAAAS,EAAA,KAEAI,GAAAH,EAAAtH,KAGAE,KAAAyG,cAAAC,IAAAM,EAAA,GACAD,GAAAF,EAAA/G,KAIAkB,WAAA,SAAAlB,GACAA,EAAAI,iBACAJ,EAAAC,kBACAD,EAAAyI,SACAtC,EAAAjG,KAAAyG,cAAAwB,EAAA,EAAAjI,KAAAyG,cAAAwB,EAAA,GAAAjI,KAAAC,OAAA,sBACA+H,GAAAF,EAAAhI,IAGAE,KAAAyG,cAAAC,IAAAC,EAAA,KACAH,EAAAN,EAAApG,KAIAiB,UAAA,SAAAjB,GACAA,EAAAI,iBACAJ,EAAAC,kBACAD,EAAAyI,SACAtC,EAAAjG,KAAAyG,cAAAwB,EAAA,EAAAjI,KAAAyG,cAAAwB,EAAA,GAAAjI,KAAAC,OAAA,sBACA+H,EAAAF,EAAAhI,IAGAE,KAAAyG,cAAAC,IAAAC,EAAA,GACAH,GAAAN,EAAApG,KAIAe,MAAA,SAAAf,GACAE,KAAAyI,qBAAA3I,OAIAqB,mBAAA,WACA,MAAArC,GAAAkB,KAAAQ,YACAuC,MAAA,KACAM,sBAAA,GACAjC,kBAAA,EACAE,QAAA,EACA8B,gBAAA,MAGAsF,qBAAA,WACA,MAAA1I,MAAAQ,WAAAmI,SACAC,OAAA,WACA,kBAAAjD,EAAAkD,OAAAC,aAAAnD,EAAAoD,eAEAC,SACA7F,mBAAA,OAIAoB,MAAA,WACAvE,KAAAQ,WACAR,KAAAiJ,uBACAjJ,KAAAkJ,8BAEAA,2BAAA,WACAlJ,KAAAmJ,yBAAAnJ,KAAAoJ,sBAAA,sBAEAX,qBAAA,SAAA3I,GACAE,KAAAmJ,0BAGAnJ,KAAAmJ,0BACAE,MAAAvJ,KAGAmJ,qBAAA,WACAjJ,KAAAsJ,iBAAAtJ,KAAAC,OAAA,WAEAqJ,iBAAA,SAAAvG,GACAA,KAAA,SACA,IAAAwG,GAAA,GAAA3K,GAAAmE,EACAwG,GAAAxF,eAQA/D,KAAAC,OAAA,QAAAD,KAAAyG,cAAA+C,WAPAxJ,KAAAyG,eAAAzG,KAAAP,UAAAO,KAAAyG,iBAAAzG,KAAAP,UAAA8J,KACAvJ,KAAAyG,cAAA8C,EACAvJ,KAAAyJ,gBACAzJ,KAAAV,2BAAAU,KAAAyJ,eAAAF,KAOA/E,YAAA,WACAxE,KAAAQ,WACAR,KAAAyE,WAAArC,SA/NA,gBAgOApC,KAAA0J,+BAEAC,QAAA,WACA3J,KAAAQ,WACAR,KAAA4J,iBACA5J,KAAA6J,kBACA7J,KAAA8J,2BACA9J,KAAA+J,kBACA/J,KAAAgK,+BAEA1K,2BAAA,SAAA2K,EAAAC,GACAA,YAAAtL,KACAsL,EAAA,GAAAtL,GAAAsL,IAEAD,EAAAE,IAAA,kBAAAnK,KAAAP,UAAAyK,KAEAzK,UAAA,SAAAyK,GAIA,MAHAA,aAAAtL,KACAsL,EAAA,GAAAtL,GAAAsL,IAEA,SAAAA,EAAAE,EAAAF,EAAAG,EAAAH,EAAAI,EAAAJ,EAAAjC,GAAAsC,KAAA,WAEAtF,aAAA,WACAjF,KAAAQ,SAAAR,KAAAC,OAAA,oBAAAD,KAAAP,UAAAO,KAAAyG,eAAAzG,KAAAC,OAAA,WAEAyJ,4BAAA,WACA,GAAAc,GAAAxK,KAAAyE,UACAzE,MAAAyK,uBAAA/L,EAAA,SAAA0D,SA1PA,0BA0PAK,SAAA+H,GACAxK,KAAA0K,mBAEAA,gBAAA,SAAAC,GACA,GAAAC,GAAA5K,KAAAyK,uBAAApI,KAAA,+BACAwI,EAAAD,EAAAE,OACAC,EAAA/K,KAAAC,OAAA,wBACA+K,EAAAH,EAAAE,CAIA,IAHAC,EAAA,GACAJ,EAAA5F,IAAA,GAAAiG,SAEAD,EAAA,GACAA,EAAA1E,KAAA4E,IAAAF,EACA,IAAAG,GAAAC,IACA,KAAAD,EAAA,EAAuBA,EAAAH,EAAWG,IAClCC,EAAAC,KAAA3M,EAAA,SAAA0D,SAxQA,8BA0QA,IAAAyI,EACA,IAAAM,EAAA,EAA2BA,EAAAC,EAAAN,OAAiBK,IAC5CP,EAAA5F,GAAA,GAAAsG,MAAAF,EAAAD,QAGAnL,MAAAyK,uBAAAc,OAAAH,KAIAI,yBAAA,SAAAC,EAAAC,EAAAC,GACA,MAAAjN,GAAA,SAAA0D,SAnRA,+BAmRAA,SAAAuJ,GAAAlJ,SAAAiJ,EAAArJ,KAAA,+BAAA2C,GAAAyG,KAEA7B,eAAA,WACA,GAAAgC,GAAA5L,KAAAwL,yBAAA,EAAAxL,KAAAyK,uBApRA,6BAqRAoB,EAAAnN,EAAA,SAAA0D,UAnRA,gCACA,uCAkRAmI,KAAA,MACAuB,EAAApN,EAAA,SAAA0D,UApRA,gCAEA,uCAkRAmI,KAAA,KACAvK,MAAA+L,UAAArN,EAAA,SAAA0D,SAxRA,wBAwRA+H,IAAA,kBAAAnK,KAAAyG,cAAAuF,eAAAC,SAAAxJ,SAAAmJ,GACA5L,KAAA8G,eAAA9G,KAAA+L,UAAAnK,SACA5B,KAAAoG,cAAApG,KAAA+L,UAAAlK,QACA7B,KAAAkM,uBACAlM,KAAA+L,UAAAR,QAAAM,EAAAC,KAEAI,qBAAA,WACAlM,KAAAmM,gBAAAzN,EAAA,SAAA0D,SA7RA,+BA6RAK,SAAAzC,KAAA+L,WACA/L,KAAA2C,iBAAA3C,KAAAmM,gBAAApG,GACAqG,KAAApM,KAAA+L,UACAM,kBAAA,EACAC,YAAA,WACA,OAAAtM,KAAAuM,qBAAA,GACahN,KAAAS,MACbwM,OAAA,WACA,GAAAC,GAAAhH,EAAAiC,OAAA1H,KAAAmM,gBACAnM,MAAA0M,eAAA,EACA1M,KAAAkH,oBAAAlH,KAAAyG,cAAAC,IAAAS,EAAAnH,KAAA2M,0BAAAF,GAAAzM,KAAA4M,qBAAAH,KACalN,KAAAS,QAEbA,KAAA6M,oBAAA7M,KAAAmM,gBAAAtK,QACA7B,KAAAuM,qBAAAvM,KAAAmM,gBAAAvK,SACA5B,KAAAiH,uBAEAA,oBAAA,WACAxB,EAAAqH,KAAA9M,KAAAmM,iBACA9D,KAAA/B,KAAAC,MAAAvG,KAAAoG,cAAApG,KAAAyG,cAAAC,IAAAC,EAAA,IAAA3G,KAAA6M,oBAAA,GACAhF,IAAAvB,KAAAC,MAAAvG,KAAA8G,eAAA9G,KAAA8G,eAAA9G,KAAAyG,cAAAC,IAAAM,EAAA,IAAAhH,KAAAuM,qBAAA,MAGAK,qBAAA,SAAAH,GACA,GAAA1J,GAAAuD,KAAAyG,MAAAN,EAAA5E,IAAA7H,KAAAuM,qBAAA,EACA,YAAAjG,KAAAC,MAAA,IAAAxD,EAAA/C,KAAA8G,iBAEA6F,0BAAA,SAAAF,GACA,GAAAO,GAAA1G,KAAAyG,MAAAN,EAAApE,KAAArI,KAAA6M,oBAAA,EACA,OAAAvG,MAAAC,MAAA,IAAAyG,EAAAhN,KAAAoG,gBAEAc,oBAAA,SAAA+F,EAAAD,EAAAjK,GACA,GAAAkF,GAAAjI,KAAAyG,cAAAwB,CACAjI,MAAAyG,cAAA,GAAA7H,GAAA,QAAAqO,EAAAD,EAAAjK,GAAAwH,KAAA,UACAvK,KAAAyG,cAAAwB,IACAjI,KAAAkN,oCACAlN,KAAAmN,cAEAtD,gBAAA,WACA,GAAAuD,GAAApN,KAAAwL,yBAAA,EAAAxL,KAAAyK,uBA/TA,8BAgUAzK,MAAAqN,kBAAA3O,EAAA,SAAA0D,SA9TA,kCA8TAK,SAAA2K,GACApN,KAAAsN,WAAA5O,EAAA,SAAA0D,SAlUA,0BAkUAK,SAAAzC,KAAAqN,mBACArN,KAAAuN,gBAAAvN,KAAAsN,WAAA1L,SACA5B,KAAAqH,uBAAArH,KAAAqN,kBAAAG,cACAxN,KAAAyN,yBAEAA,sBAAA,WACAzN,KAAA2H,iBAAAjJ,EAAA,SAAA0D,SAtUA,iCAsUAK,SAAAzC,KAAAqN,mBACArN,KAAA2C,iBAAA3C,KAAA2H,iBAAA5B,GACAqG,KAAApM,KAAAqN,kBACAhB,kBAAA,EACAqB,UAAA,WACAlB,OAAA,WACAxM,KAAA0M,eAAA,EACA1M,KAAA4H,gBAAAnC,EAAAiC,OAAA1H,KAAA2H,kBAAAE,IAAA7H,KAAAsH,sBAAA,IACa/H,KAAAS,QAEbA,KAAAsH,sBAAAtH,KAAA2H,iBAAA/F,SACA5B,KAAAwH,wBAEAA,qBAAA,WACA,GAAAmG,GAAA3N,KAAAqH,uBACAuG,EAAA5N,KAAAsH,sBACAO,GAAA8F,EAAAC,IAAA,IAAA5N,KAAAyG,cAAAC,IAAAS,GAAA,GACAwG,GAAA9F,EAAA+F,IACA/F,EAAA8F,EAAAC,GAEA/F,EAAA,IACAA,EAAA,GAEApC,EAAAqH,KAAA9M,KAAA2H,kBACAE,IAAAvB,KAAAC,MAAAsB,MAGAD,gBAAA,SAAAiG,GACA,GAAAZ,GAAA,IAAA3G,KAAAC,MAAA,KAAAsH,EAAA7N,KAAAsH,sBAAA,IAAAtH,KAAAqH,uBAAArH,KAAAsH,wBACA0F,EAAAhN,KAAAyG,cAAAC,IAAAC,EACA5D,EAAA/C,KAAAyG,cAAAC,IAAAM,CACAhH,MAAAwI,gBAAA,EACAyE,IAAA,IAAAA,EACAA,GAAA,MACAjN,KAAAwI,gBAAA,EACAyE,EAAA,GAEAjN,KAAAkH,oBAAA+F,EAAAD,EAAAjK,GACA/C,KAAA+L,UAAA5B,IAAA,kBAAAnK,KAAAyG,cAAAuF,eAAAC,UAEAnC,yBAAA,WACA,GAAAgE,GAAA9N,KAAAwL,yBAAA,EAAAxL,KAAAyK,uBACAzK,MAAA+N,oBAAArP,EAAA,SAAA0D,SA9WA,mCA8WAK,SAAAqL,IAEA/D,gBAAA,WACA/J,KAAAgO,uBACAhO,KAAAiO,mBACAjO,KAAAkO,mBAEAF,qBAAA,WACA,GAAAG,GAAAzP,EAAA,SAAA0D,SAzWA,wCAyWAK,SAAAzC,KAAA+N,qBACAK,EAAA1P,EAAA,SAAA0D,SAzWA,8CAyWAK,SAAA0L,EACAnO,MAAAyJ,eAAA/K,EAAA,SAAA0D,UA5WA,6BAGA,4CAyWAmI,KAAA,MACAvK,KAAAqO,WAAA3P,EAAA,SAAA0D,UA7WA,6BAIA,wCAyWAmI,KAAA,MACAvK,KAAAV,2BAAAU,KAAAyJ,eAAAzJ,KAAAyG,eACAzG,KAAAV,2BAAAU,KAAAqO,WAAArO,KAAAyG,eACA2H,EAAA7C,QAAAvL,KAAAyJ,eAAAzJ,KAAAqO,cAEArE,4BAAA,WACAhK,KAAAC,OAAA,sBACAD,KAAAyK,uBAAApI,KAAA,+BAAA2C,GAAA,GAAA5C,SA1XA,kCA2XApC,KAAAsO,2BACAtO,KAAAuO,6BAGAN,iBAAA,WACAjO,KAAAwO,sBAAAxO,KAAAyO,wBACAC,WAAA7I,EACA9C,MAAA/C,KAAAyG,cAAA2D,EACA9G,eAAAtD,KAAA2O,aAAApP,KAAAS,MAAA,GACA4O,UAAA,IACAC,cAAAnJ,EAAAoJ,OAAA,uBACAC,WA3YA,2BA4YS/O,KAAAyO,wBACTC,WAAA7I,EACA9C,MAAA/C,KAAAyG,cAAA4D,EACA/G,eAAAtD,KAAA2O,aAAApP,KAAAS,MAAA,GACA4O,UAAA,IACAC,cAAAnJ,EAAAoJ,OAAA,yBACAC,WAjZA,6BAkZS/O,KAAAyO,wBACTC,WAAA7I,EACA9C,MAAA/C,KAAAyG,cAAA6D,EACAhH,eAAAtD,KAAA2O,aAAApP,KAAAS,MAAA,GACA4O,UAAA,IACAC,cAAAnJ,EAAAoJ,OAAA,wBACAC,WAvZA,6BAyZA/O,KAAA+N,oBAAAxC,OAAAvL,KAAAwO,sBACAxO,KAAAW,YAAAX,KAAAwO,qBAAA,GAAAnM,KAAA,iBAAA2M,YAAA,YAAAhP,KAAAwO,qBAAA,GAAAnM,KAAA,iBAAA2M,YAAA,YAAAhP,KAAAwO,qBAAA,GAAAnM,KAAA,iBAAA2M,YAAA,cAEAP,uBAAA,SAAAzF,GACA,GAAAiG,GAAAvQ,EAAA,SACAwQ,EAAAxQ,EAAA,WAAA0D,SAAA4G,EAAA+F,YAAAI,KAAAnG,EAAA4F,UAAA,KAAArD,OAAA0D,EACAtQ,GAAAyQ,IAAAF,EAAAlJ,EAAAX,MACA1G,EAAAkE,GAAAqM,EAAAlJ,EAAAX,KAAA,SAAAvF,GACAA,EAAAI,kBAEA,IAAAwO,GAAA1F,EAAA0F,WACAW,EAAAvQ,GACAiE,MAAAiG,EAAAjG,MACAO,eAAA0F,EAAA1F,iBAEAF,YAAApD,KAAAC,OAAA,gBAYA,OAVAyO,KAAA7I,IACAwJ,EAAAC,IAAAtG,EAAAsG,KAAA,EACAD,EAAAE,IAAAvG,EAAAuG,KAAA,IACAF,EAAAlJ,KAAA6C,EAAA7C,MAAA,GAEA,GAAAuI,GAAAO,EAAAI,GACAG,mBAAA,iBAAA1P,GACAE,KAAAyI,qBAAA3I,IACSP,KAAAS,OACTA,KAAAyP,QAAA,QAAAzG,EAAA6F,cAAAI,GACAC,GAEAQ,gBAAA,WACA,OACAhB,WAAA5I,EACA/C,MAAA/C,KAAAyG,cAAAwF,QAAA0D,QAAA,QACArM,eAAAtD,KAAA2O,aAAApP,KAAAS,MAAA,GACA+O,WA1bA,yBA2bAH,UAAA,IACAC,cAAAnJ,EAAAoJ,OAAA,yBAGAZ,gBAAA,WACAlO,KAAA4P,UAAA9J,EAAA+J,YAAA7P,KAAAyO,uBAAAzO,KAAA0P,mBAAAjN,SAAAzC,KAAA+N,qBAAA1L,KAAA,iBAEAiM,yBAAA,WACA,GAAAwB,GAAA9P,KAAAwL,yBAAA,EAAAxL,KAAAyK,uBA7bA,mCA8bAsF,EAAArR,EAAA,SAAA0D,SA7bA,qCA6bAK,SAAAqN,GACAE,EAAAtR,EAAA,SAAA0D,SAlcA,sCAkcAK,SAAAsN,EACA/P,MAAAiQ,oBAAAvR,EAAA,SAAA0D,SArcA,oCAqcAK,SAAAuN,GACAhQ,KAAAkQ,uBAAAlQ,KAAAiQ,qBACAjQ,KAAAmQ,0BAAAL,IAEAI,uBAAA,SAAAjG,GACA,GAAAC,GAAAlK,KAAAyG,cACA2J,GAAAlG,EAAAE,EAAAF,EAAAG,EAAAH,EAAAI,GAAAC,KAAA,KACA8F,EAAAnG,EAAA+B,QAAA0D,QAAA,QACAW,EAAA,SAAAF,EAAAC,GACA,GAAAE,GAAAvQ,KAAAC,OAAA,cACAuQ,EAAA,QAAAJ,EAAA,MAAAG,EAAA,aACAE,EAAA,QAAAL,EAAA,MAAAG,EAAA,YAGA,6DAAAC,EAAA,KAAAC,EAAA,sDAAAD,EAAA,KAAAC,EAAA,oDAAAD,EAAA,KAAAC,EAAA,iDAAAD,EAAA,KAAAC,EAAA,0FAFAF,EAAA,SAAAF,EAAA,qBACAE,EAAA,SAAAF,EAAA,MACA9F,KAAA,KAEAN,GAAAyG,KAAA,QAAAJ,EAAAK,KAAA3Q,KAAAoQ,EAAAC,KAEA9B,yBAAA,WACA,GAAArL,GAAAlD,KACA4Q,EAAA5Q,KAAAwL,yBAAA,EAAAxL,KAAAyK,uBACAvH,GAAA2N,mBAAA7Q,KAAAyO,wBACAC,WAAA7I,EACA9C,MAAA/C,KAAAyG,cAAAwB,EACAsH,IAAA,EACApJ,KAAA,GACA7C,eAAA,SAAAxD,GACA,GAAAiD,GAAAjD,EAAAiD,KACAA,GAAAG,EAAAuD,cAAAqK,aAAA/N,KAAAG,EAAAuD,cAAAwB,EACA/E,EAAA6N,yBAAAhO,GACAG,EAAAgF,4BAEA6G,WAleA,mCAmeAH,UAAA,QACAC,cAAAnJ,EAAAoJ,OAAA,2BACSrM,SAAAmO,GAAAvO,KAAA,iBAAA2M,YAAA,aAET+B,yBAAA,SAAAC,GACAhR,KAAAyG,cAAAwB,EAAA+I,EACAhR,KAAAV,2BAAAU,KAAAqO,WAAArO,KAAAyG,eACAzG,KAAAmN,cAEAgD,0BAAA,SAAA3F,GACAxK,KAAAmI,qBAAAzJ,EAAA,SAAA0D,SA5eA,qCA4eAK,SAAA+H,GACAxK,KAAA2C,iBAAA3C,KAAAmI,qBAAApC,GACAqG,KAAA5B,EACA6B,kBAAA,EACAqB,UAAA,aACAlB,OAAA,WACAxM,KAAA0M,eAAA,CACA,IAAAuE,GAAAjR,KAAAmI,qBACA+I,EAAAzL,EAAAiC,OAAAuJ,GAAA5I,KAAArI,KAAAsI,yBAAA,CACAtI,MAAAoI,wCAAA8I,IACa3R,KAAAS,QAEbA,KAAAsI,yBAAAtI,KAAAmI,qBAAAtG,QACA7B,KAAA+H,4BAAAyC,EAAA3I,QAAA7B,KAAAsI,yBACAtI,KAAAkI,4BAEAE,wCAAA,SAAAyF,GACA,GAAAmD,IAAAnD,EAAA7N,KAAAsI,yBAAA,GAAAtI,KAAA+H,4BACAwI,EAAAvQ,KAAAC,OAAA,aACA+Q,GAAAT,EAAAS,EAAA,EAAAA,EACAnD,GAAA7N,KAAA+H,4BAAA/H,KAAAsI,yBAAA,EACA0I,EAAAT,EAAA,IAEAS,EAAA,IACAA,IAAAG,QAAA,IAGAH,EAAA1K,KAAAiJ,IAAAyB,EAAA,GACAA,EAAA1K,KAAAgJ,IAAA0B,EAAA,GACAhR,KAAA6Q,mBAAA5Q,OAAA,QAAA+Q,IAEA9I,yBAAA,WACA,GAAAG,GAAArI,KAAA+H,6BAAA,EAAA/H,KAAAyG,cAAAwB,EACAI,GAAA,IACAA,EAAA,GAEArI,KAAA+H,4BAAAM,IACAA,EAAArI,KAAA+H,6BAEAtC,EAAAqH,KAAA9M,KAAAmI,sBACAE,KAAArI,KAAAC,OAAA,cAAAD,KAAA+H,4BAAAM,OAGA8E,WAAA,WACA,GAAAiE,GAAApR,KAAAC,OAAA,oBAAAD,KAAAP,UAAAO,KAAAyG,eAAAzG,KAAAyG,cAAAwF,OACAjM,MAAAV,2BAAAU,KAAAyJ,eAAAzJ,KAAAyG,eACAzG,KAAAC,OAAA,QAAAmR,IAEAC,YAAA,WACArR,KAAAiJ,uBACAjJ,KAAAsR,kBAEA3C,aAAA,SAAA4C,EAAAzR,GACA,GAAA0R,GAAAjI,CACAgI,GACAhI,EAAAvJ,KAAAyR,aAAA,IAAAzR,KAAA4P,UAAA3P,OAAA,WAEAuR,EAAAxR,KAAA0R,eACA1R,KAAA6Q,oBACAW,EAAAnG,KAAArL,KAAA6Q,mBAAA5Q,OAAA,UACAsJ,EAAA,QAAAiI,EAAAjH,KAAA,WAEAhB,EAAA,OAAAiI,EAAAjH,KAAA,WAGAvK,KAAA2R,gCACA3R,KAAAyG,cAAA,GAAA7H,GAAA2K,GACAvJ,KAAAmN,aACAnN,KAAAsR,mBAGAG,aAAA,SAAAG,GACA,MAAA5R,MAAAyG,cAAAoL,WAAAD,KAAA5R,KAAAyG,cAAAwF,SAEAyF,aAAA,WACA,GAAAtH,GAAApK,KAAAW,WAAA,GAAAV,OAAA,SACAoK,EAAArK,KAAAW,WAAA,GAAAV,OAAA,SACAqK,EAAAtK,KAAAW,WAAA,GAAAV,OAAA,QAMA,OALAD,MAAAyG,cAAAqL,WAAA1H,EAAAC,EAAAC,KACAF,EAAApK,KAAAyG,cAAA2D,EACAC,EAAArK,KAAAyG,cAAA4D,EACAC,EAAAtK,KAAAyG,cAAA6D,IAEAF,EAAAC,EAAAC,IAEAgH,eAAA,WACAtR,KAAAwH,uBACAxH,KAAAiH,sBACAjH,KAAAkN,oCACAlN,KAAA+L,UAAA5B,IAAA,kBAAAnK,KAAAyG,cAAAuF,eAAAC,SACAjM,KAAAmI,uBACAnI,KAAA+Q,yBAAA/Q,KAAAyG,cAAAwB,GACAjI,KAAAkI,6BAGAgF,kCAAA,WACAlN,KAAA2R,+BAAA,EACA3R,KAAA4P,UAAA3P,OAAA,QAAAD,KAAAyG,cAAAwF,QAAA0D,QAAA,SACA3P,KAAAW,WAAA,GAAAV,OAAA,QAAAD,KAAAyG,cAAA2D,GACApK,KAAAW,WAAA,GAAAV,OAAA,QAAAD,KAAAyG,cAAA4D,GACArK,KAAAW,WAAA,GAAAV,OAAA,QAAAD,KAAAyG,cAAA6D,GACAtK,KAAA2R,+BAAA,EACA3R,KAAAV,2BAAAU,KAAAqO,WAAArO,KAAAyG,eACAzG,KAAAC,OAAA,sBACAD,KAAAkQ,uBAAAS,KAAA3Q,UAAAiQ,qBACAjQ,KAAA6Q,mBAAA5Q,OAAA,QAAAD,KAAAyG,cAAAwB,KAGA7C,eAAA,SAAA7B,GACA,GAAAR,GAAAQ,EAAAR,KACA,QAAAQ,EAAA8B,MACA,YACArF,KAAAsJ,iBAAAvG,GACA/C,KAAA0M,eACA1M,KAAAsR,iBAEAtR,KAAA0M,eAAA,EACA1M,KAAAQ,SAAA+C,EACA,MACA,yBACAvD,KAAAkJ,4BACA,MACA,wBACAlJ,KAAAyK,yBACAzK,KAAA0K,gBAAA,oBACA1K,KAAAgK,8BAEA,MACA,eACA,KACA,mBACAhK,KAAA+J,iBACA,MACA,SACA/J,KAAAQ,SAAA+C,MAIAvE,GAAA,cAAAH,GACAR,EAAAC,QAAAO,GH2UMkT,KACA,SAAU1T,EAAQC,EAASC,GAEjC,YIz+BA,IAAAG,GAAAH,EAAA,GACAyT,EAAAzT,EAAA,GAAA0T,YACAtT,EAAAJ,EAAA,GACA2T,EAAA3T,EAAA,IACAS,EAAAT,EAAA,IACAkH,EAAAlH,EAAA,IACA4T,EAAA5T,EAAA,IAAA4T,UACArT,EAAAP,EAAA,GAAAO,OACAsT,EAAA7T,EAAA,KACA8T,EAAA9T,EAAA,GACA+T,EAAA/T,EAAA,IACAgU,EAAAhU,EAAA,KACAiU,EAAAjU,EAAA,KACAQ,EAAAR,EAAA,GAAAQ,WACA0T,EAAAlU,EAAA,GAAAkU,KACAC,EAAA,cACAC,EAAAN,EAAAO,aAAAL,EAAAM,MAAAH,GACAI,EAAAT,EAAAO,aAAAL,EAAAzF,KAAA4F,GACAK,EAAAV,EAAAO,aAAAL,EAAAS,IAAAN,GACAO,EAAAZ,EAAAO,aAAAN,EAAAY,KAAAR,GACAS,EAAAhB,EAAAO,GACAU,EAAAD,EAAA,YACApN,EAAAqM,EAAAzS,SACAwB,mBAAA,WACA,MAAArC,GAAAkB,KAAAQ,YACA6S,YAAAZ,EACAjG,OAAAiG,EACAa,UAAAb,EACAc,WAAA,EACA7F,UAAA,OACAtB,KAAA4F,EACA1F,YAAA,EACAD,kBAAA,KAGA9H,MAAA,WACAvE,KAAAQ,WACAR,KAAAwT,wBAEAA,qBAAA,WACA,IAAAxT,KAAAC,OAAA,aAGA,GAAAwE,GAAAzE,KAAAyE,WAAA0F,IAAA,uBACAsJ,KACApH,EAAArM,KAAAC,OAAA,mBACAwT,GAAAd,GAAA3S,KAAA0T,kBAAAnU,KAAAS,MACAyT,EAAAX,GAAA9S,KAAA2T,aAAApU,KAAAS,MACAyT,EAAAV,GAAA/S,KAAA4T,gBAAArU,KAAAS,MACAqM,IACAoH,EAAAR,GAAAjT,KAAA6T,oBAAAtU,KAAAS,MACAyE,EAAAzE,KAAA8T,YAEAnV,EAAAkE,GAAA4B,EAAAgP,GACA/F,UAAA1N,KAAAC,OAAA,aACAsT,UAAAvT,KAAAC,OAAA,iBAGA8T,qBAAA,WACApV,EAAAyQ,IAAApP,KAAAyE,WAAA,IAAAiO,GACA/T,EAAAyQ,IAAApP,KAAA8T,WAAA,IAAApB,IAEAsB,MAAA,SAAAC,GACAxO,EAAAqH,KAAA9M,KAAAyE,WAAAwP,IAEAJ,oBAAA,SAAA/T,GACA,IAAAuS,EAAA6B,cAAApU,GAAA,CAGA,GAAAqU,GAAAnU,KAAAoU,eAAA1V,EAAAoB,EAAAuU,gBACA3G,EAAA1N,KAAAC,OAAA,aACAgU,IACA,gBAAAvG,GAAA,SAAAA,IACAuG,EAAA5L,KAAAvI,EAAAwU,MAAAtU,KAAAyE,WAAA5C,QAAA,EAAAsS,EAAA9L,MAEA,aAAAqF,GAAA,SAAAA,IACAuG,EAAApM,IAAA/H,EAAAyU,MAAAvU,KAAAyE,WAAA7C,SAAA,EAAAuS,EAAAtM,KAEA7H,KAAAgU,MAAAC,GACAjU,KAAAwU,WAAA,WACAnL,MAAAvJ,MAGA4T,kBAAA,SAAA5T,GACA,GAAA2E,GAAAzE,KAAAyE,UACA,IAAAA,EAAAgQ,GAAA,4CAEA,YADA3U,EAAA4U,QAAA,EAGA,IAAAC,GAAA3U,KAAA8T,WACAK,EAAAnU,KAAAoU,eAAAO,GACArI,EAAAtM,KAAA4U,kBACAC,EAAAF,EAAAG,aACAC,EAAAJ,EAAAnH,cACAwH,EAAAvQ,EAAA5C,QACAoT,EAAAxQ,EAAA7C,QACA5B,MAAAkV,sBAAA,EACA,IAAAC,IACA9M,KAAA5D,EAAA2Q,SAAA/M,KAAA8L,EAAA9L,KACAR,IAAApD,EAAA2Q,SAAAvN,IAAAsM,EAAAtM,IAEA7H,MAAAqV,eAAA5P,EAAAiC,OAAAjD,GACA3E,EAAAwV,cAAAH,EAAA9M,KAAAiE,EAAAjE,KACAvI,EAAAyV,eAAAV,EAAAM,EAAA9M,KAAA2M,EAAA1I,EAAAkJ,MACA1V,EAAA2V,aAAAN,EAAAtN,IAAAyE,EAAAzE,IACA/H,EAAA4V,gBAAAX,EAAAI,EAAAtN,IAAAoN,EAAA3I,EAAAqJ,OACA3V,KAAAwU,WAAA,gBACAnL,MAAAvJ,KAGAsU,eAAA,SAAAO,GACA,GAAAS,GAAAT,GAAAnC,EAAA4C,OAAAT,EACA,OAAAS,KACA/M,KAAA,EACAR,IAAA,IAGAqN,qBAAA,SAAAnS,GACA/C,KAAAyE,WAAAa,YAAA8N,EAAArQ,IAEA6R,gBAAA,WACA,GAAAtI,GAAAtM,KAAAC,OAAA,cAIA,OAHAlB,GAAAuN,KACAA,IAAAqE,KAAA3Q,OAEAkS,EAAA0D,aAAAtJ,IAEAwH,SAAA,WACA,GAAA1H,GAAApM,KAAAC,OAAA,OAIA,OAHAlB,GAAAqN,KACAA,IAAAuE,KAAA3Q,OAEAtB,EAAA0N,IAEAuH,aAAA,SAAA7T,GACA,GAAAsV,GAAAtV,EAAAsV,OACAS,EAAA7V,KAAAqV,cACArV,MAAAgU,OACA3L,KAAAwN,EAAAxN,KAAA+M,EAAAU,EACAjO,IAAAgO,EAAAhO,IAAAuN,EAAAW,IAEA/V,KAAAwU,WAAA,WACAnL,MAAAvJ,KAGA8T,gBAAA,SAAA9T,GACAE,KAAAkV,sBAAA,GACAlV,KAAAwU,WAAA,cACAnL,MAAAvJ,KAGA0U,WAAA,SAAAnP,GACA,MAAArF,MAAA,IAAAqF,EAAA,WAAArF,KAAAoJ,sBAAA/D,IAEAsE,QAAA,WACA3J,KAAAQ,WACAR,KAAAyE,WAAArC,SAAA+Q,IAEA/N,eAAA,SAAA7B,GACA,GAAA8B,GAAA9B,EAAA8B,IACA,QAAAA,GACA,kBACA,aACA,gBACArF,KAAA,IAAAqF,EAAA,UAAArF,KAAAoJ,sBAAA/D,EACA,MACA,wBACA,gBACA,eACArF,KAAA+T,uBACA/T,KAAAwT,sBACA,MACA,mBACA,WACA,KACA,SACAxT,KAAAQ,SAAA+C,KAGAyS,SAAA,WACAhW,KAAAQ,WACAR,KAAA+T,yBAGA/U,GAAA0T,EAAA3M,GACA1H,EAAAC,QAAAyH,GJw/BMkQ,IACA,SAAU5X,EAAQC,EAASC,GAEjC,YK5qCA2X,QAAAC,eAAA7X,EAAA,cAA8CyE,OAAA,IAH9C,SAAAqT,GACA,OAAAC,KAAAD,GAAA9X,EAAAgY,eAAAD,KAAA/X,EAAA+X,GAAAD,EAAAC,KAIA9X,EAAA,KACA,IAAAgY,GAAAhY,EAAA,IACAD,GAAAE,QAAA+X,EAAA/X,SLmsCMgY,IACA,SAAUnY,EAAQC,EAASC,GAEjC,YMltCA,IAAAG,GAAAH,EAAA,GACAkY,EAAAlY,EAAA,KACAI,EAAAJ,EAAA,GACAmY,EAAAnY,EAAA,IACAS,EAAAT,EAAA,IACAoY,EAAApY,EAAA,GACAqY,EAAArY,EAAA,IACAsY,EAAAtY,EAAA,IAAAsY,QACAC,EAAAvY,EAAA,GAAAuY,KACAC,EAAAxY,EAAA,GAAAwY,UACAjY,EAAAP,EAAA,GAAAO,OACAkY,EAAAzY,EAAA,IAAAyY,iBACAC,EAAA1Y,EAAA,IACAiU,EAAAjU,EAAA,KACA2Y,EAAA3Y,EAAA,KAAA2Y,oBACAxR,EAAAnH,EAAA,IACA4Y,EAAA5Y,EAAA,IACA8T,EAAA9T,EAAA,GACAuH,EAAAvH,EAAA,KACAyH,EAAAzH,EAAA,IACA6Y,EAAA7Y,EAAA,KACA8Y,EAAA9Y,EAAA,KAUAU,EAAA6G,EAAAnG,SACAC,eAAA,WACA,GAAA0X,GAAA,SAAAxX,GACA,QAAAE,KAAAC,OAAA,YACAH,EAAAI,kBACA,GAIA,OAAApB,MAAwBkB,KAAAQ,YACxBC,IAAA,SAAAX,GACA,GAAAE,KAAAC,OAAA,WAGA,iBAAAD,KAAAC,OAAA,kBAEA,WADAD,MAAAK,OAGA,IAAAkX,GAAAzX,EAAAuG,SAAArG,KAAAwX,uBAAAxX,KAAAyX,uBACAF,IAAA5Y,EAAA+Y,QAAAH,EAAA,SACAzX,EAAAI,mBAEAyX,OAAA,SAAA7X,GACAE,KAAAC,OAAA,WACAH,EAAAI,iBAEAF,KAAAK,SAEAY,QAAA,SAAAnB,GAGA,MAFAA,GAAAI,iBACAJ,EAAAC,mBACAD,EAAAM,SACAJ,KAAAK,SACA,IAIAa,UAAA,SAAApB,GAGA,MAFAA,GAAAI,iBACAJ,EAAAC,mBACAD,EAAAM,SACAJ,KAAAO,qBACA,IAIAM,MAAA,SAAAf,GAKA,MAJAE,MAAAC,OAAA,YACAH,EAAAI,iBACAF,KAAAmF,yBAAArF,KAEA,GAEA8X,KAAAN,EACAtE,IAAAsE,KAGAnW,mBAAA,WACA,MAAArC,GAAAkB,KAAAQ,YACAuC,MAAA,KACA8U,SAAA,KACAC,SAAA,KACAC,QAAA,EACAC,mBAAA,EACA3W,eAAA,YACA4W,gBAAA,EACAC,oBAAA,EACAC,uBAAA,iBACA5W,cAAA,KACA6W,gBAAA,KACAC,kBAAA,EACAC,oBAAA,EACAC,cAAAvY,KAAAwY,2BACAC,mBAAA,KACAC,gBAAAhT,EAAAoJ,OAAA,MACA6J,iBAAAjT,EAAAoJ,OAAA,UACApN,gBAAA,UACAkX,gBAAA,KAGAJ,yBAAA,WACA,GAAAvE,GAAAiD,EAAAlX,KAAAC,OAAA,cACA,QACAmV,QACAjO,EAAA,EACAH,GAAA,GAEA6R,GAAA5E,EAAA,OACA6E,GAAA7E,EAAA,UACA8E,UAAA,cAGArQ,qBAAA,WACA,MAAA1I,MAAAQ,WAAAmI,SACAC,OAAA,SAAAoQ,GACA,GAAAC,GAAA,YAAAD,EAAAE,SACAC,EAAA,QAAAH,EAAAE,UAAAF,EAAAI,SAAA,KAAAJ,EAAAI,QAAA,EACA,OAAAH,IAAAE,GAEAnQ,SACAuP,eACAnD,QACApO,EAAA,SAMAqS,cAAA,WACA,MAAArZ,MAAAyE,WAAApC,KAAA,qCAEAkC,MAAA,WACAvE,KAAAQ,WACAR,KAAAsZ,yBACAtZ,KAAAuZ,+BAEAD,uBAAA,WACAtZ,KAAAwZ,YAAAxZ,KAAAoJ,sBAAA,YACAqQ,mBAAA,yBAEAzZ,KAAA0Z,aAAA1Z,KAAAoJ,sBAAA,YACAqQ,mBAAA,0BAGAF,4BAAA,WACAvZ,KAAA2Z,wBAAA3Z,KAAAoJ,sBAAA,sBACAqQ,mBAAA,uCAGAjV,YAAA,WACAxE,KAAAQ,WACAR,KAAAyE,WAAArC,SA5IA,qBA6IApC,KAAAyP,QAAA,oBAEA9F,QAAA,WACA3J,KAAAQ,WACAR,KAAA4Z,qBACA5Z,KAAA6Z,sBAEAC,mBAAA,WACA9Z,KAAAC,OAAA,mBACAD,KAAA+Z,gBAGArV,aAAA,WACA1E,KAAAQ,WACAR,KAAAyE,WAAAG,UAAAlG,EAAA,SAAA0D,SA1JA,oCA2JApC,KAAAga,YAAAha,KAAAyE,WAAAM,WAAAC,GAAA,GACAhF,KAAAyP,SACAwK,SAAA,OACAC,aAAA,UAGAC,mBAAA,WACA,OAAAna,KAAAC,OAAA,sBAAAD,KAAAQ,YAEA4Z,iBAAA,WACApa,KAAAQ,WACAR,KAAAC,OAAA,kBACAtB,EAAAyQ,IAAApP,KAAA4D,SAAA,oCAGAyW,aAAA,WACA,GAAA9Y,GAAAvB,KAAAsa,qBAAA,gBACA/Y,IAAAvB,KAAAC,OAAA,kBAGAD,KAAAua,sBAAAhZ,EAAAvB,KAAAwa,qBAEAD,sBAAA,SAAAhZ,EAAAkZ,GACA,GAAAC,GAAA1a,KACA2a,EAAA9D,EAAA7W,KAAA4D,SACA5D,MAAA4a,YAAAD,EACA,IAAAE,GAAA7a,KAAAga,WACAa,GAAAC,QACA9a,KAAA+a,iBAAA,KACA/a,KAAAgb,cAAA,KACAzZ,EAAA0Z,QACAC,MAAAT,EACAU,UAAAvE,EAAAI,iBAAA6D,GACAO,WAAA,WACA,IAAAV,EAAA9W,SAAAkH,OACA,KAAAmM,GAAAoE,MAAA,QAEAX,GAAAY,iBACAZ,EAAAa,2BACAb,EAAAc,oBACAb,GAAAhc,EAAA+Y,QAAAgD,EAAA9W,SAAA,aAIAgX,YAAA,SAAAD,GACA3a,KAAAoa,mBACAO,GAAAhc,EAAA+Y,QAAA1X,KAAA4D,SAAA,aAEA4W,iBAAA,WACA,MAAAxa,MAAAC,OAAA,UAEAwb,mBAAA,WACAzb,KAAAqa,eACAra,KAAAQ,WACAR,KAAA0b,yBAEAA,sBAAA,WACA1b,KAAA+a,mBACA/a,KAAA+a,iBAAA9P,SACAjL,KAAA+a,iBAAA,KAEA,IAAAzC,GAAAtY,KAAAC,OAAA,qBACAD,MAAAyE,WAAAa,YAnNA,mCAmNAgT,GACAA,IAGAtY,KAAA+a,iBAAA/a,KAAA2b,wBACA3b,KAAA4b,sCAEAA,kCAAA,WACA5b,KAAAC,OAAA,wBAAAD,KAAAC,OAAA,qBACAD,KAAA+a,iBAAAc,SAAA,mBAAA7b,KAAA8b,aAAAvc,KAAAS,QAGA+b,eAAA,WACA/b,KAAAQ,WACAR,KAAAgc,kBAAAC,eAAA,GAAA7E,GAAA,SAAApO,GACA,GAAAkT,GAAAxd,EAAA,SAAA0D,SAtOA,yBAuOA1D,GAAAsK,EAAAmS,WAAA5P,OAAA2Q,IACSlc,OAET2b,sBAAA,WACA,GAAAQ,GAAAzd,EAAA,SAAA0D,SA5OA,4BA4OAga,UAAApc,KAAAqc,oBAaA,OAZArc,MAAA2C,iBAAAwZ,EAAAhF,GACAhU,mBAAA,EACAmZ,mBAAA,EACApE,oBAAA,EACAqE,SAAAvc,KAAAC,OAAA,YACAuc,cAAA,EACAC,SAAAzc,KAAAsa,qBAAA,4BAEA6B,EAAAO,YAAA,aACA/d,EAAAkE,GAAAsZ,EAAA,qBAAArc,GACAA,EAAAI,mBAEAic,GAEAvC,mBAAA,WACA,GAAA1W,GAAAlD,KACA2c,EAAAzZ,EAAAmW,gBACAuD,EAAAvK,EAAAO,aAAA5M,EAAAX,KAAAnC,EAAA2Z,MACAxE,EAAAnV,EAAAjD,OAAA,mBACAtB,GAAAyQ,IAAAuN,EAAAC,GACAje,EAAAkE,GAAA8Z,EAAAC,EAAA1Z,EAAA4Z,sBAAAzE,IACAnV,EAAAuB,WAAAa,YA5PA,oCA4PA+S,GACAA,IACAnV,EAAA6Z,wBAAA7Z,EAAA8Z,cAAA9Z,EAAA4Y,aAAAvc,KAAA2D,MAGA4Z,sBAAA,SAAAzE,GACA,GAAAnV,GAAAlD,IACA,OAAAqY,GAAA,SAAAvY,GACAoD,EAAA+Z,mBAAAnd,IACS,SAAAA,GACToD,EAAAga,gBAGApB,aAAA,WACA9b,KAAAmd,oBAEAF,mBAAA,SAAAnd,GACAE,KAAA+c,yBACA1T,MAAAvJ,KAGAsd,4BAAA,WACA,MAAApd,MAAA4D,UAEAsZ,YAAA,WACA,OAAAld,KAAAC,OAAA,cAGAD,KAAAC,OAAA,uBAAA4W,EAAA7W,KAAA4D,WACAjF,EAAA+Y,QAAA1X,KAAA4D,SAAA,UAEA,IAEAuZ,iBAAA,SAAAE,GACArd,KAAAkd,gBAGAld,KAAAC,OAAA,cACAod,EAAAC,UAAAxS,OAAAuS,GAAArd,KAAAC,OAAA,UACAD,KAAAC,OAAA,SAAAod,MAGAxD,mBAAA,WACA,GAAA9B,GAAA/X,KAAAC,OAAA,SACA8X,IACA/X,KAAA+Z,eAEA/Z,KAAAyE,WAAAa,YA7SA,2BA6SAyS,GACA/X,KAAAud,gBAAA,UAAAxF,GACA/X,KAAAyP,SACA+N,SAAAzF,EACA0F,MAAA1F,OAAA,KAAA/X,KAAA0d,mBAGA3D,aAAA,WACA/Z,KAAA2d,UAGA3d,KAAA2d,QAAAjf,EAAA,SAAA0D,SA1TA,6BA0TAA,SAAApC,KAAAC,OAAA,0BAAAwC,SAAAzC,KAAAyE,YACAzE,KAAA4d,eACA5d,KAAA6d,wBAEAD,aAAA,WACA5d,KAAAkC,OAAAlC,KAAA2C,iBAAA3C,KAAA2d,QAAAtG,EAAArX,KAAA2B,gBACA3B,KAAAkC,OAAAW,IACAib,QAAA9d,KAAA+d,qBAAAxe,KAAAS,MACAge,MAAAhe,KAAAie,mBAAA1e,KAAAS,MACAke,OAAAle,KAAAme,oBAAA5e,KAAAS,MACAoe,OAAApe,KAAAqe,oBAAA9e,KAAAS,QAEAA,KAAAkC,OAAAjC,OAAA,iBAAAD,KAAA8B,qBAAAvC,KAAAS,OACAA,KAAA8B,uBACA9B,KAAA0d,gBAAA,SAAAhH,GACA1W,KAAAyP,QAAA,KAAAzP,KAAA0d,gBAAA1d,KAAAkC,OAAAQ,aAEAZ,qBAAA6U,EAAAlE,KACA9Q,aAAA,WACA,OACA2c,cAAAte,KAAAue,2BACAtK,SAAAnV,EAAAkB,KAAAC,OAAA,kBAA4Due,GAAAxe,KAAAyE,aAE5Dga,UAAAze,KAAAC,OAAA,kBACA4B,MAAA,OACAD,OAAA,OACA8c,SAAA,EACAC,qBAAA,EACAC,oBAAA5e,KAAA6e,6BAAAtf,KAAAS,MACA8e,WACAC,MACAC,KAAA,OACAC,SAAA,EACAC,KAAA,EACAC,GAAA,GAEAC,MACAJ,KAAA,OACAC,SAAA,IACAC,KAAA,EACAC,GAAA,IAGAlH,gBAAA,EACA9U,mBAAA,EACAkc,iBAAA,EACAC,aAAAtf,KAAAuf,wBACAC,aAAAxf,KAAAyf,wBAAAlgB,KAAAS,MACA0f,YAAA,IAGAnB,yBAAA,WACA,GAAAve,KAAAC,OAAA,sBAGA,gBAAAH,GACAE,KAAA2Z,yBACAgG,MAAA7f,EAAA8f,aAESrgB,KAAAS,OAETyf,wBAAA,SAAA3f,GACAA,EAAAmU,UAAAjU,KAAAkC,OAAAI,iBAAAgD,YAvXA,oCAuXAxF,EAAAmU,SAAAjN,EAAA6Y,OAEA9B,qBAAApH,EAAAlE,KACA0L,oBAAA,WACAne,KAAAC,OAAA,cAEAge,mBAAA,WACAje,KAAAwZ,cACAxZ,KAAA8f,qBACA9f,KAAA8f,oBAAAC,UAAA,oBAAA/f,KAAAggB,kCAGA3B,oBAAA,WACAre,KAAA0Z,eACA1Z,KAAA8f,qBACA9f,KAAA8f,oBAAAC,UAAA,oBAAA/f,KAAAggB,kCAGAA,8BAAA,WACA,GAAAC,GAAA,OACA,IAAAjgB,KAAAkC,QAAAlC,KAAAkC,OAAAjC,OAAA,YACA,GAAAigB,GAAA1N,EAAA2N,MAAAngB,KAAAyE,YAAAoD,IACAuY,EAAA5N,EAAA2N,MAAAngB,KAAAkC,OAAAQ,YAAAmF,GACAoY,GAAAC,EAAAlgB,KAAAC,OAAA,iBAAAmV,OAAApO,EAAAoZ,EAAA,gBAEA,MAAApgB,MAAAQ,SAAAyf,IAEApC,oBAAA,WACA,GAAAzF,GAAApY,KAAAsa,qBAAA,kBACA,IAAAlC,GAAApY,KAAAC,OAAA,oBAGA,GAAAogB,GAAArgB,KAAAkC,OAAAQ,WACA4d,GACAvd,MAAA/C,KAAAwa,mBACAoF,UAAA5f,KAEAqgB,GAAAvF,QACA1C,EAAA6C,QACAE,UAAAvE,EAAAI,iBAAAqJ,GACAnF,MAAAoF,MAGAzB,6BAAA,SAAA/e,GACA,GAAAygB,GAAA7hB,EAAAoB,EAAA0gB,QACAC,IAAAF,EAAAG,QAAA1gB,KAAAyE,YAAAqG,OACA6V,IAAAJ,EAAAG,QAAA1gB,KAAA+a,kBAAAjQ,MAEA,QADA2V,IAAAE,GAGAC,OAAA,iBACA5gB,MAAA+a,uBACA/a,MAAA+c,wBACA/c,KAAA2d,UACA3d,KAAA2d,QAAA1S,eACAjL,MAAA2d,cACA3d,MAAAkC,QAEAlC,KAAAQ,YAEA+c,gBAAA,SAAAsD,EAAA9d,GACA/C,KAAA8gB,iBAAA,SAAAxD,YAEA/c,kBAAA,WACAP,KAAAC,OAAA,aACAD,KAAAmd,kBAAA,IAGAoC,sBAAA,WACA,qBAAAvf,KAAAC,OAAA,kBAAAD,KAAA+gB,+BAEAtJ,sBAAA,WACA,MAAAzX,MAAAkC,OAAA8e,WAAA3e,KAAA,6BAEAmV,qBAAA,WACA,MAAAxX,MAAAkC,OAAA8e,WAAA3e,KAAA,+BAEA4e,wBAAA,SAAAnhB,GACA,GAAA2E,GAAA/F,EAAAoB,EAAAuU,gBACAvU,EAAAuG,UAAA5B,EAAAgQ,GAAAzU,KAAAyX,2BAAA3X,EAAAuG,UAAA5B,EAAAgQ,GAAAzU,KAAAwX,2BACA7Y,EAAA+Y,QAAA1X,KAAA4D,SAAA,SACA9D,EAAAI,mBAGAghB,wBAAA,WACAviB,EAAA+Y,QAAA1X,KAAA4D,SAAA,SACA5D,KAAAK,SAEA8gB,+BAAA,SAAArhB,GACAA,EAAA8f,UAAApQ,mBAAA,MAAAxP,KAAAihB,wBAAA1hB,KAAAS,OACAF,EAAA8f,UAAApQ,mBAAA,SAAAxP,KAAAkhB,wBAAA3hB,KAAAS,QAEA+gB,yBAAA,WACA,GAAAK,KACAC,SAAA,OACArY,SACAsY,QAAAthB,KAAAkE,oBAAA3E,KAAAS,MACAmP,KAAAnP,KAAAC,OAAA,mBACAqe,cAAAte,KAAAmhB,+BAAA5hB,KAAAS,SAGAqhB,SAAA,SACArY,SACAsY,QAAAthB,KAAAmE,qBAAA5E,KAAAS,MACAmP,KAAAnP,KAAAC,OAAA,oBACAqe,cAAAte,KAAAmhB,+BAAA5hB,KAAAS,QAGA,OAAAA,MAAAuhB,sBAAAH,IAEAG,sBAAA,SAAAH,GACA,GAAA1f,GAAA1B,KAAAC,OAAA,mBACAuhB,EAAAJ,CACA,gBAAA1f,EAAA,CACA,GAAAuS,GAAA0C,EAAA8K,UAAA/f,EACAoV,GAAA0K,EAAA,SAAAE,EAAAC,GACA7iB,EAAA6iB,GACAC,QAAA3N,EAAA,GACA4N,SAAA5N,EAAA,OAIA,MAAAuN,IAEAtd,oBAAA,WACAlE,KAAAK,QACAL,KAAAC,OAAA,sBAAAD,KAAAY,SAEAuD,qBAAA,WACAnE,KAAAK,QACAL,KAAAC,OAAA,sBAAAD,KAAAY,SAEAkhB,qBAAA,WACA9hB,KAAAQ,WACAR,KAAA+a,kBAAA/a,KAAA+a,iBAAAc,SAAA,oBAAA7b,KAAAC,OAAA,cAEAmF,eAAA,SAAA7B,GACA,OAAAA,EAAA8B,MACA,aACArF,KAAA6Z,oBACA,MACA,gBACA,eACA7Z,KAAAsZ,wBACA,MACA,0BACAtZ,KAAAuZ,6BACA,MACA,qBACAxC,EAAAxT,EAAAR,OACA/C,KAAAyb,qBAEAzb,KAAA+hB,aAEA,MACA,0BACA,sBACA,wBACA,uBACA/hB,KAAA+hB,aACA,MACA,8BACA/hB,KAAA0b,uBACA,MACA,qBACA,qBACA,KACA,sBACA,sBACA,uBACA,sBACA1b,KAAAud,gBAAA,eAAAvd,KAAAuf,wBACA,MACA,sBACAvf,KAAAud,gBAAA,YAAAha,EAAAR,MACA,MACA,SACA/C,KAAAQ,SAAA+C,KAGAye,KAAA,WACAhiB,KAAAC,OAAA,cAEAI,MAAA,WACAL,KAAAC,OAAA,cAEAgiB,MAAA,WACA,MAAAjL,GAAAhX,KAAA4D,WAEAse,QAAA,WACA,MAAAliB,MAAAkC,OAAAlC,KAAAkC,OAAAggB,UAAA,QAECC,QAAA1L,EACDzX,GAAA,mBAAAC,GACAZ,EAAAC,QAAAW,EACAZ,EAAAC,QAAAE,QAAAH,EAAAC,SNiuCM8jB,IACA,SAAU/jB,EAAQC,EAASC,GAEjC,YOzzDAF,GAAAC,QAAAC,EAAA,KACAF,EAAAC,QAAAE,QAAAH,EAAAC,SPw0DM+jB,IACA,SAAUhkB,EAAQC,EAASC,GAEjC,YQ50DAF,GAAAC,SACAgkB,oBAAA,SAAAC,GACA,GAAAviB,KAAAwiB,SAAAC,8BAAA,CACAziB,KAAA0iB,sBAAA1iB,KAAA0iB,yBACA,IAAAC,GAAAC,WAAA,WACAL,EAAA5R,KAAA3Q,MACA6iB,aAAAF,IACapjB,KAAAS,MACbA,MAAA0iB,sBAAArX,KAAAsX,OAEAJ,GAAA5R,KAAA3Q,OAGA8iB,0BAAA,WAEA,OADAC,GAAA/iB,KAAA0iB,0BACAvX,EAAA,EAAuBA,EAAA4X,EAAAjY,OAAmBK,IAC1C0X,aAAAE,EAAA5X,UAEAnL,MAAA0iB,yBR61DMM,IACA,SAAU3kB,EAAQC,EAASC,GAEjC,YSl3DA,IAAAS,GAAAT,EAAA,IACA0kB,EAAA1kB,EAAA,IACAS,GAAA,cAAAikB,GACA5kB,EAAAC,QAAA2kB,GTi4DMC,IACA,SAAU7kB,EAAQC,EAASC,GAEjC,YUv4DA,IAAAI,GAAAJ,EAAA,GACAO,EAAAP,EAAA,GAAAO,OACAqkB,EAAA5kB,EAAA,GAAA4kB,UACAC,EAAA7kB,EAAA,IACA8kB,EAAA9kB,EAAA,IAAA8kB,aACAC,EAAA/kB,EAAA,IAAA+kB,QACAC,EAAAhlB,EAAA,GAAAglB,aACAC,EAAAjlB,EAAA,KACAklB,EAAAllB,EAAA,KACAmlB,EAAAnlB,EAAA,KAAAolB,UACAC,EAAArlB,EAAA,KACA8T,EAAA9T,EAAA,GACAslB,EAAAtlB,EAAA,GAOAulB,EAAA,SAAA/gB,EAAAghB,GACA,gBAAAhhB,EAAAghB,EAAAhhB,GAEAkgB,EAAAW,EAAAjkB,SACAwB,mBAAA,WACA,MAAArC,GAAAkB,KAAAQ,YACAwjB,iBAAA,EACAlV,OAAA,QAGAmV,aAAA,SAAAC,GACA,iBAAAA,GAAA,QAAAA,GAEAtkB,eAAA,WACA,IAAAI,KAAAmkB,mBACA,MAAAnkB,MAAAQ,UAEA,IAAA0C,GAAAlD,IACA,OAAAlB,GAAAkB,KAAAQ,YACA4jB,MAAAlhB,EAAAmhB,YAAA9kB,KAAA2D,GACAohB,IAAAphB,EAAAqhB,eAAAhlB,KAAA2D,GACAshB,UAAAthB,EAAAqhB,eAAAhlB,KAAA2D,GACAnC,UAAAmC,EAAAuhB,cAAAllB,KAAA2D,GA1BA,GA2BAlC,WAAAkC,EAAAuhB,cAAAllB,KAAA2D,EA5BA,GA6BA0U,KAAA1U,EAAAwhB,qBAAAnlB,KAAA2D,EA7BA,GA8BArC,MAAAqC,EAAAyhB,sBAAAplB,KAAA2D,GACA8P,IAAA9P,EAAAwhB,qBAAAnlB,KAAA2D,GA9BA,MAiCA0hB,gBAAA,SAAA9kB,GACAE,KAAAQ,SAAAV,EACA,IAAA+kB,GAAA7kB,KAAA8kB,QACAD,GAAAhS,QAAAgS,EAAA7R,MAGAoQ,EAAA2B,MACAlC,aAAA7iB,KAAAglB,iBACAhlB,KAAAglB,gBAAApC,WAAA5iB,KAAA0kB,qBAAAnlB,KAAAS,MAzCA,EAyCAF,KAEAE,KAAA0kB,sBA3CA,EA2CA5kB,KAGAmlB,iBAAA,SAAAnlB,GACAE,KAAAklB,iBAAA,EACAllB,KAAAmkB,oBACAnkB,KAAA2kB,wBAEA3kB,KAAAQ,SAAAV,GACAE,KAAAklB,iBAAA,GAEAP,sBAAA,WACA3kB,KAAAmlB,aAAAnlB,KAAAolB,UAAAplB,KAAAqlB,eAAArlB,KAAA8kB,UACA9kB,KAAAslB,qBACAtlB,KAAAulB,wBACAvlB,KAAAwlB,kBACAxlB,KAAAylB,UAAA,EACA9mB,EAAA+Y,QAAA1X,KAAA4D,SAAA,YAGA4hB,cAAA,WACA,MAAAxlB,MAAAylB,UAAAzlB,KAAAmlB,eAAAnlB,KAAAC,OAAA,UAEAwkB,cAAA,SAAAte,EAAArG,GACA,GAAAE,KAAAmkB,mBAAA,CAGA,GAAAhV,GAAAnP,KAAAqlB,eACAvW,EAAA9O,KAAA0lB,oBACAC,EAAAlC,EAAAmC,mBAAA5lB,KAAA8kB,SAAA3e,EACAsd,GAAAoC,oBAAAF,EAAAxW,EAAAL,KACA6W,EA3EA,IA2EAxf,EAAAwf,EAAA3S,IAAA2S,EAAA9S,MACA/S,EAAAI,iBACAF,KAAA8kB,OAAArB,EAAAqC,qBAAAH,EAAAxW,EAAAL,OAGA4V,qBAAA,SAAAhX,EAAA5N,GACA,GAAAE,KAAAmkB,qBAAArkB,EAAAuG,SAAA,CAGA,GAAA0f,GAAAtC,EAAAuC,mBAAAhmB,KAAAqlB,eAAArlB,KAAA0lB,qBACAO,EAAAxC,EAAAmC,mBArFA,IAqFAlY,EAAAqY,EAAAlT,MAAAkT,EAAA/S,IAAA,EACAhT,MAAA8kB,OAAAmB,GACAnmB,KAAAI,mBAEAgmB,iBAAA,SAAA/W,EAAA0V,GACA,GAAAsB,GAAA3C,EAAA4C,sBACAC,EAAAlX,EAAAmX,OAAAzB,EAAA7R,OAAAmT,EACAI,EAAA,MAAApX,EAAAmX,OAAAzB,EAAA7R,KACAwT,EAAAxmB,KAAAymB,WAAAN,GAAAE,EACAK,EAAA,MAAA1mB,KAAAymB,UAAAF,CACA,OAAAC,IAAAE,GAEArB,aAAA,WACA,MAAA7B,GAAAmD,cAAA3mB,KAAA4D,SAAAC,OAAA,IAEA+iB,iBAAA,SAAA9mB,GAEA,GADAE,KAAAymB,SAAAjD,EAAAmD,cAAA7mB,EAAA+mB,cAAA3C,KAAA,IACAlkB,KAAA8mB,iBAAAhnB,EAAA+mB,eACA,MAAA7mB,MAAAQ,SAAAV,EAEA,IAAAqP,GAAAnP,KAAAqlB,eACAR,EAAA7kB,KAAA8kB,SACAiC,EAzGA,MAyGA/mB,KAAAymB,SAAA,GAAAzmB,KAAAymB,SACA9iB,EAAA3D,KAAAolB,UAAAjW,EAAA0V,EAAAkC,EAWA,YAVA,KAAApjB,GA3GA,MA4GA3D,KAAAymB,UACA3mB,EAAA+mB,cAAA3mB,iBAEAF,KAAAkmB,iBAAA/W,EAAA0V,IACA7kB,KAAAgnB,WAAA,IAGAhnB,KAAAmlB,aAAAxhB,EAEA3D,KAAAQ,SAAAV,IAEAmnB,iBAAA,SAAAnnB,GACAE,KAAAmkB,oBACAnkB,KAAAQ,SAAAV,IAGAykB,eAAA,SAAAzkB,GACA,GAAA+kB,GAAA7kB,KAAA8kB,SACA3V,EAAAnP,KAAAqlB,eACAxS,EAAAgS,EAAAhS,MACAG,EAAA6R,EAAA7R,GACAhT,MAAAymB,SAAA3mB,EAAAokB,IACAW,EAAAhS,QAAAgS,EAAA7R,MACAhT,KAAAikB,aAAAnkB,EAAAokB,KAAAlR,IAAAH,IAEA,IAAAqU,GAAA/X,EAAAgY,MAAAtU,EAAAG,EACA,IAAAhT,KAAAonB,QAAAF,GAOA,MANAlnB,MAAAgnB,WAAAhnB,KAAAikB,aAAAnkB,EAAAokB,KAAA,OACAlkB,KAAAmlB,aAAA,KAAAnlB,KAAAmlB,gBAAA,OACAnlB,KAAAqkB,YAAAvkB,GACAE,KAAAulB,6BAEAzlB,GAAAI,gBAGA,IAAAimB,GAAA3C,EAAA4C,qBACA,IAAAc,IAAAf,EAAA,CACA,GAAAkB,GAAAlY,EAAAmY,QAAAnB,EAKA,aAJAnmB,KAAAunB,gBAAAF,EAAA,KACArnB,KAAAgnB,WAAAhnB,KAAAikB,aAAAnkB,EAAAokB,KAAA,MACApkB,EAAAI,mBAIA,GAAA8S,EAAAH,EAAA1D,EAAArE,OAAA,CAMA,GALA9K,KAAAwnB,qBAAArY,GACA0D,QACAG,OACiB,IACjByU,OAAA,YACAznB,KAAA0nB,gBAAA,GAEA,YADA1nB,KAAAmlB,aAAAnlB,KAAAmlB,aAAA,KAAAnlB,KAAAmlB,gBAAA,UAIA,GAAAwC,GAAA3nB,KAAAolB,UAAAjW,GACA0D,QACAG,OACS,QACT,KAAA2U,EACA7nB,EAAAI,iBAEAF,KAAAmlB,aAAAwC,GAGAC,iBAAA,WAGA,WAFA5nB,KAAA0lB,oBACA/V,QAAA,eACA2X,QAAA,MAEAO,OAAA,SAAA1Y,EAAAL,GACA,GAAAgZ,GAAA9nB,KAAAC,OAAA,SAGA,QAFA4jB,EAAA9kB,WAAA+oB,EAAAC,WACAD,EAAAE,OAAAxE,EAAAyE,OACA9Y,EAAAL,IAEAoZ,QAAA,SAAAnlB,EAAA+L,GACA,GAAAgZ,GAAA9nB,KAAAC,OAAA,SAGA,QAFA4jB,EAAA9kB,WAAA+oB,EAAAC,WACAD,EAAAC,UAAAvE,EAAA1U,QACA/L,EAAA+L,IAEA4W,kBAAA,WACA,GAAA5W,GAAA9O,KAAAC,OAAA,SAEA,OADA,iBAAA6O,OAAAwY,QAAA,SAAAxY,EAAAwY,QAAA,SAEAxY,EAEA4U,EAAA,SAAA3gB,GACA,MAAA/C,MAAAkoB,QAAAnlB,EAAA+L,IACavP,KAAAS,QAGbmoB,kBAAA,SAAAhZ,GACA,GAAAL,GAAA9O,KAAA0lB,oBACA0C,EAAAtZ,EAAAuZ,MAAA,KACAC,EAAA9E,EAAA+E,QAAApZ,EAAAL,EAEA,OADAsZ,GAAA,GAAAA,EAAA,QAAAA,EAAA,GACAE,EAAA,EAAAF,EAAA,GAAAA,EAAA,IAEAI,aAAA,SAAArZ,EAAAsZ,GACA,GAAA3Z,GAAA9O,KAAAmoB,kBAAAhZ,GACAuZ,EAAAlF,EAAAmF,wBACAC,EAAA9Z,EAAAa,QAAA,cACAkZ,EAAA,GAAAC,QAAA,KAAAvF,GAAAkF,EAAA,GAAAC,GAAAE,GAAA,QACA,OAAAzZ,GAAAQ,QAAAkZ,EAAA,KAEAE,qBAAA,SAAAhmB,EAAAojB,EAAA6C,GACA,GAAAnF,EAAA9M,UAAAhU,GAAA,CACA,GAAAkmB,GAAAlmB,EAAAmmB,WACA7B,EAAA4B,EAAA3B,QAAAnB,EACA,IAAA8C,GAAA5B,GAAA,GACA,GAAA8B,GAAAC,WAAAH,EAAAI,OAAA,EAAAhC,EAAA2B,EAAA,GACA,OAAAM,OAAAH,GAAApmB,EAAAomB,GAGA,MAAApmB,IAEAqiB,UAAA,SAAAjW,EAAAoa,EAAArC,GACA,GAAAsC,GAAAxpB,KAAAwnB,qBAAArY,EAAAoa,EAAArC,GACApY,EAAA9O,KAAA0lB,oBACA+D,EAAAF,EAAA1W,QAAA0W,EAAAvW,IACA0W,EAAA1pB,KAAA6nB,OAAA2B,EAAA1a,GACAka,EAAAhpB,KAAA2pB,oBAAA7a,EAAA0a,GAAAja,IACAqa,EAAAF,IAAA1pB,KAAAmlB,aACAgB,EAAA3C,EAAA4C,sBACAyD,EAAA3C,IAAAf,GAAA,IAAA6C,EACAc,GAAAL,IAAAG,GA3OA,MA2OA1C,IAAAlnB,KAAA+pB,mBAAAP,IAAAxpB,KAAAonB,QAAAF,EACA,KAAA2C,IAAAC,IAGA,KAAAN,IACAE,EAAA,IAEAJ,MAAAI,IAAA,CAGA,GAAA3mB,GAAA,OAAA2mB,EAAA1pB,KAAAmlB,aAAAuE,CAEA,OADAA,GAAA1pB,KAAA+oB,qBAAAhmB,EAAAojB,EAAA6C,GACAhpB,KAAA4nB,mBAAA8B,KAAA,IAAAA,IAEAK,mBAAA,SAAA5a,GACA,IAAAnP,KAAAmkB,mBACA,MAAAnkB,MAAAQ,SAAA2O,EAEA,IAAA0V,GAAA7kB,KAAA8kB,SACAkF,EAAAxG,EAAA4C,sBACA6D,EAAA9a,EAAAmY,QAAA0C,GACAE,EAAAD,EAAA,GAAAA,EAAApF,EAAAhS,MACAsX,EAAAnqB,KAAAwoB,aAAArZ,GAAA,GAAAkZ,MAAA2B,EACA,KAAAE,GAAA,IAAAC,EAAArf,OACA,QAEA,IAAAsf,GAAAD,EAAA,GAAArf,OACAuf,EAAArqB,KAAA2pB,oBAAA3pB,KAAA0lB,oBAAAvW,GACAmb,EAAAhH,EAAA8G,EAAAC,EAAA/a,IAAA+a,EAAA9a,KACAgb,EAAA,MAAAJ,EAAA,GAAA7D,OAAA8D,EAAA,EACA,OAAAE,KAAAC,IAAAH,IAEA1C,gBAAA,SAAA3kB,GACA,GAAAuM,GAAAwU,EAAA9jB,KAAAC,OAAA,aACAsP,EAAAuU,EAAA9jB,KAAAC,OAAA,WACA,OAAAqjB,GAAAvgB,EAAAuM,EAAAC,IAEAib,cAAA,SAAArb,GACA,GAAA8W,GAAAxC,EAAAgH,oBAAAzqB,KAAAqlB,eAAAlW,EAAAnP,KAAA8kB,SAAA9kB,KAAA0lB,qBACA/hB,EAAA6f,EAAAmD,cAAAxX,EACAnP,MAAA0qB,kBAAA/mB,IACA3D,KAAAylB,UAAA,GAEAzlB,KAAA4D,SAAAC,IAAAF,GACA3D,KAAA2qB,+BACA3qB,KAAA0qB,gBAAAvb,EACAnP,KAAAklB,iBACAllB,KAAA8kB,OAAAmB,IAGA9B,iBAAA,WACA,QAAAnkB,KAAAC,OAAA,WAAAD,KAAAC,OAAA,oBAEA2qB,iBAAA,WACA,GAAAC,GAAA,WAAA7qB,KAAAC,OAAA,OACAD,MAAAmkB,oBAAA0G,EACA7qB,KAAA8qB,cAAA,OAEA9qB,KAAAQ,YAGAuqB,QAAA,SAAAC,GACA,uBAAAA,IAAA,IAAAA,EAAAlgB,QAEAkc,WAAA,SAAA5R,GACA,GAAAA,EAAA,CAGA,GAAA6Q,GAAAxC,EAAAmC,mBAAA5lB,KAAA8kB,SAAA1P,GACA6V,EAAAxH,EAAAqC,qBAAAG,EAAAjmB,KAAAqlB,eAAArlB,KAAA0lB,oBACA1lB,MAAA8kB,OAAAmG,KAEAnE,iBAAA,SAAAhnB,GACA,GAAAorB,GAAAprB,EAAAyI,SAAAzI,EAAAuG,UAAAvG,EAAAM,SAAAJ,KAAA+qB,QAAAjrB,EAAAokB,KACAiH,EArTA,MAqTArrB,EAAAokB,GAEA,OADAlkB,MAAAmkB,qBACA+G,IAAAC,GAEAzmB,aAAA,WACA1E,KAAAQ,WACAR,KAAAorB,oBAEAA,iBAAA,WACAprB,KAAAqrB,cACArrB,KAAAsrB,yBACAtrB,KAAAmkB,oBACAnkB,KAAAurB,0BAGAD,uBAAA,WACA3sB,EAAAyQ,IAAApP,KAAA4D,SAAA,uBAEA2nB,uBAAA,WACA,GAAArmB,GAAAlF,KAAA4D,QACAjF,GAAAkE,GAAAqC,EAAAmN,EAAAO,aAvUA,QALA,qBA4UA5S,KAAAwrB,aAAAjsB,KAAAS,OACArB,EAAAkE,GAAAqC,EAAAmN,EAAAO,aAAA,UA7UA,qBA6UA,WACA5S,KAAA8kB,OAAArB,EAAAqC,qBAAA9lB,KAAA8kB,SAAA9kB,KAAAqlB,eAAArlB,KAAA0lB,uBACSnmB,KAAAS,QAETyrB,wBAAA,WACA,IAAAzrB,KAAAmkB,mBACA,MAAAnkB,MAAAQ,YAGA+mB,gBAAA,SAAA9b,EAAA0D,GAEA,OADAA,MAAAnP,KAAAqlB,gBAAA8B,MAAA1b,MACAzL,KAAAonB,QAAAjY,GAAA,IAEAiY,QAAA,SAAA4D,EAAAU,GACA,GAAAC,GAAApI,EAAAC,EAAA4C,uBACAwF,EAAA,SAAAD,EAAA,KAEA,OADA,IAAA7C,QAAA8C,EAAA,KACAC,KAAAb,KAAAU,GAAA1rB,KAAA+qB,QAAAC,KAEAc,YAAA,SAAA3c,GACA,MAAAnP,MAAAmkB,mBAGAnkB,KAAAmlB,aAFAnlB,KAAAQ,SAAA2O,IAIAwa,oBAAA,SAAAxa,GACA,GAAA4c,GAAA/rB,KAAAmoB,kBAAAhZ,GACA6c,GAAAD,EAAA1D,MAAA,aAAA1Y,QAAA,YAGA,QACAL,IAHA0c,EAAArc,QAAA,gBAAA7E,OAIAyE,IAHAyc,EAAAlhB,SAMAuZ,YAAA,SAAAvkB,GACA,GAAAE,KAAAmkB,mBAAA,CAGA,GAAAU,GAAA7kB,KAAA8kB,QACA,IAAAD,EAAAhS,QAAAgS,EAAA7R,IAAA,CACA,GAnXA,MAmXAlT,EAAAokB,KAlXA,aAkXApkB,EAAAokB,IAEA,WADAlkB,MAAAisB,mBAAAnsB,EAAA+kB,GAAA,EAGA7kB,MAAA8kB,OAAArB,EAAAqC,qBAAA,EAAA9lB,KAAAqlB,eAAArlB,KAAA0lB,sBAGA1lB,KAAAisB,mBAAAnsB,EAAA+kB,KAEAoH,mBAAA,SAAAnsB,EAAA+kB,EAAAqH,GACA,GAAAvoB,IAAA,EAAAmgB,EAAA9jB,KAAAmlB,aAAA,KACA,IAAAnlB,KAAA0nB,gBAAA/jB,GAAA,CAEA,GADA3D,KAAAmlB,aAAAxhB,EACAuoB,EAAA,CACA,GAAApd,GAAA9O,KAAA0lB,oBACAyG,EAAAnsB,KAAAqlB,cACArlB,MAAAulB,wBACAzlB,EAAAI,gBACA,IAAAksB,GAAApsB,KAAAqlB,eACAjQ,EAAAqO,EAAA4I,eAAAF,EAAAC,EAAAtd,EACA+V,GAAApB,EAAAmC,mBAAAf,EAAAzP,EACA,IAAAkX,GAAA7I,EAAAqC,qBAAAjB,EAAAuH,EAAAtd,EACAsU,GAAA2B,MACAlC,aAAA7iB,KAAAglB,iBACAhlB,KAAAglB,gBAAApC,WAAA5iB,KAAA8kB,OAAAvlB,KAAAS,KAAAssB,KAEAtsB,KAAA8kB,OAAAwH,GA5YA,aA+YAxsB,EAAAokB,KACAvlB,EAAA+Y,QAAA1X,KAAA4D,SA/YA,WAmZA2oB,qBAAA,SAAApd,EAAA0V,GAEA,MAvZA,MAsZA7kB,KAAAymB,UAtZA,MAsZAtX,EAAAmX,OAAAzB,EAAAhS,MAAA,GACA7S,KAAAwnB,qBAAArY,GACA0D,MAAAgS,EAAAhS,MAAA,EACAG,IAAA6R,EAAAhS,OACS,IAAA1D,GAEToW,sBAAA,WACA,GAAAzW,GAAA9O,KAAA0lB,oBACAgE,EAAA1pB,KAAA8rB,cACAU,EAAAxsB,KAAAkoB,QAAAwB,EAAA5a,IAAA,EACA9O,MAAAwqB,cAAAgC,IAEAhB,aAAA,WACA,GAAArc,GAAAnP,KAAAqlB,eACAR,EAAA7kB,KAAA8kB,SACA2H,EAAAzsB,KAAAusB,qBAAApd,EAAA0V,GACA6H,EAAAD,IAAAtd,CAGA,IAFAnP,KAAAylB,UAAA,EACAtW,EAAAsd,EACAzsB,KAAA+pB,mBAAA0C,GAKA,MAJAzsB,MAAA0qB,gBAAAvb,OACAud,GACA1sB,KAAAulB,wBAKA,IADAvlB,KAAA0qB,kBAAAvb,EACA,CACA,GAAApM,GAAA/C,KAAAolB,UAAAjW,EAAA0V,EAAA,GACAhB,GAAA9M,UAAAhU,KACA/C,KAAAmlB,aAAApiB,GAGA/C,KAAAulB,yBAEAoH,mBAAA,WACA3sB,KAAAmkB,mBACAnkB,KAAA2qB,+BAEA3qB,KAAAQ,SAAAosB,MAAA5sB,KAAAsd,YAGArY,aAAA,WACAjF,KAAAmkB,qBACAnkB,KAAAmlB,aAAAnlB,KAAAC,OAAA,SACAD,KAAAulB,yBAEAvlB,KAAAQ,YAEA8kB,mBAAA,WACA,GAAAtlB,KAAAmkB,mBAAA,CAGA,GAAA0I,GAAA7sB,KAAAwoB,aAAAxoB,KAAAqlB,gBACA8D,EAAA0D,EAAA7sB,KAAA8rB,cAAA,IACA,KAAA3I,EAAAgG,GAEA,YADAnpB,KAAAmlB,aAAAgE,EAGAnpB,MAAAmlB,aAAA9B,EAAA8F,EAAAnpB,KAAAC,OAAA,OAAAD,KAAAC,OAAA,UAEAkF,yBAAA,SAAArF,GACA,IAAAE,KAAAmkB,mBACA,MAAAnkB,MAAAQ,SAAAV,EAEAE,MAAA8sB,sBAAAhtB,GACAE,KAAAymB,SAAA,KACAzmB,KAAAslB,qBACAtlB,KAAAC,OAAA,QAAAD,KAAAmlB,eAEA/f,eAAA,SAAA7B,GACA,OAAAA,EAAA8B,MACA,aACA,sBACArF,KAAAorB,mBACAprB,KAAAiF,cACA,MACA,WACA,UACAjF,KAAAslB,qBACAtlB,KAAAQ,SAAA+C,EACA,MACA,SACAvD,KAAAQ,SAAA+C,KAGAwpB,mBAAA,SAAA1nB,EAAAvB,EAAAH,GACA,gBAAA0B,GAAA,IAAAvB,GAAA,IAAAH,EACA,EAAAG,IAAA,EAAAH,EAEA3D,KAAAQ,SAAAosB,MAAA5sB,KAAAsd,YAEA+N,YAAA,iBACArrB,MAAA0qB,sBACA1qB,MAAAymB,eACAzmB,MAAAmlB,mBACAnlB,MAAAylB,eACAzlB,MAAAklB,gBACArC,aAAA7iB,KAAAglB,uBACAhlB,MAAAglB,iBAEApE,OAAA,WACA5gB,KAAAqrB,cACArrB,KAAAQ,aAGAnC,GAAAC,QAAA2kB,GVs5DM+J,IACA,SAAU3uB,EAAQC,EAASC,GAEjC,YWz6EA,IAAA8kB,GAAA9kB,EAAA,IAAA8kB,aACAE,EAAAhlB,EAAA,GAAAglB,aACAC,EAAAjlB,EAAA,KACAynB,EAAA,SAAA7W,EAAAL,GACA,GAAAsZ,GAAAtZ,EAAAuZ,MAAA,KACAC,EAAA9E,EAAA+E,QAAApZ,EAAAL,EACAsZ,GAAA,GAAAA,EAAA,QAAAA,EAAA,GACAtZ,EAAAwZ,EAAA,EAAAF,EAAA,GAAAA,EAAA,EACA,IAAA6E,GAAAne,EAAAa,QAAA,mBACAud,EAAA,qCAAAC,KAAAF,EAGA,QACApa,MAHAqa,EAAA,GAAApiB,OAIAkI,IAHA7D,EAAArE,OAAAoiB,EAAA,GAAApiB,SAMAsiB,EAAA,SAAA3hB,EAAA0D,GACA,GAAAgX,GAAA3C,EAAA4C,sBACAyC,EAAA,GAAAC,QAAA,QAAAvF,EAAA4C,GAAA,QAEA,OADAhX,GAAAgY,MAAA,EAAA1b,GACAkE,QAAAkZ,EAAA,IAAA/d,QAEAuiB,EAAA,SAAAle,GACA,MAAAA,GAAAkZ,MAAA,IAAAiF,UAAA/iB,KAAA,KAEAgjB,EAAA,SAAAC,EAAAre,GACA,IAAAqe,EACA,QAMA,KAJA,GAAA3E,GAAA,SACA4E,EAAA,EACAhiB,EAAA,KACAyhB,EAAArE,EAAAsE,KAAAhe,GACA+d,GAAA,CAEA,GADAzhB,EAAAyhB,EAAAzhB,OACA+hB,GAAAC,GAAAD,EACA,MAAA/hB,EAEAgiB,KACAP,EAAArE,EAAAsE,KAAAhe,GAEA,cAAA1D,EAAA0D,EAAArE,OAAAW,GAEAma,EAAA,SAAAf,EAAAzP,GAOA,WANA,KAAAyP,EAAAhS,QACAgS,GACAhS,MAAAgS,EACA7R,IAAA6R,KAIAhS,MAAAgS,EAAAhS,MAAAuC,EACApC,IAAA6R,EAAA7R,IAAAoC,IAGAqV,EAAA,SAAAtb,EAAAqd,EAAA3H,EAAA/V,GACA+V,EAAAe,EAAAf,EAAA,EACA,IAAAmF,GAAAxG,EAAA4C,sBACAsH,EAAAve,EAAAmY,QAAA0C,GACA2D,EAAAnB,EAAAlF,QAAA0C,GACAG,EAAAhb,EAAAkZ,MAAA2B,GACA4D,EAAApB,EAAAnE,MAAA2B,EAEA,KADA,IAAA0D,GAAA7I,EAAAhS,MAAA6a,EACA,CACA,GAAAG,GAAAhJ,EAAAhS,MAAA6a,EAAA,EACAI,EAAAV,EAAAS,EAAA1D,EAAA,IACA4D,EAAAH,EAAA,GAAAD,EAAA,EAAAJ,EAAAO,EAAAF,EAAA,MAAApB,EAAA1hB,MACA,OAAAgb,GAAAiI,EAAAvB,EAAA1d,GAEA,GAAAkf,GAAA7D,EAAA,GAAArf,OAAA+Z,EAAAhS,MACAob,EAAAb,EAAAY,EAAAX,EAAAlD,EAAA,KACA+D,EAAAX,EAAAU,EAAAZ,EAAAO,EAAA,KACAO,EAAAP,EAAA,GAAA9iB,QAAAojB,EAAA,EACA,OAAApI,GAAAqI,EAAA3B,EAAA1d,IAGA+W,EAAA,SAAAhB,EAAA1V,EAAAL,GACA+V,EAAAe,EAAAf,EAAA,EACA,IAAAkB,GAAAD,EAAAjB,EAAA1V,EAAAL,EACA,OAAA+V,GAAAhS,OAAAkT,EAAAlT,OAAAgS,EAAA7R,KAAA+S,EAAA/S,KAEA8S,EAAA,SAAAjB,EAAA1V,EAAAL,GACA+V,EAAAe,EAAAf,EAAA,EACA,IAAAkB,GAAAC,EAAA7W,EAAAL,EAKA,QAHA+D,MAAAwQ,EAAAwB,EAAAhS,MAAAkT,EAAAlT,MAAAkT,EAAA/S,KACAA,IAAAqQ,EAAAwB,EAAA7R,IAAA+S,EAAAlT,MAAAkT,EAAA/S,OAIAqZ,EAAA,SAAAF,EAAAiC,EAAAtf,GACA,GAAAuf,GAAArI,EAAAmG,EAAArd,EAEA,OADAkX,GAAAoI,EAAAtf,GACA+D,MAAAwb,EAAAxb,MAEAvU,GAAA0nB,qBACA1nB,EAAAunB,sBACAvnB,EAAAsnB,qBACAtnB,EAAAwnB,uBACAxnB,EAAAmsB,sBACAnsB,EAAA+tB,kBXw7EMiC,IACA,SAAUjwB,EAAQC,EAASC,GAEjC,YYhiFA,IAAAG,GAAAH,EAAA,GACAgwB,EAAAhwB,EAAA,IACAI,EAAAJ,EAAA,GACAoY,EAAApY,EAAA,GACAiwB,EAAAjwB,EAAA,IACAO,EAAAP,EAAA,GAAAO,OACA2vB,EAAAlwB,EAAA,IAAAkwB,QACA5X,EAAAtY,EAAA,IAAAsY,QACAlR,EAAApH,EAAA,IACAmwB,EAAAnwB,EAAA,KACA8T,EAAA9T,EAAA,GACA+T,EAAA/T,EAAA,IACAowB,EAAApwB,EAAA,KACAqwB,EAAArwB,EAAA,KACAmH,EAAAnH,EAAA,IACAswB,EAAAvoB,KAKAwoB,GAAA,+FACAlL,EAAA8K,EAAA/uB,SACAC,eAAA,WACA,MAAAd,GAAAkB,KAAAQ,YACAS,QAAA,SAAAnB,GACAA,EAAAI,iBACAJ,EAAAC,kBACAC,KAAA+uB,qBAAAjvB,IAEAoB,UAAA,SAAApB,GACAA,EAAAI,iBACAJ,EAAAC,kBACAC,KAAAgvB,uBAAAlvB,IAEAe,MAAA,gBAGAM,mBAAA,WACA,MAAArC,GAAAkB,KAAAQ,YACAuC,MAAA,EACAuM,QAAA,GACAC,QAAA,GACApJ,KAAA,EACA8oB,iBAAA,EACAC,qBAAA,EACAC,KAAA,OACAC,oBAAA1pB,EAAAoJ,OAAA,sCAGApG,qBAAA,WACA,MAAA1I,MAAAQ,WAAAmI,SACAC,OAAA,WACA,MAAAjD,GAAAkD,OAAAwmB,UAAA1pB,EAAAoD,eAEAC,SACAkmB,qBAAA,KAGAtmB,OAAA,WACA,kBAAAjD,EAAAkD,OAAAqQ,UAEAlQ,SACAmmB,KAAA,cAIA3qB,YAAA,WACAxE,KAAAsvB,uBACAtvB,KAAAyE,WAAArC,SApDA,gBAqDApC,KAAAQ,YAEAsZ,mBAAA,WACA9Z,KAAAC,OAAA,YAAAD,KAAAuvB,eAAAvvB,KAAAC,OAAA,UACAD,KAAAyP,QAAA,qBACAzP,KAAAwvB,4BAEAF,qBAAA,WACAtvB,KAAAyvB,gBAAA/wB,EAAA,WAAAgS,KAAA,iBAAAjO,SAAAzC,KAAAyE,YACAzE,KAAA0vB,gBAAA1vB,KAAAC,OAAA,WAEAyvB,gBAAA,SAAA3sB,GACA/C,KAAAyvB,gBAAA5rB,IAAA8S,EAAAgZ,4BAAA5sB,KAEA6sB,kBAAA,WACA,MAAA5vB,MAAAyvB,iBAEAxI,iBAAA,SAAAnnB,GAKA,GAJAE,KAAAQ,SAAAV,IAEA,uBACA+rB,KAFA/rB,EAAAokB,KAAA2L,OAAAC,aAAAhwB,EAAAiwB,QAGA,CACA,GAAAjwB,EAAAkwB,SAAAlwB,EAAAyI,SAAAzI,EAAAokB,KAAAuK,EAAA3uB,EAAAokB,IAAA4K,IAAA,EACA,MAGA,OADAhvB,GAAAI,kBACA,EAEAF,KAAAiwB,aAAA,GAEAT,yBAAA,WACA,GAAA5S,GAAAvK,EAAAO,aAAA+b,EAAAtpB,KAAArF,KAAA6c,MACAqT,EAAAlwB,KAAAgd,cAAA,SAAAld,GACAE,KAAAmwB,mBAAArwB,EAAAuJ,QACS9J,KAAAS,MACTrB,GAAAyQ,IAAApP,KAAA4D,SAAAgZ,GACAje,EAAAkE,GAAA7C,KAAA4D,SAAAgZ,EAAA,SAAA9c,GACAowB,GACA7mB,MAAAvJ,OAIAqwB,mBAAA,SAAAC,GACAvZ,EAAA7W,KAAA4D,YAGAwsB,EAAAplB,MAAA,EAAAhL,KAAAqwB,iBAAA,EAAAD,GAAApwB,KAAAqwB,kBAAA,EAAAD,GACAA,EAAAlwB,iBACAkwB,EAAArwB,oBAEAkF,aAAA,WACA,GAAAqrB,GAAAtwB,KAAA4D,SAAAC,KACAysB,GAAAxlB,QAAAylB,OAAAD,KAAAtwB,KAAAC,OAAA,WACAD,KAAAwwB,oBACAxwB,KAAA2qB,+BAEA,IAAA5nB,GAAA/C,KAAAC,OAAA,QACAD,MAAAyb,qBACAzb,KAAAyP,QAAA,WAAA1M,GACA/C,KAAAC,OAAA,OAAAD,KAAA4D,SAAAC,QAEA4sB,sBAAA,WACA,MAAAzwB,MAAAQ,WAAA,aAEAkwB,qBAAA,SAAA3tB,GACA/C,KAAA2wB,UACA/B,EAAA/e,YAAA7P,KAAA2wB,UAAA1wB,OAAA,WAAA8C,GAEA/C,KAAA4wB,YACAhC,EAAA/e,YAAA7P,KAAA4wB,YAAA3wB,OAAA,WAAA8C,GAEA/C,KAAAQ,SAAAosB,MAAA5sB,KAAAsd,YAEAkT,kBAAA,WACA,GAAAztB,GAAA/C,KAAAC,OAAA,SACAujB,EAAA+M,OAAAxtB,GACA8tB,EAAAvH,MAAA9F,GAAA,GAAAxjB,KAAA8wB,kBAAA/tB,EACA/C,MAAA2sB,mBAAAkE,IAEAC,kBAAA,SAAA/tB,GACA,MAAA/C,MAAAC,OAAA,eAAA8C,IAEAguB,aAAA,WACA/wB,KAAAQ,WACAR,KAAA4D,SAAAotB,MACA1hB,IAAAtP,KAAAC,OAAA,OACAsP,IAAAvP,KAAAC,OAAA,OACAkG,KAAAnG,KAAAC,OAAA,UAEAD,KAAAyP,SACAwhB,SAAAjxB,KAAAC,OAAA,oBACAixB,SAAAlxB,KAAAC,OAAA,uBAGAwb,mBAAA,WACAzb,KAAAQ,WACAR,KAAAmxB,sBAEAA,mBAAA,WACA,GAAAC,GAAApxB,KAAAC,OAAA,kBAGA,IAFAD,KAAAyE,WAAAa,YAzJA,oBAyJA8rB,GACApxB,KAAAqxB,6BACAD,EAGA,MAFApxB,MAAAsxB,iBAAAtxB,KAAAsxB,gBAAArmB,cACAjL,KAAAsxB,gBAAA,KAGAtxB,MAAAsxB,kBACAtxB,KAAAsxB,gBAAAtxB,KAAAuxB,sBAEAvxB,KAAAsxB,gBAAAlV,UAAApc,KAAAqc,sBAEAgV,0BAAA,WACArxB,KAAAyE,WAAAa,YApKA,mCAoKAtF,KAAAC,OAAA,oBAAAD,KAAAC,OAAA,yBAEAsxB,mBAAA,WACA,GAAA3U,GAAAvK,EAAAO,aAAAN,EAAAY,KAAAlT,KAAA6c,MACA2U,EAAAxxB,KAAAgd,cAAAhd,KAAAyxB,+BAAAlyB,KAAAS,OACA0xB,EAAAhzB,EAAA,SAAA0D,SA1KA,8BA2LA,OAhBAzD,GAAAyQ,IAAAsiB,EAAA9U,GACAje,EAAAkE,GAAA6uB,EAAA9U,EAAA,SAAA9c,GACA0xB,GACAnoB,MAAAvJ,MAGAE,KAAA2wB,SAAAjyB,EAAA,SAAA+D,SAAAivB,GACA1xB,KAAA2C,iBAAA3C,KAAA2wB,SAAA/B,GACAlhB,UAAA,KACAikB,SAAA3xB,KAAA+uB,qBAAAxvB,KAAAS,QAEAA,KAAA4wB,WAAAlyB,EAAA,SAAA+D,SAAAivB,GACA1xB,KAAA2C,iBAAA3C,KAAA4wB,WAAAhC,GACAlhB,UAAA,OACAikB,SAAA3xB,KAAAgvB,uBAAAzvB,KAAAS,QAEA0xB,GAEAD,+BAAA,WACA,GAAAvsB,GAAAlF,KAAA4D,QACA5D,MAAAC,OAAA,wBAAAsuB,EAAAqD,qBAAA1sB,EAAA,IACAvG,EAAA+Y,QAAAxS,EAAA,UAGA6pB,qBAAA,SAAAjvB,GACAE,KAAAC,OAAA,aACAD,KAAAqwB,iBAAA,EAAAvwB,EAAAuJ,OAAAvJ,IAGAkvB,uBAAA,SAAAlvB,GACAE,KAAAC,OAAA,aACAD,KAAAqwB,kBAAA,EAAAvwB,EAAAuJ,OAAAvJ,IAGAuwB,iBAAA,SAAA/H,EAAA8H,GACA,GAAArtB,GAAAqmB,WAAAppB,KAAA6xB,yBAAA,EACA1rB,EAAAijB,WAAAppB,KAAAC,OAAA,QACA8C,GAAA/C,KAAA8xB,iBAAA/uB,EAAAoD,EAAAmiB,EACA,IAAAhZ,GAAAtP,KAAAC,OAAA,OACAsP,EAAAvP,KAAAC,OAAA,WACA,KAAAqP,IACAvM,EAAAuD,KAAAiJ,IAAAD,EAAAvM,QAEA,KAAAwM,IACAxM,EAAAuD,KAAAgJ,IAAAC,EAAAxM,IAEA/C,KAAA8sB,sBAAAsD,GACApwB,KAAAC,OAAA,QAAA8C,IAEA+uB,iBAAA,SAAA/uB,EAAAoD,GACA,GAAA4rB,GAAA,WACAC,EAAAD,EAAAlG,KAAA9oB,GACAkvB,EAAAF,EAAAlG,KAAA1lB,EACA,IAAA6rB,GAAAC,EAAA,CACA,GAAAC,GAAAF,EAAAD,EAAA5E,KAAApqB,GAAA,GAAA+H,OAAA,EACAqnB,EAAAF,EAAAF,EAAA5E,KAAAhnB,GAAA,GAAA2E,OAAA,EACAsnB,EAAAvD,EAAAtf,IAAA2iB,EAAAC,EAEA,OADApvB,GAAA/C,KAAAqyB,OAAAtvB,EAAAoD,EAAAisB,GAGA,MAAArvB,GAAAoD,GAEAksB,OAAA,SAAAtvB,EAAAsnB,GACAA,KAAA,CACA,IAAAiI,GAAAhsB,KAAAisB,IAAA,GAAAlI,EAGA,OAFAtnB,IAAAuvB,EACAvvB,EAAAuD,KAAAC,MAAAxD,GAAAuvB,GAGAE,wBAAA,WACAxyB,KAAAQ,WACA7B,EAAAkE,GAAA7C,KAAA4D,SAAA,WAAA5D,KAAAyrB,wBAAAlsB,KAAAS,QAEAyrB,wBAAA,WACA,cAAAzrB,KAAAC,OAAA,SAGA,GAAAiF,GAAAlF,KAAA4D,SACAitB,EAAA7wB,KAAA8wB,kBAAA9wB,KAAAC,OAAA,SACAiF,GAAArB,IAAA,MACAqB,EAAArB,IAAAgtB,KAEA1rB,yBAAA,SAAArF,GACA,GAAAoF,GAAAlF,KAAA4D,SACA0sB,EAAAtwB,KAAAyyB,iBACA1vB,EAAA/C,KAAA8rB,YAAAwE,GACAoC,EAAA,MAAApC,GAAA,MAAAA,CACA,IAAAtwB,KAAA2yB,kBAAA3yB,KAAAuvB,eAAAxsB,GAEA,WADAmC,GAAArB,IAAA7D,KAAA8wB,kBAAA/tB,GAGA2vB,IACA1yB,KAAAQ,SAAAV,EAAAwpB,MAAAvmB,GAAA,KAAAA,GAEA/C,KAAA4yB,sBAAAtC,EAAAvtB,GACA/C,KAAA6yB,kBAAAC,MACA/vB,QACAgwB,OAAA/yB,QAGA4yB,sBAAA,SAAAtC,EAAAnH,GACA,GAAA6J,GAAAhzB,KAAA+pB,mBAAAuG,GACA2C,EAAAjzB,KAAA0nB,gBAAA4I,EACA0C,IAAAC,GAAA,OAAA9J,GACAoH,OAAAD,KAAAnH,GACAnpB,KAAA4D,SAAAC,IAAA7D,KAAA8wB,kBAAA3H,KAIA+J,uBAAA,SAAAnwB,GACA,MAAAA,GAAA4M,QAAA,UAEAwjB,gBAAA,WACA,GAAAC,GAAA,WAAApzB,KAAAC,OAAA,QACAozB,EAAArzB,KAAA4D,SAAA0vB,IAAA,GAAAC,QACA,OAAAH,IAAAC,KAAAG,UAEA7G,mBAAA,SAAAxd,GACAnP,KAAAmzB,mBAGAnzB,KAAAQ,SAAA2O,IAEA4a,mBAAA,SAAAhnB,GAEA,MADA,+BACA8oB,KAAA9oB,IAEA2kB,gBAAA,SAAA3kB,GACA,MAAAyrB,GAAAlL,QAAAvgB,EAAA/C,KAAAC,OAAA,OAAAD,KAAAC,OAAA,SAEAwzB,UAAA,SAAA1wB,GACA,cAAA/C,KAAA8rB,YAAA/oB,IAEAwsB,eAAA,SAAAxsB,GACA,GAAAutB,GAAAtwB,KAAAyyB,iBACAiB,EAAA1zB,KAAA2yB,gBACAgB,GAAA,EACAC,EAAA5zB,KAAAyzB,UAAAnD,EAkBA,OAjBAhH,OAAAiH,OAAAxtB,MACA4wB,GAAA,IAEA5wB,GAAA2wB,EACAC,GAAA,EAEAC,GAAAF,IACAC,GAAA,GAGA3zB,KAAAC,QACA0zB,UACAE,gBAAAF,EAAA,MACAG,gBAAA,EACAC,QAAA/zB,KAAAC,OAAA,0BAGA0zB,GAEA9B,qBAAA,WACA,MAAA7xB,MAAA8rB,YAAA9rB,KAAAyyB,mBAEAA,eAAA,WACA,GAAA1vB,GAAA/C,KAAA4D,SAAAC,MAAAmwB,MACA,OAAAh0B,MAAAkzB,uBAAAnwB,IAEA+oB,YAAA,SAAA/oB,GACA,GAAAygB,GAAA4F,WAAArmB,EACA,OAAAumB,OAAA9F,GACA,KAEAgL,EAAAnL,aAAAG,EAAAxjB,KAAAC,OAAA,OAAAD,KAAAC,OAAA,SAEAg0B,MAAA,WACAj0B,KAAAC,OAAA,eAEA2gB,OAAA,iBACA5gB,MAAAsxB,sBACAtxB,MAAA2wB,eACA3wB,MAAA4wB,WACA5wB,KAAAQ,YAEA4E,eAAA,SAAA7B,GACA,OAAAA,EAAA8B,MACA,YACArF,KAAAuvB,eAAAhsB,EAAAR,OACA/C,KAAA0vB,gBAAAnsB,EAAAR,OACA/C,KAAAQ,SAAA+C,GACAvD,KAAAk0B,0BACA,MACA,YACAl0B,KAAA+wB,cACA,MACA,WACA,UACA/wB,KAAA+wB,eACA/wB,KAAAC,OAAA,QAAAD,KAAA8rB,YAAA9rB,KAAAC,OAAA,UACA,MACA,uBACAD,KAAAyb,oBACA,MACA,2BACAzb,KAAAqxB,2BACA,MACA,2BACA,KACA,SACArxB,KAAAQ,SAAA+C,MAIAlF,GAAAC,QAAAslB,GZ+iFMuQ,IACA,SAAU91B,EAAQC,EAASC,GAEjC,Yah8FA,IAAAG,GAAAH,EAAA,GACAgwB,EAAAhwB,EAAA,IACAI,EAAAJ,EAAA,GACA61B,EAAA71B,EAAA,IACAO,EAAAP,EAAA,GAAAO,OACAuT,EAAA9T,EAAA,GACA+T,EAAA/T,EAAA,IACA81B,EAAA91B,EAAA,KACA+1B,EAAA/1B,EAAA,KACAg2B,EAAAh2B,EAAA,IAAAg2B,SAKAC,EAAAniB,EAAAO,aAAAN,EAAAmiB,GADA,eAEAC,EAAAriB,EAAAO,aAAAN,EAAAoC,OAFA,eAGAka,EAAAwF,EAAAz0B,SACAwB,mBAAA,WACA,MAAArC,GAAAkB,KAAAQ,YACAkN,UAAA,KACAikB,SAAA,KACAzZ,oBAAA,EACAoE,mBAAA,KAGA9X,YAAA,WACAxE,KAAAQ,UACA,IAAAkN,GAAAinB,qBAAA30B,KAAAC,OAAA,YACAD,MAAAyE,WAAArC,SAjBA,4BAiBAA,SAAAsL,GACA1N,KAAA40B,UAAAl2B,EAAA,SAAA0D,SAAAsL,EAAA,SAAAjL,SAAAzC,KAAAyE,aAEAkF,QAAA,WACA3J,KAAAQ,UACA,IAAAoc,GAAAvK,EAAAO,aAAAN,EAAAY,KAAAlT,KAAA6c,MACApY,EAAAzE,KAAAyE,UACA9F,GAAAyQ,IAAA3K,EAAAmY,GACAje,EAAAkE,GAAA4B,EAAAmY,EAAA5c,KAAA60B,iBAAAt1B,KAAAS,OACAA,KAAA80B,mBAAA90B,KAAAoJ,sBAAA,aAEAyrB,iBAAA,SAAA/0B,GACAA,EAAAI,iBACAF,KAAA+0B,cACAp2B,EAAAkE,GAAA7C,KAAAyE,WAAA6vB,EAAAjvB,KAAA,WACArF,KAAAg1B,kBAAA,GAAAT,GACAF,EAAAY,KAAAj1B,KAAAg1B,mBACAh1B,KAAA80B,oBACAzrB,MAAAvJ,IAEAE,KAAAk1B,WAAAC,YAAAn1B,KAAA80B,mBApCA,KAqCAzrB,MAAAvJ,KAESP,KAAAS,MACT,IAAAo1B,GAAA7G,EAAA8G,aACA12B,GAAAkE,GAAAuyB,EAAAZ,EAAAx0B,KAAA+0B,YAAAx1B,KAAAS,OACArB,EAAAkE,GAAAuyB,EAAAV,EAAA10B,KAAA+0B,YAAAx1B,KAAAS,OACAA,KAAA80B,oBACAzrB,MAAAvJ,KAGAkW,SAAA,WACAhW,KAAA+0B,cACA/0B,KAAAQ,YAEAu0B,YAAA,WACAp2B,EAAAyQ,IAAApP,KAAAyE,WAAA6vB,EAAAjvB,KACA,IAAA+vB,GAAA7G,EAAA8G,aACA12B,GAAAyQ,IAAAgmB,EAAAZ,GACA71B,EAAAyQ,IAAAgmB,EAAAV,GACA10B,KAAAg1B,mBACAh1B,KAAAg1B,kBAAAM,UAEAt1B,KAAAk1B,YACAK,cAAAv1B,KAAAk1B,aAGA9vB,eAAA,SAAA7B,GACA,OAAAA,EAAA8B,MACA,eACA,gBACArF,KAAA+hB,aACA,MACA,SACA/hB,KAAAQ,SAAA+C,MAIAlF,GAAAC,QAAAswB,Gb+8FM4G,IACA,SAAUn3B,EAAQC,EAASC,GAEjC,Yc92FA,SAAAK,GAAAmE,GACA/C,KAAAwJ,UAAAzG,CACA,IAAAmH,EACAnH,KACAmH,EAAA2lB,OAAA9sB,GAAA0yB,cAAA9lB,QAAA,SACAzF,EAAAwrB,EAAAxrB,GAAA,IAAAwrB,EAAAxrB,KACAA,EAAAyrB,EAAAzrB,IAEAA,IACAlK,KAAA+D,gBAAA,GAEAmG,QACAlK,KAAAoK,EAAAwrB,EAAA1rB,EAAA,IACAlK,KAAAqK,EAAAurB,EAAA1rB,EAAA,IACAlK,KAAAsK,EAAAsrB,EAAA1rB,EAAA,IACAlK,KAAAiI,EAAA2tB,EAAA1rB,EAAA,QACAA,EAAA,GACAlK,KAAA0G,KACAS,EAAA+C,EAAA,MACAvD,EAAAuD,EAAA,MACAlD,EAAAkD,EAAA,OAGAlK,KAAA0G,IAAAmvB,EAAA71B,KAAAoK,EAAApK,KAAAqK,EAAArK,KAAAsK,GAEAJ,EAAA,GACAlK,KAAA81B,KACA3uB,EAAA+C,EAAA,MACAvD,EAAAuD,EAAA,MACA6rB,EAAA7rB,EAAA,OAGAlK,KAAA81B,IAAAE,EAAAh2B,KAAAoK,EAAApK,KAAAqK,EAAArK,KAAAsK,GAIA,QAAAqrB,GAAAzrB,GACA,mBAAAA,EACA,eAIA,KAFA,GAAA8gB,GAAA7f,EAAA,EACA8qB,EAAAC,EAAAprB,OACUK,EAAA8qB,IAAQ9qB,EAElB,GADA6f,EAAAkL,EAAA/qB,GAAAgrB,GAAAhJ,KAAAjjB,GAEA,MAAAgsB,GAAA/qB,GAAAirB,QAAApL,EAGA,aAGA,QAAA4K,GAAAS,EAAAC,EAAA/mB,GAGA,MAFA+mB,MAAA,EACA/mB,KAAA,IACA8mB,EAAA,GAAA/M,MAAA+M,GAAAC,EAAAD,EAAA9mB,IAAA8mB,EAGA,QAAAE,GAAAnsB,EAAAC,EAAAC,GACA,oBAAAF,GAAA,GAAAC,GAAA,EAAAC,GAAA4e,SAAA,IAAA/B,MAAA,GAGA,QAAA0O,GAAAzrB,EAAAC,EAAAC,GACA,GAAAksB,GAAAC,EAAAC,EAAAnnB,EAAAjJ,KAAAiJ,IAAAnF,EAAAC,EAAAC,GACAgF,EAAAhJ,KAAAgJ,IAAAlF,EAAAC,EAAAC,GACAU,EAAAuE,EAAAD,CAGA,IAFAonB,EAAAnnB,EACAknB,EAAA,IAAAlnB,EAAA,IAAAD,EAAAC,EACAA,IAAAD,EACAknB,EAAA,MAEA,QAAAjnB,GACA,IAAAnF,GACAosB,GAAAnsB,EAAAC,GAAAU,EAAA,GACAX,EAAAC,IACAksB,GAAA,IAEA,MACA,KAAAnsB,GACAmsB,GAAAlsB,EAAAF,GAAAY,EAAA,MACA,MACA,KAAAV,GACAksB,GAAApsB,EAAAC,GAAAW,EAAA,OAKA,MAFAyrB,IAAA,IACAC,GAAA,SAEAvvB,EAAAb,KAAAC,MAAAiwB,GACA7vB,EAAAL,KAAAC,MAAAkwB,GACAzvB,EAAAV,KAAAC,MAAAmwB,IAIA,QAAAC,GAAAxvB,EAAAR,EAAAK,GACA,GAAA4vB,GAAAC,EAAAC,EAAArrB,EAAAxD,EAAAmC,EAAAC,EAAAC,CAMA,QALAmB,EAAAnF,KAAAyG,MAAA5F,EAAA,QACA2vB,GAAA,IAAAnwB,GAAAK,EAAA,IACAiB,EAAAd,EAAA,OAAAH,EAAA8vB,GACAD,EAAAC,EAAA7uB,EACA2uB,EAAA5vB,EAAAiB,EACAwD,GACA,OACArB,EAAApD,EACAqD,EAAAwsB,EACAvsB,EAAAwsB,CACA,MACA,QACA1sB,EAAAwsB,EACAvsB,EAAArD,EACAsD,EAAAwsB,CACA,MACA,QACA1sB,EAAA0sB,EACAzsB,EAAArD,EACAsD,EAAAusB,CACA,MACA,QACAzsB,EAAA0sB,EACAzsB,EAAAusB,EACAtsB,EAAAtD,CACA,MACA,QACAoD,EAAAysB,EACAxsB,EAAAysB,EACAxsB,EAAAtD,CACA,MACA,QACAoD,EAAApD,EACAqD,EAAAysB,EACAxsB,EAAAssB,EAEA,OAAAtwB,KAAAC,MAAA,KAAA6D,GAAA9D,KAAAC,MAAA,KAAA8D,GAAA/D,KAAAC,MAAA,KAAA+D,IAGA,QAAAysB,GAAA3sB,EAAAC,EAAAC,EAAAU,GAEA,OADA1E,KAAAiJ,IAAAnF,EAAAC,EAAAC,IAEA,IAAAF,GACA,OAAAC,EAAAC,GAAAU,GAAAX,EAAAC,EAAA,IACA,KAAAD,GACA,OAAAC,EAAAF,GAAAY,EAAA,CACA,KAAAV,GACA,OAAAF,EAAAC,GAAAW,EAAA,GAIA,QAAAgrB,GAAA5rB,EAAAC,EAAAC,GACAF,EAAA4sB,EAAA5sB,EAAA,KACAC,EAAA2sB,EAAA3sB,EAAA,KACAC,EAAA0sB,EAAA1sB,EAAA,IACA,IAAAnD,GAAAR,EAAA4I,EAAAjJ,KAAAiJ,IAAAnF,EAAAC,EAAAC,GACAgF,EAAAhJ,KAAAgJ,IAAAlF,EAAAC,EAAAC,GACA2sB,EAAA1nB,EAAAD,EACAymB,EAAAkB,EAAA,CACA,IAAA1nB,IAAAD,EACAnI,EAAAR,EAAA,MACK,CACL,GAAAqE,GAAAuE,EAAAD,CAEA3I,GADAovB,EAAA,GACA/qB,GAAA,EAAAisB,GAEAjsB,EAAAisB,EAEA9vB,EAAA4vB,EAAA3sB,EAAAC,EAAAC,EAAAU,GACA7D,GAAA,EAEA,OACAA,EAAAkrB,EAAA,IAAAlrB,GACAR,EAAA0rB,EAAA,IAAA1rB,GACAovB,EAAA1D,EAAA,IAAA0D,IAIA,QAAAmB,GAAAC,EAAAhwB,GACA,GAAAiwB,GAAAjwB,CAOA,OANA,MAAAgwB,IACAC,EAAAjwB,EAAA,KAEA,MAAAgwB,IACAC,EAAAjwB,EAAA,KAEAiwB,EAGA,QAAAC,GAAAD,GAOA,MANAA,GAAA,IACAA,GAAA,GAEAA,EAAA,IACAA,GAAA,GAEAA,EAGA,QAAAE,GAAAjhB,EAAAkhB,EAAAH,GAEA,MADAA,GAAAC,EAAAD,GACAA,EAAA,IACA/gB,EAAA,GAAAkhB,EAAAlhB,GAAA+gB,EAEAA,EAAA,GACAG,EAEAH,EAAA,IACA/gB,GAAAkhB,EAAAlhB,IAAA,IAAA+gB,GAAA,EAEA/gB,EAGA,QAAAmhB,GAAArwB,EAAAR,EAAAovB,GACA,GAAA3rB,GAAAC,EAAAC,CAIA,IAHAnD,EAAA6vB,EAAA7vB,EAAA,KACAR,EAAAqwB,EAAArwB,EAAA,KACAovB,EAAAiB,EAAAjB,EAAA,KACA,IAAApvB,EACAyD,EAAAC,EAAAC,EAAAyrB,MACK,CACL,GAAAwB,GAAAxB,EAAA,GAAAA,GAAA,EAAApvB,GAAAovB,EAAApvB,EAAAovB,EAAApvB,EACA0P,EAAA,EAAA0f,EAAAwB,CACAntB,GAAAktB,EAAAjhB,EAAAkhB,EAAAL,EAAA,IAAA/vB,IACAkD,EAAAitB,EAAAjhB,EAAAkhB,EAAAL,EAAA,IAAA/vB,IACAmD,EAAAgtB,EAAAjhB,EAAAkhB,EAAAL,EAAA,IAAA/vB,IAEA,OAAAkrB,EAAA,IAAAjoB,GAAAioB,EAAA,IAAAhoB,GAAAgoB,EAAA,IAAA/nB,IAGA,QAAA0sB,GAAAS,EAAAloB,GAEA,MADAkoB,GAAAnxB,KAAAgJ,IAAAC,EAAAjJ,KAAAiJ,IAAA,EAAA6Z,WAAAqO,KACAnxB,KAAA4E,IAAAusB,EAAAloB,GAAA,KACA,EAEAkoB,EAAAloB,EAAA6Z,WAAA7Z,GAGA,QAAAmoB,GAAAlU,EAAAlU,EAAAC,GAGA,MAFAD,MAAA,EACAC,KAAA,MACAiU,EAAA,OAAAA,EAAAlU,GAAAkU,EAAAjU,GAAA,iBAAAiU,IAAA8F,MAAA9F,IAtaA,GAAAkS,IACAiC,UAAA,SACAC,aAAA,SACAC,KAAA,SACAC,WAAA,SACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,SACAC,eAAA,SACAC,KAAA,SACAC,WAAA,SACAC,MAAA,SACAC,UAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,MAAA,SACAC,eAAA,SACAC,SAAA,SACAC,QAAA,SACAC,KAAA,SACAC,SAAA,SACAC,SAAA,SACAC,cAAA,SACAC,SAAA,SACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,eAAA,SACAC,WAAA,SACAC,WAAA,SACAC,QAAA,SACAC,WAAA,SACAC,aAAA,SACAC,cAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,SAAA,SACAC,YAAA,SACAC,QAAA,SACAC,WAAA,SACAC,SAAA,SACAC,UAAA,SACAC,YAAA,SACAC,YAAA,SACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,SACAC,MAAA,SACAC,YAAA,SACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,SACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,SACAC,aAAA,SACAC,eAAA,SACAC,eAAA,SACAC,eAAA,SACAC,YAAA,SACAC,KAAA,SACAC,UAAA,SACAC,MAAA,SACAC,QAAA,SACAC,OAAA,SACAC,iBAAA,SACAC,WAAA,SACAC,aAAA,SACAC,aAAA,SACAC,eAAA,SACAC,gBAAA,SACAC,kBAAA,SACAC,gBAAA,SACAC,gBAAA,SACAC,aAAA,SACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,SACAC,QAAA,SACAC,MAAA,SACAC,UAAA,SACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,SACAC,cAAA,SACAC,IAAA,SACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,OAAA,SACAC,WAAA,SACAC,SAAA,SACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,SACAC,UAAA,SACAC,UAAA,SACAC,KAAA,SACAC,YAAA,SACAC,UAAA,SACAC,IAAA,SACAC,KAAA,SACAC,QAAA,SACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,UAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAEAxK,IACAC,GAAA,+CACAC,QAAA,SAAAuK,GACA,OAAAC,SAAAD,EAAA,OAAAC,SAAAD,EAAA,OAAAC,SAAAD,EAAA,WAGAxK,GAAA,+DACAC,QAAA,SAAAuK,GACA,OAAAC,SAAAD,EAAA,OAAAC,SAAAD,EAAA,OAAAC,SAAAD,EAAA,OAAAvX,WAAAuX,EAAA,QAGAxK,GAAA,6CACAC,QAAA,SAAAuK,GACA,OAAAC,SAAAD,EAAA,OAAAC,SAAAD,EAAA,OAAAC,SAAAD,EAAA,WAGAxK,GAAA,6CACAC,QAAA,SAAAuK,GACA,OAAAC,SAAAD,EAAA,GAAAA,EAAA,OAAAC,SAAAD,EAAA,GAAAA,EAAA,OAAAC,SAAAD,EAAA,GAAAA,EAAA,WAGAxK,GAAA,+CACAC,QAAA,SAAAuK,GACA,GAAAx5B,GAAAy5B,SAAAD,EAAA,OACAh6B,EAAAi6B,SAAAD,EAAA,OACA35B,EAAA45B,SAAAD,EAAA,OACAE,EAAAlK,EAAAxvB,EAAAR,EAAAK,EACA,QAAA65B,EAAA,GAAAA,EAAA,GAAAA,EAAA,MAAA15B,EAAAR,EAAAK,OAGAmvB,GAAA,+CACAC,QAAA,SAAAuK,GACA,GAAAx5B,GAAAy5B,SAAAD,EAAA,OACAh6B,EAAAi6B,SAAAD,EAAA,OACA5K,EAAA6K,SAAAD,EAAA,OACAE,EAAArJ,EAAArwB,EAAAR,EAAAovB,EACA,QAAA8K,EAAA,GAAAA,EAAA,GAAAA,EAAA,WAAA15B,EAAAR,EAAAovB,OAqPA1D,EAAA/rB,KAAAC,KACA3H,GAAAO,WACA2hC,YAAAliC,EACAmiC,UAAA,SAAA56B,GAEA,MADAA,MAAA,GACAnG,KAAAghC,MAAA76B,GAAA8F,SAEAg1B,OAAA,SAAA96B,GAEA,MADAA,MAAA,GACAnG,KAAAghC,OAAA76B,GAAA8F,SAEA+0B,MAAA,SAAA76B,GACA,GAAA+mB,GAAA,GAAAtuB,EAIA,OAHAsuB,GAAA9iB,EAAAwrB,EAAA51B,KAAAoK,EAAAjE,GACA+mB,EAAA7iB,EAAAurB,EAAA51B,KAAAqK,EAAAlE,GACA+mB,EAAA5iB,EAAAsrB,EAAA51B,KAAAsK,EAAAnE,GACA+mB,GAEAgU,MAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAF,YAAAviC,GAAAuiC,EAAA,GAAAviC,GAAAuiC,GACAjU,EAAA,GAAAtuB,EAIA,OAHAsuB,GAAA9iB,EAAAwrB,EAAAvD,EAAAryB,KAAAoK,GAAA,EAAAg3B,GAAAC,EAAAj3B,EAAAg3B,IACAlU,EAAA7iB,EAAAurB,EAAAvD,EAAAryB,KAAAqK,GAAA,EAAA+2B,GAAAC,EAAAh3B,EAAA+2B,IACAlU,EAAA5iB,EAAAsrB,EAAAvD,EAAAryB,KAAAsK,GAAA,EAAA82B,GAAAC,EAAA/2B,EAAA82B,IACAlU,GAEAjhB,MAAA,WACA,MAAAsqB,GAAAv2B,KAAAoK,EAAApK,KAAAqK,EAAArK,KAAAsK,IAEA0B,aAAA,WAEA,UAAApN,GAAA,OADA+3B,EAAA32B,KAAA0G,IAAAS,EAAA,SACAoD,KAAA,WAEAsH,WAAA,SAAAD,GACA,2CAA+Cia,KAAAja,IAE/CE,WAAA,SAAA1H,EAAAC,EAAAC,GACA,SAAAotB,EAAAttB,IAAAstB,EAAArtB,IAAAqtB,EAAAptB,KAKAwG,aAAA,SAAA7I,GACA,QAAAqhB,MAAArhB,MAAA,GAAAA,EAAA,oBAAAA,KAKAlE,gBAAA,EACAu9B,QAAA,SAAAxL,GACA,GAAA5rB,GAAA,GAAAtL,GACAiiC,EAAArJ,EAAA1B,EAAA3uB,EAAA2uB,EAAAnvB,EAAAmvB,EAAAC,EAIA,OAHA7rB,GAAAE,EAAAy2B,EAAA,GACA32B,EAAAG,EAAAw2B,EAAA,GACA32B,EAAAI,EAAAu2B,EAAA,GACA32B,IAGA7L,EAAAC,QAAAM,GdujGM2iC,IACA,SAAUljC,EAAQC,EAASC,GAEjC,Ye1hHA,IAAAijC,GAAAxhC,WAAAwhC,WAAA,WACA,GAAAC,GAAAvrB,OAAAwrB,iBACUC,uBAAgBC,QAAA,SAAAC,EAAAv3B,GAAsCu3B,EAAAF,UAAAr3B,IAChE,SAAAu3B,EAAAv3B,GAAyB,OAAA+L,KAAA/L,KAAAgM,eAAAD,KAAAwrB,EAAAxrB,GAAA/L,EAAA+L,IACzB,iBAAAwrB,EAAAv3B,GAEA,QAAAw3B,KAAuB9hC,KAAA8gC,YAAAe,EADvBJ,EAAAI,EAAAv3B,GAEAu3B,EAAA1iC,UAAA,OAAAmL,EAAA4L,OAAA6rB,OAAAz3B,IAAAw3B,EAAA3iC,UAAAmL,EAAAnL,UAAA,GAAA2iC,OAGA5rB,QAAAC,eAAA7X,EAAA,cAA8CyE,OAAA,GAC9C,IAAAwT,GAAAhY,EAAA,MACAyjC,EAAAzjC,EAAA,IACA0jC,EAAA1jC,EAAA,IACAmB,EAAA,SAAAwiC,GAEA,QAAAxiC,KACA,GAAAgb,GAAA,OAAAwnB,KAAAtV,MAAA5sB,KAAAsd,YAAAtd,IAeA,OAdA0a,GAAAynB,aAAA5rB,EAAA/X,QACAkc,EAAA0nB,WACAC,cAAA,SACAte,aAAA,SAEArJ,EAAA4nB,iBACAC,WAAA,yBACAtnB,OAAA,uBACA2E,UAAA,4BAEA2iB,WAAA,gBACAtnB,OAAA,cACA2E,UAAA,mBAEAlF,EASA,MA1BA8mB,GAAA9hC,EAAAwiC,GAmBAhsB,OAAAC,eAAAzW,EAAAP,UAAA,YACAm0B,IAAA,WACA,MAAAtzB,MAAAwiC,WAEAC,YAAA,EACAC,cAAA,IAEAhjC,GACCuiC,EAAAU,UACDrkC,GAAAoB,WACAA,EAAAkjC,WACA5qB,kBAAAgqB,EAAAa,UAAAC,KACAC,UAAAf,EAAAa,UAAAG,OACA9qB,mBAAA8pB,EAAAa,UAAAC,KACApqB,gBAAAspB,EAAAa,UAAAG,OACA3hC,eAAA2gC,EAAAa,UAAAI,OACA,YACA,eAEAtqB,iBAAAqpB,EAAAa,UAAAG,OACA/qB,eAAA+pB,EAAAa,UAAAC,KACAvmB,SAAAylB,EAAAa,UAAAC,KACA1hC,iBAAA4gC,EAAAa,UAAAC,KACAI,YAAAlB,EAAAa,UAAAM,OACAhgC,kBAAA6+B,EAAAa,UAAAC,KACAlhC,OAAAogC,EAAAa,UAAAO,WACApB,EAAAa,UAAAQ,KACArB,EAAAa,UAAArf,OACAwe,EAAAa,UAAAG,SAEAM,KAAAtB,EAAAa,UAAAG,OACA1mB,kBAAA0lB,EAAAa,UAAAC,KACAS,UAAAvB,EAAAa,UAAAM,OACAxP,QAAAqO,EAAAa,UAAAC,KACAxhC,QAAA0gC,EAAAa,UAAArf,OACAne,KAAA28B,EAAAa,UAAAG,OACArR,SAAAqQ,EAAAa,UAAAQ,KACAvrB,SAAAkqB,EAAAa,UAAAQ,KACAG,OAAAxB,EAAAa,UAAAQ,KACAI,MAAAzB,EAAAa,UAAAQ,KACAK,YAAA1B,EAAAa,UAAAQ,KACAM,WAAA3B,EAAAa,UAAAQ,KACAO,UAAA5B,EAAAa,UAAAQ,KACAQ,WAAA7B,EAAAa,UAAAQ,KACA/kB,cAAA0jB,EAAAa,UAAAQ,KACAS,QAAA9B,EAAAa,UAAAQ,KACAU,UAAA/B,EAAAa,UAAAQ,KACAW,WAAAhC,EAAAa,UAAAQ,KACAY,QAAAjC,EAAAa,UAAAQ,KACAxrB,SAAAmqB,EAAAa,UAAAQ,KACAa,gBAAAlC,EAAAa,UAAAQ,KACAc,QAAAnC,EAAAa,UAAAQ,KACA//B,eAAA0+B,EAAAa,UAAAQ,KACAtrB,OAAAiqB,EAAAa,UAAAC,KACAsB,YAAApC,EAAAa,UAAAG,OACAqB,SAAArC,EAAAa,UAAAC,KACAvyB,WAAAyxB,EAAAa,UAAAC,KACA1/B,YAAA4+B,EAAAa,UAAAI,OACA,WACA,aACA,WAEAqB,SAAAtC,EAAAa,UAAArf,OACArU,KAAA6yB,EAAAa,UAAAG,OACAnP,gBAAAmO,EAAAa,UAAAM,OACAoB,sBAAAvC,EAAAa,UAAAI,OACA,SACA,SAEAlgC,MAAAi/B,EAAAa,UAAAG,OACAwB,QAAAxC,EAAAa,UAAAC,KACAjhC,MAAAmgC,EAAAa,UAAAO,WACApB,EAAAa,UAAAQ,KACArB,EAAAa,UAAArf,OACAwe,EAAAa,UAAAG,UAGA1kC,EAAAE,QAAAkB","file":"static/js/5.chunk.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/color_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(1106);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/color_box/color_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    Color = __webpack_require__(823),\r\n    ColorView = __webpack_require__(1107),\r\n    extend = __webpack_require__(3).extend,\r\n    isFunction = __webpack_require__(4).isFunction,\r\n    registerComponent = __webpack_require__(16),\r\n    DropDownEditor = __webpack_require__(742);\r\nvar COLOR_BOX_CLASS = \"dx-colorbox\",\r\n    COLOR_BOX_INPUT_CLASS = COLOR_BOX_CLASS + \"-input\",\r\n    COLOR_BOX_INPUT_CONTAINER_CLASS = COLOR_BOX_INPUT_CLASS + \"-container\",\r\n    COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS = COLOR_BOX_CLASS + \"-color-result-preview\",\r\n    COLOR_BOX_COLOR_IS_NOT_DEFINED = COLOR_BOX_CLASS + \"-color-is-not-defined\",\r\n    COLOR_BOX_OVERLAY_CLASS = COLOR_BOX_CLASS + \"-overlay\",\r\n    COLOR_BOX_CONTAINER_CELL_CLASS = \"dx-colorview-container-cell\",\r\n    COLOR_BOX_BUTTON_CELL_CLASS = \"dx-colorview-button-cell\",\r\n    COLOR_BOX_BUTTONS_CONTAINER_CLASS = \"dx-colorview-buttons-container\",\r\n    COLOR_BOX_APPLY_BUTTON_CLASS = \"dx-colorview-apply-button\",\r\n    COLOR_BOX_CANCEL_BUTTON_CLASS = \"dx-colorview-cancel-button\";\r\nvar colorEditorPrototype = ColorView.prototype,\r\n    colorUtils = {\r\n        makeTransparentBackground: colorEditorPrototype._makeTransparentBackground.bind(colorEditorPrototype),\r\n        makeRgba: colorEditorPrototype._makeRgba.bind(colorEditorPrototype)\r\n    };\r\nvar ColorBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        var arrowHandler = function(e) {\r\n            e.stopPropagation();\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n        };\r\n        var upArrowHandler = function(e) {\r\n            if (!this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (e.altKey) {\r\n                this.close();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        var downArrowHandler = function(e) {\r\n            if (!this.option(\"opened\") && !e.altKey) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (!this.option(\"opened\") && e.altKey) {\r\n                this._validatedOpening();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        return extend(this.callBase(), {\r\n            tab: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._colorView._rgbInputs[0].focus()\r\n                }\r\n            },\r\n            enter: this._enterKeyHandler,\r\n            leftArrow: arrowHandler,\r\n            rightArrow: arrowHandler,\r\n            upArrow: upArrowHandler,\r\n            downArrow: downArrowHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            editAlphaChannel: false,\r\n            applyValueMode: \"useButtons\",\r\n            keyStep: 1,\r\n            fieldTemplate: null,\r\n            onApplyButtonClick: null,\r\n            onCancelButtonClick: null,\r\n            buttonsLocation: \"bottom after\"\r\n        })\r\n    },\r\n    _popupConfig: function() {\r\n        return extend(this.callBase(), {\r\n            height: \"auto\",\r\n            width: \"\"\r\n        })\r\n    },\r\n    _contentReadyHandler: function() {\r\n        this._createColorView();\r\n        this._addPopupBottomClasses()\r\n    },\r\n    _addPopupBottomClasses: function() {\r\n        var $popupBottom = this._popup.bottomToolbar();\r\n        if ($popupBottom) {\r\n            $popupBottom.addClass(COLOR_BOX_CONTAINER_CELL_CLASS).addClass(COLOR_BOX_BUTTON_CELL_CLASS).find(\".dx-toolbar-items-container\").addClass(COLOR_BOX_BUTTONS_CONTAINER_CLASS);\r\n            $popupBottom.find(\".dx-popup-done\").addClass(COLOR_BOX_APPLY_BUTTON_CLASS);\r\n            $popupBottom.find(\".dx-popup-cancel\").addClass(COLOR_BOX_CANCEL_BUTTON_CLASS)\r\n        }\r\n    },\r\n    _createColorView: function() {\r\n        this._popup.overlayContent().addClass(COLOR_BOX_OVERLAY_CLASS);\r\n        var $colorView = $(\"<div>\").appendTo(this._popup.$content());\r\n        this._colorView = this._createComponent($colorView, ColorView, this._colorViewConfig());\r\n        eventsEngine.on($colorView, \"focus\", function() {\r\n            this.focus()\r\n        }.bind(this))\r\n    },\r\n    _applyNewColor: function(value) {\r\n        this.option(\"value\", value);\r\n        if (value) {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n        }\r\n        if (this._colorViewEnterKeyPressed) {\r\n            this.close();\r\n            this._colorViewEnterKeyPressed = false\r\n        }\r\n    },\r\n    _colorViewConfig: function() {\r\n        var that = this;\r\n        return {\r\n            value: that.option(\"value\"),\r\n            editAlphaChannel: that.option(\"editAlphaChannel\"),\r\n            applyValueMode: that.option(\"applyValueMode\"),\r\n            focusStateEnabled: that.option(\"focusStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            onEnterKeyPressed: function() {\r\n                that._colorViewEnterKeyPressed = true;\r\n                if (that._colorView.option(\"value\") !== that.option(\"value\")) {\r\n                    that._applyNewColor(that._colorView.option(\"value\"));\r\n                    that.close()\r\n                }\r\n            },\r\n            onValueChanged: function(args) {\r\n                if (colorUtils.makeRgba(args.value) === args.previousValue) {\r\n                    return\r\n                }\r\n                var instantlyMode = \"instantly\" === that.option(\"applyValueMode\");\r\n                if (!instantlyMode && !that._colorViewEnterKeyPressed) {\r\n                    return\r\n                }\r\n                that._applyNewColor(args.value)\r\n            },\r\n            _keyboardProcessor: that._colorViewProcessor\r\n        }\r\n    },\r\n    _enterKeyHandler: function() {\r\n        var newValue = this._input().val(),\r\n            value = this.option(\"value\"),\r\n            oldValue = this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value;\r\n        if (!newValue) {\r\n            return false\r\n        }\r\n        var color = new Color(newValue);\r\n        if (color.colorIsInvalid) {\r\n            this._input().val(oldValue);\r\n            return\r\n        }\r\n        if (newValue !== oldValue) {\r\n            this._applyColorFromInput(newValue);\r\n            this.option(\"value\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(newValue) : newValue)\r\n        }\r\n        if (this._colorView) {\r\n            var colorViewValue = this._colorView.option(\"value\");\r\n            if (value !== colorViewValue) {\r\n                this.option(\"value\", colorViewValue)\r\n            }\r\n        }\r\n        this.close();\r\n        return false\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this._applyNewColor(this._colorView.option(\"value\"));\r\n        if (isFunction(this.option(\"onApplyButtonClick\"))) {\r\n            this.option(\"onApplyButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this._resetInputValue();\r\n        if (isFunction(this.option(\"onCancelButtonClick\"))) {\r\n            this.option(\"onCancelButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._colorViewProcessor = this._keyboardProcessor.attachChildProcessor();\r\n        if (this._colorView) {\r\n            this._colorView.option(\"_keyboardProcessor\", this._colorViewProcessor);\r\n            return\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(COLOR_BOX_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._input().addClass(COLOR_BOX_INPUT_CLASS);\r\n        this._renderColorPreview()\r\n    },\r\n    _renderColorPreview: function() {\r\n        this.$element().wrapInner($(\"<div>\").addClass(COLOR_BOX_INPUT_CONTAINER_CLASS));\r\n        this._$colorBoxInputContainer = this.$element().children().eq(0);\r\n        this._$colorResultPreview = $(\"<div>\").addClass(COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS).appendTo(this._$colorBoxInputContainer);\r\n        if (!this.option(\"value\")) {\r\n            this._$colorBoxInputContainer.addClass(COLOR_BOX_COLOR_IS_NOT_DEFINED)\r\n        } else {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, this.option(\"value\"))\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.option(\"value\");\r\n        this.option(\"text\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value);\r\n        this.callBase()\r\n    },\r\n    _resetInputValue: function() {\r\n        var $input = this._input(),\r\n            value = this.option(\"value\");\r\n        $input.val(value);\r\n        this._colorView && this._colorView.option(\"value\", value)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var value = this._input().val();\r\n        if (value) {\r\n            value = this._applyColorFromInput(value);\r\n            this._colorView && this._colorView.option(\"value\", value)\r\n        }\r\n        this.callBase(e, value)\r\n    },\r\n    _applyColorFromInput: function(value) {\r\n        var newColor = new Color(value);\r\n        if (newColor.colorIsInvalid) {\r\n            this._resetInputValue();\r\n            value = this.option(\"value\")\r\n        }\r\n        return value\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value,\r\n            name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._$colorBoxInputContainer.toggleClass(COLOR_BOX_COLOR_IS_NOT_DEFINED, !value);\r\n                if (value) {\r\n                    colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n                } else {\r\n                    this._$colorResultPreview.removeAttr(\"style\")\r\n                }\r\n                if (this._colorView) {\r\n                    this._colorView.option(\"value\", value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n                this.callBase(args);\r\n                this._popup && this._addPopupBottomClasses();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n            case \"onCancelButtonClick\":\r\n            case \"onApplyButtonClick\":\r\n            case \"keyStep\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                break;\r\n            case \"applyValueMode\":\r\n                this.callBase(args);\r\n                break;\r\n            case \"rtlEnabled\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorBox\", ColorBox);\r\nmodule.exports = ColorBox;\r\n\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/color_box/color_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    translator = __webpack_require__(19),\r\n    extend = __webpack_require__(3).extend,\r\n    Color = __webpack_require__(823),\r\n    messageLocalization = __webpack_require__(24),\r\n    devices = __webpack_require__(14),\r\n    registerComponent = __webpack_require__(16),\r\n    Editor = __webpack_require__(140),\r\n    NumberBox = __webpack_require__(745),\r\n    TextBox = __webpack_require__(337),\r\n    Draggable = __webpack_require__(1108),\r\n    clickEvent = __webpack_require__(25);\r\nvar COLOR_VIEW_CLASS = \"dx-colorview\",\r\n    COLOR_VIEW_CONTAINER_CLASS = \"dx-colorview-container\",\r\n    COLOR_VIEW_ROW_CLASS = \"dx-colorview-container-row\",\r\n    COLOR_VIEW_CELL_CLASS = \"dx-colorview-container-cell\",\r\n    COLOR_VIEW_PALETTE_CLASS = \"dx-colorview-palette\",\r\n    COLOR_VIEW_PALETTE_CELL_CLASS = \"dx-colorview-palette-cell\",\r\n    COLOR_VIEW_PALETTE_HANDLE_CLASS = \"dx-colorview-palette-handle\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_CLASS = \"dx-colorview-palette-gradient\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_WHITE_CLASS = \"dx-colorview-palette-gradient-white\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_BLACK_CLASS = \"dx-colorview-palette-gradient-black\",\r\n    COLOR_VIEW_HUE_SCALE_CLASS = \"dx-colorview-hue-scale\",\r\n    COLOR_VIEW_HUE_SCALE_CELL_CLASS = \"dx-colorview-hue-scale-cell\",\r\n    COLOR_VIEW_HUE_SCALE_HANDLE_CLASS = \"dx-colorview-hue-scale-handle\",\r\n    COLOR_VIEW_HUE_SCALE_WRAPPER_CLASS = \"dx-colorview-hue-scale-wrapper\",\r\n    COLOR_VIEW_CONTROLS_CONTAINER_CLASS = \"dx-colorview-controls-container\",\r\n    COLOR_VIEW_RED_LABEL_CLASS = \"dx-colorview-label-red\",\r\n    COLOR_VIEW_GREEN_LABEL_CLASS = \"dx-colorview-label-green\",\r\n    COLOR_VIEW_BLUE_LABEL_CLASS = \"dx-colorview-label-blue\",\r\n    COLOR_VIEW_HEX_LABEL_CLASS = \"dx-colorview-label-hex\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_SCALE_CLASS = \"dx-colorview-alpha-channel-scale\",\r\n    COLOR_VIEW_APLHA_CHANNEL_ROW_CLASS = \"dx-colorview-alpha-channel-row\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_SCALE_WRAPPER_CLASS = \"dx-colorview-alpha-channel-wrapper\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_LABEL_CLASS = \"dx-colorview-alpha-channel-label\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_HANDLE_CLASS = \"dx-colorview-alpha-channel-handle\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_CELL_CLASS = \"dx-colorview-alpha-channel-cell\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_BORDER_CLASS = \"dx-colorview-alpha-channel-border\",\r\n    COLOR_VIEW_COLOR_PREVIEW = \"dx-colorview-color-preview\",\r\n    COLOR_VIEW_COLOR_PREVIEW_CONTAINER_CLASS = \"dx-colorview-color-preview-container\",\r\n    COLOR_VIEW_COLOR_PREVIEW_CONTAINER_INNER_CLASS = \"dx-colorview-color-preview-container-inner\",\r\n    COLOR_VIEW_COLOR_PREVIEW_COLOR_CURRENT = \"dx-colorview-color-preview-color-current\",\r\n    COLOR_VIEW_COLOR_PREVIEW_COLOR_NEW = \"dx-colorview-color-preview-color-new\";\r\nvar ColorView = Editor.inherit({\r\n    _supportedKeys: function() {\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var that = this,\r\n            getHorizontalPaletteStep = function(e) {\r\n                var step = 100 / that._paletteWidth;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return Math.round(step)\r\n            },\r\n            updateHorizontalPaletteValue = function(step) {\r\n                var value = that._currentColor.hsv.s + step;\r\n                if (value > 100) {\r\n                    value = 100\r\n                } else {\r\n                    if (value < 0) {\r\n                        value = 0\r\n                    }\r\n                }\r\n                that._currentColor.hsv.s = value;\r\n                updatePaletteValue()\r\n            },\r\n            getVerticalPaletteStep = function(e) {\r\n                var step = 100 / that._paletteHeight;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return Math.round(step)\r\n            },\r\n            updateVerticalPaletteValue = function(step) {\r\n                var value = that._currentColor.hsv.v + step;\r\n                if (value > 100) {\r\n                    value = 100\r\n                } else {\r\n                    if (value < 0) {\r\n                        value = 0\r\n                    }\r\n                }\r\n                that._currentColor.hsv.v = value;\r\n                updatePaletteValue()\r\n            },\r\n            updatePaletteValue = function() {\r\n                that._placePaletteHandle();\r\n                that._updateColorFromHsv(that._currentColor.hsv.h, that._currentColor.hsv.s, that._currentColor.hsv.v)\r\n            },\r\n            getHueScaleStep = function(e) {\r\n                var step = 360 / (that._hueScaleWrapperHeight - that._hueScaleHandleHeight);\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return step\r\n            },\r\n            updateHueScaleValue = function(step) {\r\n                that._currentColor.hsv.h += step;\r\n                that._placeHueScaleHandle();\r\n                var handleLocation = translator.locate(that._$hueScaleHandle);\r\n                that._updateColorHue(handleLocation.top + that._hueScaleHandleHeight / 2)\r\n            },\r\n            getAlphaScaleStep = function(e) {\r\n                var step = 1 / that._alphaChannelScaleWorkWidth;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > .01 ? step : .01;\r\n                step = isRTL ? -step : step;\r\n                return step\r\n            },\r\n            updateAlphaScaleValue = function(step) {\r\n                that._currentColor.a += step;\r\n                that._placeAlphaChannelHandle();\r\n                var handleLocation = translator.locate(that._$alphaChannelHandle);\r\n                that._calculateColorTransparencyByScaleWidth(handleLocation.left + that._alphaChannelHandleWidth / 2)\r\n            };\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (this._currentColor.hsv.h <= 360 && !this._isTopColorHue) {\r\n                        updateHueScaleValue(getHueScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.v < 100) {\r\n                        updateVerticalPaletteValue(getVerticalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (this._currentColor.hsv.h >= 0) {\r\n                        if (this._isTopColorHue) {\r\n                            this._currentColor.hsv.h = 360\r\n                        }\r\n                        updateHueScaleValue(-getHueScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.v > 0) {\r\n                        updateVerticalPaletteValue(-getVerticalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            rightArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (isRTL ? this._currentColor.a < 1 : this._currentColor.a > 0 && this.option(\"editAlphaChannel\")) {\r\n                        updateAlphaScaleValue(-getAlphaScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.s < 100) {\r\n                        updateHorizontalPaletteValue(getHorizontalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            leftArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (isRTL ? this._currentColor.a > 0 : this._currentColor.a < 1 && this.option(\"editAlphaChannel\")) {\r\n                        updateAlphaScaleValue(getAlphaScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.s > 0) {\r\n                        updateHorizontalPaletteValue(-getHorizontalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            enter: function(e) {\r\n                this._fireEnterKeyPressed(e)\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            onEnterKeyPressed: void 0,\r\n            editAlphaChannel: false,\r\n            keyStep: 1,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initColorAndOpacity();\r\n        this._initEnterKeyPressedAction()\r\n    },\r\n    _initEnterKeyPressedAction: function() {\r\n        this._onEnterKeyPressedAction = this._createActionByOption(\"onEnterKeyPressed\")\r\n    },\r\n    _fireEnterKeyPressed: function(e) {\r\n        if (!this._onEnterKeyPressedAction) {\r\n            return\r\n        }\r\n        this._onEnterKeyPressedAction({\r\n            event: e\r\n        })\r\n    },\r\n    _initColorAndOpacity: function() {\r\n        this._setCurrentColor(this.option(\"value\"))\r\n    },\r\n    _setCurrentColor: function(value) {\r\n        value = value || \"#000000\";\r\n        var newColor = new Color(value);\r\n        if (!newColor.colorIsInvalid) {\r\n            if (!this._currentColor || this._makeRgba(this._currentColor) !== this._makeRgba(newColor)) {\r\n                this._currentColor = newColor;\r\n                if (this._$currentColor) {\r\n                    this._makeTransparentBackground(this._$currentColor, newColor)\r\n                }\r\n            }\r\n        } else {\r\n            this.option(\"value\", this._currentColor.baseColor)\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(COLOR_VIEW_CLASS);\r\n        this._renderColorPickerContainer()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderPalette();\r\n        this._renderHueScale();\r\n        this._renderControlsContainer();\r\n        this._renderControls();\r\n        this._renderAlphaChannelElements()\r\n    },\r\n    _makeTransparentBackground: function($el, color) {\r\n        if (!(color instanceof Color)) {\r\n            color = new Color(color)\r\n        }\r\n        $el.css(\"backgroundColor\", this._makeRgba(color))\r\n    },\r\n    _makeRgba: function(color) {\r\n        if (!(color instanceof Color)) {\r\n            color = new Color(color)\r\n        }\r\n        return \"rgba(\" + [color.r, color.g, color.b, color.a].join(\", \") + \")\"\r\n    },\r\n    _renderValue: function() {\r\n        this.callBase(this.option(\"editAlphaChannel\") ? this._makeRgba(this._currentColor) : this.option(\"value\"))\r\n    },\r\n    _renderColorPickerContainer: function() {\r\n        var $parent = this.$element();\r\n        this._$colorPickerContainer = $(\"<div>\").addClass(COLOR_VIEW_CONTAINER_CLASS).appendTo($parent);\r\n        this._renderHtmlRows()\r\n    },\r\n    _renderHtmlRows: function(updatedOption) {\r\n        var $renderedRows = this._$colorPickerContainer.find(\".\" + COLOR_VIEW_ROW_CLASS),\r\n            renderedRowsCount = $renderedRows.length,\r\n            rowCount = this.option(\"editAlphaChannel\") ? 2 : 1,\r\n            delta = renderedRowsCount - rowCount;\r\n        if (delta > 0) {\r\n            $renderedRows.eq(-1).remove()\r\n        }\r\n        if (delta < 0) {\r\n            delta = Math.abs(delta);\r\n            var i, rows = [];\r\n            for (i = 0; i < delta; i++) {\r\n                rows.push($(\"<div>\").addClass(COLOR_VIEW_ROW_CLASS))\r\n            }\r\n            if (renderedRowsCount) {\r\n                for (i = 0; i < rows.length; i++) {\r\n                    $renderedRows.eq(0).after(rows[i])\r\n                }\r\n            } else {\r\n                this._$colorPickerContainer.append(rows)\r\n            }\r\n        }\r\n    },\r\n    _renderHtmlCellInsideRow: function(index, $rowParent, additionalClass) {\r\n        return $(\"<div>\").addClass(COLOR_VIEW_CELL_CLASS).addClass(additionalClass).appendTo($rowParent.find(\".\" + COLOR_VIEW_ROW_CLASS).eq(index))\r\n    },\r\n    _renderPalette: function() {\r\n        var $paletteCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer, COLOR_VIEW_PALETTE_CELL_CLASS),\r\n            $paletteGradientWhite = $(\"<div>\").addClass([COLOR_VIEW_PALETTE_GRADIENT_CLASS, COLOR_VIEW_PALETTE_GRADIENT_WHITE_CLASS].join(\" \")),\r\n            $paletteGradientBlack = $(\"<div>\").addClass([COLOR_VIEW_PALETTE_GRADIENT_CLASS, COLOR_VIEW_PALETTE_GRADIENT_BLACK_CLASS].join(\" \"));\r\n        this._$palette = $(\"<div>\").addClass(COLOR_VIEW_PALETTE_CLASS).css(\"backgroundColor\", this._currentColor.getPureColor().toHex()).appendTo($paletteCell);\r\n        this._paletteHeight = this._$palette.height();\r\n        this._paletteWidth = this._$palette.width();\r\n        this._renderPaletteHandle();\r\n        this._$palette.append([$paletteGradientWhite, $paletteGradientBlack])\r\n    },\r\n    _renderPaletteHandle: function() {\r\n        this._$paletteHandle = $(\"<div>\").addClass(COLOR_VIEW_PALETTE_HANDLE_CLASS).appendTo(this._$palette);\r\n        this._createComponent(this._$paletteHandle, Draggable, {\r\n            area: this._$palette,\r\n            allowMoveByClick: true,\r\n            boundOffset: function() {\r\n                return -this._paletteHandleHeight / 2\r\n            }.bind(this),\r\n            onDrag: function() {\r\n                var paletteHandlePosition = translator.locate(this._$paletteHandle);\r\n                this._updateByDrag = true;\r\n                this._updateColorFromHsv(this._currentColor.hsv.h, this._calculateColorSaturation(paletteHandlePosition), this._calculateColorValue(paletteHandlePosition))\r\n            }.bind(this)\r\n        });\r\n        this._paletteHandleWidth = this._$paletteHandle.width();\r\n        this._paletteHandleHeight = this._$paletteHandle.height();\r\n        this._placePaletteHandle()\r\n    },\r\n    _placePaletteHandle: function() {\r\n        translator.move(this._$paletteHandle, {\r\n            left: Math.round(this._paletteWidth * this._currentColor.hsv.s / 100 - this._paletteHandleWidth / 2),\r\n            top: Math.round(this._paletteHeight - this._paletteHeight * this._currentColor.hsv.v / 100 - this._paletteHandleHeight / 2)\r\n        })\r\n    },\r\n    _calculateColorValue: function(paletteHandlePosition) {\r\n        var value = Math.floor(paletteHandlePosition.top + this._paletteHandleHeight / 2);\r\n        return 100 - Math.round(100 * value / this._paletteHeight)\r\n    },\r\n    _calculateColorSaturation: function(paletteHandlePosition) {\r\n        var saturation = Math.floor(paletteHandlePosition.left + this._paletteHandleWidth / 2);\r\n        return Math.round(100 * saturation / this._paletteWidth)\r\n    },\r\n    _updateColorFromHsv: function(hue, saturation, value) {\r\n        var a = this._currentColor.a;\r\n        this._currentColor = new Color(\"hsv(\" + [hue, saturation, value].join(\",\") + \")\");\r\n        this._currentColor.a = a;\r\n        this._updateColorParamsAndColorPreview();\r\n        this.applyColor()\r\n    },\r\n    _renderHueScale: function() {\r\n        var $hueScaleCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer, COLOR_VIEW_HUE_SCALE_CELL_CLASS);\r\n        this._$hueScaleWrapper = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_WRAPPER_CLASS).appendTo($hueScaleCell);\r\n        this._$hueScale = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_CLASS).appendTo(this._$hueScaleWrapper);\r\n        this._hueScaleHeight = this._$hueScale.height();\r\n        this._hueScaleWrapperHeight = this._$hueScaleWrapper.outerHeight();\r\n        this._renderHueScaleHandle()\r\n    },\r\n    _renderHueScaleHandle: function() {\r\n        this._$hueScaleHandle = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_HANDLE_CLASS).appendTo(this._$hueScaleWrapper);\r\n        this._createComponent(this._$hueScaleHandle, Draggable, {\r\n            area: this._$hueScaleWrapper,\r\n            allowMoveByClick: true,\r\n            direction: \"vertical\",\r\n            onDrag: function() {\r\n                this._updateByDrag = true;\r\n                this._updateColorHue(translator.locate(this._$hueScaleHandle).top + this._hueScaleHandleHeight / 2)\r\n            }.bind(this)\r\n        });\r\n        this._hueScaleHandleHeight = this._$hueScaleHandle.height();\r\n        this._placeHueScaleHandle()\r\n    },\r\n    _placeHueScaleHandle: function() {\r\n        var hueScaleHeight = this._hueScaleWrapperHeight,\r\n            handleHeight = this._hueScaleHandleHeight,\r\n            top = (hueScaleHeight - handleHeight) * (360 - this._currentColor.hsv.h) / 360;\r\n        if (hueScaleHeight < top + handleHeight) {\r\n            top = hueScaleHeight - handleHeight\r\n        }\r\n        if (top < 0) {\r\n            top = 0\r\n        }\r\n        translator.move(this._$hueScaleHandle, {\r\n            top: Math.round(top)\r\n        })\r\n    },\r\n    _updateColorHue: function(handlePosition) {\r\n        var hue = 360 - Math.round(360 * (handlePosition - this._hueScaleHandleHeight / 2) / (this._hueScaleWrapperHeight - this._hueScaleHandleHeight)),\r\n            saturation = this._currentColor.hsv.s,\r\n            value = this._currentColor.hsv.v;\r\n        this._isTopColorHue = false;\r\n        hue = hue < 0 ? 0 : hue;\r\n        if (hue >= 360) {\r\n            this._isTopColorHue = true;\r\n            hue = 0\r\n        }\r\n        this._updateColorFromHsv(hue, saturation, value);\r\n        this._$palette.css(\"backgroundColor\", this._currentColor.getPureColor().toHex())\r\n    },\r\n    _renderControlsContainer: function() {\r\n        var $controlsContainerCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer);\r\n        this._$controlsContainer = $(\"<div>\").addClass(COLOR_VIEW_CONTROLS_CONTAINER_CLASS).appendTo($controlsContainerCell)\r\n    },\r\n    _renderControls: function() {\r\n        this._renderColorsPreview();\r\n        this._renderRgbInputs();\r\n        this._renderHexInput()\r\n    },\r\n    _renderColorsPreview: function() {\r\n        var $colorsPreviewContainer = $(\"<div>\").addClass(COLOR_VIEW_COLOR_PREVIEW_CONTAINER_CLASS).appendTo(this._$controlsContainer);\r\n        var $colorsPreviewContainerInner = $(\"<div>\").addClass(COLOR_VIEW_COLOR_PREVIEW_CONTAINER_INNER_CLASS).appendTo($colorsPreviewContainer);\r\n        this._$currentColor = $(\"<div>\").addClass([COLOR_VIEW_COLOR_PREVIEW, COLOR_VIEW_COLOR_PREVIEW_COLOR_CURRENT].join(\" \"));\r\n        this._$newColor = $(\"<div>\").addClass([COLOR_VIEW_COLOR_PREVIEW, COLOR_VIEW_COLOR_PREVIEW_COLOR_NEW].join(\" \"));\r\n        this._makeTransparentBackground(this._$currentColor, this._currentColor);\r\n        this._makeTransparentBackground(this._$newColor, this._currentColor);\r\n        $colorsPreviewContainerInner.append([this._$currentColor, this._$newColor])\r\n    },\r\n    _renderAlphaChannelElements: function() {\r\n        if (this.option(\"editAlphaChannel\")) {\r\n            this._$colorPickerContainer.find(\".\" + COLOR_VIEW_ROW_CLASS).eq(1).addClass(COLOR_VIEW_APLHA_CHANNEL_ROW_CLASS);\r\n            this._renderAlphaChannelScale();\r\n            this._renderAlphaChannelInput()\r\n        }\r\n    },\r\n    _renderRgbInputs: function() {\r\n        this._rgbInputsWithLabels = [this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.r,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"R\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaRed\"),\r\n            labelClass: COLOR_VIEW_RED_LABEL_CLASS\r\n        }), this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.g,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"G\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaGreen\"),\r\n            labelClass: COLOR_VIEW_GREEN_LABEL_CLASS\r\n        }), this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.b,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"B\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaBlue\"),\r\n            labelClass: COLOR_VIEW_BLUE_LABEL_CLASS\r\n        })];\r\n        this._$controlsContainer.append(this._rgbInputsWithLabels);\r\n        this._rgbInputs = [this._rgbInputsWithLabels[0].find(\".dx-numberbox\").dxNumberBox(\"instance\"), this._rgbInputsWithLabels[1].find(\".dx-numberbox\").dxNumberBox(\"instance\"), this._rgbInputsWithLabels[2].find(\".dx-numberbox\").dxNumberBox(\"instance\")]\r\n    },\r\n    _renderEditorWithLabel: function(options) {\r\n        var $editor = $(\"<div>\");\r\n        var $label = $(\"<label>\").addClass(options.labelClass).text(options.labelText + \":\").append($editor);\r\n        eventsEngine.off($label, clickEvent.name);\r\n        eventsEngine.on($label, clickEvent.name, function(e) {\r\n            e.preventDefault()\r\n        });\r\n        var editorType = options.editorType;\r\n        var editorOptions = extend({\r\n            value: options.value,\r\n            onValueChanged: options.onValueChanged\r\n        }, {\r\n            stylingMode: this.option(\"stylingMode\")\r\n        });\r\n        if (editorType === NumberBox) {\r\n            editorOptions.min = options.min || 0;\r\n            editorOptions.max = options.max || 255;\r\n            editorOptions.step = options.step || 1\r\n        }\r\n        var editor = new editorType($editor, editorOptions);\r\n        editor.registerKeyHandler(\"enter\", function(e) {\r\n            this._fireEnterKeyPressed(e)\r\n        }.bind(this));\r\n        this.setAria(\"label\", options.labelAriaText, $editor);\r\n        return $label\r\n    },\r\n    hexInputOptions: function() {\r\n        return {\r\n            editorType: TextBox,\r\n            value: this._currentColor.toHex().replace(\"#\", \"\"),\r\n            onValueChanged: this._updateColor.bind(this, true),\r\n            labelClass: COLOR_VIEW_HEX_LABEL_CLASS,\r\n            labelText: \"#\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaHex\")\r\n        }\r\n    },\r\n    _renderHexInput: function() {\r\n        this._hexInput = TextBox.getInstance(this._renderEditorWithLabel(this.hexInputOptions()).appendTo(this._$controlsContainer).find(\".dx-textbox\"))\r\n    },\r\n    _renderAlphaChannelScale: function() {\r\n        var $alphaChannelScaleCell = this._renderHtmlCellInsideRow(1, this._$colorPickerContainer, COLOR_VIEW_ALPHA_CHANNEL_CELL_CLASS),\r\n            $alphaChannelBorder = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_BORDER_CLASS).appendTo($alphaChannelScaleCell),\r\n            $alphaChannelScaleWrapper = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_SCALE_WRAPPER_CLASS).appendTo($alphaChannelBorder);\r\n        this._$alphaChannelScale = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_SCALE_CLASS).appendTo($alphaChannelScaleWrapper);\r\n        this._makeCSSLinearGradient(this._$alphaChannelScale);\r\n        this._renderAlphaChannelHandle($alphaChannelScaleCell)\r\n    },\r\n    _makeCSSLinearGradient: function($el) {\r\n        var color = this._currentColor,\r\n            colorAsRgb = [color.r, color.g, color.b].join(\",\"),\r\n            colorAsHex = color.toHex().replace(\"#\", \"\");\r\n        var combineGradientString = function(colorAsRgb, colorAsHex) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\"),\r\n                startColor = \"rgba(\" + colorAsRgb + \", \" + (rtlEnabled ? \"1\" : \"0\") + \")\",\r\n                finishColor = \"rgba(\" + colorAsRgb + \", \" + (rtlEnabled ? \"0\" : \"1\") + \")\",\r\n                startColorIE = \"'#\" + (rtlEnabled ? \"00\" : \"\") + colorAsHex + \"'\",\r\n                finishColorIE = \"'#\" + (rtlEnabled ? \"\" : \"00\") + colorAsHex + \"'\";\r\n            return [\"background-image: -webkit-linear-gradient(180deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: -moz-linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: -o-linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=\" + startColorIE + \", endColorstr=\" + finishColorIE + \")\"].join(\";\")\r\n        };\r\n        $el.attr(\"style\", combineGradientString.call(this, colorAsRgb, colorAsHex))\r\n    },\r\n    _renderAlphaChannelInput: function() {\r\n        var that = this,\r\n            $alphaChannelInputCell = this._renderHtmlCellInsideRow(1, this._$colorPickerContainer);\r\n        that._alphaChannelInput = this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.a,\r\n            max: 1,\r\n            step: .1,\r\n            onValueChanged: function(e) {\r\n                var value = e.value;\r\n                value = that._currentColor.isValidAlpha(value) ? value : that._currentColor.a;\r\n                that._updateColorTransparency(value);\r\n                that._placeAlphaChannelHandle()\r\n            },\r\n            labelClass: COLOR_VIEW_ALPHA_CHANNEL_LABEL_CLASS,\r\n            labelText: \"Alpha\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaAlpha\")\r\n        }).appendTo($alphaChannelInputCell).find(\".dx-numberbox\").dxNumberBox(\"instance\")\r\n    },\r\n    _updateColorTransparency: function(transparency) {\r\n        this._currentColor.a = transparency;\r\n        this._makeTransparentBackground(this._$newColor, this._currentColor);\r\n        this.applyColor()\r\n    },\r\n    _renderAlphaChannelHandle: function($parent) {\r\n        this._$alphaChannelHandle = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_HANDLE_CLASS).appendTo($parent);\r\n        this._createComponent(this._$alphaChannelHandle, Draggable, {\r\n            area: $parent,\r\n            allowMoveByClick: true,\r\n            direction: \"horizontal\",\r\n            onDrag: function() {\r\n                this._updateByDrag = true;\r\n                var $alphaChannelHandle = this._$alphaChannelHandle,\r\n                    alphaChannelHandlePosition = translator.locate($alphaChannelHandle).left + this._alphaChannelHandleWidth / 2;\r\n                this._calculateColorTransparencyByScaleWidth(alphaChannelHandlePosition)\r\n            }.bind(this)\r\n        });\r\n        this._alphaChannelHandleWidth = this._$alphaChannelHandle.width();\r\n        this._alphaChannelScaleWorkWidth = $parent.width() - this._alphaChannelHandleWidth;\r\n        this._placeAlphaChannelHandle()\r\n    },\r\n    _calculateColorTransparencyByScaleWidth: function(handlePosition) {\r\n        var transparency = (handlePosition - this._alphaChannelHandleWidth / 2) / this._alphaChannelScaleWorkWidth,\r\n            rtlEnabled = this.option(\"rtlEnabled\");\r\n        transparency = rtlEnabled ? transparency : 1 - transparency;\r\n        if (handlePosition >= this._alphaChannelScaleWorkWidth + this._alphaChannelHandleWidth / 2) {\r\n            transparency = rtlEnabled ? 1 : 0\r\n        } else {\r\n            if (transparency < 1) {\r\n                transparency = transparency.toFixed(2)\r\n            }\r\n        }\r\n        transparency = Math.max(transparency, 0);\r\n        transparency = Math.min(transparency, 1);\r\n        this._alphaChannelInput.option(\"value\", transparency)\r\n    },\r\n    _placeAlphaChannelHandle: function() {\r\n        var left = this._alphaChannelScaleWorkWidth * (1 - this._currentColor.a);\r\n        if (left < 0) {\r\n            left = 0\r\n        }\r\n        if (this._alphaChannelScaleWorkWidth < left) {\r\n            left = this._alphaChannelScaleWorkWidth\r\n        }\r\n        translator.move(this._$alphaChannelHandle, {\r\n            left: this.option(\"rtlEnabled\") ? this._alphaChannelScaleWorkWidth - left : left\r\n        })\r\n    },\r\n    applyColor: function() {\r\n        var colorValue = this.option(\"editAlphaChannel\") ? this._makeRgba(this._currentColor) : this._currentColor.toHex();\r\n        this._makeTransparentBackground(this._$currentColor, this._currentColor);\r\n        this.option(\"value\", colorValue)\r\n    },\r\n    cancelColor: function() {\r\n        this._initColorAndOpacity();\r\n        this._refreshMarkup()\r\n    },\r\n    _updateColor: function(isHex, e) {\r\n        var rgba, newColor;\r\n        if (isHex) {\r\n            newColor = this._validateHex(\"#\" + this._hexInput.option(\"value\"))\r\n        } else {\r\n            rgba = this._validateRgb();\r\n            if (this._alphaChannelInput) {\r\n                rgba.push(this._alphaChannelInput.option(\"value\"));\r\n                newColor = \"rgba(\" + rgba.join(\", \") + \")\"\r\n            } else {\r\n                newColor = \"rgb(\" + rgba.join(\", \") + \")\"\r\n            }\r\n        }\r\n        if (!this._suppressEditorsValueUpdating) {\r\n            this._currentColor = new Color(newColor);\r\n            this.applyColor();\r\n            this._refreshMarkup()\r\n        }\r\n    },\r\n    _validateHex: function(hex) {\r\n        return this._currentColor.isValidHex(hex) ? hex : this._currentColor.toHex()\r\n    },\r\n    _validateRgb: function() {\r\n        var r = this._rgbInputs[0].option(\"value\"),\r\n            g = this._rgbInputs[1].option(\"value\"),\r\n            b = this._rgbInputs[2].option(\"value\");\r\n        if (!this._currentColor.isValidRGB(r, g, b)) {\r\n            r = this._currentColor.r;\r\n            g = this._currentColor.g;\r\n            b = this._currentColor.b\r\n        }\r\n        return [r, g, b]\r\n    },\r\n    _refreshMarkup: function() {\r\n        this._placeHueScaleHandle();\r\n        this._placePaletteHandle();\r\n        this._updateColorParamsAndColorPreview();\r\n        this._$palette.css(\"backgroundColor\", this._currentColor.getPureColor().toHex());\r\n        if (this._$alphaChannelHandle) {\r\n            this._updateColorTransparency(this._currentColor.a);\r\n            this._placeAlphaChannelHandle()\r\n        }\r\n    },\r\n    _updateColorParamsAndColorPreview: function() {\r\n        this._suppressEditorsValueUpdating = true;\r\n        this._hexInput.option(\"value\", this._currentColor.toHex().replace(\"#\", \"\"));\r\n        this._rgbInputs[0].option(\"value\", this._currentColor.r);\r\n        this._rgbInputs[1].option(\"value\", this._currentColor.g);\r\n        this._rgbInputs[2].option(\"value\", this._currentColor.b);\r\n        this._suppressEditorsValueUpdating = false;\r\n        this._makeTransparentBackground(this._$newColor, this._currentColor);\r\n        if (this.option(\"editAlphaChannel\")) {\r\n            this._makeCSSLinearGradient.call(this, this._$alphaChannelScale);\r\n            this._alphaChannelInput.option(\"value\", this._currentColor.a)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._setCurrentColor(value);\r\n                if (!this._updateByDrag) {\r\n                    this._refreshMarkup()\r\n                }\r\n                this._updateByDrag = false;\r\n                this.callBase(args);\r\n                break;\r\n            case \"onEnterKeyPressed\":\r\n                this._initEnterKeyPressedAction();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n                if (this._$colorPickerContainer) {\r\n                    this._renderHtmlRows(\"editAlphaChannel\");\r\n                    this._renderAlphaChannelElements()\r\n                }\r\n                break;\r\n            case \"keyStep\":\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderControls();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorView\", ColorView);\r\nmodule.exports = ColorView;\r\n\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/draggable.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    window = __webpack_require__(9).getWindow(),\r\n    eventsEngine = __webpack_require__(7),\r\n    stringUtils = __webpack_require__(53),\r\n    registerComponent = __webpack_require__(16),\r\n    translator = __webpack_require__(19),\r\n    dasherize = __webpack_require__(79).dasherize,\r\n    extend = __webpack_require__(3).extend,\r\n    DOMComponent = __webpack_require__(104),\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(31),\r\n    dragEvents = __webpack_require__(149),\r\n    positionUtils = __webpack_require__(138),\r\n    isFunction = __webpack_require__(4).isFunction,\r\n    noop = __webpack_require__(6).noop;\r\nvar DRAGGABLE = \"dxDraggable\",\r\n    DRAGSTART_EVENT_NAME = eventUtils.addNamespace(dragEvents.start, DRAGGABLE),\r\n    DRAG_EVENT_NAME = eventUtils.addNamespace(dragEvents.move, DRAGGABLE),\r\n    DRAGEND_EVENT_NAME = eventUtils.addNamespace(dragEvents.end, DRAGGABLE),\r\n    POINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, DRAGGABLE),\r\n    DRAGGABLE_CLASS = dasherize(DRAGGABLE),\r\n    DRAGGABLE_DRAGGING_CLASS = DRAGGABLE_CLASS + \"-dragging\";\r\nvar Draggable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: noop,\r\n            onDrag: noop,\r\n            onDragEnd: noop,\r\n            immediate: true,\r\n            direction: \"both\",\r\n            area: window,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers()\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this.$element().css(\"position\", \"absolute\"),\r\n            eventHandlers = {},\r\n            allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        eventHandlers[DRAGSTART_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        eventHandlers[DRAG_EVENT_NAME] = this._dragHandler.bind(this);\r\n        eventHandlers[DRAGEND_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        if (allowMoveByClick) {\r\n            eventHandlers[POINTERDOWN_EVENT_NAME] = this._pointerDownHandler.bind(this);\r\n            $element = this._getArea()\r\n        }\r\n        eventsEngine.on($element, eventHandlers, {\r\n            direction: this.option(\"direction\"),\r\n            immediate: this.option(\"immediate\")\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        eventsEngine.off(this.$element(), \".\" + DRAGGABLE);\r\n        eventsEngine.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position) {\r\n        translator.move(this.$element(), position)\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if (eventUtils.needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var areaOffset = this._getAreaOffset($(e.currentTarget)),\r\n            direction = this.option(\"direction\"),\r\n            position = {};\r\n        if (\"horizontal\" === direction || \"both\" === direction) {\r\n            position.left = e.pageX - this.$element().width() / 2 - areaOffset.left\r\n        }\r\n        if (\"vertical\" === direction || \"both\" === direction) {\r\n            position.top = e.pageY - this.$element().height() / 2 - areaOffset.top\r\n        }\r\n        this._move(position);\r\n        this._getAction(\"onDrag\")({\r\n            event: e\r\n        })\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var $area = this._getArea(),\r\n            areaOffset = this._getAreaOffset($area),\r\n            boundOffset = this._getBoundOffset(),\r\n            areaWidth = $area.outerWidth(),\r\n            areaHeight = $area.outerHeight(),\r\n            elementWidth = $element.width(),\r\n            elementHeight = $element.height();\r\n        this._toggleDraggingClass(true);\r\n        var startOffset = {\r\n            left: $element.offset().left - areaOffset.left,\r\n            top: $element.offset().top - areaOffset.top\r\n        };\r\n        this._startPosition = translator.locate($element);\r\n        e.maxLeftOffset = startOffset.left - boundOffset.left;\r\n        e.maxRightOffset = areaWidth - startOffset.left - elementWidth - boundOffset.right;\r\n        e.maxTopOffset = startOffset.top - boundOffset.top;\r\n        e.maxBottomOffset = areaHeight - startOffset.top - elementHeight - boundOffset.bottom;\r\n        this._getAction(\"onDragStart\")({\r\n            event: e\r\n        })\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this.$element().toggleClass(DRAGGABLE_DRAGGING_CLASS, value)\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return stringUtils.quadToObject(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _dragHandler: function(e) {\r\n        var offset = e.offset,\r\n            startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        this._getAction(\"onDrag\")({\r\n            event: e\r\n        })\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        this._toggleDraggingClass(false);\r\n        this._getAction(\"onDragEnd\")({\r\n            event: e\r\n        })\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DRAGGABLE_CLASS)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDrag\":\r\n            case \"onDragEnd\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"direction\":\r\n            case \"disabled\":\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"boundOffset\":\r\n            case \"area\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers()\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nmodule.exports = Draggable;\r\n\n\n/***/ }),\n\n/***/ 722:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-vue/color-box' file instead */\n__export(__webpack_require__(906));\nvar color_box_1 = __webpack_require__(906);\nexports.default = color_box_1.default;\n\n\n/***/ }),\n\n/***/ 742:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_editor.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    AsyncTemplateMixin = __webpack_require__(748),\r\n    eventsEngine = __webpack_require__(7),\r\n    Guid = __webpack_require__(77),\r\n    registerComponent = __webpack_require__(16),\r\n    commonUtils = __webpack_require__(6),\r\n    domUtils = __webpack_require__(13),\r\n    focused = __webpack_require__(52).focused,\r\n    each = __webpack_require__(5).each,\r\n    isDefined = __webpack_require__(4).isDefined,\r\n    extend = __webpack_require__(3).extend,\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    errors = __webpack_require__(35),\r\n    positionUtils = __webpack_require__(138),\r\n    getDefaultAlignment = __webpack_require__(338).getDefaultAlignment,\r\n    messageLocalization = __webpack_require__(24),\r\n    Button = __webpack_require__(42),\r\n    eventUtils = __webpack_require__(8),\r\n    TextBox = __webpack_require__(337),\r\n    clickEvent = __webpack_require__(25),\r\n    FunctionTemplate = __webpack_require__(201),\r\n    Popup = __webpack_require__(139);\r\nvar DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\",\r\n    DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS = \"dx-dropdowneditor-input-wrapper\",\r\n    DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\",\r\n    DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\",\r\n    DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\",\r\n    DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\",\r\n    DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\",\r\n    DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\",\r\n    DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\r\nvar DropDownEditor = TextBox.inherit({\r\n    _supportedKeys: function() {\r\n        var homeEndHandler = function(e) {\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        return extend({}, this.callBase(), {\r\n            tab: function(e) {\r\n                if (!this.option(\"opened\")) {\r\n                    return\r\n                }\r\n                if (\"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this.close();\r\n                    return\r\n                }\r\n                var $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\r\n                $focusableElement && eventsEngine.trigger($focusableElement, \"focus\");\r\n                e.preventDefault()\r\n            },\r\n            escape: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault()\r\n                }\r\n                this.close()\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this.close();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this._validatedOpening();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            enter: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._valueChangeEventHandler(e)\r\n                }\r\n                return true\r\n            },\r\n            home: homeEndHandler,\r\n            end: homeEndHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            onOpened: null,\r\n            onClosed: null,\r\n            opened: false,\r\n            acceptCustomValue: true,\r\n            applyValueMode: \"instantly\",\r\n            deferRendering: true,\r\n            activeStateEnabled: true,\r\n            dropDownButtonTemplate: \"dropDownButton\",\r\n            fieldTemplate: null,\r\n            contentTemplate: null,\r\n            openOnFieldClick: false,\r\n            showDropDownButton: true,\r\n            popupPosition: this._getDefaultPopupPosition(),\r\n            onPopupInitialized: null,\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            cancelButtonText: messageLocalization.format(\"Cancel\"),\r\n            buttonsLocation: \"default\",\r\n            showPopupTitle: false\r\n        })\r\n    },\r\n    _getDefaultPopupPosition: function() {\r\n        var position = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        return {\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            },\r\n            my: position + \" top\",\r\n            at: position + \" bottom\",\r\n            collision: \"flip flip\"\r\n        }\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                var isGeneric = \"generic\" === _device.platform,\r\n                    isWin10 = \"win\" === _device.platform && _device.version && 10 === _device.version[0];\r\n                return isGeneric || isWin10\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element().find(\".\" + DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initVisibilityActions();\r\n        this._initPopupInitializedAction()\r\n    },\r\n    _initVisibilityActions: function() {\r\n        this._openAction = this._createActionByOption(\"onOpened\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._closeAction = this._createActionByOption(\"onClosed\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initPopupInitializedAction: function() {\r\n        this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\", \"designMode\"]\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_EDITOR_CLASS);\r\n        this.setAria(\"role\", \"combobox\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderOpenHandler();\r\n        this._renderOpenedState()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._createPopup()\r\n        }\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this.$element().wrapInner($(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS));\r\n        this._$container = this.$element().children().eq(0);\r\n        this.setAria({\r\n            haspopup: \"true\",\r\n            autocomplete: \"list\"\r\n        })\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _cleanFocusState: function() {\r\n        this.callBase();\r\n        if (this.option(\"fieldTemplate\")) {\r\n            eventsEngine.off(this._input(), \"focusin focusout beforeactivate\")\r\n        }\r\n    },\r\n    _renderField: function() {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            return\r\n        }\r\n        this._renderTemplatedField(fieldTemplate, this._fieldRenderData())\r\n    },\r\n    _renderTemplatedField: function(fieldTemplate, data) {\r\n        var _this = this;\r\n        var isFocused = focused(this._input());\r\n        this._resetFocus(isFocused);\r\n        var $container = this._$container;\r\n        $container.empty();\r\n        this._$dropDownButton = null;\r\n        this._$clearButton = null;\r\n        fieldTemplate.render({\r\n            model: data,\r\n            container: domUtils.getPublicElement($container),\r\n            onRendered: function() {\r\n                if (!_this._input().length) {\r\n                    throw errors.Error(\"E1010\")\r\n                }\r\n                _this._refreshEvents();\r\n                _this._refreshValueChangeEvent();\r\n                _this._renderFocusState();\r\n                isFocused && eventsEngine.trigger(_this._input(), \"focus\")\r\n            }\r\n        })\r\n    },\r\n    _resetFocus: function(isFocused) {\r\n        this._cleanFocusState();\r\n        isFocused && eventsEngine.trigger(this._input(), \"focusout\")\r\n    },\r\n    _fieldRenderData: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _renderInputAddons: function() {\r\n        this._renderField();\r\n        this.callBase();\r\n        this._renderDropDownButton()\r\n    },\r\n    _renderDropDownButton: function() {\r\n        if (this._$dropDownButton) {\r\n            this._$dropDownButton.remove();\r\n            this._$dropDownButton = null\r\n        }\r\n        var showDropDownButton = this.option(\"showDropDownButton\");\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, showDropDownButton);\r\n        if (!showDropDownButton) {\r\n            return\r\n        }\r\n        this._$dropDownButton = this._createDropDownButton();\r\n        this._attachDropDownButtonClickHandler()\r\n    },\r\n    _attachDropDownButtonClickHandler: function() {\r\n        if (this.option(\"showDropDownButton\") && !this.option(\"openOnFieldClick\")) {\r\n            this._$dropDownButton.dxButton(\"option\", \"onClick\", this._openHandler.bind(this))\r\n        }\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.dropDownButton = new FunctionTemplate(function(options) {\r\n            var $icon = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_ICON);\r\n            $(options.container).append($icon)\r\n        }, this)\r\n    },\r\n    _createDropDownButton: function() {\r\n        var $button = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS).prependTo(this._buttonsContainer());\r\n        this._createComponent($button, Button, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            disabled: this.option(\"readOnly\"),\r\n            useInkRipple: false,\r\n            template: this._getTemplateByOption(\"dropDownButtonTemplate\")\r\n        });\r\n        $button.removeClass(\"dx-button\");\r\n        eventsEngine.on($button, \"mousedown\", function(e) {\r\n            e.preventDefault()\r\n        });\r\n        return $button\r\n    },\r\n    _renderOpenHandler: function() {\r\n        var that = this,\r\n            $inputWrapper = that._inputWrapper(),\r\n            eventName = eventUtils.addNamespace(clickEvent.name, that.NAME),\r\n            openOnFieldClick = that.option(\"openOnFieldClick\");\r\n        eventsEngine.off($inputWrapper, eventName);\r\n        eventsEngine.on($inputWrapper, eventName, that._getInputClickHandler(openOnFieldClick));\r\n        that.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\r\n        if (openOnFieldClick) {\r\n            that._openOnFieldClickAction = that._createAction(that._openHandler.bind(that))\r\n        }\r\n    },\r\n    _getInputClickHandler: function(openOnFieldClick) {\r\n        var that = this;\r\n        return openOnFieldClick ? function(e) {\r\n            that._executeOpenAction(e)\r\n        } : function(e) {\r\n            that._focusInput()\r\n        }\r\n    },\r\n    _openHandler: function() {\r\n        this._toggleOpenState()\r\n    },\r\n    _executeOpenAction: function(e) {\r\n        this._openOnFieldClickAction({\r\n            event: e\r\n        })\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusInput: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"focusStateEnabled\") && !focused(this._input())) {\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        }\r\n        return true\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (!this._focusInput()) {\r\n            return\r\n        }\r\n        if (!this.option(\"readOnly\")) {\r\n            isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n            this.option(\"opened\", isVisible)\r\n        }\r\n    },\r\n    _renderOpenedState: function() {\r\n        var opened = this.option(\"opened\");\r\n        if (opened) {\r\n            this._createPopup()\r\n        }\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\r\n        this._setPopupOption(\"visible\", opened);\r\n        this.setAria({\r\n            expanded: opened,\r\n            owns: (opened || void 0) && this._popupContentId\r\n        })\r\n    },\r\n    _createPopup: function() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        this._$popup = $(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).addClass(this.option(\"customOverlayCssClass\")).appendTo(this.$element());\r\n        this._renderPopup();\r\n        this._renderPopupContent()\r\n    },\r\n    _renderPopup: function() {\r\n        this._popup = this._createComponent(this._$popup, Popup, this._popupConfig());\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this)\r\n        });\r\n        this._popup.option(\"onContentReady\", this._contentReadyHandler.bind(this));\r\n        this._contentReadyHandler();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, this._popup.$content())\r\n    },\r\n    _contentReadyHandler: commonUtils.noop,\r\n    _popupConfig: function() {\r\n        return {\r\n            onInitialized: this._popupInitializedHandler(),\r\n            position: extend(this.option(\"popupPosition\"), { of: this.$element()\r\n            }),\r\n            showTitle: this.option(\"showPopupTitle\"),\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            shading: false,\r\n            closeOnTargetScroll: true,\r\n            closeOnOutsideClick: this._closeOutsideDropDownHandler.bind(this),\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            deferRendering: false,\r\n            focusStateEnabled: false,\r\n            showCloseButton: false,\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            onPositioned: this._popupPositionedHandler.bind(this),\r\n            fullScreen: false\r\n        }\r\n    },\r\n    _popupInitializedHandler: function() {\r\n        if (!this.option(\"onPopupInitialized\")) {\r\n            return\r\n        }\r\n        return function(e) {\r\n            this._popupInitializedAction({\r\n                popup: e.component\r\n            })\r\n        }.bind(this)\r\n    },\r\n    _popupPositionedHandler: function(e) {\r\n        e.position && this._popup.overlayContent().toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, e.position.v.flip)\r\n    },\r\n    _popupShowingHandler: commonUtils.noop,\r\n    _popupHidingHandler: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    _popupShownHandler: function() {\r\n        this._openAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this._closeAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _getValidationMessagePosition: function() {\r\n        var positionRequest = \"below\";\r\n        if (this._popup && this._popup.option(\"visible\")) {\r\n            var myTop = positionUtils.setup(this.$element()).top,\r\n                popupTop = positionUtils.setup(this._popup.$content()).top;\r\n            positionRequest = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"below\" : \"above\"\r\n        }\r\n        return this.callBase(positionRequest)\r\n    },\r\n    _renderPopupContent: function() {\r\n        var contentTemplate = this._getTemplateByOption(\"contentTemplate\");\r\n        if (!(contentTemplate && this.option(\"contentTemplate\"))) {\r\n            return\r\n        }\r\n        var $popupContent = this._popup.$content(),\r\n            templateData = {\r\n                value: this._fieldRenderData(),\r\n                component: this\r\n            };\r\n        $popupContent.empty();\r\n        contentTemplate.render({\r\n            container: domUtils.getPublicElement($popupContent),\r\n            model: templateData\r\n        })\r\n    },\r\n    _closeOutsideDropDownHandler: function(e) {\r\n        var $target = $(e.target);\r\n        var isInputClicked = !!$target.closest(this.$element()).length;\r\n        var isDropDownButtonClicked = !!$target.closest(this._$dropDownButton).length;\r\n        var isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\r\n        return isOutsideClick\r\n    },\r\n    _clean: function() {\r\n        delete this._$dropDownButton;\r\n        delete this._openOnFieldClickAction;\r\n        if (this._$popup) {\r\n            this._$popup.remove();\r\n            delete this._$popup;\r\n            delete this._popup\r\n        }\r\n        this.callBase()\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _validatedOpening: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._toggleOpenState(true)\r\n        }\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        return \"useButtons\" === this.option(\"applyValueMode\") ? this._popupToolbarItemsConfig() : []\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-done.dx-button\")\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-cancel.dx-button\")\r\n    },\r\n    _popupElementTabHandler: function(e) {\r\n        var $element = $(e.currentTarget);\r\n        if (e.shiftKey && $element.is(this._getFirstPopupElement()) || !e.shiftKey && $element.is(this._getLastPopupElement())) {\r\n            eventsEngine.trigger(this._input(), \"focus\");\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _popupElementEscHandler: function() {\r\n        eventsEngine.trigger(this._input(), \"focus\");\r\n        this.close()\r\n    },\r\n    _popupButtonInitializedHandler: function(e) {\r\n        e.component.registerKeyHandler(\"tab\", this._popupElementTabHandler.bind(this));\r\n        e.component.registerKeyHandler(\"escape\", this._popupElementEscHandler.bind(this))\r\n    },\r\n    _popupToolbarItemsConfig: function() {\r\n        var buttonsConfig = [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }, {\r\n            shortcut: \"cancel\",\r\n            options: {\r\n                onClick: this._cancelButtonHandler.bind(this),\r\n                text: this.option(\"cancelButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }];\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    },\r\n    _applyButtonsLocation: function(buttonsConfig) {\r\n        var buttonsLocation = this.option(\"buttonsLocation\"),\r\n            resultConfig = buttonsConfig;\r\n        if (\"default\" !== buttonsLocation) {\r\n            var position = commonUtils.splitPair(buttonsLocation);\r\n            each(resultConfig, function(_, element) {\r\n                extend(element, {\r\n                    toolbar: position[0],\r\n                    location: position[1]\r\n                })\r\n            })\r\n        }\r\n        return resultConfig\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this.callBase();\r\n        this._$dropDownButton && this._$dropDownButton.dxButton(\"option\", \"disabled\", this.option(\"readOnly\"))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"opened\":\r\n                this._renderOpenedState();\r\n                break;\r\n            case \"onOpened\":\r\n            case \"onClosed\":\r\n                this._initVisibilityActions();\r\n                break;\r\n            case \"onPopupInitialized\":\r\n                this._initPopupInitializedAction();\r\n                break;\r\n            case \"fieldTemplate\":\r\n                if (isDefined(args.value)) {\r\n                    this._renderInputAddons()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"showDropDownButton\":\r\n            case \"contentTemplate\":\r\n            case \"acceptCustomValue\":\r\n            case \"openOnFieldClick\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dropDownButtonTemplate\":\r\n                this._renderDropDownButton();\r\n                break;\r\n            case \"popupPosition\":\r\n            case \"deferRendering\":\r\n                break;\r\n            case \"applyValueMode\":\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n            case \"buttonsLocation\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"showPopupTitle\":\r\n                this._setPopupOption(\"showTitle\", args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    open: function() {\r\n        this.option(\"opened\", true)\r\n    },\r\n    close: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    field: function() {\r\n        return getPublicElement(this._input())\r\n    },\r\n    content: function() {\r\n        return this._popup ? this._popup.content() : null\r\n    }\r\n}).include(AsyncTemplateMixin);\r\nregisterComponent(\"dxDropDownEditor\", DropDownEditor);\r\nmodule.exports = DropDownEditor;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 745:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(753);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 748:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/shared/async_template_mixin.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = {\r\n    _waitAsyncTemplates: function(callback) {\r\n        if (this._options.templatesRenderAsynchronously) {\r\n            this._asyncTemplatesTimers = this._asyncTemplatesTimers || [];\r\n            var timer = setTimeout(function() {\r\n                callback.call(this);\r\n                clearTimeout(timer)\r\n            }.bind(this));\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback.call(this)\r\n        }\r\n    },\r\n    _cleanAsyncTemplatesTimer: function() {\r\n        var timers = this._asyncTemplatesTimers || [];\r\n        for (var i = 0; i < timers.length; i++) {\r\n            clearTimeout(timers[i])\r\n        }\r\n        delete this._asyncTemplatesTimers\r\n    }\r\n};\r\n\n\n/***/ }),\n\n/***/ 753:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar registerComponent = __webpack_require__(16),\r\n    NumberBoxMask = __webpack_require__(754);\r\nregisterComponent(\"dxNumberBox\", NumberBoxMask);\r\nmodule.exports = NumberBoxMask;\r\n\n\n/***/ }),\n\n/***/ 754:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.mask.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar eventsEngine = __webpack_require__(7),\r\n    extend = __webpack_require__(3).extend,\r\n    isNumeric = __webpack_require__(4).isNumeric,\r\n    browser = __webpack_require__(78),\r\n    fitIntoRange = __webpack_require__(60).fitIntoRange,\r\n    inRange = __webpack_require__(60).inRange,\r\n    escapeRegExp = __webpack_require__(6).escapeRegExp,\r\n    number = __webpack_require__(336),\r\n    maskCaret = __webpack_require__(755),\r\n    getLDMLFormat = __webpack_require__(343).getFormat,\r\n    NumberBoxBase = __webpack_require__(756),\r\n    eventUtils = __webpack_require__(8),\r\n    typeUtils = __webpack_require__(4);\r\nvar NUMBER_FORMATTER_NAMESPACE = \"dxNumberFormatter\",\r\n    MOVE_FORWARD = 1,\r\n    MOVE_BACKWARD = -1,\r\n    MINUS = \"-\",\r\n    NUMPUD_MINUS_KEY_IE = \"Subtract\",\r\n    INPUT_EVENT = \"input\";\r\nvar ensureDefined = function(value, defaultValue) {\r\n    return void 0 === value ? defaultValue : value\r\n};\r\nvar NumberBoxMask = NumberBoxBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            useMaskBehavior: true,\r\n            format: null\r\n        })\r\n    },\r\n    _isDeleteKey: function(key) {\r\n        return \"Delete\" === key || \"Del\" === key\r\n    },\r\n    _supportedKeys: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        return extend(this.callBase(), {\r\n            minus: that._revertSign.bind(that),\r\n            del: that._removeHandler.bind(that),\r\n            backspace: that._removeHandler.bind(that),\r\n            leftArrow: that._arrowHandler.bind(that, MOVE_BACKWARD),\r\n            rightArrow: that._arrowHandler.bind(that, MOVE_FORWARD),\r\n            home: that._moveCaretToBoundary.bind(that, MOVE_FORWARD),\r\n            enter: that._updateFormattedValue.bind(that),\r\n            end: that._moveCaretToBoundary.bind(that, MOVE_BACKWARD)\r\n        })\r\n    },\r\n    _focusInHandler: function(e) {\r\n        this.callBase(e);\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            return\r\n        }\r\n        if (browser.msie) {\r\n            clearTimeout(this._ieCaretTimeout);\r\n            this._ieCaretTimeout = setTimeout(this._moveCaretToBoundary.bind(this, MOVE_BACKWARD, e))\r\n        } else {\r\n            this._moveCaretToBoundary(MOVE_BACKWARD, e)\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this._focusOutOccurs = true;\r\n        if (this._useMaskBehavior()) {\r\n            this._updateFormattedValue()\r\n        }\r\n        this.callBase(e);\r\n        this._focusOutOccurs = false\r\n    },\r\n    _updateFormattedValue: function() {\r\n        this._parsedValue = this._tryParse(this._getInputVal(), this._caret());\r\n        this._adjustParsedValue();\r\n        this._setTextByParsedValue();\r\n        if (this._isValueDirty()) {\r\n            this._isDirty = false;\r\n            eventsEngine.trigger(this._input(), \"change\")\r\n        }\r\n    },\r\n    _isValueDirty: function() {\r\n        return this._isDirty || this._parsedValue !== this.option(\"value\")\r\n    },\r\n    _arrowHandler: function(step, e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this._getInputVal(),\r\n            format = this._getFormatPattern(),\r\n            nextCaret = maskCaret.getCaretWithOffset(this._caret(), step);\r\n        if (!maskCaret.isCaretInBoundaries(nextCaret, text, format)) {\r\n            nextCaret = step === MOVE_FORWARD ? nextCaret.end : nextCaret.start;\r\n            e.preventDefault();\r\n            this._caret(maskCaret.getCaretInBoundaries(nextCaret, text, format))\r\n        }\r\n    },\r\n    _moveCaretToBoundary: function(direction, e) {\r\n        if (!this._useMaskBehavior() || e.shiftKey) {\r\n            return\r\n        }\r\n        var boundaries = maskCaret.getCaretBoundaries(this._getInputVal(), this._getFormatPattern()),\r\n            newCaret = maskCaret.getCaretWithOffset(direction === MOVE_FORWARD ? boundaries.start : boundaries.end, 0);\r\n        this._caret(newCaret);\r\n        e && e.preventDefault()\r\n    },\r\n    _shouldMoveCaret: function(text, caret) {\r\n        var decimalSeparator = number.getDecimalSeparator(),\r\n            isDecimalSeparatorNext = text.charAt(caret.end) === decimalSeparator,\r\n            isZeroNext = \"0\" === text.charAt(caret.end),\r\n            moveToFloat = this._lastKey === decimalSeparator && isDecimalSeparatorNext,\r\n            zeroToZeroReplace = \"0\" === this._lastKey && isZeroNext;\r\n        return moveToFloat || zeroToZeroReplace\r\n    },\r\n    _getInputVal: function() {\r\n        return number.convertDigits(this._input().val(), true)\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        this._lastKey = number.convertDigits(e.originalEvent.key, true);\r\n        if (!this._shouldHandleKey(e.originalEvent)) {\r\n            return this.callBase(e)\r\n        }\r\n        var text = this._getInputVal(),\r\n            caret = this._caret();\r\n        var enteredChar = this._lastKey === MINUS ? \"\" : this._lastKey,\r\n            newValue = this._tryParse(text, caret, enteredChar);\r\n        if (void 0 === newValue) {\r\n            if (this._lastKey !== MINUS) {\r\n                e.originalEvent.preventDefault()\r\n            }\r\n            if (this._shouldMoveCaret(text, caret)) {\r\n                this._moveCaret(1)\r\n            }\r\n        } else {\r\n            this._parsedValue = newValue\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _removeHandler: function(e) {\r\n        var caret = this._caret(),\r\n            text = this._getInputVal(),\r\n            start = caret.start,\r\n            end = caret.end;\r\n        this._lastKey = e.key;\r\n        if (caret.start === caret.end) {\r\n            this._isDeleteKey(e.key) ? end++ : start--\r\n        }\r\n        var char = text.slice(start, end);\r\n        if (this._isStub(char)) {\r\n            this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n            if (this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0)) {\r\n                this._revertSign(e);\r\n                this._setTextByParsedValue()\r\n            }\r\n            e.preventDefault();\r\n            return\r\n        }\r\n        var decimalSeparator = number.getDecimalSeparator();\r\n        if (char === decimalSeparator) {\r\n            var decimalSeparatorIndex = text.indexOf(decimalSeparator);\r\n            if (this._isNonStubAfter(decimalSeparatorIndex + 1)) {\r\n                this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n                e.preventDefault()\r\n            }\r\n            return\r\n        }\r\n        if (end - start < text.length) {\r\n            var editedText = this._replaceSelectedText(text, {\r\n                    start: start,\r\n                    end: end\r\n                }, \"\"),\r\n                noDigits = editedText.search(/[0-9]/) < 0;\r\n            if (noDigits && this._isValueInRange(0)) {\r\n                this._parsedValue = this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0) ? -0 : 0;\r\n                return\r\n            }\r\n        }\r\n        var valueAfterRemoving = this._tryParse(text, {\r\n            start: start,\r\n            end: end\r\n        }, \"\");\r\n        if (void 0 === valueAfterRemoving) {\r\n            e.preventDefault()\r\n        } else {\r\n            this._parsedValue = valueAfterRemoving\r\n        }\r\n    },\r\n    _isPercentFormat: function() {\r\n        var format = this._getFormatPattern(),\r\n            noEscapedFormat = format.replace(/'[^']+'/g, \"\");\r\n        return noEscapedFormat.indexOf(\"%\") !== -1\r\n    },\r\n    _parse: function(text, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomParser = typeUtils.isFunction(formatOption.formatter),\r\n            parser = isCustomParser ? formatOption.parser : number.parse;\r\n        return parser(text, format)\r\n    },\r\n    _format: function(value, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomFormatter = typeUtils.isFunction(formatOption.formatter),\r\n            formatter = isCustomFormatter ? formatOption.formatter : number.format;\r\n        return formatter(value, format)\r\n    },\r\n    _getFormatPattern: function() {\r\n        var format = this.option(\"format\"),\r\n            isLDMLPattern = \"string\" === typeof format && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        if (isLDMLPattern) {\r\n            return format\r\n        } else {\r\n            return getLDMLFormat(function(value) {\r\n                return this._format(value, format)\r\n            }.bind(this))\r\n        }\r\n    },\r\n    _getFormatForSign: function(text) {\r\n        var format = this._getFormatPattern(),\r\n            signParts = format.split(\";\"),\r\n            sign = number.getSign(text, format);\r\n        signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n        return sign < 0 ? signParts[1] : signParts[0]\r\n    },\r\n    _removeStubs: function(text, excludeComma) {\r\n        var format = this._getFormatForSign(text),\r\n            thousandsSeparator = number.getThousandsSeparator(),\r\n            stubs = format.replace(/[#0.,]/g, \"\"),\r\n            regExp = new RegExp(\"[-\" + escapeRegExp((excludeComma ? \"\" : thousandsSeparator) + stubs) + \"]\", \"g\");\r\n        return text.replace(regExp, \"\")\r\n    },\r\n    _truncateToPrecision: function(value, decimalSeparator, maxPrecision) {\r\n        if (typeUtils.isDefined(value)) {\r\n            var strValue = value.toString(),\r\n                decimalSeparatorIndex = strValue.indexOf(decimalSeparator);\r\n            if (strValue && decimalSeparatorIndex > -1) {\r\n                var parsedValue = parseFloat(strValue.substr(0, decimalSeparatorIndex + maxPrecision + 1));\r\n                return isNaN(parsedValue) ? value : parsedValue\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _tryParse: function(text, selection, char) {\r\n        var editedText = this._replaceSelectedText(text, selection, char),\r\n            format = this._getFormatPattern(),\r\n            isTextSelected = selection.start !== selection.end,\r\n            parsed = this._parse(editedText, format),\r\n            maxPrecision = this._getPrecisionLimits(format, editedText).max,\r\n            isValueChanged = parsed !== this._parsedValue,\r\n            decimalSeparator = number.getDecimalSeparator();\r\n        var isDecimalPointRestricted = char === decimalSeparator && 0 === maxPrecision,\r\n            isUselessCharRestricted = !isTextSelected && !isValueChanged && char !== MINUS && !this._isValueIncomplete(editedText) && this._isStub(char);\r\n        if (isDecimalPointRestricted || isUselessCharRestricted) {\r\n            return\r\n        }\r\n        if (\"\" === editedText) {\r\n            parsed = 0\r\n        }\r\n        if (isNaN(parsed)) {\r\n            return\r\n        }\r\n        var value = null === parsed ? this._parsedValue : parsed;\r\n        parsed = this._truncateToPrecision(value, decimalSeparator, maxPrecision);\r\n        return this._isPercentFormat() ? parsed && parsed / 100 : parsed\r\n    },\r\n    _isValueIncomplete: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        var caret = this._caret(),\r\n            point = number.getDecimalSeparator(),\r\n            pointIndex = text.indexOf(point),\r\n            isCaretOnFloat = pointIndex > 0 && pointIndex < caret.start,\r\n            textParts = this._removeStubs(text, true).split(point);\r\n        if (!isCaretOnFloat || 2 !== textParts.length) {\r\n            return false\r\n        }\r\n        var floatLength = textParts[1].length,\r\n            precision = this._getPrecisionLimits(this._getFormatPattern(), text),\r\n            isPrecisionInRange = inRange(floatLength, precision.min, precision.max),\r\n            endsWithZero = \"0\" === textParts[1].charAt(floatLength - 1);\r\n        return isPrecisionInRange && (endsWithZero || !floatLength)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        var min = ensureDefined(this.option(\"min\"), -(1 / 0)),\r\n            max = ensureDefined(this.option(\"max\"), 1 / 0);\r\n        return inRange(value, min, max)\r\n    },\r\n    _setInputText: function(text) {\r\n        var newCaret = maskCaret.getCaretAfterFormat(this._getInputVal(), text, this._caret(), this._getFormatPattern()),\r\n            newValue = number.convertDigits(text);\r\n        if (this._formattedValue !== newValue) {\r\n            this._isDirty = true\r\n        }\r\n        this._input().val(newValue);\r\n        this._toggleEmptinessEventHandler();\r\n        this._formattedValue = text;\r\n        if (!this._focusOutOccurs) {\r\n            this._caret(newCaret)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return !!this.option(\"format\") && this.option(\"useMaskBehavior\")\r\n    },\r\n    _renderInputType: function() {\r\n        var isNumberType = \"number\" === this.option(\"mode\");\r\n        if (this._useMaskBehavior() && isNumberType) {\r\n            this._setInputType(\"tel\")\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isChar: function(str) {\r\n        return \"string\" === typeof str && 1 === str.length\r\n    },\r\n    _moveCaret: function(offset) {\r\n        if (!offset) {\r\n            return\r\n        }\r\n        var newCaret = maskCaret.getCaretWithOffset(this._caret(), offset),\r\n            adjustedCaret = maskCaret.getCaretInBoundaries(newCaret, this._getInputVal(), this._getFormatPattern());\r\n        this._caret(adjustedCaret)\r\n    },\r\n    _shouldHandleKey: function(e) {\r\n        var isSpecialChar = e.ctrlKey || e.shiftKey || e.altKey || !this._isChar(e.key),\r\n            isMinusKey = e.key === MINUS,\r\n            useMaskBehavior = this._useMaskBehavior();\r\n        return useMaskBehavior && !isSpecialChar && !isMinusKey\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderFormatter()\r\n    },\r\n    _renderFormatter: function() {\r\n        this._clearCache();\r\n        this._detachFormatterEvents();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachFormatterEvents()\r\n        }\r\n    },\r\n    _detachFormatterEvents: function() {\r\n        eventsEngine.off(this._input(), \".\" + NUMBER_FORMATTER_NAMESPACE)\r\n    },\r\n    _attachFormatterEvents: function() {\r\n        var $input = this._input();\r\n        eventsEngine.on($input, eventUtils.addNamespace(INPUT_EVENT, NUMBER_FORMATTER_NAMESPACE), this._formatValue.bind(this));\r\n        eventsEngine.on($input, eventUtils.addNamespace(\"dxclick\", NUMBER_FORMATTER_NAMESPACE), function() {\r\n            this._caret(maskCaret.getCaretInBoundaries(this._caret(), this._getInputVal(), this._getFormatPattern()))\r\n        }.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n    },\r\n    _isNonStubAfter: function(index, text) {\r\n        text = (text || this._getInputVal()).slice(index);\r\n        return text && !this._isStub(text, true)\r\n    },\r\n    _isStub: function(str, isString) {\r\n        var escapedDecimalSeparator = escapeRegExp(number.getDecimalSeparator()),\r\n            regExpString = \"^[^0-9\" + escapedDecimalSeparator + \"]+$\",\r\n            stubRegExp = new RegExp(regExpString, \"g\");\r\n        return stubRegExp.test(str) && (isString || this._isChar(str))\r\n    },\r\n    _parseValue: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        return this._parsedValue\r\n    },\r\n    _getPrecisionLimits: function(text) {\r\n        var currentFormat = this._getFormatForSign(text),\r\n            floatPart = (currentFormat.split(\".\")[1] || \"\").replace(/[^#0]/g, \"\"),\r\n            minPrecision = floatPart.replace(/^(0*)#*/, \"$1\").length,\r\n            maxPrecision = floatPart.length;\r\n        return {\r\n            min: minPrecision,\r\n            max: maxPrecision\r\n        }\r\n    },\r\n    _revertSign: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            if (e.key === MINUS || e.key === NUMPUD_MINUS_KEY_IE) {\r\n                this._applyRevertedSign(e, caret, true);\r\n                return\r\n            } else {\r\n                this._caret(maskCaret.getCaretInBoundaries(0, this._getInputVal(), this._getFormatPattern()))\r\n            }\r\n        }\r\n        this._applyRevertedSign(e, caret)\r\n    },\r\n    _applyRevertedSign: function(e, caret, preserveSelectedText) {\r\n        var newValue = -1 * ensureDefined(this._parsedValue, null);\r\n        if (this._isValueInRange(newValue)) {\r\n            this._parsedValue = newValue;\r\n            if (preserveSelectedText) {\r\n                var format = this._getFormatPattern(),\r\n                    previousText = this._getInputVal();\r\n                this._setTextByParsedValue();\r\n                e.preventDefault();\r\n                var currentText = this._getInputVal(),\r\n                    offset = maskCaret.getCaretOffset(previousText, currentText, format);\r\n                caret = maskCaret.getCaretWithOffset(caret, offset);\r\n                var caretInBoundaries = maskCaret.getCaretInBoundaries(caret, currentText, format);\r\n                if (browser.msie) {\r\n                    clearTimeout(this._ieCaretTimeout);\r\n                    this._ieCaretTimeout = setTimeout(this._caret.bind(this, caretInBoundaries))\r\n                } else {\r\n                    this._caret(caretInBoundaries)\r\n                }\r\n            }\r\n            if (e.key === NUMPUD_MINUS_KEY_IE) {\r\n                eventsEngine.trigger(this._input(), INPUT_EVENT)\r\n            }\r\n        }\r\n    },\r\n    _removeMinusFromText: function(text, caret) {\r\n        var isMinusPressed = this._lastKey === MINUS && text.charAt(caret.start - 1) === MINUS;\r\n        return isMinusPressed ? this._replaceSelectedText(text, {\r\n            start: caret.start - 1,\r\n            end: caret.start\r\n        }, \"\") : text\r\n    },\r\n    _setTextByParsedValue: function() {\r\n        var format = this._getFormatPattern(),\r\n            parsed = this._parseValue(),\r\n            formatted = this._format(parsed, format) || \"\";\r\n        this._setInputText(formatted)\r\n    },\r\n    _formatValue: function() {\r\n        var text = this._getInputVal(),\r\n            caret = this._caret(),\r\n            textWithoutMinus = this._removeMinusFromText(text, caret),\r\n            wasMinusRemoved = textWithoutMinus !== text;\r\n        this._isDirty = false;\r\n        text = textWithoutMinus;\r\n        if (this._isValueIncomplete(textWithoutMinus)) {\r\n            this._formattedValue = text;\r\n            if (wasMinusRemoved) {\r\n                this._setTextByParsedValue()\r\n            }\r\n            return\r\n        }\r\n        var textWasChanged = this._formattedValue !== text;\r\n        if (textWasChanged) {\r\n            var value = this._tryParse(text, caret, \"\");\r\n            if (typeUtils.isDefined(value)) {\r\n                this._parsedValue = value\r\n            }\r\n        }\r\n        this._setTextByParsedValue()\r\n    },\r\n    _renderDisplayText: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._toggleEmptinessEventHandler()\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._parsedValue = this.option(\"value\");\r\n            this._setTextByParsedValue()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _adjustParsedValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var clearedText = this._removeStubs(this._getInputVal()),\r\n            parsedValue = clearedText ? this._parseValue() : null;\r\n        if (!isNumeric(parsedValue)) {\r\n            this._parsedValue = parsedValue;\r\n            return\r\n        }\r\n        this._parsedValue = fitIntoRange(parsedValue, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(e)\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this._lastKey = null;\r\n        this._adjustParsedValue();\r\n        this.option(\"value\", this._parsedValue)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"format\":\r\n            case \"useMaskBehavior\":\r\n                this._renderFormatter();\r\n                this._renderValue();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._adjustParsedValue();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionValuesEqual: function(name, oldValue, newValue) {\r\n        if (\"value\" === name && 0 === oldValue && 0 === newValue) {\r\n            return 1 / oldValue === 1 / newValue\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _clearCache: function() {\r\n        delete this._formattedValue;\r\n        delete this._lastKey;\r\n        delete this._parsedValue;\r\n        delete this._isDirty;\r\n        delete this._focusOutOccurs;\r\n        clearTimeout(this._ieCaretTimeout);\r\n        delete this._ieCaretTimeout\r\n    },\r\n    _clean: function() {\r\n        this._clearCache();\r\n        this.callBase()\r\n    }\r\n});\r\nmodule.exports = NumberBoxMask;\r\n\n\n/***/ }),\n\n/***/ 755:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.caret.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar fitIntoRange = __webpack_require__(60).fitIntoRange,\r\n    escapeRegExp = __webpack_require__(6).escapeRegExp,\r\n    number = __webpack_require__(336);\r\nvar getCaretBoundaries = function(text, format) {\r\n    var signParts = format.split(\";\"),\r\n        sign = number.getSign(text, format);\r\n    signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n    format = sign < 0 ? signParts[1] : signParts[0];\r\n    var clearedFormat = format.replace(/'([^']*)'/g, \"$1\"),\r\n        result = /^([^#0\\.,]*)([#0\\.,]*)([^#0\\.,]*)$/.exec(clearedFormat);\r\n    var startBorder = result[1].length,\r\n        endBorder = text.length - result[3].length;\r\n    return {\r\n        start: startBorder,\r\n        end: endBorder\r\n    }\r\n};\r\nvar _getDigitCountBeforeIndex = function(index, text) {\r\n    var decimalSeparator = number.getDecimalSeparator(),\r\n        regExp = new RegExp(\"[^0-9\" + escapeRegExp(decimalSeparator) + \"]\", \"g\"),\r\n        textBeforePosition = text.slice(0, index);\r\n    return textBeforePosition.replace(regExp, \"\").length\r\n};\r\nvar _reverseText = function(text) {\r\n    return text.split(\"\").reverse().join(\"\")\r\n};\r\nvar _getDigitPositionByIndex = function(digitIndex, text) {\r\n    if (!digitIndex) {\r\n        return -1\r\n    }\r\n    var regExp = /[0-9]/g,\r\n        counter = 1,\r\n        index = null,\r\n        result = regExp.exec(text);\r\n    while (result) {\r\n        index = result.index;\r\n        if (!digitIndex || counter >= digitIndex) {\r\n            return index\r\n        }\r\n        counter++;\r\n        result = regExp.exec(text)\r\n    }\r\n    return null === index ? text.length : index\r\n};\r\nvar getCaretWithOffset = function(caret, offset) {\r\n    if (void 0 === caret.start) {\r\n        caret = {\r\n            start: caret,\r\n            end: caret\r\n        }\r\n    }\r\n    return {\r\n        start: caret.start + offset,\r\n        end: caret.end + offset\r\n    }\r\n};\r\nvar getCaretAfterFormat = function(text, formatted, caret, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var point = number.getDecimalSeparator(),\r\n        pointPosition = text.indexOf(point),\r\n        newPointPosition = formatted.indexOf(point),\r\n        textParts = text.split(point),\r\n        formattedParts = formatted.split(point),\r\n        isCaretOnFloat = pointPosition !== -1 && caret.start > pointPosition;\r\n    if (isCaretOnFloat) {\r\n        var relativeIndex = caret.start - pointPosition - 1,\r\n            digitsBefore = _getDigitCountBeforeIndex(relativeIndex, textParts[1]),\r\n            newPosition = formattedParts[1] ? newPointPosition + 1 + _getDigitPositionByIndex(digitsBefore, formattedParts[1]) + 1 : formatted.length;\r\n        return getCaretInBoundaries(newPosition, formatted, format)\r\n    } else {\r\n        var positionFromEnd = textParts[0].length - caret.start,\r\n            digitsFromEnd = _getDigitCountBeforeIndex(positionFromEnd, _reverseText(textParts[0])),\r\n            newPositionFromEnd = _getDigitPositionByIndex(digitsFromEnd, _reverseText(formattedParts[0])),\r\n            newPositionFromBegin = formattedParts[0].length - (newPositionFromEnd + 1);\r\n        return getCaretInBoundaries(newPositionFromBegin, formatted, format)\r\n    }\r\n};\r\nvar isCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretInBoundaries(caret, text, format);\r\n    return caret.start >= boundaries.start && caret.end <= boundaries.end\r\n};\r\nvar getCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretBoundaries(text, format),\r\n        adjustedCaret = {\r\n            start: fitIntoRange(caret.start, boundaries.start, boundaries.end),\r\n            end: fitIntoRange(caret.end, boundaries.start, boundaries.end)\r\n        };\r\n    return adjustedCaret\r\n};\r\nvar getCaretOffset = function(previousText, newText, format) {\r\n    var previousBoundaries = getCaretBoundaries(previousText, format),\r\n        newBoundaries = getCaretBoundaries(newText, format);\r\n    return newBoundaries.start - previousBoundaries.start\r\n};\r\nexports.getCaretBoundaries = getCaretBoundaries;\r\nexports.isCaretInBoundaries = isCaretInBoundaries;\r\nexports.getCaretWithOffset = getCaretWithOffset;\r\nexports.getCaretInBoundaries = getCaretInBoundaries;\r\nexports.getCaretAfterFormat = getCaretAfterFormat;\r\nexports.getCaretOffset = getCaretOffset;\r\n\n\n/***/ }),\n\n/***/ 756:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    commonUtils = __webpack_require__(6),\r\n    mathUtils = __webpack_require__(60),\r\n    extend = __webpack_require__(3).extend,\r\n    inArray = __webpack_require__(15).inArray,\r\n    focused = __webpack_require__(52).focused,\r\n    devices = __webpack_require__(14),\r\n    TextEditor = __webpack_require__(344),\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(31),\r\n    wheelEvent = __webpack_require__(339),\r\n    SpinButton = __webpack_require__(757),\r\n    messageLocalization = __webpack_require__(24);\r\nvar math = Math;\r\nvar WIDGET_CLASS = \"dx-numberbox\",\r\n    SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\",\r\n    SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\r\nvar FIREFOX_CONTROL_KEYS = [\"Tab\", \"Del\", \"Delete\", \"Backspace\", \"Left\", \"ArrowLeft\", \"Right\", \"ArrowRight\", \"Home\", \"End\", \"Enter\"];\r\nvar NumberBoxBase = TextEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinUpChangeHandler(e)\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinDownChangeHandler(e)\r\n            },\r\n            enter: function() {}\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            step: 1,\r\n            showSpinButtons: false,\r\n            useLargeSpinButtons: true,\r\n            mode: \"text\",\r\n            invalidValueMessage: messageLocalization.format(\"dxNumberBox-invalidValueMessage\")\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return devices.real().generic && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                useLargeSpinButtons: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"generic\" !== devices.real().platform\r\n            },\r\n            options: {\r\n                mode: \"number\"\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\r\n        this.setAria(\"role\", \"spinbutton\");\r\n        this._renderMouseWheelHandler()\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        this._$submitElement.val(commonUtils.applyServerDecimalSeparator(value))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        var ch = e.key || String.fromCharCode(e.which),\r\n            validCharRegExp = /[\\d.,eE\\-+]|Subtract/,\r\n            isInputCharValid = validCharRegExp.test(ch);\r\n        if (!isInputCharValid) {\r\n            if (e.metaKey || e.ctrlKey || e.key && inArray(e.key, FIREFOX_CONTROL_KEYS) >= 0) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n        this._keyPressed = true\r\n    },\r\n    _renderMouseWheelHandler: function() {\r\n        var eventName = eventUtils.addNamespace(wheelEvent.name, this.NAME);\r\n        var mouseWheelAction = this._createAction(function(e) {\r\n            this._mouseWheelHandler(e.event)\r\n        }.bind(this));\r\n        eventsEngine.off(this._input(), eventName);\r\n        eventsEngine.on(this._input(), eventName, function(e) {\r\n            mouseWheelAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _mouseWheelHandler: function(dxEvent) {\r\n        if (!focused(this._input())) {\r\n            return\r\n        }\r\n        dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent);\r\n        dxEvent.preventDefault();\r\n        dxEvent.stopPropagation()\r\n    },\r\n    _renderValue: function() {\r\n        var inputValue = this._input().val();\r\n        if (!inputValue.length || Number(inputValue) !== this.option(\"value\")) {\r\n            this._forceValueRender();\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        var value = this.option(\"value\");\r\n        this._renderInputAddons();\r\n        this.setAria(\"valuenow\", value);\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _renderValueEventName: function() {\r\n        return this.callBase() + \" keypress\"\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        if (this._$spinUp) {\r\n            SpinButton.getInstance(this._$spinUp).option(\"disabled\", value)\r\n        }\r\n        if (this._$spinDown) {\r\n            SpinButton.getInstance(this._$spinDown).option(\"disabled\", value)\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _forceValueRender: function() {\r\n        var value = this.option(\"value\"),\r\n            number = Number(value),\r\n            formattedValue = isNaN(number) ? \"\" : this._applyValueFormat(value);\r\n        this._renderDisplayText(formattedValue)\r\n    },\r\n    _applyValueFormat: function(value) {\r\n        return this.option(\"valueFormat\")(value)\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().prop({\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            step: this.option(\"step\")\r\n        });\r\n        this.setAria({\r\n            valuemin: this.option(\"min\") || \"undefined\",\r\n            valuemax: this.option(\"max\") || \"undefined\"\r\n        })\r\n    },\r\n    _renderInputAddons: function() {\r\n        this.callBase();\r\n        this._renderSpinButtons()\r\n    },\r\n    _renderSpinButtons: function() {\r\n        var spinButtonsVisible = this.option(\"showSpinButtons\");\r\n        this.$element().toggleClass(SPIN_CLASS, spinButtonsVisible);\r\n        this._toggleTouchFriendlyClass();\r\n        if (!spinButtonsVisible) {\r\n            this._$spinContainer && this._$spinContainer.remove();\r\n            this._$spinContainer = null;\r\n            return\r\n        }\r\n        if (!this._$spinContainer) {\r\n            this._$spinContainer = this._createSpinButtons()\r\n        }\r\n        this._$spinContainer.prependTo(this._buttonsContainer())\r\n    },\r\n    _toggleTouchFriendlyClass: function() {\r\n        this.$element().toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, this.option(\"showSpinButtons\") && this.option(\"useLargeSpinButtons\"))\r\n    },\r\n    _createSpinButtons: function() {\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME);\r\n        var pointerDownAction = this._createAction(this._spinButtonsPointerDownHandler.bind(this));\r\n        var $spinContainer = $(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\r\n        eventsEngine.off($spinContainer, eventName);\r\n        eventsEngine.on($spinContainer, eventName, function(e) {\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        this._$spinUp = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinUp, SpinButton, {\r\n            direction: \"up\",\r\n            onChange: this._spinUpChangeHandler.bind(this)\r\n        });\r\n        this._$spinDown = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinDown, SpinButton, {\r\n            direction: \"down\",\r\n            onChange: this._spinDownChangeHandler.bind(this)\r\n        });\r\n        return $spinContainer\r\n    },\r\n    _spinButtonsPointerDownHandler: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"useLargeSpinButtons\") && domAdapter.getActiveElement() !== $input[0]) {\r\n            eventsEngine.trigger($input, \"focus\")\r\n        }\r\n    },\r\n    _spinUpChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(1, e.event || e)\r\n        }\r\n    },\r\n    _spinDownChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(-1, e.event || e)\r\n        }\r\n    },\r\n    _spinValueChange: function(sign, dxEvent) {\r\n        var value = parseFloat(this._normalizeInputValue()) || 0,\r\n            step = parseFloat(this.option(\"step\"));\r\n        value = this._correctRounding(value, step * sign);\r\n        var min = this.option(\"min\"),\r\n            max = this.option(\"max\");\r\n        if (void 0 !== min) {\r\n            value = Math.max(min, value)\r\n        }\r\n        if (void 0 !== max) {\r\n            value = Math.min(max, value)\r\n        }\r\n        this._saveValueChangeEvent(dxEvent);\r\n        this.option(\"value\", value)\r\n    },\r\n    _correctRounding: function(value, step) {\r\n        var regex = /[,.](.*)/;\r\n        var isFloatValue = regex.test(value),\r\n            isFloatStep = regex.test(step);\r\n        if (isFloatValue || isFloatStep) {\r\n            var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0,\r\n                stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0,\r\n                accuracy = math.max(valueAccuracy, stepAccuracy);\r\n            value = this._round(value + step, accuracy);\r\n            return value\r\n        }\r\n        return value + step\r\n    },\r\n    _round: function(value, precision) {\r\n        precision = precision || 0;\r\n        var multiplier = Math.pow(10, precision);\r\n        value *= multiplier;\r\n        value = Math.round(value) / multiplier;\r\n        return value\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        this.callBase();\r\n        eventsEngine.on(this._input(), \"focusout\", this._forceRefreshInputValue.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (\"number\" === this.option(\"mode\")) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            formattedValue = this._applyValueFormat(this.option(\"value\"));\r\n        $input.val(null);\r\n        $input.val(formattedValue)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var $input = this._input(),\r\n            inputValue = this._normalizeText(),\r\n            value = this._parseValue(inputValue),\r\n            valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\r\n        if (this._isValueValid() && !this._validateValue(value)) {\r\n            $input.val(this._applyValueFormat(value));\r\n            return\r\n        }\r\n        if (valueHasDigits) {\r\n            this.callBase(e, isNaN(value) ? null : value)\r\n        }\r\n        this._applyValueBoundaries(inputValue, value);\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        })\r\n    },\r\n    _applyValueBoundaries: function(inputValue, parsedValue) {\r\n        var isValueIncomplete = this._isValueIncomplete(inputValue),\r\n            isValueCorrect = this._isValueInRange(inputValue);\r\n        if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\r\n            if (Number(inputValue) !== parsedValue) {\r\n                this._input().val(this._applyValueFormat(parsedValue))\r\n            }\r\n        }\r\n    },\r\n    _replaceCommaWithPoint: function(value) {\r\n        return value.replace(\",\", \".\")\r\n    },\r\n    _inputIsInvalid: function() {\r\n        var isNumberMode = \"number\" === this.option(\"mode\");\r\n        var validityState = this._input().get(0).validity;\r\n        return isNumberMode && validityState && validityState.badInput\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        if (this._inputIsInvalid()) {\r\n            return\r\n        }\r\n        this.callBase(text)\r\n    },\r\n    _isValueIncomplete: function(value) {\r\n        var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\r\n        return incompleteRegex.test(value)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        return mathUtils.inRange(value, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _isNumber: function(value) {\r\n        return null !== this._parseValue(value)\r\n    },\r\n    _validateValue: function(value) {\r\n        var inputValue = this._normalizeText(),\r\n            isValueValid = this._isValueValid(),\r\n            isValid = true,\r\n            isNumber = this._isNumber(inputValue);\r\n        if (isNaN(Number(value))) {\r\n            isValid = false\r\n        }\r\n        if (!value && isValueValid) {\r\n            isValid = true\r\n        } else {\r\n            if (!isNumber && !isValueValid) {\r\n                isValid = false\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"invalidValueMessage\")\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _normalizeInputValue: function() {\r\n        return this._parseValue(this._normalizeText())\r\n    },\r\n    _normalizeText: function() {\r\n        var value = this._input().val().trim();\r\n        return this._replaceCommaWithPoint(value)\r\n    },\r\n    _parseValue: function(value) {\r\n        var number = parseFloat(value);\r\n        if (isNaN(number)) {\r\n            return null\r\n        }\r\n        return mathUtils.fitIntoRange(number, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    reset: function() {\r\n        this.option(\"value\", null)\r\n    },\r\n    _clean: function() {\r\n        delete this._$spinContainer;\r\n        delete this._$spinUp;\r\n        delete this._$spinDown;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._validateValue(args.value);\r\n                this._setSubmitValue(args.value);\r\n                this.callBase(args);\r\n                this._resumeValueChangeAction();\r\n                break;\r\n            case \"step\":\r\n                this._renderProps();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._renderProps();\r\n                this.option(\"value\", this._parseValue(this.option(\"value\")));\r\n                break;\r\n            case \"showSpinButtons\":\r\n                this._renderInputAddons();\r\n                break;\r\n            case \"useLargeSpinButtons\":\r\n                this._toggleTouchFriendlyClass();\r\n                break;\r\n            case \"invalidValueMessage\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = NumberBoxBase;\r\n\n\n/***/ }),\n\n/***/ 757:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.spin.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    Widget = __webpack_require__(43),\r\n    extend = __webpack_require__(3).extend,\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(31),\r\n    feedbackEvents = __webpack_require__(144),\r\n    holdEvent = __webpack_require__(203),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\",\r\n    SPIN_HOLD_DELAY = 100,\r\n    NUMBER_BOX = \"dxNumberBox\",\r\n    POINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, NUMBER_BOX),\r\n    POINTERCANCEL_EVENT_NAME = eventUtils.addNamespace(pointerEvents.cancel, NUMBER_BOX);\r\nvar SpinButton = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            direction: \"up\",\r\n            onChange: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        var direction = SPIN_CLASS + \"-\" + this.option(\"direction\");\r\n        this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\r\n        this._spinIcon = $(\"<div>\").addClass(direction + \"-icon\").appendTo(this.$element())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME),\r\n            $element = this.$element();\r\n        eventsEngine.off($element, eventName);\r\n        eventsEngine.on($element, eventName, this._spinDownHandler.bind(this));\r\n        this._spinChangeHandler = this._createActionByOption(\"onChange\")\r\n    },\r\n    _spinDownHandler: function(e) {\r\n        e.preventDefault();\r\n        this._clearTimer();\r\n        eventsEngine.on(this.$element(), holdEvent.name, function() {\r\n            this._feedBackDeferred = new Deferred;\r\n            feedbackEvents.lock(this._feedBackDeferred);\r\n            this._spinChangeHandler({\r\n                event: e\r\n            });\r\n            this._holdTimer = setInterval(this._spinChangeHandler, SPIN_HOLD_DELAY, {\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\r\n        eventsEngine.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\r\n        this._spinChangeHandler({\r\n            event: e\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this._clearTimer();\r\n        this.callBase()\r\n    },\r\n    _clearTimer: function() {\r\n        eventsEngine.off(this.$element(), holdEvent.name);\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.off(document, POINTERUP_EVENT_NAME);\r\n        eventsEngine.off(document, POINTERCANCEL_EVENT_NAME);\r\n        if (this._feedBackDeferred) {\r\n            this._feedBackDeferred.resolve()\r\n        }\r\n        if (this._holdTimer) {\r\n            clearInterval(this._holdTimer)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onChange\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = SpinButton;\r\n\n\n/***/ }),\n\n/***/ 823:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (color.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar standardColorNames = {\r\n    aliceblue: \"f0f8ff\",\r\n    antiquewhite: \"faebd7\",\r\n    aqua: \"00ffff\",\r\n    aquamarine: \"7fffd4\",\r\n    azure: \"f0ffff\",\r\n    beige: \"f5f5dc\",\r\n    bisque: \"ffe4c4\",\r\n    black: \"000000\",\r\n    blanchedalmond: \"ffebcd\",\r\n    blue: \"0000ff\",\r\n    blueviolet: \"8a2be2\",\r\n    brown: \"a52a2a\",\r\n    burlywood: \"deb887\",\r\n    cadetblue: \"5f9ea0\",\r\n    chartreuse: \"7fff00\",\r\n    chocolate: \"d2691e\",\r\n    coral: \"ff7f50\",\r\n    cornflowerblue: \"6495ed\",\r\n    cornsilk: \"fff8dc\",\r\n    crimson: \"dc143c\",\r\n    cyan: \"00ffff\",\r\n    darkblue: \"00008b\",\r\n    darkcyan: \"008b8b\",\r\n    darkgoldenrod: \"b8860b\",\r\n    darkgray: \"a9a9a9\",\r\n    darkgreen: \"006400\",\r\n    darkkhaki: \"bdb76b\",\r\n    darkmagenta: \"8b008b\",\r\n    darkolivegreen: \"556b2f\",\r\n    darkorange: \"ff8c00\",\r\n    darkorchid: \"9932cc\",\r\n    darkred: \"8b0000\",\r\n    darksalmon: \"e9967a\",\r\n    darkseagreen: \"8fbc8f\",\r\n    darkslateblue: \"483d8b\",\r\n    darkslategray: \"2f4f4f\",\r\n    darkturquoise: \"00ced1\",\r\n    darkviolet: \"9400d3\",\r\n    deeppink: \"ff1493\",\r\n    deepskyblue: \"00bfff\",\r\n    dimgray: \"696969\",\r\n    dodgerblue: \"1e90ff\",\r\n    feldspar: \"d19275\",\r\n    firebrick: \"b22222\",\r\n    floralwhite: \"fffaf0\",\r\n    forestgreen: \"228b22\",\r\n    fuchsia: \"ff00ff\",\r\n    gainsboro: \"dcdcdc\",\r\n    ghostwhite: \"f8f8ff\",\r\n    gold: \"ffd700\",\r\n    goldenrod: \"daa520\",\r\n    gray: \"808080\",\r\n    green: \"008000\",\r\n    greenyellow: \"adff2f\",\r\n    honeydew: \"f0fff0\",\r\n    hotpink: \"ff69b4\",\r\n    indianred: \"cd5c5c\",\r\n    indigo: \"4b0082\",\r\n    ivory: \"fffff0\",\r\n    khaki: \"f0e68c\",\r\n    lavender: \"e6e6fa\",\r\n    lavenderblush: \"fff0f5\",\r\n    lawngreen: \"7cfc00\",\r\n    lemonchiffon: \"fffacd\",\r\n    lightblue: \"add8e6\",\r\n    lightcoral: \"f08080\",\r\n    lightcyan: \"e0ffff\",\r\n    lightgoldenrodyellow: \"fafad2\",\r\n    lightgrey: \"d3d3d3\",\r\n    lightgreen: \"90ee90\",\r\n    lightpink: \"ffb6c1\",\r\n    lightsalmon: \"ffa07a\",\r\n    lightseagreen: \"20b2aa\",\r\n    lightskyblue: \"87cefa\",\r\n    lightslateblue: \"8470ff\",\r\n    lightslategray: \"778899\",\r\n    lightsteelblue: \"b0c4de\",\r\n    lightyellow: \"ffffe0\",\r\n    lime: \"00ff00\",\r\n    limegreen: \"32cd32\",\r\n    linen: \"faf0e6\",\r\n    magenta: \"ff00ff\",\r\n    maroon: \"800000\",\r\n    mediumaquamarine: \"66cdaa\",\r\n    mediumblue: \"0000cd\",\r\n    mediumorchid: \"ba55d3\",\r\n    mediumpurple: \"9370d8\",\r\n    mediumseagreen: \"3cb371\",\r\n    mediumslateblue: \"7b68ee\",\r\n    mediumspringgreen: \"00fa9a\",\r\n    mediumturquoise: \"48d1cc\",\r\n    mediumvioletred: \"c71585\",\r\n    midnightblue: \"191970\",\r\n    mintcream: \"f5fffa\",\r\n    mistyrose: \"ffe4e1\",\r\n    moccasin: \"ffe4b5\",\r\n    navajowhite: \"ffdead\",\r\n    navy: \"000080\",\r\n    oldlace: \"fdf5e6\",\r\n    olive: \"808000\",\r\n    olivedrab: \"6b8e23\",\r\n    orange: \"ffa500\",\r\n    orangered: \"ff4500\",\r\n    orchid: \"da70d6\",\r\n    palegoldenrod: \"eee8aa\",\r\n    palegreen: \"98fb98\",\r\n    paleturquoise: \"afeeee\",\r\n    palevioletred: \"d87093\",\r\n    papayawhip: \"ffefd5\",\r\n    peachpuff: \"ffdab9\",\r\n    peru: \"cd853f\",\r\n    pink: \"ffc0cb\",\r\n    plum: \"dda0dd\",\r\n    powderblue: \"b0e0e6\",\r\n    purple: \"800080\",\r\n    rebeccapurple: \"663399\",\r\n    red: \"ff0000\",\r\n    rosybrown: \"bc8f8f\",\r\n    royalblue: \"4169e1\",\r\n    saddlebrown: \"8b4513\",\r\n    salmon: \"fa8072\",\r\n    sandybrown: \"f4a460\",\r\n    seagreen: \"2e8b57\",\r\n    seashell: \"fff5ee\",\r\n    sienna: \"a0522d\",\r\n    silver: \"c0c0c0\",\r\n    skyblue: \"87ceeb\",\r\n    slateblue: \"6a5acd\",\r\n    slategray: \"708090\",\r\n    snow: \"fffafa\",\r\n    springgreen: \"00ff7f\",\r\n    steelblue: \"4682b4\",\r\n    tan: \"d2b48c\",\r\n    teal: \"008080\",\r\n    thistle: \"d8bfd8\",\r\n    tomato: \"ff6347\",\r\n    turquoise: \"40e0d0\",\r\n    violet: \"ee82ee\",\r\n    violetred: \"d02090\",\r\n    wheat: \"f5deb3\",\r\n    white: \"ffffff\",\r\n    whitesmoke: \"f5f5f5\",\r\n    yellow: \"ffff00\",\r\n    yellowgreen: \"9acd32\"\r\n};\r\nvar standardColorTypes = [{\r\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 10), parseInt(colorString[2], 10), parseInt(colorString[3], 10)]\r\n    }\r\n}, {\r\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*\\.*\\d+)\\)$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 10), parseInt(colorString[2], 10), parseInt(colorString[3], 10), parseFloat(colorString[4])]\r\n    }\r\n}, {\r\n    re: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 16), parseInt(colorString[2], 16), parseInt(colorString[3], 16)]\r\n    }\r\n}, {\r\n    re: /^#([a-f0-9]{1})([a-f0-9]{1})([a-f0-9]{1})$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1] + colorString[1], 16), parseInt(colorString[2] + colorString[2], 16), parseInt(colorString[3] + colorString[3], 16)]\r\n    }\r\n}, {\r\n    re: /^hsv\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        var h = parseInt(colorString[1], 10),\r\n            s = parseInt(colorString[2], 10),\r\n            v = parseInt(colorString[3], 10),\r\n            rgb = hsvToRgb(h, s, v);\r\n        return [rgb[0], rgb[1], rgb[2], 1, [h, s, v]]\r\n    }\r\n}, {\r\n    re: /^hsl\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        var h = parseInt(colorString[1], 10),\r\n            s = parseInt(colorString[2], 10),\r\n            l = parseInt(colorString[3], 10),\r\n            rgb = hslToRgb(h, s, l);\r\n        return [rgb[0], rgb[1], rgb[2], 1, null, [h, s, l]]\r\n    }\r\n}];\r\n\r\nfunction Color(value) {\r\n    this.baseColor = value;\r\n    var color;\r\n    if (value) {\r\n        color = String(value).toLowerCase().replace(/ /g, \"\");\r\n        color = standardColorNames[color] ? \"#\" + standardColorNames[color] : color;\r\n        color = parseColor(color)\r\n    }\r\n    if (!color) {\r\n        this.colorIsInvalid = true\r\n    }\r\n    color = color || {};\r\n    this.r = normalize(color[0]);\r\n    this.g = normalize(color[1]);\r\n    this.b = normalize(color[2]);\r\n    this.a = normalize(color[3], 1, 1);\r\n    if (color[4]) {\r\n        this.hsv = {\r\n            h: color[4][0],\r\n            s: color[4][1],\r\n            v: color[4][2]\r\n        }\r\n    } else {\r\n        this.hsv = toHsvFromRgb(this.r, this.g, this.b)\r\n    }\r\n    if (color[5]) {\r\n        this.hsl = {\r\n            h: color[5][0],\r\n            s: color[5][1],\r\n            l: color[5][2]\r\n        }\r\n    } else {\r\n        this.hsl = toHslFromRgb(this.r, this.g, this.b)\r\n    }\r\n}\r\n\r\nfunction parseColor(color) {\r\n    if (\"transparent\" === color) {\r\n        return [0, 0, 0, 0]\r\n    }\r\n    var str, i = 0,\r\n        ii = standardColorTypes.length;\r\n    for (; i < ii; ++i) {\r\n        str = standardColorTypes[i].re.exec(color);\r\n        if (str) {\r\n            return standardColorTypes[i].process(str)\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nfunction normalize(colorComponent, def, max) {\r\n    def = def || 0;\r\n    max = max || 255;\r\n    return colorComponent < 0 || isNaN(colorComponent) ? def : colorComponent > max ? max : colorComponent\r\n}\r\n\r\nfunction toHexFromRgb(r, g, b) {\r\n    return \"#\" + (16777216 | r << 16 | g << 8 | b).toString(16).slice(1)\r\n}\r\n\r\nfunction toHsvFromRgb(r, g, b) {\r\n    var H, S, V, max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        delta = max - min;\r\n    V = max;\r\n    S = 0 === max ? 0 : 1 - min / max;\r\n    if (max === min) {\r\n        H = 0\r\n    } else {\r\n        switch (max) {\r\n            case r:\r\n                H = 60 * ((g - b) / delta);\r\n                if (g < b) {\r\n                    H += 360\r\n                }\r\n                break;\r\n            case g:\r\n                H = 60 * ((b - r) / delta) + 120;\r\n                break;\r\n            case b:\r\n                H = 60 * ((r - g) / delta) + 240\r\n        }\r\n    }\r\n    S *= 100;\r\n    V *= 100 / 255;\r\n    return {\r\n        h: Math.round(H),\r\n        s: Math.round(S),\r\n        v: Math.round(V)\r\n    }\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    var vDec, vInc, vMin, index, a, r, g, b;\r\n    index = Math.floor(h % 360 / 60);\r\n    vMin = (100 - s) * v / 100;\r\n    a = (v - vMin) * (h % 60 / 60);\r\n    vInc = vMin + a;\r\n    vDec = v - a;\r\n    switch (index) {\r\n        case 0:\r\n            r = v;\r\n            g = vInc;\r\n            b = vMin;\r\n            break;\r\n        case 1:\r\n            r = vDec;\r\n            g = v;\r\n            b = vMin;\r\n            break;\r\n        case 2:\r\n            r = vMin;\r\n            g = v;\r\n            b = vInc;\r\n            break;\r\n        case 3:\r\n            r = vMin;\r\n            g = vDec;\r\n            b = v;\r\n            break;\r\n        case 4:\r\n            r = vInc;\r\n            g = vMin;\r\n            b = v;\r\n            break;\r\n        case 5:\r\n            r = v;\r\n            g = vMin;\r\n            b = vDec\r\n    }\r\n    return [Math.round(2.55 * r), Math.round(2.55 * g), Math.round(2.55 * b)]\r\n}\r\n\r\nfunction calculateHue(r, g, b, delta) {\r\n    var max = Math.max(r, g, b);\r\n    switch (max) {\r\n        case r:\r\n            return (g - b) / delta + (g < b ? 6 : 0);\r\n        case g:\r\n            return (b - r) / delta + 2;\r\n        case b:\r\n            return (r - g) / delta + 4\r\n    }\r\n}\r\n\r\nfunction toHslFromRgb(r, g, b) {\r\n    r = convertTo01Bounds(r, 255);\r\n    g = convertTo01Bounds(g, 255);\r\n    b = convertTo01Bounds(b, 255);\r\n    var h, s, max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        maxMinSum = max + min,\r\n        l = maxMinSum / 2;\r\n    if (max === min) {\r\n        h = s = 0\r\n    } else {\r\n        var delta = max - min;\r\n        if (l > .5) {\r\n            s = delta / (2 - maxMinSum)\r\n        } else {\r\n            s = delta / maxMinSum\r\n        }\r\n        h = calculateHue(r, g, b, delta);\r\n        h /= 6\r\n    }\r\n    return {\r\n        h: _round(360 * h),\r\n        s: _round(100 * s),\r\n        l: _round(100 * l)\r\n    }\r\n}\r\n\r\nfunction makeColorTint(colorPart, h) {\r\n    var colorTint = h;\r\n    if (\"r\" === colorPart) {\r\n        colorTint = h + 1 / 3\r\n    }\r\n    if (\"b\" === colorPart) {\r\n        colorTint = h - 1 / 3\r\n    }\r\n    return colorTint\r\n}\r\n\r\nfunction modifyColorTint(colorTint) {\r\n    if (colorTint < 0) {\r\n        colorTint += 1\r\n    }\r\n    if (colorTint > 1) {\r\n        colorTint -= 1\r\n    }\r\n    return colorTint\r\n}\r\n\r\nfunction hueToRgb(p, q, colorTint) {\r\n    colorTint = modifyColorTint(colorTint);\r\n    if (colorTint < 1 / 6) {\r\n        return p + 6 * (q - p) * colorTint\r\n    }\r\n    if (colorTint < .5) {\r\n        return q\r\n    }\r\n    if (colorTint < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - colorTint) * 6\r\n    }\r\n    return p\r\n}\r\n\r\nfunction hslToRgb(h, s, l) {\r\n    var r, g, b;\r\n    h = convertTo01Bounds(h, 360);\r\n    s = convertTo01Bounds(s, 100);\r\n    l = convertTo01Bounds(l, 100);\r\n    if (0 === s) {\r\n        r = g = b = l\r\n    } else {\r\n        var q = l < .5 ? l * (1 + s) : l + s - l * s,\r\n            p = 2 * l - q;\r\n        r = hueToRgb(p, q, makeColorTint(\"r\", h));\r\n        g = hueToRgb(p, q, makeColorTint(\"g\", h));\r\n        b = hueToRgb(p, q, makeColorTint(\"b\", h))\r\n    }\r\n    return [_round(255 * r), _round(255 * g), _round(255 * b)]\r\n}\r\n\r\nfunction convertTo01Bounds(n, max) {\r\n    n = Math.min(max, Math.max(0, parseFloat(n)));\r\n    if (Math.abs(n - max) < 1e-6) {\r\n        return 1\r\n    }\r\n    return n % max / parseFloat(max)\r\n}\r\n\r\nfunction isIntegerBetweenMinAndMax(number, min, max) {\r\n    min = min || 0;\r\n    max = max || 255;\r\n    if (number % 1 !== 0 || number < min || number > max || \"number\" !== typeof number || isNaN(number)) {\r\n        return false\r\n    }\r\n    return true\r\n}\r\nvar _round = Math.round;\r\nColor.prototype = {\r\n    constructor: Color,\r\n    highlight: function(step) {\r\n        step = step || 10;\r\n        return this.alter(step).toHex()\r\n    },\r\n    darken: function(step) {\r\n        step = step || 10;\r\n        return this.alter(-step).toHex()\r\n    },\r\n    alter: function(step) {\r\n        var result = new Color;\r\n        result.r = normalize(this.r + step);\r\n        result.g = normalize(this.g + step);\r\n        result.b = normalize(this.b + step);\r\n        return result\r\n    },\r\n    blend: function(blendColor, opacity) {\r\n        var other = blendColor instanceof Color ? blendColor : new Color(blendColor),\r\n            result = new Color;\r\n        result.r = normalize(_round(this.r * (1 - opacity) + other.r * opacity));\r\n        result.g = normalize(_round(this.g * (1 - opacity) + other.g * opacity));\r\n        result.b = normalize(_round(this.b * (1 - opacity) + other.b * opacity));\r\n        return result\r\n    },\r\n    toHex: function() {\r\n        return toHexFromRgb(this.r, this.g, this.b)\r\n    },\r\n    getPureColor: function() {\r\n        var rgb = hsvToRgb(this.hsv.h, 100, 100);\r\n        return new Color(\"rgb(\" + rgb.join(\",\") + \")\")\r\n    },\r\n    isValidHex: function(hex) {\r\n        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex)\r\n    },\r\n    isValidRGB: function(r, g, b) {\r\n        if (!isIntegerBetweenMinAndMax(r) || !isIntegerBetweenMinAndMax(g) || !isIntegerBetweenMinAndMax(b)) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    isValidAlpha: function(a) {\r\n        if (isNaN(a) || a < 0 || a > 1 || \"number\" !== typeof a) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    colorIsInvalid: false,\r\n    fromHSL: function(hsl) {\r\n        var color = new Color,\r\n            rgb = hslToRgb(hsl.h, hsl.s, hsl.l);\r\n        color.r = rgb[0];\r\n        color.g = rgb[1];\r\n        color.b = rgb[2];\r\n        return color\r\n    }\r\n};\r\nmodule.exports = Color;\r\n\n\n/***/ }),\n\n/***/ 906:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar color_box_1 = __webpack_require__(1105);\nvar prop_types_1 = __webpack_require__(36);\nvar component_1 = __webpack_require__(39);\nvar ColorBox = /** @class */ (function (_super) {\n    __extends(ColorBox, _super);\n    function ColorBox() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = color_box_1.default;\n        _this._defaults = {\n            defaultOpened: \"opened\",\n            defaultValue: \"value\"\n        };\n        _this._templateProps = [{\n                tmplOption: \"dropDownButtonTemplate\",\n                render: \"dropDownButtonRender\",\n                component: \"dropDownButtonComponent\"\n            }, {\n                tmplOption: \"fieldTemplate\",\n                render: \"fieldRender\",\n                component: \"fieldComponent\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(ColorBox.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColorBox;\n}(component_1.Component));\nexports.ColorBox = ColorBox;\nColorBox.propTypes = {\n    acceptCustomValue: prop_types_1.PropTypes.bool,\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    applyButtonText: prop_types_1.PropTypes.string,\n    applyValueMode: prop_types_1.PropTypes.oneOf([\n        \"instantly\",\n        \"useButtons\"\n    ]),\n    cancelButtonText: prop_types_1.PropTypes.string,\n    deferRendering: prop_types_1.PropTypes.bool,\n    disabled: prop_types_1.PropTypes.bool,\n    editAlphaChannel: prop_types_1.PropTypes.bool,\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    inputAttr: prop_types_1.PropTypes.object,\n    isValid: prop_types_1.PropTypes.bool,\n    keyStep: prop_types_1.PropTypes.number,\n    name: prop_types_1.PropTypes.string,\n    onChange: prop_types_1.PropTypes.func,\n    onClosed: prop_types_1.PropTypes.func,\n    onCopy: prop_types_1.PropTypes.func,\n    onCut: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onEnterKey: prop_types_1.PropTypes.func,\n    onFocusIn: prop_types_1.PropTypes.func,\n    onFocusOut: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onInput: prop_types_1.PropTypes.func,\n    onKeyDown: prop_types_1.PropTypes.func,\n    onKeyPress: prop_types_1.PropTypes.func,\n    onKeyUp: prop_types_1.PropTypes.func,\n    onOpened: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onPaste: prop_types_1.PropTypes.func,\n    onValueChanged: prop_types_1.PropTypes.func,\n    opened: prop_types_1.PropTypes.bool,\n    placeholder: prop_types_1.PropTypes.string,\n    readOnly: prop_types_1.PropTypes.bool,\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    stylingMode: prop_types_1.PropTypes.oneOf([\n        \"outlined\",\n        \"underlined\",\n        \"filled\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    text: prop_types_1.PropTypes.string,\n    validationError: prop_types_1.PropTypes.object,\n    validationMessageMode: prop_types_1.PropTypes.oneOf([\n        \"always\",\n        \"auto\"\n    ]),\n    value: prop_types_1.PropTypes.string,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\nexports.default = ColorBox;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/5.chunk.js","/**\r\n * DevExtreme (ui/color_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./color_box/color_box\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/color_box.js\n// module id = 1105\n// module chunks = 5","/**\r\n * DevExtreme (ui/color_box/color_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Color = require(\"../../color\"),\r\n    ColorView = require(\"./color_view\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    isFunction = require(\"../../core/utils/type\").isFunction,\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    DropDownEditor = require(\"../drop_down_editor/ui.drop_down_editor\");\r\nvar COLOR_BOX_CLASS = \"dx-colorbox\",\r\n    COLOR_BOX_INPUT_CLASS = COLOR_BOX_CLASS + \"-input\",\r\n    COLOR_BOX_INPUT_CONTAINER_CLASS = COLOR_BOX_INPUT_CLASS + \"-container\",\r\n    COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS = COLOR_BOX_CLASS + \"-color-result-preview\",\r\n    COLOR_BOX_COLOR_IS_NOT_DEFINED = COLOR_BOX_CLASS + \"-color-is-not-defined\",\r\n    COLOR_BOX_OVERLAY_CLASS = COLOR_BOX_CLASS + \"-overlay\",\r\n    COLOR_BOX_CONTAINER_CELL_CLASS = \"dx-colorview-container-cell\",\r\n    COLOR_BOX_BUTTON_CELL_CLASS = \"dx-colorview-button-cell\",\r\n    COLOR_BOX_BUTTONS_CONTAINER_CLASS = \"dx-colorview-buttons-container\",\r\n    COLOR_BOX_APPLY_BUTTON_CLASS = \"dx-colorview-apply-button\",\r\n    COLOR_BOX_CANCEL_BUTTON_CLASS = \"dx-colorview-cancel-button\";\r\nvar colorEditorPrototype = ColorView.prototype,\r\n    colorUtils = {\r\n        makeTransparentBackground: colorEditorPrototype._makeTransparentBackground.bind(colorEditorPrototype),\r\n        makeRgba: colorEditorPrototype._makeRgba.bind(colorEditorPrototype)\r\n    };\r\nvar ColorBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        var arrowHandler = function(e) {\r\n            e.stopPropagation();\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n        };\r\n        var upArrowHandler = function(e) {\r\n            if (!this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (e.altKey) {\r\n                this.close();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        var downArrowHandler = function(e) {\r\n            if (!this.option(\"opened\") && !e.altKey) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (!this.option(\"opened\") && e.altKey) {\r\n                this._validatedOpening();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        return extend(this.callBase(), {\r\n            tab: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._colorView._rgbInputs[0].focus()\r\n                }\r\n            },\r\n            enter: this._enterKeyHandler,\r\n            leftArrow: arrowHandler,\r\n            rightArrow: arrowHandler,\r\n            upArrow: upArrowHandler,\r\n            downArrow: downArrowHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            editAlphaChannel: false,\r\n            applyValueMode: \"useButtons\",\r\n            keyStep: 1,\r\n            fieldTemplate: null,\r\n            onApplyButtonClick: null,\r\n            onCancelButtonClick: null,\r\n            buttonsLocation: \"bottom after\"\r\n        })\r\n    },\r\n    _popupConfig: function() {\r\n        return extend(this.callBase(), {\r\n            height: \"auto\",\r\n            width: \"\"\r\n        })\r\n    },\r\n    _contentReadyHandler: function() {\r\n        this._createColorView();\r\n        this._addPopupBottomClasses()\r\n    },\r\n    _addPopupBottomClasses: function() {\r\n        var $popupBottom = this._popup.bottomToolbar();\r\n        if ($popupBottom) {\r\n            $popupBottom.addClass(COLOR_BOX_CONTAINER_CELL_CLASS).addClass(COLOR_BOX_BUTTON_CELL_CLASS).find(\".dx-toolbar-items-container\").addClass(COLOR_BOX_BUTTONS_CONTAINER_CLASS);\r\n            $popupBottom.find(\".dx-popup-done\").addClass(COLOR_BOX_APPLY_BUTTON_CLASS);\r\n            $popupBottom.find(\".dx-popup-cancel\").addClass(COLOR_BOX_CANCEL_BUTTON_CLASS)\r\n        }\r\n    },\r\n    _createColorView: function() {\r\n        this._popup.overlayContent().addClass(COLOR_BOX_OVERLAY_CLASS);\r\n        var $colorView = $(\"<div>\").appendTo(this._popup.$content());\r\n        this._colorView = this._createComponent($colorView, ColorView, this._colorViewConfig());\r\n        eventsEngine.on($colorView, \"focus\", function() {\r\n            this.focus()\r\n        }.bind(this))\r\n    },\r\n    _applyNewColor: function(value) {\r\n        this.option(\"value\", value);\r\n        if (value) {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n        }\r\n        if (this._colorViewEnterKeyPressed) {\r\n            this.close();\r\n            this._colorViewEnterKeyPressed = false\r\n        }\r\n    },\r\n    _colorViewConfig: function() {\r\n        var that = this;\r\n        return {\r\n            value: that.option(\"value\"),\r\n            editAlphaChannel: that.option(\"editAlphaChannel\"),\r\n            applyValueMode: that.option(\"applyValueMode\"),\r\n            focusStateEnabled: that.option(\"focusStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            onEnterKeyPressed: function() {\r\n                that._colorViewEnterKeyPressed = true;\r\n                if (that._colorView.option(\"value\") !== that.option(\"value\")) {\r\n                    that._applyNewColor(that._colorView.option(\"value\"));\r\n                    that.close()\r\n                }\r\n            },\r\n            onValueChanged: function(args) {\r\n                if (colorUtils.makeRgba(args.value) === args.previousValue) {\r\n                    return\r\n                }\r\n                var instantlyMode = \"instantly\" === that.option(\"applyValueMode\");\r\n                if (!instantlyMode && !that._colorViewEnterKeyPressed) {\r\n                    return\r\n                }\r\n                that._applyNewColor(args.value)\r\n            },\r\n            _keyboardProcessor: that._colorViewProcessor\r\n        }\r\n    },\r\n    _enterKeyHandler: function() {\r\n        var newValue = this._input().val(),\r\n            value = this.option(\"value\"),\r\n            oldValue = this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value;\r\n        if (!newValue) {\r\n            return false\r\n        }\r\n        var color = new Color(newValue);\r\n        if (color.colorIsInvalid) {\r\n            this._input().val(oldValue);\r\n            return\r\n        }\r\n        if (newValue !== oldValue) {\r\n            this._applyColorFromInput(newValue);\r\n            this.option(\"value\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(newValue) : newValue)\r\n        }\r\n        if (this._colorView) {\r\n            var colorViewValue = this._colorView.option(\"value\");\r\n            if (value !== colorViewValue) {\r\n                this.option(\"value\", colorViewValue)\r\n            }\r\n        }\r\n        this.close();\r\n        return false\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this._applyNewColor(this._colorView.option(\"value\"));\r\n        if (isFunction(this.option(\"onApplyButtonClick\"))) {\r\n            this.option(\"onApplyButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this._resetInputValue();\r\n        if (isFunction(this.option(\"onCancelButtonClick\"))) {\r\n            this.option(\"onCancelButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._colorViewProcessor = this._keyboardProcessor.attachChildProcessor();\r\n        if (this._colorView) {\r\n            this._colorView.option(\"_keyboardProcessor\", this._colorViewProcessor);\r\n            return\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(COLOR_BOX_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._input().addClass(COLOR_BOX_INPUT_CLASS);\r\n        this._renderColorPreview()\r\n    },\r\n    _renderColorPreview: function() {\r\n        this.$element().wrapInner($(\"<div>\").addClass(COLOR_BOX_INPUT_CONTAINER_CLASS));\r\n        this._$colorBoxInputContainer = this.$element().children().eq(0);\r\n        this._$colorResultPreview = $(\"<div>\").addClass(COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS).appendTo(this._$colorBoxInputContainer);\r\n        if (!this.option(\"value\")) {\r\n            this._$colorBoxInputContainer.addClass(COLOR_BOX_COLOR_IS_NOT_DEFINED)\r\n        } else {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, this.option(\"value\"))\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.option(\"value\");\r\n        this.option(\"text\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value);\r\n        this.callBase()\r\n    },\r\n    _resetInputValue: function() {\r\n        var $input = this._input(),\r\n            value = this.option(\"value\");\r\n        $input.val(value);\r\n        this._colorView && this._colorView.option(\"value\", value)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var value = this._input().val();\r\n        if (value) {\r\n            value = this._applyColorFromInput(value);\r\n            this._colorView && this._colorView.option(\"value\", value)\r\n        }\r\n        this.callBase(e, value)\r\n    },\r\n    _applyColorFromInput: function(value) {\r\n        var newColor = new Color(value);\r\n        if (newColor.colorIsInvalid) {\r\n            this._resetInputValue();\r\n            value = this.option(\"value\")\r\n        }\r\n        return value\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value,\r\n            name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._$colorBoxInputContainer.toggleClass(COLOR_BOX_COLOR_IS_NOT_DEFINED, !value);\r\n                if (value) {\r\n                    colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n                } else {\r\n                    this._$colorResultPreview.removeAttr(\"style\")\r\n                }\r\n                if (this._colorView) {\r\n                    this._colorView.option(\"value\", value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n                this.callBase(args);\r\n                this._popup && this._addPopupBottomClasses();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n            case \"onCancelButtonClick\":\r\n            case \"onApplyButtonClick\":\r\n            case \"keyStep\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                break;\r\n            case \"applyValueMode\":\r\n                this.callBase(args);\r\n                break;\r\n            case \"rtlEnabled\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorBox\", ColorBox);\r\nmodule.exports = ColorBox;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/color_box/color_box.js\n// module id = 1106\n// module chunks = 5","/**\r\n * DevExtreme (ui/color_box/color_view.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    translator = require(\"../../animation/translator\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    Color = require(\"../../color\"),\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    devices = require(\"../../core/devices\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    Editor = require(\"../editor/editor\"),\r\n    NumberBox = require(\"../number_box\"),\r\n    TextBox = require(\"../text_box\"),\r\n    Draggable = require(\"../draggable\"),\r\n    clickEvent = require(\"../../events/click\");\r\nvar COLOR_VIEW_CLASS = \"dx-colorview\",\r\n    COLOR_VIEW_CONTAINER_CLASS = \"dx-colorview-container\",\r\n    COLOR_VIEW_ROW_CLASS = \"dx-colorview-container-row\",\r\n    COLOR_VIEW_CELL_CLASS = \"dx-colorview-container-cell\",\r\n    COLOR_VIEW_PALETTE_CLASS = \"dx-colorview-palette\",\r\n    COLOR_VIEW_PALETTE_CELL_CLASS = \"dx-colorview-palette-cell\",\r\n    COLOR_VIEW_PALETTE_HANDLE_CLASS = \"dx-colorview-palette-handle\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_CLASS = \"dx-colorview-palette-gradient\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_WHITE_CLASS = \"dx-colorview-palette-gradient-white\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_BLACK_CLASS = \"dx-colorview-palette-gradient-black\",\r\n    COLOR_VIEW_HUE_SCALE_CLASS = \"dx-colorview-hue-scale\",\r\n    COLOR_VIEW_HUE_SCALE_CELL_CLASS = \"dx-colorview-hue-scale-cell\",\r\n    COLOR_VIEW_HUE_SCALE_HANDLE_CLASS = \"dx-colorview-hue-scale-handle\",\r\n    COLOR_VIEW_HUE_SCALE_WRAPPER_CLASS = \"dx-colorview-hue-scale-wrapper\",\r\n    COLOR_VIEW_CONTROLS_CONTAINER_CLASS = \"dx-colorview-controls-container\",\r\n    COLOR_VIEW_RED_LABEL_CLASS = \"dx-colorview-label-red\",\r\n    COLOR_VIEW_GREEN_LABEL_CLASS = \"dx-colorview-label-green\",\r\n    COLOR_VIEW_BLUE_LABEL_CLASS = \"dx-colorview-label-blue\",\r\n    COLOR_VIEW_HEX_LABEL_CLASS = \"dx-colorview-label-hex\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_SCALE_CLASS = \"dx-colorview-alpha-channel-scale\",\r\n    COLOR_VIEW_APLHA_CHANNEL_ROW_CLASS = \"dx-colorview-alpha-channel-row\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_SCALE_WRAPPER_CLASS = \"dx-colorview-alpha-channel-wrapper\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_LABEL_CLASS = \"dx-colorview-alpha-channel-label\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_HANDLE_CLASS = \"dx-colorview-alpha-channel-handle\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_CELL_CLASS = \"dx-colorview-alpha-channel-cell\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_BORDER_CLASS = \"dx-colorview-alpha-channel-border\",\r\n    COLOR_VIEW_COLOR_PREVIEW = \"dx-colorview-color-preview\",\r\n    COLOR_VIEW_COLOR_PREVIEW_CONTAINER_CLASS = \"dx-colorview-color-preview-container\",\r\n    COLOR_VIEW_COLOR_PREVIEW_CONTAINER_INNER_CLASS = \"dx-colorview-color-preview-container-inner\",\r\n    COLOR_VIEW_COLOR_PREVIEW_COLOR_CURRENT = \"dx-colorview-color-preview-color-current\",\r\n    COLOR_VIEW_COLOR_PREVIEW_COLOR_NEW = \"dx-colorview-color-preview-color-new\";\r\nvar ColorView = Editor.inherit({\r\n    _supportedKeys: function() {\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var that = this,\r\n            getHorizontalPaletteStep = function(e) {\r\n                var step = 100 / that._paletteWidth;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return Math.round(step)\r\n            },\r\n            updateHorizontalPaletteValue = function(step) {\r\n                var value = that._currentColor.hsv.s + step;\r\n                if (value > 100) {\r\n                    value = 100\r\n                } else {\r\n                    if (value < 0) {\r\n                        value = 0\r\n                    }\r\n                }\r\n                that._currentColor.hsv.s = value;\r\n                updatePaletteValue()\r\n            },\r\n            getVerticalPaletteStep = function(e) {\r\n                var step = 100 / that._paletteHeight;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return Math.round(step)\r\n            },\r\n            updateVerticalPaletteValue = function(step) {\r\n                var value = that._currentColor.hsv.v + step;\r\n                if (value > 100) {\r\n                    value = 100\r\n                } else {\r\n                    if (value < 0) {\r\n                        value = 0\r\n                    }\r\n                }\r\n                that._currentColor.hsv.v = value;\r\n                updatePaletteValue()\r\n            },\r\n            updatePaletteValue = function() {\r\n                that._placePaletteHandle();\r\n                that._updateColorFromHsv(that._currentColor.hsv.h, that._currentColor.hsv.s, that._currentColor.hsv.v)\r\n            },\r\n            getHueScaleStep = function(e) {\r\n                var step = 360 / (that._hueScaleWrapperHeight - that._hueScaleHandleHeight);\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return step\r\n            },\r\n            updateHueScaleValue = function(step) {\r\n                that._currentColor.hsv.h += step;\r\n                that._placeHueScaleHandle();\r\n                var handleLocation = translator.locate(that._$hueScaleHandle);\r\n                that._updateColorHue(handleLocation.top + that._hueScaleHandleHeight / 2)\r\n            },\r\n            getAlphaScaleStep = function(e) {\r\n                var step = 1 / that._alphaChannelScaleWorkWidth;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > .01 ? step : .01;\r\n                step = isRTL ? -step : step;\r\n                return step\r\n            },\r\n            updateAlphaScaleValue = function(step) {\r\n                that._currentColor.a += step;\r\n                that._placeAlphaChannelHandle();\r\n                var handleLocation = translator.locate(that._$alphaChannelHandle);\r\n                that._calculateColorTransparencyByScaleWidth(handleLocation.left + that._alphaChannelHandleWidth / 2)\r\n            };\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (this._currentColor.hsv.h <= 360 && !this._isTopColorHue) {\r\n                        updateHueScaleValue(getHueScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.v < 100) {\r\n                        updateVerticalPaletteValue(getVerticalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (this._currentColor.hsv.h >= 0) {\r\n                        if (this._isTopColorHue) {\r\n                            this._currentColor.hsv.h = 360\r\n                        }\r\n                        updateHueScaleValue(-getHueScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.v > 0) {\r\n                        updateVerticalPaletteValue(-getVerticalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            rightArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (isRTL ? this._currentColor.a < 1 : this._currentColor.a > 0 && this.option(\"editAlphaChannel\")) {\r\n                        updateAlphaScaleValue(-getAlphaScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.s < 100) {\r\n                        updateHorizontalPaletteValue(getHorizontalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            leftArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (isRTL ? this._currentColor.a > 0 : this._currentColor.a < 1 && this.option(\"editAlphaChannel\")) {\r\n                        updateAlphaScaleValue(getAlphaScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.s > 0) {\r\n                        updateHorizontalPaletteValue(-getHorizontalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            enter: function(e) {\r\n                this._fireEnterKeyPressed(e)\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            onEnterKeyPressed: void 0,\r\n            editAlphaChannel: false,\r\n            keyStep: 1,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initColorAndOpacity();\r\n        this._initEnterKeyPressedAction()\r\n    },\r\n    _initEnterKeyPressedAction: function() {\r\n        this._onEnterKeyPressedAction = this._createActionByOption(\"onEnterKeyPressed\")\r\n    },\r\n    _fireEnterKeyPressed: function(e) {\r\n        if (!this._onEnterKeyPressedAction) {\r\n            return\r\n        }\r\n        this._onEnterKeyPressedAction({\r\n            event: e\r\n        })\r\n    },\r\n    _initColorAndOpacity: function() {\r\n        this._setCurrentColor(this.option(\"value\"))\r\n    },\r\n    _setCurrentColor: function(value) {\r\n        value = value || \"#000000\";\r\n        var newColor = new Color(value);\r\n        if (!newColor.colorIsInvalid) {\r\n            if (!this._currentColor || this._makeRgba(this._currentColor) !== this._makeRgba(newColor)) {\r\n                this._currentColor = newColor;\r\n                if (this._$currentColor) {\r\n                    this._makeTransparentBackground(this._$currentColor, newColor)\r\n                }\r\n            }\r\n        } else {\r\n            this.option(\"value\", this._currentColor.baseColor)\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(COLOR_VIEW_CLASS);\r\n        this._renderColorPickerContainer()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderPalette();\r\n        this._renderHueScale();\r\n        this._renderControlsContainer();\r\n        this._renderControls();\r\n        this._renderAlphaChannelElements()\r\n    },\r\n    _makeTransparentBackground: function($el, color) {\r\n        if (!(color instanceof Color)) {\r\n            color = new Color(color)\r\n        }\r\n        $el.css(\"backgroundColor\", this._makeRgba(color))\r\n    },\r\n    _makeRgba: function(color) {\r\n        if (!(color instanceof Color)) {\r\n            color = new Color(color)\r\n        }\r\n        return \"rgba(\" + [color.r, color.g, color.b, color.a].join(\", \") + \")\"\r\n    },\r\n    _renderValue: function() {\r\n        this.callBase(this.option(\"editAlphaChannel\") ? this._makeRgba(this._currentColor) : this.option(\"value\"))\r\n    },\r\n    _renderColorPickerContainer: function() {\r\n        var $parent = this.$element();\r\n        this._$colorPickerContainer = $(\"<div>\").addClass(COLOR_VIEW_CONTAINER_CLASS).appendTo($parent);\r\n        this._renderHtmlRows()\r\n    },\r\n    _renderHtmlRows: function(updatedOption) {\r\n        var $renderedRows = this._$colorPickerContainer.find(\".\" + COLOR_VIEW_ROW_CLASS),\r\n            renderedRowsCount = $renderedRows.length,\r\n            rowCount = this.option(\"editAlphaChannel\") ? 2 : 1,\r\n            delta = renderedRowsCount - rowCount;\r\n        if (delta > 0) {\r\n            $renderedRows.eq(-1).remove()\r\n        }\r\n        if (delta < 0) {\r\n            delta = Math.abs(delta);\r\n            var i, rows = [];\r\n            for (i = 0; i < delta; i++) {\r\n                rows.push($(\"<div>\").addClass(COLOR_VIEW_ROW_CLASS))\r\n            }\r\n            if (renderedRowsCount) {\r\n                for (i = 0; i < rows.length; i++) {\r\n                    $renderedRows.eq(0).after(rows[i])\r\n                }\r\n            } else {\r\n                this._$colorPickerContainer.append(rows)\r\n            }\r\n        }\r\n    },\r\n    _renderHtmlCellInsideRow: function(index, $rowParent, additionalClass) {\r\n        return $(\"<div>\").addClass(COLOR_VIEW_CELL_CLASS).addClass(additionalClass).appendTo($rowParent.find(\".\" + COLOR_VIEW_ROW_CLASS).eq(index))\r\n    },\r\n    _renderPalette: function() {\r\n        var $paletteCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer, COLOR_VIEW_PALETTE_CELL_CLASS),\r\n            $paletteGradientWhite = $(\"<div>\").addClass([COLOR_VIEW_PALETTE_GRADIENT_CLASS, COLOR_VIEW_PALETTE_GRADIENT_WHITE_CLASS].join(\" \")),\r\n            $paletteGradientBlack = $(\"<div>\").addClass([COLOR_VIEW_PALETTE_GRADIENT_CLASS, COLOR_VIEW_PALETTE_GRADIENT_BLACK_CLASS].join(\" \"));\r\n        this._$palette = $(\"<div>\").addClass(COLOR_VIEW_PALETTE_CLASS).css(\"backgroundColor\", this._currentColor.getPureColor().toHex()).appendTo($paletteCell);\r\n        this._paletteHeight = this._$palette.height();\r\n        this._paletteWidth = this._$palette.width();\r\n        this._renderPaletteHandle();\r\n        this._$palette.append([$paletteGradientWhite, $paletteGradientBlack])\r\n    },\r\n    _renderPaletteHandle: function() {\r\n        this._$paletteHandle = $(\"<div>\").addClass(COLOR_VIEW_PALETTE_HANDLE_CLASS).appendTo(this._$palette);\r\n        this._createComponent(this._$paletteHandle, Draggable, {\r\n            area: this._$palette,\r\n            allowMoveByClick: true,\r\n            boundOffset: function() {\r\n                return -this._paletteHandleHeight / 2\r\n            }.bind(this),\r\n            onDrag: function() {\r\n                var paletteHandlePosition = translator.locate(this._$paletteHandle);\r\n                this._updateByDrag = true;\r\n                this._updateColorFromHsv(this._currentColor.hsv.h, this._calculateColorSaturation(paletteHandlePosition), this._calculateColorValue(paletteHandlePosition))\r\n            }.bind(this)\r\n        });\r\n        this._paletteHandleWidth = this._$paletteHandle.width();\r\n        this._paletteHandleHeight = this._$paletteHandle.height();\r\n        this._placePaletteHandle()\r\n    },\r\n    _placePaletteHandle: function() {\r\n        translator.move(this._$paletteHandle, {\r\n            left: Math.round(this._paletteWidth * this._currentColor.hsv.s / 100 - this._paletteHandleWidth / 2),\r\n            top: Math.round(this._paletteHeight - this._paletteHeight * this._currentColor.hsv.v / 100 - this._paletteHandleHeight / 2)\r\n        })\r\n    },\r\n    _calculateColorValue: function(paletteHandlePosition) {\r\n        var value = Math.floor(paletteHandlePosition.top + this._paletteHandleHeight / 2);\r\n        return 100 - Math.round(100 * value / this._paletteHeight)\r\n    },\r\n    _calculateColorSaturation: function(paletteHandlePosition) {\r\n        var saturation = Math.floor(paletteHandlePosition.left + this._paletteHandleWidth / 2);\r\n        return Math.round(100 * saturation / this._paletteWidth)\r\n    },\r\n    _updateColorFromHsv: function(hue, saturation, value) {\r\n        var a = this._currentColor.a;\r\n        this._currentColor = new Color(\"hsv(\" + [hue, saturation, value].join(\",\") + \")\");\r\n        this._currentColor.a = a;\r\n        this._updateColorParamsAndColorPreview();\r\n        this.applyColor()\r\n    },\r\n    _renderHueScale: function() {\r\n        var $hueScaleCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer, COLOR_VIEW_HUE_SCALE_CELL_CLASS);\r\n        this._$hueScaleWrapper = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_WRAPPER_CLASS).appendTo($hueScaleCell);\r\n        this._$hueScale = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_CLASS).appendTo(this._$hueScaleWrapper);\r\n        this._hueScaleHeight = this._$hueScale.height();\r\n        this._hueScaleWrapperHeight = this._$hueScaleWrapper.outerHeight();\r\n        this._renderHueScaleHandle()\r\n    },\r\n    _renderHueScaleHandle: function() {\r\n        this._$hueScaleHandle = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_HANDLE_CLASS).appendTo(this._$hueScaleWrapper);\r\n        this._createComponent(this._$hueScaleHandle, Draggable, {\r\n            area: this._$hueScaleWrapper,\r\n            allowMoveByClick: true,\r\n            direction: \"vertical\",\r\n            onDrag: function() {\r\n                this._updateByDrag = true;\r\n                this._updateColorHue(translator.locate(this._$hueScaleHandle).top + this._hueScaleHandleHeight / 2)\r\n            }.bind(this)\r\n        });\r\n        this._hueScaleHandleHeight = this._$hueScaleHandle.height();\r\n        this._placeHueScaleHandle()\r\n    },\r\n    _placeHueScaleHandle: function() {\r\n        var hueScaleHeight = this._hueScaleWrapperHeight,\r\n            handleHeight = this._hueScaleHandleHeight,\r\n            top = (hueScaleHeight - handleHeight) * (360 - this._currentColor.hsv.h) / 360;\r\n        if (hueScaleHeight < top + handleHeight) {\r\n            top = hueScaleHeight - handleHeight\r\n        }\r\n        if (top < 0) {\r\n            top = 0\r\n        }\r\n        translator.move(this._$hueScaleHandle, {\r\n            top: Math.round(top)\r\n        })\r\n    },\r\n    _updateColorHue: function(handlePosition) {\r\n        var hue = 360 - Math.round(360 * (handlePosition - this._hueScaleHandleHeight / 2) / (this._hueScaleWrapperHeight - this._hueScaleHandleHeight)),\r\n            saturation = this._currentColor.hsv.s,\r\n            value = this._currentColor.hsv.v;\r\n        this._isTopColorHue = false;\r\n        hue = hue < 0 ? 0 : hue;\r\n        if (hue >= 360) {\r\n            this._isTopColorHue = true;\r\n            hue = 0\r\n        }\r\n        this._updateColorFromHsv(hue, saturation, value);\r\n        this._$palette.css(\"backgroundColor\", this._currentColor.getPureColor().toHex())\r\n    },\r\n    _renderControlsContainer: function() {\r\n        var $controlsContainerCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer);\r\n        this._$controlsContainer = $(\"<div>\").addClass(COLOR_VIEW_CONTROLS_CONTAINER_CLASS).appendTo($controlsContainerCell)\r\n    },\r\n    _renderControls: function() {\r\n        this._renderColorsPreview();\r\n        this._renderRgbInputs();\r\n        this._renderHexInput()\r\n    },\r\n    _renderColorsPreview: function() {\r\n        var $colorsPreviewContainer = $(\"<div>\").addClass(COLOR_VIEW_COLOR_PREVIEW_CONTAINER_CLASS).appendTo(this._$controlsContainer);\r\n        var $colorsPreviewContainerInner = $(\"<div>\").addClass(COLOR_VIEW_COLOR_PREVIEW_CONTAINER_INNER_CLASS).appendTo($colorsPreviewContainer);\r\n        this._$currentColor = $(\"<div>\").addClass([COLOR_VIEW_COLOR_PREVIEW, COLOR_VIEW_COLOR_PREVIEW_COLOR_CURRENT].join(\" \"));\r\n        this._$newColor = $(\"<div>\").addClass([COLOR_VIEW_COLOR_PREVIEW, COLOR_VIEW_COLOR_PREVIEW_COLOR_NEW].join(\" \"));\r\n        this._makeTransparentBackground(this._$currentColor, this._currentColor);\r\n        this._makeTransparentBackground(this._$newColor, this._currentColor);\r\n        $colorsPreviewContainerInner.append([this._$currentColor, this._$newColor])\r\n    },\r\n    _renderAlphaChannelElements: function() {\r\n        if (this.option(\"editAlphaChannel\")) {\r\n            this._$colorPickerContainer.find(\".\" + COLOR_VIEW_ROW_CLASS).eq(1).addClass(COLOR_VIEW_APLHA_CHANNEL_ROW_CLASS);\r\n            this._renderAlphaChannelScale();\r\n            this._renderAlphaChannelInput()\r\n        }\r\n    },\r\n    _renderRgbInputs: function() {\r\n        this._rgbInputsWithLabels = [this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.r,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"R\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaRed\"),\r\n            labelClass: COLOR_VIEW_RED_LABEL_CLASS\r\n        }), this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.g,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"G\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaGreen\"),\r\n            labelClass: COLOR_VIEW_GREEN_LABEL_CLASS\r\n        }), this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.b,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"B\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaBlue\"),\r\n            labelClass: COLOR_VIEW_BLUE_LABEL_CLASS\r\n        })];\r\n        this._$controlsContainer.append(this._rgbInputsWithLabels);\r\n        this._rgbInputs = [this._rgbInputsWithLabels[0].find(\".dx-numberbox\").dxNumberBox(\"instance\"), this._rgbInputsWithLabels[1].find(\".dx-numberbox\").dxNumberBox(\"instance\"), this._rgbInputsWithLabels[2].find(\".dx-numberbox\").dxNumberBox(\"instance\")]\r\n    },\r\n    _renderEditorWithLabel: function(options) {\r\n        var $editor = $(\"<div>\");\r\n        var $label = $(\"<label>\").addClass(options.labelClass).text(options.labelText + \":\").append($editor);\r\n        eventsEngine.off($label, clickEvent.name);\r\n        eventsEngine.on($label, clickEvent.name, function(e) {\r\n            e.preventDefault()\r\n        });\r\n        var editorType = options.editorType;\r\n        var editorOptions = extend({\r\n            value: options.value,\r\n            onValueChanged: options.onValueChanged\r\n        }, {\r\n            stylingMode: this.option(\"stylingMode\")\r\n        });\r\n        if (editorType === NumberBox) {\r\n            editorOptions.min = options.min || 0;\r\n            editorOptions.max = options.max || 255;\r\n            editorOptions.step = options.step || 1\r\n        }\r\n        var editor = new editorType($editor, editorOptions);\r\n        editor.registerKeyHandler(\"enter\", function(e) {\r\n            this._fireEnterKeyPressed(e)\r\n        }.bind(this));\r\n        this.setAria(\"label\", options.labelAriaText, $editor);\r\n        return $label\r\n    },\r\n    hexInputOptions: function() {\r\n        return {\r\n            editorType: TextBox,\r\n            value: this._currentColor.toHex().replace(\"#\", \"\"),\r\n            onValueChanged: this._updateColor.bind(this, true),\r\n            labelClass: COLOR_VIEW_HEX_LABEL_CLASS,\r\n            labelText: \"#\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaHex\")\r\n        }\r\n    },\r\n    _renderHexInput: function() {\r\n        this._hexInput = TextBox.getInstance(this._renderEditorWithLabel(this.hexInputOptions()).appendTo(this._$controlsContainer).find(\".dx-textbox\"))\r\n    },\r\n    _renderAlphaChannelScale: function() {\r\n        var $alphaChannelScaleCell = this._renderHtmlCellInsideRow(1, this._$colorPickerContainer, COLOR_VIEW_ALPHA_CHANNEL_CELL_CLASS),\r\n            $alphaChannelBorder = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_BORDER_CLASS).appendTo($alphaChannelScaleCell),\r\n            $alphaChannelScaleWrapper = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_SCALE_WRAPPER_CLASS).appendTo($alphaChannelBorder);\r\n        this._$alphaChannelScale = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_SCALE_CLASS).appendTo($alphaChannelScaleWrapper);\r\n        this._makeCSSLinearGradient(this._$alphaChannelScale);\r\n        this._renderAlphaChannelHandle($alphaChannelScaleCell)\r\n    },\r\n    _makeCSSLinearGradient: function($el) {\r\n        var color = this._currentColor,\r\n            colorAsRgb = [color.r, color.g, color.b].join(\",\"),\r\n            colorAsHex = color.toHex().replace(\"#\", \"\");\r\n        var combineGradientString = function(colorAsRgb, colorAsHex) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\"),\r\n                startColor = \"rgba(\" + colorAsRgb + \", \" + (rtlEnabled ? \"1\" : \"0\") + \")\",\r\n                finishColor = \"rgba(\" + colorAsRgb + \", \" + (rtlEnabled ? \"0\" : \"1\") + \")\",\r\n                startColorIE = \"'#\" + (rtlEnabled ? \"00\" : \"\") + colorAsHex + \"'\",\r\n                finishColorIE = \"'#\" + (rtlEnabled ? \"\" : \"00\") + colorAsHex + \"'\";\r\n            return [\"background-image: -webkit-linear-gradient(180deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: -moz-linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: -o-linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=\" + startColorIE + \", endColorstr=\" + finishColorIE + \")\"].join(\";\")\r\n        };\r\n        $el.attr(\"style\", combineGradientString.call(this, colorAsRgb, colorAsHex))\r\n    },\r\n    _renderAlphaChannelInput: function() {\r\n        var that = this,\r\n            $alphaChannelInputCell = this._renderHtmlCellInsideRow(1, this._$colorPickerContainer);\r\n        that._alphaChannelInput = this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.a,\r\n            max: 1,\r\n            step: .1,\r\n            onValueChanged: function(e) {\r\n                var value = e.value;\r\n                value = that._currentColor.isValidAlpha(value) ? value : that._currentColor.a;\r\n                that._updateColorTransparency(value);\r\n                that._placeAlphaChannelHandle()\r\n            },\r\n            labelClass: COLOR_VIEW_ALPHA_CHANNEL_LABEL_CLASS,\r\n            labelText: \"Alpha\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaAlpha\")\r\n        }).appendTo($alphaChannelInputCell).find(\".dx-numberbox\").dxNumberBox(\"instance\")\r\n    },\r\n    _updateColorTransparency: function(transparency) {\r\n        this._currentColor.a = transparency;\r\n        this._makeTransparentBackground(this._$newColor, this._currentColor);\r\n        this.applyColor()\r\n    },\r\n    _renderAlphaChannelHandle: function($parent) {\r\n        this._$alphaChannelHandle = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_HANDLE_CLASS).appendTo($parent);\r\n        this._createComponent(this._$alphaChannelHandle, Draggable, {\r\n            area: $parent,\r\n            allowMoveByClick: true,\r\n            direction: \"horizontal\",\r\n            onDrag: function() {\r\n                this._updateByDrag = true;\r\n                var $alphaChannelHandle = this._$alphaChannelHandle,\r\n                    alphaChannelHandlePosition = translator.locate($alphaChannelHandle).left + this._alphaChannelHandleWidth / 2;\r\n                this._calculateColorTransparencyByScaleWidth(alphaChannelHandlePosition)\r\n            }.bind(this)\r\n        });\r\n        this._alphaChannelHandleWidth = this._$alphaChannelHandle.width();\r\n        this._alphaChannelScaleWorkWidth = $parent.width() - this._alphaChannelHandleWidth;\r\n        this._placeAlphaChannelHandle()\r\n    },\r\n    _calculateColorTransparencyByScaleWidth: function(handlePosition) {\r\n        var transparency = (handlePosition - this._alphaChannelHandleWidth / 2) / this._alphaChannelScaleWorkWidth,\r\n            rtlEnabled = this.option(\"rtlEnabled\");\r\n        transparency = rtlEnabled ? transparency : 1 - transparency;\r\n        if (handlePosition >= this._alphaChannelScaleWorkWidth + this._alphaChannelHandleWidth / 2) {\r\n            transparency = rtlEnabled ? 1 : 0\r\n        } else {\r\n            if (transparency < 1) {\r\n                transparency = transparency.toFixed(2)\r\n            }\r\n        }\r\n        transparency = Math.max(transparency, 0);\r\n        transparency = Math.min(transparency, 1);\r\n        this._alphaChannelInput.option(\"value\", transparency)\r\n    },\r\n    _placeAlphaChannelHandle: function() {\r\n        var left = this._alphaChannelScaleWorkWidth * (1 - this._currentColor.a);\r\n        if (left < 0) {\r\n            left = 0\r\n        }\r\n        if (this._alphaChannelScaleWorkWidth < left) {\r\n            left = this._alphaChannelScaleWorkWidth\r\n        }\r\n        translator.move(this._$alphaChannelHandle, {\r\n            left: this.option(\"rtlEnabled\") ? this._alphaChannelScaleWorkWidth - left : left\r\n        })\r\n    },\r\n    applyColor: function() {\r\n        var colorValue = this.option(\"editAlphaChannel\") ? this._makeRgba(this._currentColor) : this._currentColor.toHex();\r\n        this._makeTransparentBackground(this._$currentColor, this._currentColor);\r\n        this.option(\"value\", colorValue)\r\n    },\r\n    cancelColor: function() {\r\n        this._initColorAndOpacity();\r\n        this._refreshMarkup()\r\n    },\r\n    _updateColor: function(isHex, e) {\r\n        var rgba, newColor;\r\n        if (isHex) {\r\n            newColor = this._validateHex(\"#\" + this._hexInput.option(\"value\"))\r\n        } else {\r\n            rgba = this._validateRgb();\r\n            if (this._alphaChannelInput) {\r\n                rgba.push(this._alphaChannelInput.option(\"value\"));\r\n                newColor = \"rgba(\" + rgba.join(\", \") + \")\"\r\n            } else {\r\n                newColor = \"rgb(\" + rgba.join(\", \") + \")\"\r\n            }\r\n        }\r\n        if (!this._suppressEditorsValueUpdating) {\r\n            this._currentColor = new Color(newColor);\r\n            this.applyColor();\r\n            this._refreshMarkup()\r\n        }\r\n    },\r\n    _validateHex: function(hex) {\r\n        return this._currentColor.isValidHex(hex) ? hex : this._currentColor.toHex()\r\n    },\r\n    _validateRgb: function() {\r\n        var r = this._rgbInputs[0].option(\"value\"),\r\n            g = this._rgbInputs[1].option(\"value\"),\r\n            b = this._rgbInputs[2].option(\"value\");\r\n        if (!this._currentColor.isValidRGB(r, g, b)) {\r\n            r = this._currentColor.r;\r\n            g = this._currentColor.g;\r\n            b = this._currentColor.b\r\n        }\r\n        return [r, g, b]\r\n    },\r\n    _refreshMarkup: function() {\r\n        this._placeHueScaleHandle();\r\n        this._placePaletteHandle();\r\n        this._updateColorParamsAndColorPreview();\r\n        this._$palette.css(\"backgroundColor\", this._currentColor.getPureColor().toHex());\r\n        if (this._$alphaChannelHandle) {\r\n            this._updateColorTransparency(this._currentColor.a);\r\n            this._placeAlphaChannelHandle()\r\n        }\r\n    },\r\n    _updateColorParamsAndColorPreview: function() {\r\n        this._suppressEditorsValueUpdating = true;\r\n        this._hexInput.option(\"value\", this._currentColor.toHex().replace(\"#\", \"\"));\r\n        this._rgbInputs[0].option(\"value\", this._currentColor.r);\r\n        this._rgbInputs[1].option(\"value\", this._currentColor.g);\r\n        this._rgbInputs[2].option(\"value\", this._currentColor.b);\r\n        this._suppressEditorsValueUpdating = false;\r\n        this._makeTransparentBackground(this._$newColor, this._currentColor);\r\n        if (this.option(\"editAlphaChannel\")) {\r\n            this._makeCSSLinearGradient.call(this, this._$alphaChannelScale);\r\n            this._alphaChannelInput.option(\"value\", this._currentColor.a)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._setCurrentColor(value);\r\n                if (!this._updateByDrag) {\r\n                    this._refreshMarkup()\r\n                }\r\n                this._updateByDrag = false;\r\n                this.callBase(args);\r\n                break;\r\n            case \"onEnterKeyPressed\":\r\n                this._initEnterKeyPressedAction();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n                if (this._$colorPickerContainer) {\r\n                    this._renderHtmlRows(\"editAlphaChannel\");\r\n                    this._renderAlphaChannelElements()\r\n                }\r\n                break;\r\n            case \"keyStep\":\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderControls();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorView\", ColorView);\r\nmodule.exports = ColorView;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/color_box/color_view.js\n// module id = 1107\n// module chunks = 5","/**\r\n * DevExtreme (ui/draggable.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    window = require(\"../core/utils/window\").getWindow(),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    stringUtils = require(\"../core/utils/string\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    translator = require(\"../animation/translator\"),\r\n    dasherize = require(\"../core/utils/inflector\").dasherize,\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    DOMComponent = require(\"../core/dom_component\"),\r\n    eventUtils = require(\"../events/utils\"),\r\n    pointerEvents = require(\"../events/pointer\"),\r\n    dragEvents = require(\"../events/drag\"),\r\n    positionUtils = require(\"../animation/position\"),\r\n    isFunction = require(\"../core/utils/type\").isFunction,\r\n    noop = require(\"../core/utils/common\").noop;\r\nvar DRAGGABLE = \"dxDraggable\",\r\n    DRAGSTART_EVENT_NAME = eventUtils.addNamespace(dragEvents.start, DRAGGABLE),\r\n    DRAG_EVENT_NAME = eventUtils.addNamespace(dragEvents.move, DRAGGABLE),\r\n    DRAGEND_EVENT_NAME = eventUtils.addNamespace(dragEvents.end, DRAGGABLE),\r\n    POINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, DRAGGABLE),\r\n    DRAGGABLE_CLASS = dasherize(DRAGGABLE),\r\n    DRAGGABLE_DRAGGING_CLASS = DRAGGABLE_CLASS + \"-dragging\";\r\nvar Draggable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: noop,\r\n            onDrag: noop,\r\n            onDragEnd: noop,\r\n            immediate: true,\r\n            direction: \"both\",\r\n            area: window,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers()\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this.$element().css(\"position\", \"absolute\"),\r\n            eventHandlers = {},\r\n            allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        eventHandlers[DRAGSTART_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        eventHandlers[DRAG_EVENT_NAME] = this._dragHandler.bind(this);\r\n        eventHandlers[DRAGEND_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        if (allowMoveByClick) {\r\n            eventHandlers[POINTERDOWN_EVENT_NAME] = this._pointerDownHandler.bind(this);\r\n            $element = this._getArea()\r\n        }\r\n        eventsEngine.on($element, eventHandlers, {\r\n            direction: this.option(\"direction\"),\r\n            immediate: this.option(\"immediate\")\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        eventsEngine.off(this.$element(), \".\" + DRAGGABLE);\r\n        eventsEngine.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position) {\r\n        translator.move(this.$element(), position)\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if (eventUtils.needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var areaOffset = this._getAreaOffset($(e.currentTarget)),\r\n            direction = this.option(\"direction\"),\r\n            position = {};\r\n        if (\"horizontal\" === direction || \"both\" === direction) {\r\n            position.left = e.pageX - this.$element().width() / 2 - areaOffset.left\r\n        }\r\n        if (\"vertical\" === direction || \"both\" === direction) {\r\n            position.top = e.pageY - this.$element().height() / 2 - areaOffset.top\r\n        }\r\n        this._move(position);\r\n        this._getAction(\"onDrag\")({\r\n            event: e\r\n        })\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var $area = this._getArea(),\r\n            areaOffset = this._getAreaOffset($area),\r\n            boundOffset = this._getBoundOffset(),\r\n            areaWidth = $area.outerWidth(),\r\n            areaHeight = $area.outerHeight(),\r\n            elementWidth = $element.width(),\r\n            elementHeight = $element.height();\r\n        this._toggleDraggingClass(true);\r\n        var startOffset = {\r\n            left: $element.offset().left - areaOffset.left,\r\n            top: $element.offset().top - areaOffset.top\r\n        };\r\n        this._startPosition = translator.locate($element);\r\n        e.maxLeftOffset = startOffset.left - boundOffset.left;\r\n        e.maxRightOffset = areaWidth - startOffset.left - elementWidth - boundOffset.right;\r\n        e.maxTopOffset = startOffset.top - boundOffset.top;\r\n        e.maxBottomOffset = areaHeight - startOffset.top - elementHeight - boundOffset.bottom;\r\n        this._getAction(\"onDragStart\")({\r\n            event: e\r\n        })\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this.$element().toggleClass(DRAGGABLE_DRAGGING_CLASS, value)\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return stringUtils.quadToObject(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _dragHandler: function(e) {\r\n        var offset = e.offset,\r\n            startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        this._getAction(\"onDrag\")({\r\n            event: e\r\n        })\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        this._toggleDraggingClass(false);\r\n        this._getAction(\"onDragEnd\")({\r\n            event: e\r\n        })\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DRAGGABLE_CLASS)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDrag\":\r\n            case \"onDragEnd\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"direction\":\r\n            case \"disabled\":\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"boundOffset\":\r\n            case \"area\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers()\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nmodule.exports = Draggable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/draggable.js\n// module id = 1108\n// module chunks = 5","/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-vue/color-box' file instead */\n__export(require(\"../color-box\"));\nvar color_box_1 = require(\"../color-box\");\nexports.default = color_box_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/ui/color-box.js\n// module id = 722\n// module chunks = 5","/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_editor.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    AsyncTemplateMixin = require(\"../shared/async_template_mixin\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    focused = require(\"../widget/selectors\").focused,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    isDefined = require(\"../../core/utils/type\").isDefined,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    errors = require(\"../widget/ui.errors\"),\r\n    positionUtils = require(\"../../animation/position\"),\r\n    getDefaultAlignment = require(\"../../core/utils/position\").getDefaultAlignment,\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    Button = require(\"../button\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    TextBox = require(\"../text_box\"),\r\n    clickEvent = require(\"../../events/click\"),\r\n    FunctionTemplate = require(\"../widget/function_template\"),\r\n    Popup = require(\"../popup\");\r\nvar DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\",\r\n    DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS = \"dx-dropdowneditor-input-wrapper\",\r\n    DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\",\r\n    DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\",\r\n    DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\",\r\n    DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\",\r\n    DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\",\r\n    DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\",\r\n    DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\r\nvar DropDownEditor = TextBox.inherit({\r\n    _supportedKeys: function() {\r\n        var homeEndHandler = function(e) {\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        return extend({}, this.callBase(), {\r\n            tab: function(e) {\r\n                if (!this.option(\"opened\")) {\r\n                    return\r\n                }\r\n                if (\"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this.close();\r\n                    return\r\n                }\r\n                var $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\r\n                $focusableElement && eventsEngine.trigger($focusableElement, \"focus\");\r\n                e.preventDefault()\r\n            },\r\n            escape: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault()\r\n                }\r\n                this.close()\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this.close();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this._validatedOpening();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            enter: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._valueChangeEventHandler(e)\r\n                }\r\n                return true\r\n            },\r\n            home: homeEndHandler,\r\n            end: homeEndHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            onOpened: null,\r\n            onClosed: null,\r\n            opened: false,\r\n            acceptCustomValue: true,\r\n            applyValueMode: \"instantly\",\r\n            deferRendering: true,\r\n            activeStateEnabled: true,\r\n            dropDownButtonTemplate: \"dropDownButton\",\r\n            fieldTemplate: null,\r\n            contentTemplate: null,\r\n            openOnFieldClick: false,\r\n            showDropDownButton: true,\r\n            popupPosition: this._getDefaultPopupPosition(),\r\n            onPopupInitialized: null,\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            cancelButtonText: messageLocalization.format(\"Cancel\"),\r\n            buttonsLocation: \"default\",\r\n            showPopupTitle: false\r\n        })\r\n    },\r\n    _getDefaultPopupPosition: function() {\r\n        var position = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        return {\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            },\r\n            my: position + \" top\",\r\n            at: position + \" bottom\",\r\n            collision: \"flip flip\"\r\n        }\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                var isGeneric = \"generic\" === _device.platform,\r\n                    isWin10 = \"win\" === _device.platform && _device.version && 10 === _device.version[0];\r\n                return isGeneric || isWin10\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element().find(\".\" + DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initVisibilityActions();\r\n        this._initPopupInitializedAction()\r\n    },\r\n    _initVisibilityActions: function() {\r\n        this._openAction = this._createActionByOption(\"onOpened\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._closeAction = this._createActionByOption(\"onClosed\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initPopupInitializedAction: function() {\r\n        this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\", \"designMode\"]\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_EDITOR_CLASS);\r\n        this.setAria(\"role\", \"combobox\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderOpenHandler();\r\n        this._renderOpenedState()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._createPopup()\r\n        }\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this.$element().wrapInner($(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS));\r\n        this._$container = this.$element().children().eq(0);\r\n        this.setAria({\r\n            haspopup: \"true\",\r\n            autocomplete: \"list\"\r\n        })\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _cleanFocusState: function() {\r\n        this.callBase();\r\n        if (this.option(\"fieldTemplate\")) {\r\n            eventsEngine.off(this._input(), \"focusin focusout beforeactivate\")\r\n        }\r\n    },\r\n    _renderField: function() {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            return\r\n        }\r\n        this._renderTemplatedField(fieldTemplate, this._fieldRenderData())\r\n    },\r\n    _renderTemplatedField: function(fieldTemplate, data) {\r\n        var _this = this;\r\n        var isFocused = focused(this._input());\r\n        this._resetFocus(isFocused);\r\n        var $container = this._$container;\r\n        $container.empty();\r\n        this._$dropDownButton = null;\r\n        this._$clearButton = null;\r\n        fieldTemplate.render({\r\n            model: data,\r\n            container: domUtils.getPublicElement($container),\r\n            onRendered: function() {\r\n                if (!_this._input().length) {\r\n                    throw errors.Error(\"E1010\")\r\n                }\r\n                _this._refreshEvents();\r\n                _this._refreshValueChangeEvent();\r\n                _this._renderFocusState();\r\n                isFocused && eventsEngine.trigger(_this._input(), \"focus\")\r\n            }\r\n        })\r\n    },\r\n    _resetFocus: function(isFocused) {\r\n        this._cleanFocusState();\r\n        isFocused && eventsEngine.trigger(this._input(), \"focusout\")\r\n    },\r\n    _fieldRenderData: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _renderInputAddons: function() {\r\n        this._renderField();\r\n        this.callBase();\r\n        this._renderDropDownButton()\r\n    },\r\n    _renderDropDownButton: function() {\r\n        if (this._$dropDownButton) {\r\n            this._$dropDownButton.remove();\r\n            this._$dropDownButton = null\r\n        }\r\n        var showDropDownButton = this.option(\"showDropDownButton\");\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, showDropDownButton);\r\n        if (!showDropDownButton) {\r\n            return\r\n        }\r\n        this._$dropDownButton = this._createDropDownButton();\r\n        this._attachDropDownButtonClickHandler()\r\n    },\r\n    _attachDropDownButtonClickHandler: function() {\r\n        if (this.option(\"showDropDownButton\") && !this.option(\"openOnFieldClick\")) {\r\n            this._$dropDownButton.dxButton(\"option\", \"onClick\", this._openHandler.bind(this))\r\n        }\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.dropDownButton = new FunctionTemplate(function(options) {\r\n            var $icon = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_ICON);\r\n            $(options.container).append($icon)\r\n        }, this)\r\n    },\r\n    _createDropDownButton: function() {\r\n        var $button = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS).prependTo(this._buttonsContainer());\r\n        this._createComponent($button, Button, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            disabled: this.option(\"readOnly\"),\r\n            useInkRipple: false,\r\n            template: this._getTemplateByOption(\"dropDownButtonTemplate\")\r\n        });\r\n        $button.removeClass(\"dx-button\");\r\n        eventsEngine.on($button, \"mousedown\", function(e) {\r\n            e.preventDefault()\r\n        });\r\n        return $button\r\n    },\r\n    _renderOpenHandler: function() {\r\n        var that = this,\r\n            $inputWrapper = that._inputWrapper(),\r\n            eventName = eventUtils.addNamespace(clickEvent.name, that.NAME),\r\n            openOnFieldClick = that.option(\"openOnFieldClick\");\r\n        eventsEngine.off($inputWrapper, eventName);\r\n        eventsEngine.on($inputWrapper, eventName, that._getInputClickHandler(openOnFieldClick));\r\n        that.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\r\n        if (openOnFieldClick) {\r\n            that._openOnFieldClickAction = that._createAction(that._openHandler.bind(that))\r\n        }\r\n    },\r\n    _getInputClickHandler: function(openOnFieldClick) {\r\n        var that = this;\r\n        return openOnFieldClick ? function(e) {\r\n            that._executeOpenAction(e)\r\n        } : function(e) {\r\n            that._focusInput()\r\n        }\r\n    },\r\n    _openHandler: function() {\r\n        this._toggleOpenState()\r\n    },\r\n    _executeOpenAction: function(e) {\r\n        this._openOnFieldClickAction({\r\n            event: e\r\n        })\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusInput: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"focusStateEnabled\") && !focused(this._input())) {\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        }\r\n        return true\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (!this._focusInput()) {\r\n            return\r\n        }\r\n        if (!this.option(\"readOnly\")) {\r\n            isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n            this.option(\"opened\", isVisible)\r\n        }\r\n    },\r\n    _renderOpenedState: function() {\r\n        var opened = this.option(\"opened\");\r\n        if (opened) {\r\n            this._createPopup()\r\n        }\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\r\n        this._setPopupOption(\"visible\", opened);\r\n        this.setAria({\r\n            expanded: opened,\r\n            owns: (opened || void 0) && this._popupContentId\r\n        })\r\n    },\r\n    _createPopup: function() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        this._$popup = $(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).addClass(this.option(\"customOverlayCssClass\")).appendTo(this.$element());\r\n        this._renderPopup();\r\n        this._renderPopupContent()\r\n    },\r\n    _renderPopup: function() {\r\n        this._popup = this._createComponent(this._$popup, Popup, this._popupConfig());\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this)\r\n        });\r\n        this._popup.option(\"onContentReady\", this._contentReadyHandler.bind(this));\r\n        this._contentReadyHandler();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, this._popup.$content())\r\n    },\r\n    _contentReadyHandler: commonUtils.noop,\r\n    _popupConfig: function() {\r\n        return {\r\n            onInitialized: this._popupInitializedHandler(),\r\n            position: extend(this.option(\"popupPosition\"), { of: this.$element()\r\n            }),\r\n            showTitle: this.option(\"showPopupTitle\"),\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            shading: false,\r\n            closeOnTargetScroll: true,\r\n            closeOnOutsideClick: this._closeOutsideDropDownHandler.bind(this),\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            deferRendering: false,\r\n            focusStateEnabled: false,\r\n            showCloseButton: false,\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            onPositioned: this._popupPositionedHandler.bind(this),\r\n            fullScreen: false\r\n        }\r\n    },\r\n    _popupInitializedHandler: function() {\r\n        if (!this.option(\"onPopupInitialized\")) {\r\n            return\r\n        }\r\n        return function(e) {\r\n            this._popupInitializedAction({\r\n                popup: e.component\r\n            })\r\n        }.bind(this)\r\n    },\r\n    _popupPositionedHandler: function(e) {\r\n        e.position && this._popup.overlayContent().toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, e.position.v.flip)\r\n    },\r\n    _popupShowingHandler: commonUtils.noop,\r\n    _popupHidingHandler: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    _popupShownHandler: function() {\r\n        this._openAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this._closeAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _getValidationMessagePosition: function() {\r\n        var positionRequest = \"below\";\r\n        if (this._popup && this._popup.option(\"visible\")) {\r\n            var myTop = positionUtils.setup(this.$element()).top,\r\n                popupTop = positionUtils.setup(this._popup.$content()).top;\r\n            positionRequest = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"below\" : \"above\"\r\n        }\r\n        return this.callBase(positionRequest)\r\n    },\r\n    _renderPopupContent: function() {\r\n        var contentTemplate = this._getTemplateByOption(\"contentTemplate\");\r\n        if (!(contentTemplate && this.option(\"contentTemplate\"))) {\r\n            return\r\n        }\r\n        var $popupContent = this._popup.$content(),\r\n            templateData = {\r\n                value: this._fieldRenderData(),\r\n                component: this\r\n            };\r\n        $popupContent.empty();\r\n        contentTemplate.render({\r\n            container: domUtils.getPublicElement($popupContent),\r\n            model: templateData\r\n        })\r\n    },\r\n    _closeOutsideDropDownHandler: function(e) {\r\n        var $target = $(e.target);\r\n        var isInputClicked = !!$target.closest(this.$element()).length;\r\n        var isDropDownButtonClicked = !!$target.closest(this._$dropDownButton).length;\r\n        var isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\r\n        return isOutsideClick\r\n    },\r\n    _clean: function() {\r\n        delete this._$dropDownButton;\r\n        delete this._openOnFieldClickAction;\r\n        if (this._$popup) {\r\n            this._$popup.remove();\r\n            delete this._$popup;\r\n            delete this._popup\r\n        }\r\n        this.callBase()\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _validatedOpening: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._toggleOpenState(true)\r\n        }\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        return \"useButtons\" === this.option(\"applyValueMode\") ? this._popupToolbarItemsConfig() : []\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-done.dx-button\")\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-cancel.dx-button\")\r\n    },\r\n    _popupElementTabHandler: function(e) {\r\n        var $element = $(e.currentTarget);\r\n        if (e.shiftKey && $element.is(this._getFirstPopupElement()) || !e.shiftKey && $element.is(this._getLastPopupElement())) {\r\n            eventsEngine.trigger(this._input(), \"focus\");\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _popupElementEscHandler: function() {\r\n        eventsEngine.trigger(this._input(), \"focus\");\r\n        this.close()\r\n    },\r\n    _popupButtonInitializedHandler: function(e) {\r\n        e.component.registerKeyHandler(\"tab\", this._popupElementTabHandler.bind(this));\r\n        e.component.registerKeyHandler(\"escape\", this._popupElementEscHandler.bind(this))\r\n    },\r\n    _popupToolbarItemsConfig: function() {\r\n        var buttonsConfig = [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }, {\r\n            shortcut: \"cancel\",\r\n            options: {\r\n                onClick: this._cancelButtonHandler.bind(this),\r\n                text: this.option(\"cancelButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }];\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    },\r\n    _applyButtonsLocation: function(buttonsConfig) {\r\n        var buttonsLocation = this.option(\"buttonsLocation\"),\r\n            resultConfig = buttonsConfig;\r\n        if (\"default\" !== buttonsLocation) {\r\n            var position = commonUtils.splitPair(buttonsLocation);\r\n            each(resultConfig, function(_, element) {\r\n                extend(element, {\r\n                    toolbar: position[0],\r\n                    location: position[1]\r\n                })\r\n            })\r\n        }\r\n        return resultConfig\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this.callBase();\r\n        this._$dropDownButton && this._$dropDownButton.dxButton(\"option\", \"disabled\", this.option(\"readOnly\"))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"opened\":\r\n                this._renderOpenedState();\r\n                break;\r\n            case \"onOpened\":\r\n            case \"onClosed\":\r\n                this._initVisibilityActions();\r\n                break;\r\n            case \"onPopupInitialized\":\r\n                this._initPopupInitializedAction();\r\n                break;\r\n            case \"fieldTemplate\":\r\n                if (isDefined(args.value)) {\r\n                    this._renderInputAddons()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"showDropDownButton\":\r\n            case \"contentTemplate\":\r\n            case \"acceptCustomValue\":\r\n            case \"openOnFieldClick\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dropDownButtonTemplate\":\r\n                this._renderDropDownButton();\r\n                break;\r\n            case \"popupPosition\":\r\n            case \"deferRendering\":\r\n                break;\r\n            case \"applyValueMode\":\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n            case \"buttonsLocation\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"showPopupTitle\":\r\n                this._setPopupOption(\"showTitle\", args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    open: function() {\r\n        this.option(\"opened\", true)\r\n    },\r\n    close: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    field: function() {\r\n        return getPublicElement(this._input())\r\n    },\r\n    content: function() {\r\n        return this._popup ? this._popup.content() : null\r\n    }\r\n}).include(AsyncTemplateMixin);\r\nregisterComponent(\"dxDropDownEditor\", DropDownEditor);\r\nmodule.exports = DropDownEditor;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/drop_down_editor/ui.drop_down_editor.js\n// module id = 742\n// module chunks = 1 3 4 5 9 10","/**\r\n * DevExtreme (ui/number_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./number_box/number_box\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box.js\n// module id = 745\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/shared/async_template_mixin.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = {\r\n    _waitAsyncTemplates: function(callback) {\r\n        if (this._options.templatesRenderAsynchronously) {\r\n            this._asyncTemplatesTimers = this._asyncTemplatesTimers || [];\r\n            var timer = setTimeout(function() {\r\n                callback.call(this);\r\n                clearTimeout(timer)\r\n            }.bind(this));\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback.call(this)\r\n        }\r\n    },\r\n    _cleanAsyncTemplatesTimer: function() {\r\n        var timers = this._asyncTemplatesTimers || [];\r\n        for (var i = 0; i < timers.length; i++) {\r\n            clearTimeout(timers[i])\r\n        }\r\n        delete this._asyncTemplatesTimers\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/shared/async_template_mixin.js\n// module id = 748\n// module chunks = 1 3 4 5 9 10","/**\r\n * DevExtreme (ui/number_box/number_box.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar registerComponent = require(\"../../core/component_registrator\"),\r\n    NumberBoxMask = require(\"./number_box.mask\");\r\nregisterComponent(\"dxNumberBox\", NumberBoxMask);\r\nmodule.exports = NumberBoxMask;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.js\n// module id = 753\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/number_box/number_box.mask.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar eventsEngine = require(\"../../events/core/events_engine\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    isNumeric = require(\"../../core/utils/type\").isNumeric,\r\n    browser = require(\"../../core/utils/browser\"),\r\n    fitIntoRange = require(\"../../core/utils/math\").fitIntoRange,\r\n    inRange = require(\"../../core/utils/math\").inRange,\r\n    escapeRegExp = require(\"../../core/utils/common\").escapeRegExp,\r\n    number = require(\"../../localization/number\"),\r\n    maskCaret = require(\"./number_box.caret\"),\r\n    getLDMLFormat = require(\"../../localization/ldml/number\").getFormat,\r\n    NumberBoxBase = require(\"./number_box.base\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    typeUtils = require(\"../../core/utils/type\");\r\nvar NUMBER_FORMATTER_NAMESPACE = \"dxNumberFormatter\",\r\n    MOVE_FORWARD = 1,\r\n    MOVE_BACKWARD = -1,\r\n    MINUS = \"-\",\r\n    NUMPUD_MINUS_KEY_IE = \"Subtract\",\r\n    INPUT_EVENT = \"input\";\r\nvar ensureDefined = function(value, defaultValue) {\r\n    return void 0 === value ? defaultValue : value\r\n};\r\nvar NumberBoxMask = NumberBoxBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            useMaskBehavior: true,\r\n            format: null\r\n        })\r\n    },\r\n    _isDeleteKey: function(key) {\r\n        return \"Delete\" === key || \"Del\" === key\r\n    },\r\n    _supportedKeys: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        return extend(this.callBase(), {\r\n            minus: that._revertSign.bind(that),\r\n            del: that._removeHandler.bind(that),\r\n            backspace: that._removeHandler.bind(that),\r\n            leftArrow: that._arrowHandler.bind(that, MOVE_BACKWARD),\r\n            rightArrow: that._arrowHandler.bind(that, MOVE_FORWARD),\r\n            home: that._moveCaretToBoundary.bind(that, MOVE_FORWARD),\r\n            enter: that._updateFormattedValue.bind(that),\r\n            end: that._moveCaretToBoundary.bind(that, MOVE_BACKWARD)\r\n        })\r\n    },\r\n    _focusInHandler: function(e) {\r\n        this.callBase(e);\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            return\r\n        }\r\n        if (browser.msie) {\r\n            clearTimeout(this._ieCaretTimeout);\r\n            this._ieCaretTimeout = setTimeout(this._moveCaretToBoundary.bind(this, MOVE_BACKWARD, e))\r\n        } else {\r\n            this._moveCaretToBoundary(MOVE_BACKWARD, e)\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this._focusOutOccurs = true;\r\n        if (this._useMaskBehavior()) {\r\n            this._updateFormattedValue()\r\n        }\r\n        this.callBase(e);\r\n        this._focusOutOccurs = false\r\n    },\r\n    _updateFormattedValue: function() {\r\n        this._parsedValue = this._tryParse(this._getInputVal(), this._caret());\r\n        this._adjustParsedValue();\r\n        this._setTextByParsedValue();\r\n        if (this._isValueDirty()) {\r\n            this._isDirty = false;\r\n            eventsEngine.trigger(this._input(), \"change\")\r\n        }\r\n    },\r\n    _isValueDirty: function() {\r\n        return this._isDirty || this._parsedValue !== this.option(\"value\")\r\n    },\r\n    _arrowHandler: function(step, e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this._getInputVal(),\r\n            format = this._getFormatPattern(),\r\n            nextCaret = maskCaret.getCaretWithOffset(this._caret(), step);\r\n        if (!maskCaret.isCaretInBoundaries(nextCaret, text, format)) {\r\n            nextCaret = step === MOVE_FORWARD ? nextCaret.end : nextCaret.start;\r\n            e.preventDefault();\r\n            this._caret(maskCaret.getCaretInBoundaries(nextCaret, text, format))\r\n        }\r\n    },\r\n    _moveCaretToBoundary: function(direction, e) {\r\n        if (!this._useMaskBehavior() || e.shiftKey) {\r\n            return\r\n        }\r\n        var boundaries = maskCaret.getCaretBoundaries(this._getInputVal(), this._getFormatPattern()),\r\n            newCaret = maskCaret.getCaretWithOffset(direction === MOVE_FORWARD ? boundaries.start : boundaries.end, 0);\r\n        this._caret(newCaret);\r\n        e && e.preventDefault()\r\n    },\r\n    _shouldMoveCaret: function(text, caret) {\r\n        var decimalSeparator = number.getDecimalSeparator(),\r\n            isDecimalSeparatorNext = text.charAt(caret.end) === decimalSeparator,\r\n            isZeroNext = \"0\" === text.charAt(caret.end),\r\n            moveToFloat = this._lastKey === decimalSeparator && isDecimalSeparatorNext,\r\n            zeroToZeroReplace = \"0\" === this._lastKey && isZeroNext;\r\n        return moveToFloat || zeroToZeroReplace\r\n    },\r\n    _getInputVal: function() {\r\n        return number.convertDigits(this._input().val(), true)\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        this._lastKey = number.convertDigits(e.originalEvent.key, true);\r\n        if (!this._shouldHandleKey(e.originalEvent)) {\r\n            return this.callBase(e)\r\n        }\r\n        var text = this._getInputVal(),\r\n            caret = this._caret();\r\n        var enteredChar = this._lastKey === MINUS ? \"\" : this._lastKey,\r\n            newValue = this._tryParse(text, caret, enteredChar);\r\n        if (void 0 === newValue) {\r\n            if (this._lastKey !== MINUS) {\r\n                e.originalEvent.preventDefault()\r\n            }\r\n            if (this._shouldMoveCaret(text, caret)) {\r\n                this._moveCaret(1)\r\n            }\r\n        } else {\r\n            this._parsedValue = newValue\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _removeHandler: function(e) {\r\n        var caret = this._caret(),\r\n            text = this._getInputVal(),\r\n            start = caret.start,\r\n            end = caret.end;\r\n        this._lastKey = e.key;\r\n        if (caret.start === caret.end) {\r\n            this._isDeleteKey(e.key) ? end++ : start--\r\n        }\r\n        var char = text.slice(start, end);\r\n        if (this._isStub(char)) {\r\n            this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n            if (this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0)) {\r\n                this._revertSign(e);\r\n                this._setTextByParsedValue()\r\n            }\r\n            e.preventDefault();\r\n            return\r\n        }\r\n        var decimalSeparator = number.getDecimalSeparator();\r\n        if (char === decimalSeparator) {\r\n            var decimalSeparatorIndex = text.indexOf(decimalSeparator);\r\n            if (this._isNonStubAfter(decimalSeparatorIndex + 1)) {\r\n                this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n                e.preventDefault()\r\n            }\r\n            return\r\n        }\r\n        if (end - start < text.length) {\r\n            var editedText = this._replaceSelectedText(text, {\r\n                    start: start,\r\n                    end: end\r\n                }, \"\"),\r\n                noDigits = editedText.search(/[0-9]/) < 0;\r\n            if (noDigits && this._isValueInRange(0)) {\r\n                this._parsedValue = this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0) ? -0 : 0;\r\n                return\r\n            }\r\n        }\r\n        var valueAfterRemoving = this._tryParse(text, {\r\n            start: start,\r\n            end: end\r\n        }, \"\");\r\n        if (void 0 === valueAfterRemoving) {\r\n            e.preventDefault()\r\n        } else {\r\n            this._parsedValue = valueAfterRemoving\r\n        }\r\n    },\r\n    _isPercentFormat: function() {\r\n        var format = this._getFormatPattern(),\r\n            noEscapedFormat = format.replace(/'[^']+'/g, \"\");\r\n        return noEscapedFormat.indexOf(\"%\") !== -1\r\n    },\r\n    _parse: function(text, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomParser = typeUtils.isFunction(formatOption.formatter),\r\n            parser = isCustomParser ? formatOption.parser : number.parse;\r\n        return parser(text, format)\r\n    },\r\n    _format: function(value, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomFormatter = typeUtils.isFunction(formatOption.formatter),\r\n            formatter = isCustomFormatter ? formatOption.formatter : number.format;\r\n        return formatter(value, format)\r\n    },\r\n    _getFormatPattern: function() {\r\n        var format = this.option(\"format\"),\r\n            isLDMLPattern = \"string\" === typeof format && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        if (isLDMLPattern) {\r\n            return format\r\n        } else {\r\n            return getLDMLFormat(function(value) {\r\n                return this._format(value, format)\r\n            }.bind(this))\r\n        }\r\n    },\r\n    _getFormatForSign: function(text) {\r\n        var format = this._getFormatPattern(),\r\n            signParts = format.split(\";\"),\r\n            sign = number.getSign(text, format);\r\n        signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n        return sign < 0 ? signParts[1] : signParts[0]\r\n    },\r\n    _removeStubs: function(text, excludeComma) {\r\n        var format = this._getFormatForSign(text),\r\n            thousandsSeparator = number.getThousandsSeparator(),\r\n            stubs = format.replace(/[#0.,]/g, \"\"),\r\n            regExp = new RegExp(\"[-\" + escapeRegExp((excludeComma ? \"\" : thousandsSeparator) + stubs) + \"]\", \"g\");\r\n        return text.replace(regExp, \"\")\r\n    },\r\n    _truncateToPrecision: function(value, decimalSeparator, maxPrecision) {\r\n        if (typeUtils.isDefined(value)) {\r\n            var strValue = value.toString(),\r\n                decimalSeparatorIndex = strValue.indexOf(decimalSeparator);\r\n            if (strValue && decimalSeparatorIndex > -1) {\r\n                var parsedValue = parseFloat(strValue.substr(0, decimalSeparatorIndex + maxPrecision + 1));\r\n                return isNaN(parsedValue) ? value : parsedValue\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _tryParse: function(text, selection, char) {\r\n        var editedText = this._replaceSelectedText(text, selection, char),\r\n            format = this._getFormatPattern(),\r\n            isTextSelected = selection.start !== selection.end,\r\n            parsed = this._parse(editedText, format),\r\n            maxPrecision = this._getPrecisionLimits(format, editedText).max,\r\n            isValueChanged = parsed !== this._parsedValue,\r\n            decimalSeparator = number.getDecimalSeparator();\r\n        var isDecimalPointRestricted = char === decimalSeparator && 0 === maxPrecision,\r\n            isUselessCharRestricted = !isTextSelected && !isValueChanged && char !== MINUS && !this._isValueIncomplete(editedText) && this._isStub(char);\r\n        if (isDecimalPointRestricted || isUselessCharRestricted) {\r\n            return\r\n        }\r\n        if (\"\" === editedText) {\r\n            parsed = 0\r\n        }\r\n        if (isNaN(parsed)) {\r\n            return\r\n        }\r\n        var value = null === parsed ? this._parsedValue : parsed;\r\n        parsed = this._truncateToPrecision(value, decimalSeparator, maxPrecision);\r\n        return this._isPercentFormat() ? parsed && parsed / 100 : parsed\r\n    },\r\n    _isValueIncomplete: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        var caret = this._caret(),\r\n            point = number.getDecimalSeparator(),\r\n            pointIndex = text.indexOf(point),\r\n            isCaretOnFloat = pointIndex > 0 && pointIndex < caret.start,\r\n            textParts = this._removeStubs(text, true).split(point);\r\n        if (!isCaretOnFloat || 2 !== textParts.length) {\r\n            return false\r\n        }\r\n        var floatLength = textParts[1].length,\r\n            precision = this._getPrecisionLimits(this._getFormatPattern(), text),\r\n            isPrecisionInRange = inRange(floatLength, precision.min, precision.max),\r\n            endsWithZero = \"0\" === textParts[1].charAt(floatLength - 1);\r\n        return isPrecisionInRange && (endsWithZero || !floatLength)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        var min = ensureDefined(this.option(\"min\"), -(1 / 0)),\r\n            max = ensureDefined(this.option(\"max\"), 1 / 0);\r\n        return inRange(value, min, max)\r\n    },\r\n    _setInputText: function(text) {\r\n        var newCaret = maskCaret.getCaretAfterFormat(this._getInputVal(), text, this._caret(), this._getFormatPattern()),\r\n            newValue = number.convertDigits(text);\r\n        if (this._formattedValue !== newValue) {\r\n            this._isDirty = true\r\n        }\r\n        this._input().val(newValue);\r\n        this._toggleEmptinessEventHandler();\r\n        this._formattedValue = text;\r\n        if (!this._focusOutOccurs) {\r\n            this._caret(newCaret)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return !!this.option(\"format\") && this.option(\"useMaskBehavior\")\r\n    },\r\n    _renderInputType: function() {\r\n        var isNumberType = \"number\" === this.option(\"mode\");\r\n        if (this._useMaskBehavior() && isNumberType) {\r\n            this._setInputType(\"tel\")\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isChar: function(str) {\r\n        return \"string\" === typeof str && 1 === str.length\r\n    },\r\n    _moveCaret: function(offset) {\r\n        if (!offset) {\r\n            return\r\n        }\r\n        var newCaret = maskCaret.getCaretWithOffset(this._caret(), offset),\r\n            adjustedCaret = maskCaret.getCaretInBoundaries(newCaret, this._getInputVal(), this._getFormatPattern());\r\n        this._caret(adjustedCaret)\r\n    },\r\n    _shouldHandleKey: function(e) {\r\n        var isSpecialChar = e.ctrlKey || e.shiftKey || e.altKey || !this._isChar(e.key),\r\n            isMinusKey = e.key === MINUS,\r\n            useMaskBehavior = this._useMaskBehavior();\r\n        return useMaskBehavior && !isSpecialChar && !isMinusKey\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderFormatter()\r\n    },\r\n    _renderFormatter: function() {\r\n        this._clearCache();\r\n        this._detachFormatterEvents();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachFormatterEvents()\r\n        }\r\n    },\r\n    _detachFormatterEvents: function() {\r\n        eventsEngine.off(this._input(), \".\" + NUMBER_FORMATTER_NAMESPACE)\r\n    },\r\n    _attachFormatterEvents: function() {\r\n        var $input = this._input();\r\n        eventsEngine.on($input, eventUtils.addNamespace(INPUT_EVENT, NUMBER_FORMATTER_NAMESPACE), this._formatValue.bind(this));\r\n        eventsEngine.on($input, eventUtils.addNamespace(\"dxclick\", NUMBER_FORMATTER_NAMESPACE), function() {\r\n            this._caret(maskCaret.getCaretInBoundaries(this._caret(), this._getInputVal(), this._getFormatPattern()))\r\n        }.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n    },\r\n    _isNonStubAfter: function(index, text) {\r\n        text = (text || this._getInputVal()).slice(index);\r\n        return text && !this._isStub(text, true)\r\n    },\r\n    _isStub: function(str, isString) {\r\n        var escapedDecimalSeparator = escapeRegExp(number.getDecimalSeparator()),\r\n            regExpString = \"^[^0-9\" + escapedDecimalSeparator + \"]+$\",\r\n            stubRegExp = new RegExp(regExpString, \"g\");\r\n        return stubRegExp.test(str) && (isString || this._isChar(str))\r\n    },\r\n    _parseValue: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        return this._parsedValue\r\n    },\r\n    _getPrecisionLimits: function(text) {\r\n        var currentFormat = this._getFormatForSign(text),\r\n            floatPart = (currentFormat.split(\".\")[1] || \"\").replace(/[^#0]/g, \"\"),\r\n            minPrecision = floatPart.replace(/^(0*)#*/, \"$1\").length,\r\n            maxPrecision = floatPart.length;\r\n        return {\r\n            min: minPrecision,\r\n            max: maxPrecision\r\n        }\r\n    },\r\n    _revertSign: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            if (e.key === MINUS || e.key === NUMPUD_MINUS_KEY_IE) {\r\n                this._applyRevertedSign(e, caret, true);\r\n                return\r\n            } else {\r\n                this._caret(maskCaret.getCaretInBoundaries(0, this._getInputVal(), this._getFormatPattern()))\r\n            }\r\n        }\r\n        this._applyRevertedSign(e, caret)\r\n    },\r\n    _applyRevertedSign: function(e, caret, preserveSelectedText) {\r\n        var newValue = -1 * ensureDefined(this._parsedValue, null);\r\n        if (this._isValueInRange(newValue)) {\r\n            this._parsedValue = newValue;\r\n            if (preserveSelectedText) {\r\n                var format = this._getFormatPattern(),\r\n                    previousText = this._getInputVal();\r\n                this._setTextByParsedValue();\r\n                e.preventDefault();\r\n                var currentText = this._getInputVal(),\r\n                    offset = maskCaret.getCaretOffset(previousText, currentText, format);\r\n                caret = maskCaret.getCaretWithOffset(caret, offset);\r\n                var caretInBoundaries = maskCaret.getCaretInBoundaries(caret, currentText, format);\r\n                if (browser.msie) {\r\n                    clearTimeout(this._ieCaretTimeout);\r\n                    this._ieCaretTimeout = setTimeout(this._caret.bind(this, caretInBoundaries))\r\n                } else {\r\n                    this._caret(caretInBoundaries)\r\n                }\r\n            }\r\n            if (e.key === NUMPUD_MINUS_KEY_IE) {\r\n                eventsEngine.trigger(this._input(), INPUT_EVENT)\r\n            }\r\n        }\r\n    },\r\n    _removeMinusFromText: function(text, caret) {\r\n        var isMinusPressed = this._lastKey === MINUS && text.charAt(caret.start - 1) === MINUS;\r\n        return isMinusPressed ? this._replaceSelectedText(text, {\r\n            start: caret.start - 1,\r\n            end: caret.start\r\n        }, \"\") : text\r\n    },\r\n    _setTextByParsedValue: function() {\r\n        var format = this._getFormatPattern(),\r\n            parsed = this._parseValue(),\r\n            formatted = this._format(parsed, format) || \"\";\r\n        this._setInputText(formatted)\r\n    },\r\n    _formatValue: function() {\r\n        var text = this._getInputVal(),\r\n            caret = this._caret(),\r\n            textWithoutMinus = this._removeMinusFromText(text, caret),\r\n            wasMinusRemoved = textWithoutMinus !== text;\r\n        this._isDirty = false;\r\n        text = textWithoutMinus;\r\n        if (this._isValueIncomplete(textWithoutMinus)) {\r\n            this._formattedValue = text;\r\n            if (wasMinusRemoved) {\r\n                this._setTextByParsedValue()\r\n            }\r\n            return\r\n        }\r\n        var textWasChanged = this._formattedValue !== text;\r\n        if (textWasChanged) {\r\n            var value = this._tryParse(text, caret, \"\");\r\n            if (typeUtils.isDefined(value)) {\r\n                this._parsedValue = value\r\n            }\r\n        }\r\n        this._setTextByParsedValue()\r\n    },\r\n    _renderDisplayText: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._toggleEmptinessEventHandler()\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._parsedValue = this.option(\"value\");\r\n            this._setTextByParsedValue()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _adjustParsedValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var clearedText = this._removeStubs(this._getInputVal()),\r\n            parsedValue = clearedText ? this._parseValue() : null;\r\n        if (!isNumeric(parsedValue)) {\r\n            this._parsedValue = parsedValue;\r\n            return\r\n        }\r\n        this._parsedValue = fitIntoRange(parsedValue, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(e)\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this._lastKey = null;\r\n        this._adjustParsedValue();\r\n        this.option(\"value\", this._parsedValue)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"format\":\r\n            case \"useMaskBehavior\":\r\n                this._renderFormatter();\r\n                this._renderValue();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._adjustParsedValue();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionValuesEqual: function(name, oldValue, newValue) {\r\n        if (\"value\" === name && 0 === oldValue && 0 === newValue) {\r\n            return 1 / oldValue === 1 / newValue\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _clearCache: function() {\r\n        delete this._formattedValue;\r\n        delete this._lastKey;\r\n        delete this._parsedValue;\r\n        delete this._isDirty;\r\n        delete this._focusOutOccurs;\r\n        clearTimeout(this._ieCaretTimeout);\r\n        delete this._ieCaretTimeout\r\n    },\r\n    _clean: function() {\r\n        this._clearCache();\r\n        this.callBase()\r\n    }\r\n});\r\nmodule.exports = NumberBoxMask;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.mask.js\n// module id = 754\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/number_box/number_box.caret.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar fitIntoRange = require(\"../../core/utils/math\").fitIntoRange,\r\n    escapeRegExp = require(\"../../core/utils/common\").escapeRegExp,\r\n    number = require(\"../../localization/number\");\r\nvar getCaretBoundaries = function(text, format) {\r\n    var signParts = format.split(\";\"),\r\n        sign = number.getSign(text, format);\r\n    signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n    format = sign < 0 ? signParts[1] : signParts[0];\r\n    var clearedFormat = format.replace(/'([^']*)'/g, \"$1\"),\r\n        result = /^([^#0\\.,]*)([#0\\.,]*)([^#0\\.,]*)$/.exec(clearedFormat);\r\n    var startBorder = result[1].length,\r\n        endBorder = text.length - result[3].length;\r\n    return {\r\n        start: startBorder,\r\n        end: endBorder\r\n    }\r\n};\r\nvar _getDigitCountBeforeIndex = function(index, text) {\r\n    var decimalSeparator = number.getDecimalSeparator(),\r\n        regExp = new RegExp(\"[^0-9\" + escapeRegExp(decimalSeparator) + \"]\", \"g\"),\r\n        textBeforePosition = text.slice(0, index);\r\n    return textBeforePosition.replace(regExp, \"\").length\r\n};\r\nvar _reverseText = function(text) {\r\n    return text.split(\"\").reverse().join(\"\")\r\n};\r\nvar _getDigitPositionByIndex = function(digitIndex, text) {\r\n    if (!digitIndex) {\r\n        return -1\r\n    }\r\n    var regExp = /[0-9]/g,\r\n        counter = 1,\r\n        index = null,\r\n        result = regExp.exec(text);\r\n    while (result) {\r\n        index = result.index;\r\n        if (!digitIndex || counter >= digitIndex) {\r\n            return index\r\n        }\r\n        counter++;\r\n        result = regExp.exec(text)\r\n    }\r\n    return null === index ? text.length : index\r\n};\r\nvar getCaretWithOffset = function(caret, offset) {\r\n    if (void 0 === caret.start) {\r\n        caret = {\r\n            start: caret,\r\n            end: caret\r\n        }\r\n    }\r\n    return {\r\n        start: caret.start + offset,\r\n        end: caret.end + offset\r\n    }\r\n};\r\nvar getCaretAfterFormat = function(text, formatted, caret, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var point = number.getDecimalSeparator(),\r\n        pointPosition = text.indexOf(point),\r\n        newPointPosition = formatted.indexOf(point),\r\n        textParts = text.split(point),\r\n        formattedParts = formatted.split(point),\r\n        isCaretOnFloat = pointPosition !== -1 && caret.start > pointPosition;\r\n    if (isCaretOnFloat) {\r\n        var relativeIndex = caret.start - pointPosition - 1,\r\n            digitsBefore = _getDigitCountBeforeIndex(relativeIndex, textParts[1]),\r\n            newPosition = formattedParts[1] ? newPointPosition + 1 + _getDigitPositionByIndex(digitsBefore, formattedParts[1]) + 1 : formatted.length;\r\n        return getCaretInBoundaries(newPosition, formatted, format)\r\n    } else {\r\n        var positionFromEnd = textParts[0].length - caret.start,\r\n            digitsFromEnd = _getDigitCountBeforeIndex(positionFromEnd, _reverseText(textParts[0])),\r\n            newPositionFromEnd = _getDigitPositionByIndex(digitsFromEnd, _reverseText(formattedParts[0])),\r\n            newPositionFromBegin = formattedParts[0].length - (newPositionFromEnd + 1);\r\n        return getCaretInBoundaries(newPositionFromBegin, formatted, format)\r\n    }\r\n};\r\nvar isCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretInBoundaries(caret, text, format);\r\n    return caret.start >= boundaries.start && caret.end <= boundaries.end\r\n};\r\nvar getCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretBoundaries(text, format),\r\n        adjustedCaret = {\r\n            start: fitIntoRange(caret.start, boundaries.start, boundaries.end),\r\n            end: fitIntoRange(caret.end, boundaries.start, boundaries.end)\r\n        };\r\n    return adjustedCaret\r\n};\r\nvar getCaretOffset = function(previousText, newText, format) {\r\n    var previousBoundaries = getCaretBoundaries(previousText, format),\r\n        newBoundaries = getCaretBoundaries(newText, format);\r\n    return newBoundaries.start - previousBoundaries.start\r\n};\r\nexports.getCaretBoundaries = getCaretBoundaries;\r\nexports.isCaretInBoundaries = isCaretInBoundaries;\r\nexports.getCaretWithOffset = getCaretWithOffset;\r\nexports.getCaretInBoundaries = getCaretInBoundaries;\r\nexports.getCaretAfterFormat = getCaretAfterFormat;\r\nexports.getCaretOffset = getCaretOffset;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.caret.js\n// module id = 755\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    mathUtils = require(\"../../core/utils/math\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    focused = require(\"../widget/selectors\").focused,\r\n    devices = require(\"../../core/devices\"),\r\n    TextEditor = require(\"../text_box/ui.text_editor\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    wheelEvent = require(\"../../events/core/wheel\"),\r\n    SpinButton = require(\"./number_box.spin\"),\r\n    messageLocalization = require(\"../../localization/message\");\r\nvar math = Math;\r\nvar WIDGET_CLASS = \"dx-numberbox\",\r\n    SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\",\r\n    SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\r\nvar FIREFOX_CONTROL_KEYS = [\"Tab\", \"Del\", \"Delete\", \"Backspace\", \"Left\", \"ArrowLeft\", \"Right\", \"ArrowRight\", \"Home\", \"End\", \"Enter\"];\r\nvar NumberBoxBase = TextEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinUpChangeHandler(e)\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinDownChangeHandler(e)\r\n            },\r\n            enter: function() {}\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            step: 1,\r\n            showSpinButtons: false,\r\n            useLargeSpinButtons: true,\r\n            mode: \"text\",\r\n            invalidValueMessage: messageLocalization.format(\"dxNumberBox-invalidValueMessage\")\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return devices.real().generic && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                useLargeSpinButtons: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"generic\" !== devices.real().platform\r\n            },\r\n            options: {\r\n                mode: \"number\"\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\r\n        this.setAria(\"role\", \"spinbutton\");\r\n        this._renderMouseWheelHandler()\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        this._$submitElement.val(commonUtils.applyServerDecimalSeparator(value))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        var ch = e.key || String.fromCharCode(e.which),\r\n            validCharRegExp = /[\\d.,eE\\-+]|Subtract/,\r\n            isInputCharValid = validCharRegExp.test(ch);\r\n        if (!isInputCharValid) {\r\n            if (e.metaKey || e.ctrlKey || e.key && inArray(e.key, FIREFOX_CONTROL_KEYS) >= 0) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n        this._keyPressed = true\r\n    },\r\n    _renderMouseWheelHandler: function() {\r\n        var eventName = eventUtils.addNamespace(wheelEvent.name, this.NAME);\r\n        var mouseWheelAction = this._createAction(function(e) {\r\n            this._mouseWheelHandler(e.event)\r\n        }.bind(this));\r\n        eventsEngine.off(this._input(), eventName);\r\n        eventsEngine.on(this._input(), eventName, function(e) {\r\n            mouseWheelAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _mouseWheelHandler: function(dxEvent) {\r\n        if (!focused(this._input())) {\r\n            return\r\n        }\r\n        dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent);\r\n        dxEvent.preventDefault();\r\n        dxEvent.stopPropagation()\r\n    },\r\n    _renderValue: function() {\r\n        var inputValue = this._input().val();\r\n        if (!inputValue.length || Number(inputValue) !== this.option(\"value\")) {\r\n            this._forceValueRender();\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        var value = this.option(\"value\");\r\n        this._renderInputAddons();\r\n        this.setAria(\"valuenow\", value);\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _renderValueEventName: function() {\r\n        return this.callBase() + \" keypress\"\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        if (this._$spinUp) {\r\n            SpinButton.getInstance(this._$spinUp).option(\"disabled\", value)\r\n        }\r\n        if (this._$spinDown) {\r\n            SpinButton.getInstance(this._$spinDown).option(\"disabled\", value)\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _forceValueRender: function() {\r\n        var value = this.option(\"value\"),\r\n            number = Number(value),\r\n            formattedValue = isNaN(number) ? \"\" : this._applyValueFormat(value);\r\n        this._renderDisplayText(formattedValue)\r\n    },\r\n    _applyValueFormat: function(value) {\r\n        return this.option(\"valueFormat\")(value)\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().prop({\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            step: this.option(\"step\")\r\n        });\r\n        this.setAria({\r\n            valuemin: this.option(\"min\") || \"undefined\",\r\n            valuemax: this.option(\"max\") || \"undefined\"\r\n        })\r\n    },\r\n    _renderInputAddons: function() {\r\n        this.callBase();\r\n        this._renderSpinButtons()\r\n    },\r\n    _renderSpinButtons: function() {\r\n        var spinButtonsVisible = this.option(\"showSpinButtons\");\r\n        this.$element().toggleClass(SPIN_CLASS, spinButtonsVisible);\r\n        this._toggleTouchFriendlyClass();\r\n        if (!spinButtonsVisible) {\r\n            this._$spinContainer && this._$spinContainer.remove();\r\n            this._$spinContainer = null;\r\n            return\r\n        }\r\n        if (!this._$spinContainer) {\r\n            this._$spinContainer = this._createSpinButtons()\r\n        }\r\n        this._$spinContainer.prependTo(this._buttonsContainer())\r\n    },\r\n    _toggleTouchFriendlyClass: function() {\r\n        this.$element().toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, this.option(\"showSpinButtons\") && this.option(\"useLargeSpinButtons\"))\r\n    },\r\n    _createSpinButtons: function() {\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME);\r\n        var pointerDownAction = this._createAction(this._spinButtonsPointerDownHandler.bind(this));\r\n        var $spinContainer = $(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\r\n        eventsEngine.off($spinContainer, eventName);\r\n        eventsEngine.on($spinContainer, eventName, function(e) {\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        this._$spinUp = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinUp, SpinButton, {\r\n            direction: \"up\",\r\n            onChange: this._spinUpChangeHandler.bind(this)\r\n        });\r\n        this._$spinDown = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinDown, SpinButton, {\r\n            direction: \"down\",\r\n            onChange: this._spinDownChangeHandler.bind(this)\r\n        });\r\n        return $spinContainer\r\n    },\r\n    _spinButtonsPointerDownHandler: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"useLargeSpinButtons\") && domAdapter.getActiveElement() !== $input[0]) {\r\n            eventsEngine.trigger($input, \"focus\")\r\n        }\r\n    },\r\n    _spinUpChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(1, e.event || e)\r\n        }\r\n    },\r\n    _spinDownChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(-1, e.event || e)\r\n        }\r\n    },\r\n    _spinValueChange: function(sign, dxEvent) {\r\n        var value = parseFloat(this._normalizeInputValue()) || 0,\r\n            step = parseFloat(this.option(\"step\"));\r\n        value = this._correctRounding(value, step * sign);\r\n        var min = this.option(\"min\"),\r\n            max = this.option(\"max\");\r\n        if (void 0 !== min) {\r\n            value = Math.max(min, value)\r\n        }\r\n        if (void 0 !== max) {\r\n            value = Math.min(max, value)\r\n        }\r\n        this._saveValueChangeEvent(dxEvent);\r\n        this.option(\"value\", value)\r\n    },\r\n    _correctRounding: function(value, step) {\r\n        var regex = /[,.](.*)/;\r\n        var isFloatValue = regex.test(value),\r\n            isFloatStep = regex.test(step);\r\n        if (isFloatValue || isFloatStep) {\r\n            var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0,\r\n                stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0,\r\n                accuracy = math.max(valueAccuracy, stepAccuracy);\r\n            value = this._round(value + step, accuracy);\r\n            return value\r\n        }\r\n        return value + step\r\n    },\r\n    _round: function(value, precision) {\r\n        precision = precision || 0;\r\n        var multiplier = Math.pow(10, precision);\r\n        value *= multiplier;\r\n        value = Math.round(value) / multiplier;\r\n        return value\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        this.callBase();\r\n        eventsEngine.on(this._input(), \"focusout\", this._forceRefreshInputValue.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (\"number\" === this.option(\"mode\")) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            formattedValue = this._applyValueFormat(this.option(\"value\"));\r\n        $input.val(null);\r\n        $input.val(formattedValue)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var $input = this._input(),\r\n            inputValue = this._normalizeText(),\r\n            value = this._parseValue(inputValue),\r\n            valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\r\n        if (this._isValueValid() && !this._validateValue(value)) {\r\n            $input.val(this._applyValueFormat(value));\r\n            return\r\n        }\r\n        if (valueHasDigits) {\r\n            this.callBase(e, isNaN(value) ? null : value)\r\n        }\r\n        this._applyValueBoundaries(inputValue, value);\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        })\r\n    },\r\n    _applyValueBoundaries: function(inputValue, parsedValue) {\r\n        var isValueIncomplete = this._isValueIncomplete(inputValue),\r\n            isValueCorrect = this._isValueInRange(inputValue);\r\n        if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\r\n            if (Number(inputValue) !== parsedValue) {\r\n                this._input().val(this._applyValueFormat(parsedValue))\r\n            }\r\n        }\r\n    },\r\n    _replaceCommaWithPoint: function(value) {\r\n        return value.replace(\",\", \".\")\r\n    },\r\n    _inputIsInvalid: function() {\r\n        var isNumberMode = \"number\" === this.option(\"mode\");\r\n        var validityState = this._input().get(0).validity;\r\n        return isNumberMode && validityState && validityState.badInput\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        if (this._inputIsInvalid()) {\r\n            return\r\n        }\r\n        this.callBase(text)\r\n    },\r\n    _isValueIncomplete: function(value) {\r\n        var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\r\n        return incompleteRegex.test(value)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        return mathUtils.inRange(value, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _isNumber: function(value) {\r\n        return null !== this._parseValue(value)\r\n    },\r\n    _validateValue: function(value) {\r\n        var inputValue = this._normalizeText(),\r\n            isValueValid = this._isValueValid(),\r\n            isValid = true,\r\n            isNumber = this._isNumber(inputValue);\r\n        if (isNaN(Number(value))) {\r\n            isValid = false\r\n        }\r\n        if (!value && isValueValid) {\r\n            isValid = true\r\n        } else {\r\n            if (!isNumber && !isValueValid) {\r\n                isValid = false\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"invalidValueMessage\")\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _normalizeInputValue: function() {\r\n        return this._parseValue(this._normalizeText())\r\n    },\r\n    _normalizeText: function() {\r\n        var value = this._input().val().trim();\r\n        return this._replaceCommaWithPoint(value)\r\n    },\r\n    _parseValue: function(value) {\r\n        var number = parseFloat(value);\r\n        if (isNaN(number)) {\r\n            return null\r\n        }\r\n        return mathUtils.fitIntoRange(number, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    reset: function() {\r\n        this.option(\"value\", null)\r\n    },\r\n    _clean: function() {\r\n        delete this._$spinContainer;\r\n        delete this._$spinUp;\r\n        delete this._$spinDown;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._validateValue(args.value);\r\n                this._setSubmitValue(args.value);\r\n                this.callBase(args);\r\n                this._resumeValueChangeAction();\r\n                break;\r\n            case \"step\":\r\n                this._renderProps();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._renderProps();\r\n                this.option(\"value\", this._parseValue(this.option(\"value\")));\r\n                break;\r\n            case \"showSpinButtons\":\r\n                this._renderInputAddons();\r\n                break;\r\n            case \"useLargeSpinButtons\":\r\n                this._toggleTouchFriendlyClass();\r\n                break;\r\n            case \"invalidValueMessage\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = NumberBoxBase;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.base.js\n// module id = 756\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (ui/number_box/number_box.spin.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Widget = require(\"../widget/ui.widget\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    feedbackEvents = require(\"../../events/core/emitter.feedback\"),\r\n    holdEvent = require(\"../../events/hold\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nvar SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\",\r\n    SPIN_HOLD_DELAY = 100,\r\n    NUMBER_BOX = \"dxNumberBox\",\r\n    POINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, NUMBER_BOX),\r\n    POINTERCANCEL_EVENT_NAME = eventUtils.addNamespace(pointerEvents.cancel, NUMBER_BOX);\r\nvar SpinButton = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            direction: \"up\",\r\n            onChange: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        var direction = SPIN_CLASS + \"-\" + this.option(\"direction\");\r\n        this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\r\n        this._spinIcon = $(\"<div>\").addClass(direction + \"-icon\").appendTo(this.$element())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME),\r\n            $element = this.$element();\r\n        eventsEngine.off($element, eventName);\r\n        eventsEngine.on($element, eventName, this._spinDownHandler.bind(this));\r\n        this._spinChangeHandler = this._createActionByOption(\"onChange\")\r\n    },\r\n    _spinDownHandler: function(e) {\r\n        e.preventDefault();\r\n        this._clearTimer();\r\n        eventsEngine.on(this.$element(), holdEvent.name, function() {\r\n            this._feedBackDeferred = new Deferred;\r\n            feedbackEvents.lock(this._feedBackDeferred);\r\n            this._spinChangeHandler({\r\n                event: e\r\n            });\r\n            this._holdTimer = setInterval(this._spinChangeHandler, SPIN_HOLD_DELAY, {\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\r\n        eventsEngine.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\r\n        this._spinChangeHandler({\r\n            event: e\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this._clearTimer();\r\n        this.callBase()\r\n    },\r\n    _clearTimer: function() {\r\n        eventsEngine.off(this.$element(), holdEvent.name);\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.off(document, POINTERUP_EVENT_NAME);\r\n        eventsEngine.off(document, POINTERCANCEL_EVENT_NAME);\r\n        if (this._feedBackDeferred) {\r\n            this._feedBackDeferred.resolve()\r\n        }\r\n        if (this._holdTimer) {\r\n            clearInterval(this._holdTimer)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onChange\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = SpinButton;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.spin.js\n// module id = 757\n// module chunks = 1 3 4 5 8","/**\r\n * DevExtreme (color.js)\r\n * Version: 18.2.2-pre-beta\r\n * Build date: Wed Oct 24 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar standardColorNames = {\r\n    aliceblue: \"f0f8ff\",\r\n    antiquewhite: \"faebd7\",\r\n    aqua: \"00ffff\",\r\n    aquamarine: \"7fffd4\",\r\n    azure: \"f0ffff\",\r\n    beige: \"f5f5dc\",\r\n    bisque: \"ffe4c4\",\r\n    black: \"000000\",\r\n    blanchedalmond: \"ffebcd\",\r\n    blue: \"0000ff\",\r\n    blueviolet: \"8a2be2\",\r\n    brown: \"a52a2a\",\r\n    burlywood: \"deb887\",\r\n    cadetblue: \"5f9ea0\",\r\n    chartreuse: \"7fff00\",\r\n    chocolate: \"d2691e\",\r\n    coral: \"ff7f50\",\r\n    cornflowerblue: \"6495ed\",\r\n    cornsilk: \"fff8dc\",\r\n    crimson: \"dc143c\",\r\n    cyan: \"00ffff\",\r\n    darkblue: \"00008b\",\r\n    darkcyan: \"008b8b\",\r\n    darkgoldenrod: \"b8860b\",\r\n    darkgray: \"a9a9a9\",\r\n    darkgreen: \"006400\",\r\n    darkkhaki: \"bdb76b\",\r\n    darkmagenta: \"8b008b\",\r\n    darkolivegreen: \"556b2f\",\r\n    darkorange: \"ff8c00\",\r\n    darkorchid: \"9932cc\",\r\n    darkred: \"8b0000\",\r\n    darksalmon: \"e9967a\",\r\n    darkseagreen: \"8fbc8f\",\r\n    darkslateblue: \"483d8b\",\r\n    darkslategray: \"2f4f4f\",\r\n    darkturquoise: \"00ced1\",\r\n    darkviolet: \"9400d3\",\r\n    deeppink: \"ff1493\",\r\n    deepskyblue: \"00bfff\",\r\n    dimgray: \"696969\",\r\n    dodgerblue: \"1e90ff\",\r\n    feldspar: \"d19275\",\r\n    firebrick: \"b22222\",\r\n    floralwhite: \"fffaf0\",\r\n    forestgreen: \"228b22\",\r\n    fuchsia: \"ff00ff\",\r\n    gainsboro: \"dcdcdc\",\r\n    ghostwhite: \"f8f8ff\",\r\n    gold: \"ffd700\",\r\n    goldenrod: \"daa520\",\r\n    gray: \"808080\",\r\n    green: \"008000\",\r\n    greenyellow: \"adff2f\",\r\n    honeydew: \"f0fff0\",\r\n    hotpink: \"ff69b4\",\r\n    indianred: \"cd5c5c\",\r\n    indigo: \"4b0082\",\r\n    ivory: \"fffff0\",\r\n    khaki: \"f0e68c\",\r\n    lavender: \"e6e6fa\",\r\n    lavenderblush: \"fff0f5\",\r\n    lawngreen: \"7cfc00\",\r\n    lemonchiffon: \"fffacd\",\r\n    lightblue: \"add8e6\",\r\n    lightcoral: \"f08080\",\r\n    lightcyan: \"e0ffff\",\r\n    lightgoldenrodyellow: \"fafad2\",\r\n    lightgrey: \"d3d3d3\",\r\n    lightgreen: \"90ee90\",\r\n    lightpink: \"ffb6c1\",\r\n    lightsalmon: \"ffa07a\",\r\n    lightseagreen: \"20b2aa\",\r\n    lightskyblue: \"87cefa\",\r\n    lightslateblue: \"8470ff\",\r\n    lightslategray: \"778899\",\r\n    lightsteelblue: \"b0c4de\",\r\n    lightyellow: \"ffffe0\",\r\n    lime: \"00ff00\",\r\n    limegreen: \"32cd32\",\r\n    linen: \"faf0e6\",\r\n    magenta: \"ff00ff\",\r\n    maroon: \"800000\",\r\n    mediumaquamarine: \"66cdaa\",\r\n    mediumblue: \"0000cd\",\r\n    mediumorchid: \"ba55d3\",\r\n    mediumpurple: \"9370d8\",\r\n    mediumseagreen: \"3cb371\",\r\n    mediumslateblue: \"7b68ee\",\r\n    mediumspringgreen: \"00fa9a\",\r\n    mediumturquoise: \"48d1cc\",\r\n    mediumvioletred: \"c71585\",\r\n    midnightblue: \"191970\",\r\n    mintcream: \"f5fffa\",\r\n    mistyrose: \"ffe4e1\",\r\n    moccasin: \"ffe4b5\",\r\n    navajowhite: \"ffdead\",\r\n    navy: \"000080\",\r\n    oldlace: \"fdf5e6\",\r\n    olive: \"808000\",\r\n    olivedrab: \"6b8e23\",\r\n    orange: \"ffa500\",\r\n    orangered: \"ff4500\",\r\n    orchid: \"da70d6\",\r\n    palegoldenrod: \"eee8aa\",\r\n    palegreen: \"98fb98\",\r\n    paleturquoise: \"afeeee\",\r\n    palevioletred: \"d87093\",\r\n    papayawhip: \"ffefd5\",\r\n    peachpuff: \"ffdab9\",\r\n    peru: \"cd853f\",\r\n    pink: \"ffc0cb\",\r\n    plum: \"dda0dd\",\r\n    powderblue: \"b0e0e6\",\r\n    purple: \"800080\",\r\n    rebeccapurple: \"663399\",\r\n    red: \"ff0000\",\r\n    rosybrown: \"bc8f8f\",\r\n    royalblue: \"4169e1\",\r\n    saddlebrown: \"8b4513\",\r\n    salmon: \"fa8072\",\r\n    sandybrown: \"f4a460\",\r\n    seagreen: \"2e8b57\",\r\n    seashell: \"fff5ee\",\r\n    sienna: \"a0522d\",\r\n    silver: \"c0c0c0\",\r\n    skyblue: \"87ceeb\",\r\n    slateblue: \"6a5acd\",\r\n    slategray: \"708090\",\r\n    snow: \"fffafa\",\r\n    springgreen: \"00ff7f\",\r\n    steelblue: \"4682b4\",\r\n    tan: \"d2b48c\",\r\n    teal: \"008080\",\r\n    thistle: \"d8bfd8\",\r\n    tomato: \"ff6347\",\r\n    turquoise: \"40e0d0\",\r\n    violet: \"ee82ee\",\r\n    violetred: \"d02090\",\r\n    wheat: \"f5deb3\",\r\n    white: \"ffffff\",\r\n    whitesmoke: \"f5f5f5\",\r\n    yellow: \"ffff00\",\r\n    yellowgreen: \"9acd32\"\r\n};\r\nvar standardColorTypes = [{\r\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 10), parseInt(colorString[2], 10), parseInt(colorString[3], 10)]\r\n    }\r\n}, {\r\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*\\.*\\d+)\\)$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 10), parseInt(colorString[2], 10), parseInt(colorString[3], 10), parseFloat(colorString[4])]\r\n    }\r\n}, {\r\n    re: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 16), parseInt(colorString[2], 16), parseInt(colorString[3], 16)]\r\n    }\r\n}, {\r\n    re: /^#([a-f0-9]{1})([a-f0-9]{1})([a-f0-9]{1})$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1] + colorString[1], 16), parseInt(colorString[2] + colorString[2], 16), parseInt(colorString[3] + colorString[3], 16)]\r\n    }\r\n}, {\r\n    re: /^hsv\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        var h = parseInt(colorString[1], 10),\r\n            s = parseInt(colorString[2], 10),\r\n            v = parseInt(colorString[3], 10),\r\n            rgb = hsvToRgb(h, s, v);\r\n        return [rgb[0], rgb[1], rgb[2], 1, [h, s, v]]\r\n    }\r\n}, {\r\n    re: /^hsl\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        var h = parseInt(colorString[1], 10),\r\n            s = parseInt(colorString[2], 10),\r\n            l = parseInt(colorString[3], 10),\r\n            rgb = hslToRgb(h, s, l);\r\n        return [rgb[0], rgb[1], rgb[2], 1, null, [h, s, l]]\r\n    }\r\n}];\r\n\r\nfunction Color(value) {\r\n    this.baseColor = value;\r\n    var color;\r\n    if (value) {\r\n        color = String(value).toLowerCase().replace(/ /g, \"\");\r\n        color = standardColorNames[color] ? \"#\" + standardColorNames[color] : color;\r\n        color = parseColor(color)\r\n    }\r\n    if (!color) {\r\n        this.colorIsInvalid = true\r\n    }\r\n    color = color || {};\r\n    this.r = normalize(color[0]);\r\n    this.g = normalize(color[1]);\r\n    this.b = normalize(color[2]);\r\n    this.a = normalize(color[3], 1, 1);\r\n    if (color[4]) {\r\n        this.hsv = {\r\n            h: color[4][0],\r\n            s: color[4][1],\r\n            v: color[4][2]\r\n        }\r\n    } else {\r\n        this.hsv = toHsvFromRgb(this.r, this.g, this.b)\r\n    }\r\n    if (color[5]) {\r\n        this.hsl = {\r\n            h: color[5][0],\r\n            s: color[5][1],\r\n            l: color[5][2]\r\n        }\r\n    } else {\r\n        this.hsl = toHslFromRgb(this.r, this.g, this.b)\r\n    }\r\n}\r\n\r\nfunction parseColor(color) {\r\n    if (\"transparent\" === color) {\r\n        return [0, 0, 0, 0]\r\n    }\r\n    var str, i = 0,\r\n        ii = standardColorTypes.length;\r\n    for (; i < ii; ++i) {\r\n        str = standardColorTypes[i].re.exec(color);\r\n        if (str) {\r\n            return standardColorTypes[i].process(str)\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nfunction normalize(colorComponent, def, max) {\r\n    def = def || 0;\r\n    max = max || 255;\r\n    return colorComponent < 0 || isNaN(colorComponent) ? def : colorComponent > max ? max : colorComponent\r\n}\r\n\r\nfunction toHexFromRgb(r, g, b) {\r\n    return \"#\" + (16777216 | r << 16 | g << 8 | b).toString(16).slice(1)\r\n}\r\n\r\nfunction toHsvFromRgb(r, g, b) {\r\n    var H, S, V, max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        delta = max - min;\r\n    V = max;\r\n    S = 0 === max ? 0 : 1 - min / max;\r\n    if (max === min) {\r\n        H = 0\r\n    } else {\r\n        switch (max) {\r\n            case r:\r\n                H = 60 * ((g - b) / delta);\r\n                if (g < b) {\r\n                    H += 360\r\n                }\r\n                break;\r\n            case g:\r\n                H = 60 * ((b - r) / delta) + 120;\r\n                break;\r\n            case b:\r\n                H = 60 * ((r - g) / delta) + 240\r\n        }\r\n    }\r\n    S *= 100;\r\n    V *= 100 / 255;\r\n    return {\r\n        h: Math.round(H),\r\n        s: Math.round(S),\r\n        v: Math.round(V)\r\n    }\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    var vDec, vInc, vMin, index, a, r, g, b;\r\n    index = Math.floor(h % 360 / 60);\r\n    vMin = (100 - s) * v / 100;\r\n    a = (v - vMin) * (h % 60 / 60);\r\n    vInc = vMin + a;\r\n    vDec = v - a;\r\n    switch (index) {\r\n        case 0:\r\n            r = v;\r\n            g = vInc;\r\n            b = vMin;\r\n            break;\r\n        case 1:\r\n            r = vDec;\r\n            g = v;\r\n            b = vMin;\r\n            break;\r\n        case 2:\r\n            r = vMin;\r\n            g = v;\r\n            b = vInc;\r\n            break;\r\n        case 3:\r\n            r = vMin;\r\n            g = vDec;\r\n            b = v;\r\n            break;\r\n        case 4:\r\n            r = vInc;\r\n            g = vMin;\r\n            b = v;\r\n            break;\r\n        case 5:\r\n            r = v;\r\n            g = vMin;\r\n            b = vDec\r\n    }\r\n    return [Math.round(2.55 * r), Math.round(2.55 * g), Math.round(2.55 * b)]\r\n}\r\n\r\nfunction calculateHue(r, g, b, delta) {\r\n    var max = Math.max(r, g, b);\r\n    switch (max) {\r\n        case r:\r\n            return (g - b) / delta + (g < b ? 6 : 0);\r\n        case g:\r\n            return (b - r) / delta + 2;\r\n        case b:\r\n            return (r - g) / delta + 4\r\n    }\r\n}\r\n\r\nfunction toHslFromRgb(r, g, b) {\r\n    r = convertTo01Bounds(r, 255);\r\n    g = convertTo01Bounds(g, 255);\r\n    b = convertTo01Bounds(b, 255);\r\n    var h, s, max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        maxMinSum = max + min,\r\n        l = maxMinSum / 2;\r\n    if (max === min) {\r\n        h = s = 0\r\n    } else {\r\n        var delta = max - min;\r\n        if (l > .5) {\r\n            s = delta / (2 - maxMinSum)\r\n        } else {\r\n            s = delta / maxMinSum\r\n        }\r\n        h = calculateHue(r, g, b, delta);\r\n        h /= 6\r\n    }\r\n    return {\r\n        h: _round(360 * h),\r\n        s: _round(100 * s),\r\n        l: _round(100 * l)\r\n    }\r\n}\r\n\r\nfunction makeColorTint(colorPart, h) {\r\n    var colorTint = h;\r\n    if (\"r\" === colorPart) {\r\n        colorTint = h + 1 / 3\r\n    }\r\n    if (\"b\" === colorPart) {\r\n        colorTint = h - 1 / 3\r\n    }\r\n    return colorTint\r\n}\r\n\r\nfunction modifyColorTint(colorTint) {\r\n    if (colorTint < 0) {\r\n        colorTint += 1\r\n    }\r\n    if (colorTint > 1) {\r\n        colorTint -= 1\r\n    }\r\n    return colorTint\r\n}\r\n\r\nfunction hueToRgb(p, q, colorTint) {\r\n    colorTint = modifyColorTint(colorTint);\r\n    if (colorTint < 1 / 6) {\r\n        return p + 6 * (q - p) * colorTint\r\n    }\r\n    if (colorTint < .5) {\r\n        return q\r\n    }\r\n    if (colorTint < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - colorTint) * 6\r\n    }\r\n    return p\r\n}\r\n\r\nfunction hslToRgb(h, s, l) {\r\n    var r, g, b;\r\n    h = convertTo01Bounds(h, 360);\r\n    s = convertTo01Bounds(s, 100);\r\n    l = convertTo01Bounds(l, 100);\r\n    if (0 === s) {\r\n        r = g = b = l\r\n    } else {\r\n        var q = l < .5 ? l * (1 + s) : l + s - l * s,\r\n            p = 2 * l - q;\r\n        r = hueToRgb(p, q, makeColorTint(\"r\", h));\r\n        g = hueToRgb(p, q, makeColorTint(\"g\", h));\r\n        b = hueToRgb(p, q, makeColorTint(\"b\", h))\r\n    }\r\n    return [_round(255 * r), _round(255 * g), _round(255 * b)]\r\n}\r\n\r\nfunction convertTo01Bounds(n, max) {\r\n    n = Math.min(max, Math.max(0, parseFloat(n)));\r\n    if (Math.abs(n - max) < 1e-6) {\r\n        return 1\r\n    }\r\n    return n % max / parseFloat(max)\r\n}\r\n\r\nfunction isIntegerBetweenMinAndMax(number, min, max) {\r\n    min = min || 0;\r\n    max = max || 255;\r\n    if (number % 1 !== 0 || number < min || number > max || \"number\" !== typeof number || isNaN(number)) {\r\n        return false\r\n    }\r\n    return true\r\n}\r\nvar _round = Math.round;\r\nColor.prototype = {\r\n    constructor: Color,\r\n    highlight: function(step) {\r\n        step = step || 10;\r\n        return this.alter(step).toHex()\r\n    },\r\n    darken: function(step) {\r\n        step = step || 10;\r\n        return this.alter(-step).toHex()\r\n    },\r\n    alter: function(step) {\r\n        var result = new Color;\r\n        result.r = normalize(this.r + step);\r\n        result.g = normalize(this.g + step);\r\n        result.b = normalize(this.b + step);\r\n        return result\r\n    },\r\n    blend: function(blendColor, opacity) {\r\n        var other = blendColor instanceof Color ? blendColor : new Color(blendColor),\r\n            result = new Color;\r\n        result.r = normalize(_round(this.r * (1 - opacity) + other.r * opacity));\r\n        result.g = normalize(_round(this.g * (1 - opacity) + other.g * opacity));\r\n        result.b = normalize(_round(this.b * (1 - opacity) + other.b * opacity));\r\n        return result\r\n    },\r\n    toHex: function() {\r\n        return toHexFromRgb(this.r, this.g, this.b)\r\n    },\r\n    getPureColor: function() {\r\n        var rgb = hsvToRgb(this.hsv.h, 100, 100);\r\n        return new Color(\"rgb(\" + rgb.join(\",\") + \")\")\r\n    },\r\n    isValidHex: function(hex) {\r\n        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex)\r\n    },\r\n    isValidRGB: function(r, g, b) {\r\n        if (!isIntegerBetweenMinAndMax(r) || !isIntegerBetweenMinAndMax(g) || !isIntegerBetweenMinAndMax(b)) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    isValidAlpha: function(a) {\r\n        if (isNaN(a) || a < 0 || a > 1 || \"number\" !== typeof a) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    colorIsInvalid: false,\r\n    fromHSL: function(hsl) {\r\n        var color = new Color,\r\n            rgb = hslToRgb(hsl.h, hsl.s, hsl.l);\r\n        color.r = rgb[0];\r\n        color.g = rgb[1];\r\n        color.b = rgb[2];\r\n        return color\r\n    }\r\n};\r\nmodule.exports = Color;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/color.js\n// module id = 823\n// module chunks = 1 5","/*!\n * devextreme-react\n * Version: 18.2.2-beta.1\n * Build date: Thu Oct 25 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar color_box_1 = require(\"devextreme/ui/color_box\");\nvar prop_types_1 = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar ColorBox = /** @class */ (function (_super) {\n    __extends(ColorBox, _super);\n    function ColorBox() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = color_box_1.default;\n        _this._defaults = {\n            defaultOpened: \"opened\",\n            defaultValue: \"value\"\n        };\n        _this._templateProps = [{\n                tmplOption: \"dropDownButtonTemplate\",\n                render: \"dropDownButtonRender\",\n                component: \"dropDownButtonComponent\"\n            }, {\n                tmplOption: \"fieldTemplate\",\n                render: \"fieldRender\",\n                component: \"fieldComponent\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(ColorBox.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColorBox;\n}(component_1.Component));\nexports.ColorBox = ColorBox;\nColorBox.propTypes = {\n    acceptCustomValue: prop_types_1.PropTypes.bool,\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    applyButtonText: prop_types_1.PropTypes.string,\n    applyValueMode: prop_types_1.PropTypes.oneOf([\n        \"instantly\",\n        \"useButtons\"\n    ]),\n    cancelButtonText: prop_types_1.PropTypes.string,\n    deferRendering: prop_types_1.PropTypes.bool,\n    disabled: prop_types_1.PropTypes.bool,\n    editAlphaChannel: prop_types_1.PropTypes.bool,\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    inputAttr: prop_types_1.PropTypes.object,\n    isValid: prop_types_1.PropTypes.bool,\n    keyStep: prop_types_1.PropTypes.number,\n    name: prop_types_1.PropTypes.string,\n    onChange: prop_types_1.PropTypes.func,\n    onClosed: prop_types_1.PropTypes.func,\n    onCopy: prop_types_1.PropTypes.func,\n    onCut: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onEnterKey: prop_types_1.PropTypes.func,\n    onFocusIn: prop_types_1.PropTypes.func,\n    onFocusOut: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onInput: prop_types_1.PropTypes.func,\n    onKeyDown: prop_types_1.PropTypes.func,\n    onKeyPress: prop_types_1.PropTypes.func,\n    onKeyUp: prop_types_1.PropTypes.func,\n    onOpened: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onPaste: prop_types_1.PropTypes.func,\n    onValueChanged: prop_types_1.PropTypes.func,\n    opened: prop_types_1.PropTypes.bool,\n    placeholder: prop_types_1.PropTypes.string,\n    readOnly: prop_types_1.PropTypes.bool,\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    stylingMode: prop_types_1.PropTypes.oneOf([\n        \"outlined\",\n        \"underlined\",\n        \"filled\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    text: prop_types_1.PropTypes.string,\n    validationError: prop_types_1.PropTypes.object,\n    validationMessageMode: prop_types_1.PropTypes.oneOf([\n        \"always\",\n        \"auto\"\n    ]),\n    value: prop_types_1.PropTypes.string,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\nexports.default = ColorBox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/color-box.js\n// module id = 906\n// module chunks = 5"],"sourceRoot":""}